#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//	Объект - ДокументОъъект или ДанныеФормыСтруктура - документ, для которого нужно сфомировать параметры проверки
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями фукнции ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект)Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоНакладная", Истина);
	
	СкладскиеОперации = Новый Массив;
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ИнициализацияДанныхДляПроведения

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РеализацияТоваров.Дата КАК Период,
	|	РеализацияТоваров.Ссылка КАК Ссылка,
	|	РеализацияТоваров.Организация КАК Организация,
	|	РеализацияТоваров.Склад КАК Склад,
	|	РеализацияТоваров.Магазин КАК Магазин,
	|	РеализацияТоваров.Контрагент КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.РеализацияТоваров) КАК АналитикаХозяйственнойОперации,
	|	РеализацияТоваров.Ссылка КАК Основание,
	|	РеализацияТоваров.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	РеализацияТоваров.УчитыватьНДС КАК УчитыватьНДС,
	|   РеализацияТоваров.Магазин.ИспользоватьОрдернуюСхемуПриОтгрузке КАК РеализацияПоОрдернойСхеме,
	|	РеализацияТоваров.ДисконтнаяКарта,
	|	РеализацияТоваров.ДисконтнаяКарта.ВладелецКарты КАК ВладелецДисконтнойКарты,
	|   (НЕ РеализацияТоваров.Магазин.СкладУправляющейСистемы) КАК ФормироватьДвижения
	|ИЗ
	|	Документ.РеализацияТоваров КАК РеализацияТоваров
	|ГДЕ
	|	РеализацияТоваров.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	РезультатЗапроса = Запрос.Выполнить();

	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	Запрос.УстановитьПараметр("СебестоимостьВключаетНДС", ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("СебестоимостьВключаетНДС"));
	Запрос.УстановитьПараметр("СпособУчетаСебестоимости", ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("СпособУчетаСебестоимости"));
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровТовары.Ссылка КАК Ссылка,
	|	РеализацияТоваровТовары.НомерСтроки КАК НомерСтроки,
	|	РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровТовары.Характеристика КАК Характеристика,
	|	РеализацияТоваровТовары.Количество КАК Количество,
	|	РеализацияТоваровТовары.Цена КАК Цена,
	|	РеализацияТоваровТовары.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА &УчитыватьНДС
	|			ТОГДА РеализацияТоваровТовары.СтавкаНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА &УчитыватьНДС
	|			ТОГДА РеализацияТоваровТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДС,
	|	РеализацияТоваровТовары.СуммаБонусныхБалловНачислено КАК СуммаБонусныхБалловНачислено,
	|	РеализацияТоваровТовары.СуммаБонусныхБалловСписано КАК СуммаБонусныхБалловСписано,
	|	РеализацияТоваровТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	РеализацияТоваровТовары.Продавец КАК Продавец,
	|	РеализацияТоваровТовары.Упаковка КАК Упаковка,
	|	РеализацияТоваровТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	РеализацияТоваровТовары.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ТаблицаВЗапросе
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
	|ГДЕ
	|	РеализацияТоваровТовары.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС7) КАК СтавкаНДС,
	|	7 КАК ПроцентСтавки
	|ПОМЕСТИТЬ СтавкиНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20),
	|	20
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Склад КАК Склад,
	|	ТаблицаВЗапросе.Номенклатура КАК Номенклатура,
	|	ТаблицаВЗапросе.Характеристика КАК Характеристика,
	|	ТаблицаВЗапросе.Ссылка КАК ДокументПродажи,
	|	ТаблицаВЗапросе.Продавец КАК Продавец,
	|	ТаблицаВЗапросе.Количество КАК Количество,
	|	ТаблицаВЗапросе.Сумма + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаВЗапросе.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	(ТаблицаВЗапросе.Количество * ТаблицаВЗапросе.Цена + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаВЗапросе.Количество * ТаблицаВЗапросе.Цена * ЕСТЬNULL(СтавкиНДС.ПроцентСтавки, 0) / 100
	|		ИНАЧЕ 0
	|	КОНЕЦ) / ВЫБОР
	|		КОГДА ТаблицаВЗапросе.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ИЛИ ТаблицаВЗапросе.Упаковка.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаВЗапросе.Упаковка.Коэффициент
	|	КОНЕЦ КАК СтоимостьБезСкидок,
	|	ТаблицаВЗапросе.СуммаНДС КАК НДС,
	|	ТаблицаВЗапросе.СуммаБонусныхБалловНачислено КАК СуммаБонусныхБалловНачислено,
	|	ТаблицаВЗапросе.СуммаБонусныхБалловСписано КАК СуммаБонусныхБалловСписано,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	&Период КАК Период,
	|	ТаблицаВЗапросе.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаВЗапросе
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаВЗапросе.СтавкаНДС = СтавкиНДС.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаВЗапросе.Номенклатура КАК Номенклатура,
	|	ТаблицаВЗапросе.Характеристика КАК Характеристика,
	|	ТаблицаВЗапросе.Сумма КАК Сумма,
	|	ТаблицаВЗапросе.Количество КАК Количество,
	|	&ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	&ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаВЗапросе
	|ГДЕ
	|	НЕ &ДисконтнаяКарта = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВЗапросе.Номенклатура КАК Номенклатура,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаВЗапросе.Характеристика КАК Характеристика,
	|	ТаблицаВЗапросе.Количество КАК Количество,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	&Склад КАК Склад,
	|	&Период КАК Период
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаВЗапросе
	|ГДЕ
	|	НЕ &РеализацияПоОрдернойСхеме
	|	И ТаблицаВЗапросе.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВЗапросе.Номенклатура КАК Номенклатура,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаВЗапросе.Характеристика КАК Характеристика,
	|	ТаблицаВЗапросе.Количество КАК Количество,
	|	&Склад КАК Склад,
	|	&Период КАК Период,
	|	&Основание КАК ДокументОснование
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаВЗапросе
	|ГДЕ
	|	&РеализацияПоОрдернойСхеме
	|	И ТаблицаВЗапросе.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаТовары
	|ГДЕ
	|	&ФормироватьДвижения
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Магазин КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКлиенту) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.РеализацияТоваров.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|"
	+ ТекстЗапросаТаблицаСерийныхНомеров()
	+ ТекстЗапросаТаблицаСостоянияСерийныхНомеров()
	+ ТекстЗапросаТаблицаБонусныеБаллы()
	;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаПродажи"                  , Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПродажиПоДисконтнымКартам", Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"          , Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаМагазинах"		  , Результат[4].Выгрузить());	//	LNK 31.08.2021 13:07:46
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтгрузке"          , Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"        , Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"     , Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"		  , Результат[17].Выгрузить());
//	LNK 05.03.2020 14:00:48
	ТаблицыДляДвижений.Вставить("ТаблицаСостоянияСерийныхНомеров" , Результат[24].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаБонусныеБаллы"			  , Результат[28].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаБонусныеБаллыВРезерве"	  , Результат[29].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСписанныеБонусныеБаллы"	  , Результат[30].Выгрузить());	//	LNK 24.09.2021 09:14:58

	ТабДанныеДляНН = ПолучитьТабБезСертификатов(ДокументСсылка);
	ТаблицыДляДвижений.Вставить("ТаблицаДанныеДляНН" , ТабДанныеДляНН);

	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.Колонки.Удалить("Склад");	//	LNK 31.08.2021 13:07:46
	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.Колонки.Вставить(0, "Магазин", Новый ОписаниеТипов("СправочникСсылка.Магазины"));
	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.ЗаполнитьЗначения(Запрос.Параметры.Магазин, "Магазин");

КонецПроцедуры

Функция ПолучитьТабБезСертификатов(ДокСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЧекККМТовары.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА ЧекККМТовары.Количество = 0
		|			ТОГДА ЧекККМТовары.Цена
		|		ИНАЧЕ ЧекККМТовары.Сумма / ЧекККМТовары.Количество
		|	КОНЕЦ КАК Цена,
		|	СУММА(ВЫБОР
		|			КОГДА ЧекККМТовары.Номенклатура.ИспользоватьСерийныеНомера = ИСТИНА
		|				ТОГДА 1
		|			ИНАЧЕ ЧекККМТовары.Количество
		|		КОНЕЦ) КАК Количество,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа) КАК ВидОперации,
		|	ЛОЖЬ КАК ЕстьПодарочныеСертификаты,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПродажи,
		|	0 КАК Номинал,
		|	ЧекККМТовары.СтавкаНДС КАК СтавкаНДС,
		|	ЧекККМ.Ссылка КАК РеализацияТоваров,
		|	ЧекККМСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
		|	ЧекККМ.Магазин КАК МагазинПродажи,
		|	ЧекККМ.Контрагент КАК Контрагент,
		|	ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка) КАК ЧекККМ
		|ИЗ
		|	Документ.РеализацияТоваров КАК ЧекККМ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров.Товары КАК ЧекККМТовары
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров.СерийныеНомера КАК ЧекККМСерийныеНомера
		|			ПО ЧекККМТовары.Ссылка = ЧекККМСерийныеНомера.Ссылка
		|				И ЧекККМТовары.КлючСвязиСерийныхНомеров = ЧекККМСерийныеНомера.КлючСвязиСерийныхНомеров
		|		ПО ЧекККМ.Ссылка = ЧекККМТовары.Ссылка
		|ГДЕ
		|	ЧекККМ.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЧекККМТовары.Номенклатура,
		|	ЧекККМТовары.СтавкаНДС,
		|	ЧекККМ.Ссылка,
		|	ЧекККМСерийныеНомера.СерийныйНомер,
		|	ЧекККМ.Магазин,
		|	ЧекККМ.Контрагент,
		|	ВЫБОР
		|		КОГДА ЧекККМТовары.Количество = 0
		|			ТОГДА ЧекККМТовары.Цена
		|		ИНАЧЕ ЧекККМТовары.Сумма / ЧекККМТовары.Количество
		|	КОНЕЦ";
	Запрос.УстановитьПараметр("Ссылка",ДокСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Таб = РезультатЗапроса.Выгрузить();

	Возврат Таб;
	
КонецФункции

//Функция формирует текст запроса по серийным номерам
//Возвращаемое значение: ТекстЗапроса - Строка
Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|		ПО Товары.Номенклатура = ТаблицаСправочник.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И ТаблицаСправочник.ИспользоватьСерийныеНомера
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.РеализацияТоваров.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер.Владелец КАК Номенклатура,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	СУММА(ТабСерийныеНомера.Количество) КАК Количество
	|ПОМЕСТИТЬ ТабСвернутыхСерийныхНомеров
	|ИЗ
	|	ТабСерийныеНомера КАК ТабСерийныеНомера
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСерийныеНомера.СерийныйНомер.Владелец,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ТабОстатокНоменклатур
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСвернутыхСерийныхНомеров КАК ТабСвернутыхСерийныхНомеров
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	НЕ ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров ЕСТЬ NULL
	|	И ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ТабСерийныеНомера.СерийныйНомер, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер,
	|	ВЫБОР
	|		КОГДА ТабСерийныеНомера.СерийныйНомер ЕСТЬ NULL
	|			ТОГДА ТабТовары.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ТабОбщая
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОстатокНоменклатур.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка),
	|	ТабОстатокНоменклатур.Количество
	|ИЗ
	|	ТабОстатокНоменклатур КАК ТабОстатокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабСерийныеНомера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабСвернутыхСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабОстатокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийныеНомера.номенклатура КАК Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаСерийныеНомера.Количество КАК Количество,
	|	&Склад КАК Отправитель,
	|	&Организация КАК Организация,
	|	&Период КАК Период,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабОбщая.Номенклатура КАК номенклатура,
	|		ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|		СУММА(ТабОбщая.Количество) КАК Количество
	|	ИЗ
	|		ТабОбщая КАК ТабОбщая
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабОбщая.Номенклатура,
	|		ТабОбщая.СерийныйНомер) КАК ТаблицаСерийныеНомера
	|ГДЕ
	|	НЕ &РеализацияПоОрдернойСхеме
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабОбщая" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//	LNK 05.03.2020 13:59:57
Функция ТекстЗапросаТаблицаСостоянияСерийныхНомеров()

	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТаблицаСправочник.ТипСрокаДействия КАК ТипСрокаДействия,
	|	ТаблицаСправочник.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
	|	ТаблицаСправочник.Периодичность КАК Периодичность,
	|	ТаблицаСправочник.КоличествоПериодовДействия КАК КоличествоПериодовДействия
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|		ПО Товары.Номенклатура = ТаблицаСправочник.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И ТаблицаСправочник.ИспользоватьСерийныеНомера
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.РеализацияТоваров.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	Ведущая.Номенклатура КАК Номенклатура,
	|	ТабСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	&Магазин КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСерийныхНомеров.Активен) КАК Состояние,
	|	ВЫБОР
	|		КОГДА Ведущая.ТипСрокаДействия = ЗНАЧЕНИЕ(Перечисление.СрокДействияПодарочныхСертификатов.БезОграниченияСрока)
	|			ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
	|		КОГДА Ведущая.ТипСрокаДействия = ЗНАЧЕНИЕ(Перечисление.СрокДействияПодарочныхСертификатов.ПериодПослеПродажи)
	|			ТОГДА ВЫБОР
	|					КОГДА Ведущая.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
	|						ТОГДА ДОБАВИТЬКДАТЕ(&Период, ДЕНЬ, Ведущая.КоличествоПериодовДействия)
	|					КОГДА Ведущая.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|						ТОГДА ДОБАВИТЬКДАТЕ(&Период, НЕДЕЛЯ, Ведущая.КоличествоПериодовДействия)
	|					КОГДА Ведущая.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
	|						ТОГДА ДОБАВИТЬКДАТЕ(&Период, ДЕКАДА, Ведущая.КоличествоПериодовДействия)
	|					КОГДА Ведущая.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|						ТОГДА ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, Ведущая.КоличествоПериодовДействия)
	|					КОГДА Ведущая.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|						ТОГДА ДОБАВИТЬКДАТЕ(&Период, КВАРТАЛ, Ведущая.КоличествоПериодовДействия)
	|					КОГДА Ведущая.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|						ТОГДА ДОБАВИТЬКДАТЕ(&Период, ПОЛУГОДИЕ, Ведущая.КоличествоПериодовДействия)
	|					ИНАЧЕ ДОБАВИТЬКДАТЕ(&Период, ГОД, Ведущая.КоличествоПериодовДействия)
	|				КОНЕЦ
	|		ИНАЧЕ Ведущая.ДатаОкончанияДействия
	|	КОНЕЦ КАК ДатаОкончанияДействия,
	|	Ведущая.ТипСрокаДействия КАК ТипСрокаДействия,
	|	Ведущая.Периодичность КАК Периодичность,
	|	Ведущая.КоличествоПериодовДействия КАК КоличествоПериодовДействия,
	|	Ведущая.КлючСвязиСерийныхНомеров КАК КлючПорядка
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	ТабТовары КАК Ведущая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО Ведущая.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабСерийныеНомера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДвижений.Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаДвижений.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаДвижений.Номенклатура КАК Номенклатура,
	|	ТаблицаДвижений.Магазин КАК Магазин,
	|	&Организация КАК Организация,
	|	ТаблицаДвижений.Состояние КАК Состояние,
	|	ТаблицаДвижений.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
	|	ТаблицаДвижений.ТипСрокаДействия КАК ТипСрокаДействия,
	|	ТаблицаДвижений.Периодичность КАК Периодичность,
	|	ТаблицаДвижений.КоличествоПериодовДействия КАК КоличествоПериодовДействия,
	|	ТаблицаДвижений.КлючПорядка КАК КлючПорядка
	|ИЗ
	|	ТаблицаДвижений КАК ТаблицаДвижений
	|ГДЕ
	|	НЕ &РеализацияПоОрдернойСхеме
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДвижений" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;

КонецФункции

//	LNK 15.07.2021 09:03:20
Функция ТекстЗапросаТаблицаБонусныеБаллы()

	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	&Контрагент КАК Контрагент,
	|	ТабличнаяЧасть.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	ТабличнаяЧасть.ДатаНачисления КАК ДатаНачисления,
	|	ТабличнаяЧасть.ДатаСписания КАК ДатаСписания,
	|	ТабличнаяЧасть.СуммаБонусныхБаллов КАК СуммаБонусныхБаллов
	|ПОМЕСТИТЬ ТаблицаБонусныеБаллы
	|ИЗ
	|	Документ.РеализацияТоваров.НачислениеБонусныхБаллов КАК ТабличнаяЧасть
	|ГДЕ
	|	&ФормироватьДвижения
	|	И ТабличнаяЧасть.Ссылка = &Ссылка
	|	И НЕ &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И НЕ ТабличнаяЧасть.СуммаБонусныхБаллов = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаНачисление.ДатаНачисления = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&Период, ЧАС, 1)
	|		ИНАЧЕ ТаблицаНачисление.ДатаНачисления
	|	КОНЕЦ КАК Период,
	|	ТаблицаНачисление.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаНачисление.Период КАК ПериодОперации,
	|	ТаблицаНачисление.НомерСтроки КАК НомерСтроки,
	|	ТаблицаНачисление.Контрагент КАК Контрагент,
	|	ТаблицаНачисление.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	ТаблицаНачисление.СуммаБонусныхБаллов КАК СуммаБонусныхБаллов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Начисление) КАК ВидОперации,
	|	ТаблицаНачисление.ДатаНачисления КАК ДатаНачисления,
	|	ТаблицаНачисление.ДатаСписания КАК ДатаСписания,
	|	&ТекущаяДата КАК ДатаИзменения,
	|	ЛОЖЬ КАК СписаниеПартий,
	|	1 КАК КлючПорядка
	|ПОМЕСТИТЬ ТаблицаБонусы
	|ИЗ
	|	ТаблицаБонусныеБаллы КАК ТаблицаНачисление
	|ГДЕ
	|	НЕ ТаблицаНачисление.СуммаБонусныхБаллов = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ТаблицаНачисление.ДатаСписания, ДЕНЬ),
	|	ТаблицаНачисление.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаНачисление.Период,
	|	ТаблицаНачисление.НомерСтроки,
	|	ТаблицаНачисление.Контрагент,
	|	ТаблицаНачисление.ПрограммаЛояльности,
	|	ТаблицаНачисление.СуммаБонусныхБаллов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Аннуляция),
	|	ТаблицаНачисление.ДатаНачисления,
	|	ТаблицаНачисление.ДатаСписания,
	|	&ТекущаяДата,
	|	ИСТИНА,
	|	2
	|ИЗ
	|	ТаблицаБонусныеБаллы КАК ТаблицаНачисление
	|ГДЕ
	|	НЕ ТаблицаНачисление.СуммаБонусныхБаллов = 0
	|	И НЕ ТаблицаНачисление.ДатаСписания = ДАТАВРЕМЯ(1, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаБонусы.Период КАК Период,
	|	ТаблицаБонусы.Регистратор КАК Регистратор,
	|	ТаблицаБонусы.ВидДвижения КАК ВидДвижения,
	|	МИНИМУМ(ТаблицаБонусы.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаБонусы.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	ТаблицаБонусы.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТаблицаБонусы.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Начисление), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Аннуляция))
	|			ТОГДА ТаблицаБонусы.Регистратор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументНачисления,
	|	СУММА(ТаблицаБонусы.СуммаБонусныхБаллов) КАК СуммаБонусныхБаллов,
	|	ТаблицаБонусы.ВидОперации КАК ВидОперации,
	|	ТаблицаБонусы.ПериодОперации КАК ДатаОперации,
	|	ТаблицаБонусы.Регистратор КАК ДокументОперации,
	|	ТаблицаБонусы.ДатаИзменения КАК ДатаИзменения,
	|	ТаблицаБонусы.КлючПорядка КАК КлючПорядка
	|ИЗ
	|	ТаблицаБонусы КАК ТаблицаБонусы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаБонусы.Период,
	|	ТаблицаБонусы.Регистратор,
	|	ТаблицаБонусы.ВидДвижения,
	|	ТаблицаБонусы.ПрограммаЛояльности,
	|	ТаблицаБонусы.Контрагент,
	|	ТаблицаБонусы.ВидОперации,
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.ДатаИзменения,
	|	ТаблицаБонусы.КлючПорядка,
	|	ТаблицаБонусы.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка,
	|	ПрограммаЛояльности,
	|	Период,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНачисление.Период КАК Период,
	|	ТаблицаНачисление.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	МИНИМУМ(ТаблицаНачисление.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаНачисление.Контрагент КАК Контрагент,
	|	ТаблицаНачисление.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	ТаблицаНачисление.Регистратор КАК ДокументНачисления,
	|	СУММА(ТаблицаНачисление.СуммаБонусныхБаллов) КАК СуммаБонусныхБаллов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Резерв) КАК ВидОперации,
	|	ТаблицаНачисление.Период КАК ДатаОперации,
	|	ТаблицаНачисление.Регистратор КАК ДокументОперации,
	|	&ТекущаяДата КАК ДатаИзменения,
	|	0 КАК КлючПорядка
	|ИЗ
	|	ТаблицаБонусныеБаллы КАК ТаблицаНачисление
	|ГДЕ
	|	НЕ ТаблицаНачисление.СуммаБонусныхБаллов = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНачисление.Период,
	|	ТаблицаНачисление.Регистратор,
	|	ТаблицаНачисление.Контрагент,
	|	ТаблицаНачисление.ПрограммаЛояльности,
	|	ТаблицаНачисление.Период,
	|	ТаблицаНачисление.Регистратор,
	|	ТаблицаНачисление.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаНачисление.ДатаНачисления = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&Период, ЧАС, 1)
	|		ИНАЧЕ ТаблицаНачисление.ДатаНачисления
	|	КОНЕЦ,
	|	ТаблицаНачисление.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	МИНИМУМ(ТаблицаНачисление.НомерСтроки),
	|	ТаблицаНачисление.Контрагент,
	|	ТаблицаНачисление.ПрограммаЛояльности,
	|	ТаблицаНачисление.Регистратор,
	|	СУММА(-ТаблицаНачисление.СуммаБонусныхБаллов),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Начисление),
	|	ТаблицаНачисление.Период,
	|	ТаблицаНачисление.Регистратор,
	|	&ТекущаяДата,
	|	1
	|ИЗ
	|	ТаблицаБонусныеБаллы КАК ТаблицаНачисление
	|ГДЕ
	|	НЕ ТаблицаНачисление.СуммаБонусныхБаллов = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНачисление.Регистратор,
	|	ТаблицаНачисление.Контрагент,
	|	ТаблицаНачисление.ПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА ТаблицаНачисление.ДатаНачисления = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|			ТОГДА ДОБАВИТЬКДАТЕ(&Период, ЧАС, 1)
	|		ИНАЧЕ ТаблицаНачисление.ДатаНачисления
	|	КОНЕЦ,
	|	ТаблицаНачисление.Регистратор,
	|	ТаблицаНачисление.Регистратор,
	|	ТаблицаНачисление.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка,
	|	ПрограммаЛояльности,
	|	Период,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаБонусы.Период КАК Период,
	|	ТаблицаБонусы.Регистратор КАК Регистратор,
	|	МИНИМУМ(ТаблицаБонусы.НомерСтроки) КАК НомерСтроки,
	|	0 КАК НомерСтрокиДокумента,
	|	ТаблицаБонусы.ВидОперации КАК ВидОперации,
	|	ТаблицаБонусы.Период КАК ПериодДвижения,
	|	ТаблицаБонусы.ПериодОперации КАК ДатаОперации,
	|	ТаблицаБонусы.ДатаНачисления КАК ДатаНачисления,
	|	ТаблицаБонусы.ДатаСписания КАК ДатаСписания,
	|	ТаблицаБонусы.Регистратор КАК ДокументОперации,
	|	ТаблицаБонусы.Контрагент КАК Контрагент,
	|	ТаблицаБонусы.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	СУММА(ТаблицаБонусы.СуммаБонусныхБаллов) КАК СуммаБонусныхБаллов,
	|	ТаблицаБонусы.СписаниеПартий КАК СписаниеПартий,
	|	ТаблицаБонусы.ДатаИзменения КАК ДатаИзменения,
	|	ТаблицаБонусы.КлючПорядка КАК КлючПорядка
	|ИЗ
	|	ТаблицаБонусы КАК ТаблицаБонусы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаБонусы.Период,
	|	ТаблицаБонусы.Регистратор,
	|	ТаблицаБонусы.ВидОперации,
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.ДатаНачисления,
	|	ТаблицаБонусы.ДатаСписания,
	|	ТаблицаБонусы.Контрагент,
	|	ТаблицаБонусы.ПрограммаЛояльности,
	|	ТаблицаБонусы.СписаниеПартий,
	|	ТаблицаБонусы.ДатаИзменения,
	|	ТаблицаБонусы.КлючПорядка,
	|	ТаблицаБонусы.Период,
	|	ТаблицаБонусы.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка,
	|	ПрограммаЛояльности,
	|	Период,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаБонусныеБаллы" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;

КонецФункции

Процедура ВыполнитьДвиженияРасширеннойАналитикиПродаж(ДокументСсылка)	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;

	ТабДанныеДляНН=ПолучитьТабБезСертификатов(ДокументСсылка);

	Если НЕ ТранзакцияАктивна() Тогда
		НачатьТранзакцию();
		ЗавершитьТранзакцию = Истина;
	Иначе	
		ЗавершитьТранзакцию = Ложь;
	КонецЕсли;

	НаборЗаписей = РегистрыСведений.ДанныеДляНН.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
	НаборЗаписей.Загрузить(ТабДанныеДляНН);
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Записать();
	
	Если ЗавершитьТранзакцию Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// Печать


// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная",
				"Расходная накладная",
				ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,Истина)

	КонецЕсли;
	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт",
				"Акт об оказании услуг",
				ПечатьАктаОбОказанииУслуг(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,Истина)

	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН",
			"1-ТН (Товарно - транспортная накладная)",
			ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати))

	КонецЕсли;
	
	//+HVOYA Mykhailo
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Счет") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Счет",
				"Счет на оплату",
				ПечатьСчет(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,Истина)
		
	КонецЕсли;
	//-HVOYA Mykhailo
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НН") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НН",
				"НН",
				ПечатьНН(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,Истина)
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Сертификаты") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Сертификаты",
				"Расходная накладная (Сертификаты)",
				ПечатьНакладнаяСертфикаты(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,Истина)

	КонецЕсли;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой акта об
// обказании услуг
//
// Возвращаемое значение:
//  Табличный документ - печатная форма акта
//
Функция ПечатьАктаОбОказанииУслуг(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();
	//КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Акт об оказании услуг';uk='Акт про надання послуг'", КодЯзыкаПечать);
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваров_Акт";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаШапка.Номер КАК Номер,
	|	ТаблицаШапка.Дата КАК Дата,
	|	ТаблицаШапка.Получатель КАК Получатель,
	|	ТаблицаШапка.Поставщик КАК Поставщик,
	|	ТаблицаШапка.Организация КАК Организация,
	|	ТаблицаШапка.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаШапка.УчитыватьНДС КАК УчитыватьНДС,
	|	ТаблицаШапка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ТаблицаШапка.ЕстьСкидки КАК ЕстьСкидки,
	|	ТаблицаШапка.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		Документ.Ссылка.Номер КАК Номер,
	|		Документ.Ссылка.Дата КАК Дата,
	|		Документ.Ссылка.Контрагент КАК Получатель,
	|		ЕСТЬNULL(ТаблицаОрганизаций.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Поставщик,
	|		ЕСТЬNULL(ТаблицаОрганизаций.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|		Документ.Ссылка.СуммаДокумента КАК СуммаДокумента,
	|		Документ.Ссылка.УчитыватьНДС КАК УчитыватьНДС,
	|		Документ.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА Документ.Цена * Документ.Количество = Документ.Сумма
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ) КАК ЕстьСкидки,
	|		Документ.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.РеализацияТоваров.Товары КАК Документ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОрганизацииПодразделений.СрезПоследних КАК ТаблицаОрганизаций
	|			ПО Документ.Ссылка.Магазин = ТаблицаОрганизаций.Владелец
	|	ГДЕ
	|		Документ.Ссылка В(&МассивОбъектов)
	|		И Документ.Ссылка.Проведен
	|		И Документ.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Документ.Ссылка,
	|		Документ.Ссылка.Номер,
	|		Документ.Ссылка.Дата,
	|		Документ.Ссылка.Контрагент,
	|		Документ.Ссылка.СуммаДокумента,
	|		Документ.Ссылка.УчитыватьНДС,
	|		Документ.Ссылка.ЦенаВключаетНДС,
	|		ЕСТЬNULL(ТаблицаОрганизаций.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)),
	|		ЕСТЬNULL(ТаблицаОрганизаций.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))) КАК ТаблицаШапка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.Цена * ТаблицаТовары.Количество - ТаблицаТовары.Сумма КАК Скидка,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка"
	;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.РеализацияТоваров.ПФ_MXL_Акт", КодЯзыкаПечать);
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьШапкаСоСкидкой  = Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой");
	ОбластьСтрокиСоСкидкой = Макет.ПолучитьОбласть("СтрокаСоСкидкой");
	ОбластьШапкаБезСкидок  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокиБезСкидок = Макет.ПолучитьОбласть("Строка");
	
	ОбластьИтого         = Макет.ПолучитьОбласть("Итого");
	ОбластьИтогоНДС      = Макет.ПолучитьОбласть("ИтогоНДС");
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписей      = Макет.ПолучитьОбласть("Подписи");
	
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		
		ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Поставщик, ВыборкаПоДокументам.Дата), "ПолноеНаименование,");
		ОбластьЗаголовок.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		
		ПредставлениеПолучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.Дата), "ПолноеНаименование,");
		ОбластьЗаголовок.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		Если ВыборкаПоДокументам.ЕстьСкидки Тогда
			ТабличныйДокумент.Вывести(ОбластьШапкаСоСкидкой);
			ОбластьСтроки = ОбластьСтрокиСоСкидкой;
		Иначе
			ТабличныйДокумент.Вывести(ОбластьШапкаБезСкидок);
			ОбластьСтроки = ОбластьСтрокиБезСкидок;
		КонецЕсли;
		
		//СТРОКИ ТЧ
		ВсегоНаименований = 0;
		Сумма             = 0;
		ВсегоСкидок       = 0;
		ВсегоБезСкидок    = 0;
		СуммаНДС          = 0;
		
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			ВсегоНаименований = ВсегоНаименований + 1;
			
			ОбластьСтроки.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтроки.Параметры.НомерСтроки = ВсегоНаименований;
			ОбластьСтроки.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			
			Если ВыборкаПоДокументам.ЕстьСкидки Тогда
				
				ОбластьСтроки.Параметры.Скидка         = ВыборкаПоСтрокамТЧ.Скидка;
				ОбластьСтроки.Параметры.СуммаБезСкидки = ФормированиеПечатныхФормСервер.ФорматСумм(ВыборкаПоСтрокамТЧ.Сумма + ВыборкаПоСтрокамТЧ.Скидка);
				
			КонецЕсли;
			
			Сумма          = Сумма       + ВыборкаПоСтрокамТЧ.Сумма;
			ВсегоСкидок    = ВсегоСкидок + ВыборкаПоСтрокамТЧ.Скидка;
			ВсегоБезСкидок = Сумма       + ВсегоСкидок;
			СуммаНДС       = СуммаНДС    + Окр(ВыборкаПоСтрокамТЧ.СуммаНДС, 2, 1);
			
			ТабличныйДокумент.Вывести(ОбластьСтроки);
			
		КонецЦикла;
		
		ОбластьИтого.Параметры.Всего = ФормированиеПечатныхФормСервер.ФорматСумм(Сумма);
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		Если ВыборкаПоДокументам.УчитыватьНДС Тогда
			
			ОбластьИтогоНДС.Параметры.ВсегоНДС = ФормированиеПечатныхФормСервер.ФорматСумм(СуммаНДС);
			ОбластьИтогоНДС.Параметры.НДС      = ?(ВыборкаПоДокументам.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС';uk='У тому числі ПДВ'", КодЯзыкаПечать), НСтр("ru = ' Сумма НДС';uk=' Сума ПДВ'", КодЯзыкаПечать));
			ТабличныйДокумент.Вывести(ОбластьИтогоНДС);
			
		КонецЕсли;
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %Итого%';uk='Усього найменувань %ВсегоНаименований%, на суму %Итого%'", КодЯзыкаПечать);
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Сумма));
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма, , КодЯзыкаПечать);
		
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
		
		//ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции


// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();
	//КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
//	СинонимДокумента   = НСтр("ru='Реализация товаров';uk='Реалізація товарів'", КодЯзыкаПечать);
	СинонимДокумента   = НСтр("ru='Расходная накладная';uk='Видаткова накладна'", КодЯзыкаПечать);
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваров_Накладная";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Магазин КАК Магазин,
	|	ВЫБОР
	|		КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрганизацияЮридическоеЛицо,
	|	Документ.Организация КАК Поставщик,
	|	Документ.СуммаДокумента КАК СуммаДокумента,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ПредставлениеПоставщика,
	|	Документ.Ответственный.ФизЛицо КАК Ответственный,
	|	Документ.Контрагент КАК Получатель,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент) КАК ПредставлениеПолучателя,
	|	Документ.УчитыватьНДС,
	|	Документ.ЦенаВключаетНДС
	|ИЗ
	|	Документ.РеализацияТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
	|	ТаблицаТовары.Номенклатура.Представление КАК Товар,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫБОР КОГДА ТаблицаТовары.Количество = 0 ТОГДА ТаблицаТовары.Количество
	|	ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Сумма +
	|	ТаблицаТовары.СуммаРучнойСкидки +
	|	ТаблицаТовары.СуммаАвтоматическойСкидки   КАК СуммаБезСкидки,
	|	ТаблицаТовары.СуммаРучнойСкидки +
	|	ТаблицаТовары.СуммаАвтоматическойСкидки   КАК Скидка,
	|	ТаблицаТовары.СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.РеализацияТоваров.ПФ_MXL_Накладная", КодЯзыкаПечать);

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьШапкаНомера         = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьШапкаКодов          = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьШапкаДанных         = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	ОбластьШапкаСкидок         = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
	ОбластьШапкаСуммы          = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
	
	ОбластьКолонкаТовар = Макет.Область("Товар");
	Если Не ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
		                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	ОбластьСтрокаНомера         = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьСтрокаКодов          = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьСтрокаДанных         = Макет.ПолучитьОбласть("Строка|Данные");
	ОбластьСтрокаСкидок         = Макет.ПолучитьОбласть("Строка|Скидка");
	ОбластьСтрокаСуммы          = Макет.ПолучитьОбласть("Строка|Сумма");
	
	ОбластьИтогоНДСНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
	ОбластьИтогоНДСКодов  = Макет.ПолучитьОбласть("ИтогоНДС|КолонкаКодов");
	ОбластьИтогоНДСДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
	ОбластьИтогоНДССкидок = Макет.ПолучитьОбласть("ИтогоНДС|Скидка");
	ОбластьИтогоНДССуммы  = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");
	
	// Вывести Итого.
	ОбластьИтогоНомера         = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьИтогоКодов          = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьИтогоДанных         = Макет.ПолучитьОбласть("Итого|Данные");
	ОбластьИтогоСкидок         = Макет.ПолучитьОбласть("Итого|Скидка");
	ОбластьИтогоСуммы          = Макет.ПолучитьОбласть("Итого|Сумма");
	
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписей      = Макет.ПолучитьОбласть("Подписи");
	
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Поставщик, ВыборкаПоДокументам.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,НомерСчета,Банк,МФО,КодПоЕДРПОУ",,КодЯзыкаПечать);
		//ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Поставщик, ВыборкаПоДокументам.Дата), "ПолноеНаименование,");
		ОбластьЗаголовок.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		
		//ПредставлениеПолучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.Дата), "ПолноеНаименование,");
		ПредставлениеПолучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,НомерСчета,Банк,МФО,КодПоЕДРПОУ",,КодЯзыкаПечать);
		
		ОбластьЗаголовок.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		//Шапка
		
		ТабличныйДокумент.Вывести(ОбластьШапкаНомера);
		Если ВыводитьКоды Тогда
			ОбластьШапкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьШапкаКодов);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьШапкаДанных);
		ТабличныйДокумент.Присоединить(ОбластьШапкаСкидок);
		ТабличныйДокумент.Присоединить(ОбластьШапкаСуммы);
		
		
		ВсегоНаименований = 0;
		Сумма             = 0;
		ВсегоСкидок       = 0;
		ВсегоБезСкидок    = 0;
		СуммаНДС          = 0;
		ЕстьНДС = Ложь;
		//СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			Если ВыборкаПоСтрокамТЧ.СтавкаНДС = Перечисления.СтавкиНДС.НДС7 или  ВыборкаПоСтрокамТЧ.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 или ВыборкаПоСтрокамТЧ.СтавкаНДС = Перечисления.СтавкиНДС.НДС14 тогда
				ЕстьНДС = Истина;	
			КонецЕсли;
			ОбластьСтрокаНомера.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаНомера);

			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаКодов);
				
			КонецЕсли;

			ОбластьСтрокаДанных.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаДанных.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаДанных);
			
			ОбластьСтрокаСкидок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСкидок);

			ОбластьСтрокаСуммы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСуммы);
			
			ВсегоНаименований = ВсегоНаименований + 1;
			
			Сумма          = Сумма       + ВыборкаПоСтрокамТЧ.Сумма;
			ВсегоСкидок    = ВсегоСкидок + ВыборкаПоСтрокамТЧ.Скидка;
			ВсегоБезСкидок = Сумма       + ВсегоСкидок;
			СуммаНДС       = СуммаНДС    + Окр(ВыборкаПоСтрокамТЧ.СуммаНДС, 2, 1);
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьИтогоНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьИтогоДанных);
		ОбластьИтогоСкидок.Параметры.ВсегоСкидок    = ВсегоСкидок;
		ОбластьИтогоСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
		ТабличныйДокумент.Присоединить(ОбластьИтогоСкидок);
		ОбластьИтогоСуммы.Параметры.Всего = Сумма;
		ТабличныйДокумент.Присоединить(ОбластьИтогоСуммы);
		
		
		// Вывести ИтогоНДС
		ТабличныйДокумент.Вывести(ОбластьИтогоНДСНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоНДСКодов);
		КонецЕсли;
		
		ОбластьИтогоНДСДанных.Параметры.НДС = ?(ЕстьНДС, НСтр("ru = 'У тому числі ПДВ:';uk='У тому числі ПДВ:'", КодЯзыкаПечать), НСтр("ru = 'Сума ПДВ:';uk='Сума ПДВ:'", КодЯзыкаПечать));
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДСДанных);
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДССкидок);
		
		Если НЕ ЕстьНДС Тогда
			СуммаНДССтрока = НСтр("ru = 'Без ПДВ';uk='Без ПДВ'", КодЯзыкаПечать);
		Иначе
			СуммаНДССтрока = Строка(СуммаНДС);
		КонецЕсли;
		
		ОбластьИтогоНДССуммы.Параметры.ВсегоНДС = СуммаНДССтрока;
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДССуммы);
		
		
		// Вывести Сумму прописью.
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %Итого%';uk='Усього найменувань %ВсегоНаименований%, на суму %Итого%'", КодЯзыкаПечать);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Сумма));
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма, , КодЯзыкаПечать);
		
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
		
		//ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.ОтветственныйПредставление = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
КонецФункции


// Функция формирует табличный документ с печатной формой.
//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьНакладнаяСертфикаты(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();
	//КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = ЗначениеЗаполнено(КолонкаКодов);
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Расходная накладная';uk='Видаткова накладна'", КодЯзыкаПечать);
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Сертификаты";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Магазин КАК Магазин,
	|	ВЫБОР
	|		КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрганизацияЮридическоеЛицо,
	|	Документ.Организация КАК Поставщик,
	|	Документ.СуммаДокумента КАК СуммаДокумента,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ПредставлениеПоставщика,
	|	Документ.Ответственный.ФизЛицо КАК Ответственный,
	|	Документ.Контрагент КАК Получатель,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент) КАК ПредставлениеПолучателя,
	|	Документ.УчитыватьНДС КАК УчитыватьНДС,
	|	Документ.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.РеализацияТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код КАК КолонкаКодов,
	|	ТаблицаТовары.Номенклатура.Представление КАК Товар,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество = 0
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Сумма + ТаблицаТовары.СуммаРучнойСкидки + ТаблицаТовары.СуммаАвтоматическойСкидки КАК СуммаБезСкидки,
	|	ТаблицаТовары.СуммаРучнойСкидки + ТаблицаТовары.СуммаАвтоматическойСкидки КАК Скидка,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияТоваровСерийныеНомера.СерийныйНомер.КодСерийногоНомера КАК КодСерийногоНомера,
	|	РеализацияТоваровСерийныеНомера.СерийныйНомер.Владелец.Номинал КАК Номинал
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров.СерийныеНомера КАК РеализацияТоваровСерийныеНомера
	|		ПО ТаблицаТовары.Ссылка = РеализацияТоваровСерийныеНомера.Ссылка
	|			И ТаблицаТовары.КлючСвязиСерийныхНомеров = РеализацияТоваровСерийныеНомера.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.РеализацияТоваров.Сертификаты", КодЯзыкаПечать);

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьШапкаНомера         = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьШапкаКодов          = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьШапкаДанных         = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
//	ОбластьШапкаСкидок         = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
	ОбластьШапкаСуммы          = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
	
	ОбластьКолонкаТовар = Макет.Область("Товар");
	Если Не ВыводитьКоды Тогда
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
		                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
	КонецЕсли;
	ОбластьСтрокаНомера         = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьСтрокаКодов          = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьСтрокаДанных         = Макет.ПолучитьОбласть("Строка|Данные");
	//ОбластьСтрокаСкидок         = Макет.ПолучитьОбласть("Строка|Скидка");
	ОбластьСтрокаСуммы          = Макет.ПолучитьОбласть("Строка|Сумма");
	
	ОбластьИтогоНДСНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
	ОбластьИтогоНДСКодов  = Макет.ПолучитьОбласть("ИтогоНДС|КолонкаКодов");
	ОбластьИтогоНДСДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
	//ОбластьИтогоНДССкидок = Макет.ПолучитьОбласть("ИтогоНДС|Скидка");
	ОбластьИтогоНДССуммы  = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");
	
	// Вывести Итого.
	ОбластьИтогоНомера         = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьИтогоКодов          = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьИтогоДанных         = Макет.ПолучитьОбласть("Итого|Данные");
	//ОбластьИтогоСкидок         = Макет.ПолучитьОбласть("Итого|Скидка");
	ОбластьИтогоСуммы          = Макет.ПолучитьОбласть("Итого|Сумма");
	
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписей      = Макет.ПолучитьОбласть("Подписи");
	
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		
		ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Поставщик, ВыборкаПоДокументам.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,НомерСчета,Банк,МФО,КодПоЕДРПОУ",,КодЯзыкаПечать);
		//ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Поставщик, ВыборкаПоДокументам.Дата), "ПолноеНаименование,");
		ОбластьЗаголовок.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		
		//ПредставлениеПолучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.Дата), "ПолноеНаименование,");
		ПредставлениеПолучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,НомерСчета,Банк,МФО,КодПоЕДРПОУ",,КодЯзыкаПечать);
		ОбластьЗаголовок.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		//Шапка
		
		ТабличныйДокумент.Вывести(ОбластьШапкаНомера);
		Если ВыводитьКоды Тогда
			ОбластьШапкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьШапкаКодов);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьШапкаДанных);
		//ТабличныйДокумент.Присоединить(ОбластьШапкаСкидок);
		ТабличныйДокумент.Присоединить(ОбластьШапкаСуммы);
		
		
		ВсегоНаименований = 0;
		Сумма             = 0;
		ВсегоСкидок       = 0;
		ВсегоБезСкидок    = 0;
		СуммаНДС          = 0;
		ЕстьНДС = Ложь;
		//СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			Если ВыборкаПоСтрокамТЧ.СтавкаНДС = Перечисления.СтавкиНДС.НДС7 или  ВыборкаПоСтрокамТЧ.СтавкаНДС = Перечисления.СтавкиНДС.НДС20 или ВыборкаПоСтрокамТЧ.СтавкаНДС = Перечисления.СтавкиНДС.НДС14 тогда
				ЕстьНДС = Истина;	
			КонецЕсли;
			ОбластьСтрокаНомера.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаНомера);

			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаКодов);
				
			КонецЕсли;

			ОбластьСтрокаДанных.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаДанных.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление) + " " +ВыборкаПоСтрокамТЧ.КодСерийногоНомера;
			ТабличныйДокумент.Присоединить(ОбластьСтрокаДанных);
			
			//ОбластьСтрокаСкидок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			//ТабличныйДокумент.Присоединить(ОбластьСтрокаСкидок);

			ОбластьСтрокаСуммы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСуммы);
			
			ВсегоНаименований = ВсегоНаименований + 1;
			Сумма          = Сумма + ВыборкаПоСтрокамТЧ.Номинал;
			ВсегоСкидок    = ВсегоСкидок + ВыборкаПоСтрокамТЧ.Скидка;
			Если НЕ ВыборкаПоСтрокамТЧ.СуммаНДС = 0 тогда
				СуммаНДС       = СуммаНДС + ВыборкаПоСтрокамТЧ.Номинал/6;
			КонецЕсли;
			//Сумма          = Сумма       + ВыборкаПоСтрокамТЧ.Сумма;
			//ВсегоСкидок    = ВсегоСкидок + ВыборкаПоСтрокамТЧ.Скидка;
			ВсегоБезСкидок = Сумма       + ВсегоСкидок;
			//СуммаНДС       = СуммаНДС    + Окр(ВыборкаПоСтрокамТЧ.СуммаНДС, 2, 1);
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьИтогоНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьИтогоДанных);
		//ОбластьИтогоСкидок.Параметры.ВсегоСкидок    = ВсегоСкидок;
		//ОбластьИтогоСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
		//ТабличныйДокумент.Присоединить(ОбластьИтогоСкидок);
		ОбластьИтогоСуммы.Параметры.Всего = Сумма;
		ТабличныйДокумент.Присоединить(ОбластьИтогоСуммы);
		
		
		// Вывести ИтогоНДС
		ТабличныйДокумент.Вывести(ОбластьИтогоНДСНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьИтогоНДСКодов);
		КонецЕсли;
		
		ОбластьИтогоНДСДанных.Параметры.НДС = ?(ЕстьНДС, НСтр("ru = 'У тому числі ПДВ:';uk='У тому числі ПДВ:'", КодЯзыкаПечать), НСтр("ru = 'Сума ПДВ:';uk='Сума ПДВ:'", КодЯзыкаПечать));
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДСДанных);
	//	ТабличныйДокумент.Присоединить(ОбластьИтогоНДССкидок);
		
		Если НЕ ЕстьНДС Тогда
			СуммаНДССтрока = НСтр("ru = 'Без ПДВ';uk='Без ПДВ'", КодЯзыкаПечать);
		Иначе
			СуммаНДССтрока = Формат(Окр(СуммаНДС, 2, 1),"ЧДЦ=2");
		КонецЕсли;
		
		ОбластьИтогоНДССуммы.Параметры.ВсегоНДС = СуммаНДССтрока;
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДССуммы);
		
		
		// Вывести Сумму прописью.
		
		ТекстИтоговойСтроки = НСтр("ru = 'Усього найменувань %ВсегоНаименований%, на суму %Итого%';uk='Усього найменувань %ВсегоНаименований%, на суму %Итого%'", КодЯзыкаПечать);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Сумма));
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма, , КодЯзыкаПечать);
		
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
		
		//ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.ОтветственныйПредставление = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
КонецФункции


// Функция формирует печатную форму документа.
//
Функция ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваров.Ссылка КАК Ссылка,
	|	РеализацияТоваров.Номер КАК Номер,
	|	РеализацияТоваров.Дата КАК Дата,
	|	РеализацияТоваров.Организация КАК Организация,
	|	РеализацияТоваров.Организация КАК Руководители,
	|	РеализацияТоваров.Контрагент КАК Грузополучатель,
	|	РеализацияТоваров.Организация КАК Грузоотправитель,
	|	РеализацияТоваров.Контрагент КАК Контрагент,
	|	РеализацияТоваров.Организация.Префикс КАК Префикс,
	|	&МаркаАвтомобиля КАК МаркаАвтомобиля,
	|	&ГосНомерАвтомобиля КАК ГосНомерАвтомобиля,
	|	&ГосНомерПрицепа КАК ГосНомерПрицепа,
	|	&ПунктПогрузки КАК ПунктПогрузки,
	|	&ПунктРазгрузки КАК ПунктРазгрузки,
	|	&Водитель КАК Водитель,
	|	&Перевозчик КАК Перевозчик,
	|	&ВидПеревозки КАК ВидПеревозки,
	|	РеализацияТоваров.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	РеализацияТоваров.УчитыватьНДС КАК УчитыватьНДС
	|ИЗ
	|	Документ.РеализацияТоваров КАК РеализацияТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(1) КАК Количество,
	|			СписокТоваров.Ссылка КАК Ссылка
	|		ИЗ
	|			(ВЫБРАТЬ 
	|				РеализацияТоваровТовары.Ссылка КАК Ссылка,
	|				РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
	|				РеализацияТоваровТовары.Характеристика КАК Характеристика
	|			ИЗ
	|				Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
	|			ГДЕ
	|				РеализацияТоваровТовары.Ссылка В(&МассивДокументов)) КАК СписокТоваров
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СписокТоваров.Ссылка) КАК НаименованияТоваров
	|		ПО РеализацияТоваров.Ссылка = НаименованияТоваров.Ссылка
	|ГДЕ
	|	РеализацияТоваров.Ссылка В(&МассивДокументов)
	|	И РеализацияТоваров.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваров.Ссылка КАК Ссылка,
	|	РеализацияТоваров.Номенклатура КАК Номенклатура,
	|	РеализацияТоваров.Номенклатура."+КолонкаКодов+" КАК ТоварКод,
	|	РеализацияТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	РеализацияТоваров.Характеристика КАК Характеристика,
	|	РеализацияТоваров.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА РеализацияТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА РеализацияТоваров.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ РеализацияТоваров.Упаковка.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК ВидУпаковки,
	|	РеализацияТоваров.Номенклатура.ЕдиницаИзмерения.Наименование КАК БазоваяЕдиницаНаименование,
	|	ВЫБОР
	|		КОГДА РеализацияТоваров.СуммаРучнойСкидки + РеализацияТоваров.СуммаАвтоматическойСкидки = 0
	|			ТОГДА РеализацияТоваров.Цена
	|		КОГДА РеализацияТоваров.КоличествоУпаковок <> 0
	|			ТОГДА ВЫРАЗИТЬ(РеализацияТоваров.Сумма / РеализацияТоваров.КоличествоУпаковок КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ РеализацияТоваров.Цена
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА РеализацияТоваров.Упаковка.Вес ЕСТЬ NULL 
	|			ТОГДА РеализацияТоваров.Количество * РеализацияТоваров.Номенклатура.Вес
	|		ИНАЧЕ РеализацияТоваров.КоличествоУпаковок * РеализацияТоваров.Упаковка.Вес
	|	КОНЕЦ КАК Масса,
	|	РеализацияТоваров.КоличествоУпаковок КАК КоличествоМест,
	|	РеализацияТоваров.Сумма КАК Сумма,
	|	РеализацияТоваров.СуммаНДС КАК СуммаНДС,
	|	РеализацияТоваров.НомерСтроки КАК НомерСтроки,
	|	РеализацияТоваров.Номенклатура.Весовой КАК Весовой
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваров
	|
	|ГДЕ
	|	РеализацияТоваров.Ссылка В(&МассивДокументов)
	|	И РеализацияТоваров.Ссылка.Проведен
	|	И НЕ (РеализацияТоваров.Номенклатура.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Услуга))
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияТоваров.Ссылка,
	|	РеализацияТоваров.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
		
	
	
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("МаркаАвтомобиля", ПараметрыПечати.МаркаАвтомобиля);
	Запрос.УстановитьПараметр("ГосНомерАвтомобиля", ПараметрыПечати.ГосНомерАвтомобиля);
	Запрос.УстановитьПараметр("ГосНомерПрицепа", ПараметрыПечати.ГосНомерПрицепа);
	Запрос.УстановитьПараметр("ПунктПогрузки", ПараметрыПечати.ПунктПогрузки);
	Запрос.УстановитьПараметр("ПунктРазгрузки", ПараметрыПечати.ПунктРазгрузки);
	Запрос.УстановитьПараметр("Водитель", ПараметрыПечати.Водитель);
	Запрос.УстановитьПараметр("Перевозчик", ПараметрыПечати.Перевозчик);
	Запрос.УстановитьПараметр("ВидПеревозки", ПараметрыПечати.ВидПеревозки);
    	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваров_ТТН";
	
	ФормированиеПечатныхФормСервер.ЗаполнитьТабличныйДокументТТН(ТабличныйДокумент, Запрос, ОбъектыПечати);
		
	Возврат ТабличныйДокумент;
    	
КонецФункции

// Функция получает данные для формирования печатной формы Транспортная накладная.
//
Функция ПолучитьДанныеДляПечатнойФормыТранспортнаяНакладная(МассивДокументов) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РеализацияТоваров.Ссылка                                    КАК Ссылка,
	|	РеализацияТоваров.Дата                                      КАК Дата,
	|	РеализацияТоваров.Контрагент                                КАК Грузополучатель,
	|	РеализацияТоваров.Организация                               КАК Грузоотправитель,
	|	ЕСТЬNULL(МагазиныКонтактнаяОтправитель.Представление, """") КАК ПунктПогрузки,
	|	РеализацияТоваров.АдресДоставки                             КАК ПунктРазгрузки
	|ИЗ
	|	Документ.РеализацияТоваров КАК РеализацияТоваров
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.Магазины.КонтактнаяИнформация КАК МагазиныКонтактнаяОтправитель
	|ПО
	|	РеализацияТоваров.Магазин = МагазиныКонтактнаяОтправитель.Ссылка
	|	И МагазиныКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресМагазина)
	|ГДЕ
	|	РеализацияТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата, Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаРезульта = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаРезульта
	
КонецФункции

//+HVOYA Mykhailo
Функция ПечатьСчет(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();
	//КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Рахунок на оплату';uk='Рахунок на оплату'", КодЯзыкаПечать);
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетНаОплату_Накладная";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Магазин КАК Магазин,
	|	ВЫБОР
	|		КОГДА Документ.Организация.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрганизацияЮридическоеЛицо,
	|	Документ.Организация КАК Поставщик,
	|	Документ.СуммаДокумента КАК СуммаДокумента,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация) КАК ПредставлениеПоставщика,
	|	Документ.Ответственный.ФизЛицо КАК Ответственный,
	|	Документ.Контрагент КАК Получатель,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент) КАК ПредставлениеПолучателя,
	|	Документ.УчитыватьНДС,
	|	Документ.ЦенаВключаетНДС,
	|	Документ.БанковскийСчетОрганизации.НомерСчета КАК НомерРасчетногоСчетаОрганизации,
	|	ЕСТЬNULL(Документ.БанковскийСчетОрганизации.Банк.Код, Документ.БанковскийСчетОрганизации.КодБанка) КАК МФОБанкаОрганизации,
	|	ЕСТЬNULL(Документ.БанковскийСчетОрганизации.Банк.Наименование, Документ.БанковскийСчетОрганизации.НаименованиеБанка) КАК БанкОрганизации,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(Документ.Организация.НаименованиеПолное КАК СТРОКА(3))) = ""   ""
	|			ТОГДА Документ.Организация.Наименование
	|		ИНАЧЕ Документ.Организация.НаименованиеПолное
	|	КОНЕЦ КАК НазваниеОрганизации,
	|	Документ.Организация.КодПоЕДРПОУ КАК ЕДРПОУОрганизации
	|ИЗ
	|	Документ.РеализацияТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА ТаблицаТовары.Номенклатура.Наименование
	|		ИНАЧЕ ТаблицаТовары.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК Товар,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество = 0
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Сумма + ТаблицаТовары.СуммаРучнойСкидки + ТаблицаТовары.СуммаАвтоматическойСкидки КАК СуммаБезСкидки,
	|	ТаблицаТовары.СуммаРучнойСкидки + ТаблицаТовары.СуммаАвтоматическойСкидки КАК Скидка,
	|	ТаблицаТовары.СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС
	|ИЗ
	|	Документ.РеализацияТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.РеализацияТоваров.ПФ_MXL_Счет", КодЯзыкаПечать);

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьШапкаНомера         = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьШапкаКодов          = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьШапкаДанных         = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
	ОбластьШапкаСуммы          = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
	
	ОбластьКолонкаТовар = Макет.Область("Товар");
	ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
	                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
	ОбластьСтрокаНомера         = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьСтрокаКодов          = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
	ОбластьСтрокаДанных         = Макет.ПолучитьОбласть("Строка|Данные");
	ОбластьСтрокаСуммы          = Макет.ПолучитьОбласть("Строка|Сумма");
	
	ОбластьИтогоНДСНомера = Макет.ПолучитьОбласть("ИтогоНДС|НомерСтроки");
	ОбластьИтогоНДСКодов  = Макет.ПолучитьОбласть("ИтогоНДС|КолонкаКодов");
	ОбластьИтогоНДСДанных = Макет.ПолучитьОбласть("ИтогоНДС|Данные");
	ОбластьИтогоНДССуммы  = Макет.ПолучитьОбласть("ИтогоНДС|Сумма");
	
	// Вывести Итого.
	ОбластьИтогоНомера         = Макет.ПолучитьОбласть("Итого|НомерСтроки");
	ОбластьИтогоКодов          = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
	ОбластьИтогоДанных         = Макет.ПолучитьОбласть("Итого|Данные");
	ОбластьИтогоСуммы          = Макет.ПолучитьОбласть("Итого|Сумма");
	
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьПодписей      = Макет.ПолучитьОбласть("Подписи");
	
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка", ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьЗаголовкаСчета = Макет.ПолучитьОбласть("ЗаголовокСчета");
		ОбластьЗаголовкаСчета.Параметры.Заполнить(ВыборкаПоДокументам);
		//ОбластьЗаголовкаСчета.Параметры.НазваниеОрганизации = ВыборкаПоДокументам.Ссылка.Организация.НаименованиеПолное;
		//ОбластьЗаголовкаСчета.Параметры.ЕДРПОУОрганизации	= ВыборкаПоДокументам.Ссылка.Организация.КодПоЕДРПОУ;

		ТабличныйДокумент.Вывести(ОбластьЗаголовкаСчета);

		
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		
		ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Поставщик, ВыборкаПоДокументам.Дата), "ПолноеНаименование,",,КодЯзыкаПечать);
		ОбластьЗаголовок.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		
		ПредставлениеПолучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ВыборкаПоДокументам.Получатель, ВыборкаПоДокументам.Дата), "ПолноеНаименование,",,КодЯзыкаПечать);
		ОбластьЗаголовок.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		//Шапка
		
		ТабличныйДокумент.Вывести(ОбластьШапкаНомера);
		ТабличныйДокумент.Присоединить(ОбластьШапкаКодов);
		
		Суффикс = "";
		Если ВыборкаПоДокументам.УчитыватьНДС Тогда
			Если ВыборкаПоДокументам.ЦенаВключаетНДС Тогда
				Суффикс  = Суффикс  + НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать);
			Иначе	
				Суффикс  = Суффикс  + НСтр("ru=' без ';uk=' без '",КодЯзыкаПечать);
			КонецЕсли;
			Суффикс = Суффикс  + НСтр("ru='НДС';uk='ПДВ'",КодЯзыкаПечать);
		КонецЕсли;
		ОбластьШапкаДанных.Параметры.Цена  = НСтр("ru='Ціна';uk='Ціна'",КодЯзыкаПечать) + Суффикс;
		ОбластьШапкаСуммы.Параметры.Сумма  = НСтр("ru='Сума';uk='Сума'",КодЯзыкаПечать) + Суффикс;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаДанных);
		ТабличныйДокумент.Присоединить(ОбластьШапкаСуммы);
		
		
		ВсегоНаименований = 0;
		Сумма             = 0;
		ВсегоСкидок       = 0;
		ВсегоБезСкидок    = 0;
		СуммаНДС          = 0;
		
		//СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;

			ОбластьСтрокаНомера.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаНомера);

			ОбластьСтрокаКодов.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаКодов);

			ОбластьСтрокаДанных.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаДанных.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление, ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаДанных);
			
			ОбластьСтрокаСуммы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаСуммы);
			
			ВсегоНаименований = ВсегоНаименований + 1;
			
			Сумма          = Сумма       + ВыборкаПоСтрокамТЧ.Сумма;
			ВсегоСкидок    = ВсегоСкидок + ВыборкаПоСтрокамТЧ.Скидка;
			ВсегоБезСкидок = Сумма       + ВсегоСкидок;
			СуммаНДС       = СуммаНДС    + Окр(ВыборкаПоСтрокамТЧ.СуммаНДС, 2, 1);
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьИтогоНомера);
		ТабличныйДокумент.Присоединить(ОбластьИтогоКодов);
		
		ТабличныйДокумент.Присоединить(ОбластьИтогоДанных);
		ОбластьИтогоСуммы.Параметры.Всего = Сумма;
		ТабличныйДокумент.Присоединить(ОбластьИтогоСуммы);
		
		
		// Вывести ИтогоНДС
		ТабличныйДокумент.Вывести(ОбластьИтогоНДСНомера);
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДСКодов);
		
		ОбластьИтогоНДСДанных.Параметры.НДС = ?(ВыборкаПоДокументам.ЦенаВключаетНДС, НСтр("ru = 'В том числе НДС:';uk='У тому числі ПДВ:'", КодЯзыкаПечать), НСтр("ru = 'Сумма НДС:';uk='Сума ПДВ:", КодЯзыкаПечать));
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДСДанных);
		
		Если НЕ ВыборкаПоДокументам.УчитыватьНДС Тогда
			СуммаНДССтрока = НСтр("ru = 'Без НДС';uk='Без ПДВ'", КодЯзыкаПечать);
		Иначе
			СуммаНДССтрока = Строка(СуммаНДС);
		КонецЕсли;
		
		ОбластьИтогоНДССуммы.Параметры.ВсегоНДС = СуммаНДССтрока;
		ТабличныйДокумент.Присоединить(ОбластьИтогоНДССуммы);
		
		
		// Вывести Сумму прописью.
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %Итого%';uk='Усього найменувань %ВсегоНаименований%, на суму %Итого%'", КодЯзыкаПечать);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Сумма));
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма, , КодЯзыкаПечать);
		
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
		
		//ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.Отпустил = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции
//-HVOYA Mykhailo

Функция ПечатьНН(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();
	//КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Счет на оплату';uk='Рахунок на оплату'", КодЯзыкаПечать);
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НН";
	
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровТовары.Количество) КАК Количество,
		|	РеализацияТоваровТовары.Номенклатура.КодПоУКТЗЕД КАК КодПоУКТЗЕД,
		|	СУММА(РеализацияТоваровТовары.Сумма) КАК Сумма,
		|	СУММА(РеализацияТоваровТовары.СуммаНДС) КАК СуммаНДС,
		|	РеализацияТоваровТовары.СтавкаНДС КАК СтавкаНДС
		|ИЗ
		|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
		|ГДЕ
		|	РеализацияТоваровТовары.Ссылка = &МассивОбъектов
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровТовары.Номенклатура,
		|	РеализацияТоваровТовары.Номенклатура.КодПоУКТЗЕД,
		|	РеализацияТоваровТовары.СтавкаНДС";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Таб = РезультатЗапроса.ВЫгрузить();
	
	
Макет = УправлениеПечатью.ПолучитьМакет("Документ.РеализацияТоваров.НН", КодЯзыкаПечать);
Область = Макет.ПолучитьОбласть("ОбластьЗаголовок");
ТабличныйДокумент.Вывести(Область); 


Область = Макет.ПолучитьОбласть("ОбластьСтрока");

Для Каждого СтрСостава Из Таб Цикл 
     Область.Параметры.Заполнить(СтрСостава);
     ТабличныйДокумент.Вывести(Область); 
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	 
КонецЦикла;

Область = Макет.ПолучитьОбласть("ОбластьИтог");
Область.Параметры.КоличествоИтого = Таб.Итог("Количество");
Область.Параметры.СуммаИтого = Таб.Итог("Сумма");
Область.Параметры.СуммаНДСИтого = Таб.Итог("СуммаНДС");

ТабличныйДокумент.Вывести(Область);
	
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, МассивОбъектов);
		
	
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецЕсли

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
//	LNK 16.02.2017 14:33:05
	ЗаполнениеОбъектовСобытия.ОбщиеДействияПередЗаписью(ЭтотОбъект, Отказ);
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ИнтервалыРаботыМагазинов") Тогда
		
		ДатаОтчета = НачалоДня(ТекущаяДатаСеанса());
		Магазин    = ДанныеЗаполнения.Магазин;
		НовСтрока  = ОтработанноеВремя.Добавить();
		НовСтрока.НачалоРаботы    = ДанныеЗаполнения.НачалоИнтервала;
		НовСтрока.ОкончаниеРаботы = ДанныеЗаполнения.ОкончаниеИнтервала;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//Проверка на время выполнения работ по строке
	Для каждого ТекущаяСтрока Из  ОтработанноеВремя Цикл
		
		Если ТекущаяСтрока.НачалоРаботы >= ТекущаяСтрока.ОкончаниеРаботы Тогда
			
			ТекстОшибки = НСтр("ru = 'В строке %НомерСтроки% 
			|время начала работы больше  
			|времени окончания работы'");
			
			ТекстОшибки = СтрЗаменить(ТекстОшибки,"%НомерСтроки%",ТекущаяСтрока.НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				,
				"Объект.ОтработанноеВремя[" + (ТекущаяСтрока.НомерСтроки - 1) + "].НачалоРаботы",
				,
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	//Проверка на пересечение интервалов времени
	МассивСтрок = СтрокиПересеченияИнтерваловВДокументе();
	Для Каждого ТекущаяСтрока Из МассивСтрок Цикл
		
		ТекстОшибки = НСтр("ru = 'В строке %НомерСтроки% 
			|обнаружено пересечение интервалов  
			|начала и окончания работы'");
			
		ТекстОшибки = СтрЗаменить(ТекстОшибки,"%НомерСтроки%",ТекущаяСтрока.НомерСтроки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			"Объект.ОтработанноеВремя[" + (ТекущаяСтрока.НомерСтроки - 1) + "]",
			,
			Отказ);
			
	КонецЦикла;
		
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ИнициализироватьДокумент()
	
	Ответственный = Пользователи.ТекущийПользователь();
	Магазин = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(Магазин);

	Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда
		Сотрудник = Ответственный.ФизЛицо;
	КонецЕсли;
	
	Если НЕ Сотрудник.Сотрудник ИЛИ НЕ Сотрудник.Магазин = Магазин Тогда
		Сотрудник = Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

Функция СтрокиПересеченияИнтерваловВДокументе()
	
	Результат = Новый Массив;
	
	Для Каждого ТекСтрока Из ОтработанноеВремя Цикл
		Для Каждого ТекСтрокаВнутр Из ОтработанноеВремя Цикл
			Если ТекСтрока <> ТекСтрокаВнутр
				И ТекСтрока.НачалоРаботы >= ТекСтрокаВнутр.НачалоРаботы
				И ТекСтрока.НачалоРаботы < ТекСтрокаВнутр.ОкончаниеРаботы
			Тогда
				Результат.Добавить(ТекСтрока);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции
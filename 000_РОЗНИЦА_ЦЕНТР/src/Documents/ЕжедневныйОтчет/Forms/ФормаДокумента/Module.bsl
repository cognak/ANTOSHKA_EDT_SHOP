///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(Объект,КартинкаСостоянияДокумента,СостояниеДокумента,РазрешеноПроведение);
	
	ОбновитьПоказателиВремениНаСервере();
	
	НастроитьФормуПоДополнительнымПравам();
	
	ОбновитьЗаголовокДняНедели();

	УправлениеДоступомРТ.ПриСозданииФормыНаСервере(ЭтотОбъект);	//	LNK 17.10.2019 14:30:01
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьДатыВТабличнойЧасти(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьПоказателиВремениНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	ОбновитьПоказателиВремениНаСервере();
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ОткрытьФормуРедактированияКомментария(Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтчетаПриИзменении(Элемент)
	
	ОбновитьЗаголовокДняНедели();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтчетаОчистка(Элемент, СтандартнаяОбработка)
	
	ОбновитьЗаголовокДняНедели();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "ОтработанноеВремя"

&НаКлиенте
Процедура ОтработанноеВремяНачалоРаботыПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ОтработанноеВремя.ТекущиеДанные;
	ОбновитьПоказателиВремени(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработанноеВремяОкончаниеРаботыПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ОтработанноеВремя.ТекущиеДанные;
	ОбновитьПоказателиВремени(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработанноеВремяПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РассчитатьПродолжительностьДня();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработанноеВремяПослеУдаления(Элемент)
	
	РассчитатьПродолжительностьДня();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтработанноеВремяПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьПродолжительностьДня();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура НастроитьФормуПоДополнительнымПравам()

	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Дата.ТолькоПросмотр,
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьДату);
//	LNK 04.01.2017 13:54:53
	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Номер.ТолькоПросмотр,
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьНомерДокумента);

КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокДняНедели()
	Если ЗначениеЗаполнено(Объект.ДатаОтчета) Тогда
		Элементы.ДеньНедели.Заголовок = Строка(Перечисления.ДниНедели.Получить(ДеньНедели(Объект.ДатаОтчета) - 1));
	Иначе
		Элементы.ДеньНедели.Заголовок = "";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РассчитатьПродолжительностьДня()
	
	Разность = 0.00;
	
	Для Каждого ТекСтрока Из Объект.ОтработанноеВремя Цикл
		
		Разность = Разность + (ТекСтрока.ОкончаниеРаботы - ТекСтрока.НачалоРаботы);
		
	КонецЦикла;
	
	Если Разность > 0.00 Тогда
		
		
		Продолжительность = ОбщегоНазначенияРТКлиентСервер.ПреобразоватьСекундыВДату(Разность);
		
		Если Продолжительность <> Неопределено Тогда
			
			Объект.ПродолжительностьДня = Продолжительность;
			
		Иначе
			
			Объект.ПродолжительностьДня = Дата("00010101");
			
		КонецЕсли;
		
	Иначе
		
		Объект.ПродолжительностьДня = Дата("00010101");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПоказателиВремениНаСервере()
	
	Для каждого ТекущаяСтрока Из Объект.ОтработанноеВремя Цикл
		
		РазностьВСекундах = ТекущаяСтрока.ОкончаниеРаботы - ТекущаяСтрока.НачалоРаботы;
		
		Если РазностьВСекундах > 0.00 Тогда
			
			ТекущаяСтрока.Всего = ОбщегоНазначенияРТКлиентСервер.ПреобразоватьСекундыВДату(РазностьВСекундах);
			
		Иначе
			
			ТекущаяСтрока.Всего = 0.00;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДатыВТабличнойЧасти(ТекущийОбъект)
	
	Для каждого ТекущаяСтрока Из ТекущийОбъект.ОтработанноеВремя Цикл
		
		ТекущаяСтрока.НачалоРаботы    = Дата(Год(Объект.ДатаОтчета),Месяц(Объект.ДатаОтчета),День(Объект.ДатаОтчета),Час(ТекущаяСтрока.НачалоРаботы),Минута(ТекущаяСтрока.НачалоРаботы),0.00);
		ТекущаяСтрока.ОкончаниеРаботы = Дата(Год(Объект.ДатаОтчета),Месяц(Объект.ДатаОтчета),День(Объект.ДатаОтчета),Час(ТекущаяСтрока.ОкончаниеРаботы),Минута(ТекущаяСтрока.ОкончаниеРаботы),0.00);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПоказателиВремени(ТекущаяСтрока)
	
	РазностьВСекундах = ТекущаяСтрока.ОкончаниеРаботы - ТекущаяСтрока.НачалоРаботы;
	
	Если РазностьВСекундах > 0.00 Тогда
		
		ТекущаяСтрока.Всего = ОбщегоНазначенияРТКлиентСервер.ПреобразоватьСекундыВДату(РазностьВСекундах);
		
	Иначе
		
		ТекущаяСтрока.Всего = 0.00;
		
	КонецЕсли;
	
	РассчитатьПродолжительностьДня();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

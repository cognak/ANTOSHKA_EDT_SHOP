#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//	Объект - ДокументОъъект или ДанныеФормыСтруктура - документ, для которого нужно сфомировать параметры проверки
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями фукнции ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект)Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоОрдер", Истина);
	
	СкладскиеОперации = Новый Массив;
	Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоВозвратуПоставщику);
	ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещению);
	Иначе
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	КонецЕсли;
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|		ПО Товары.Номенклатура = ТаблицаСправочник.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И ТаблицаСправочник.ИспользоватьСерийныеНомера
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер.Владелец КАК Номенклатура,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	СУММА(ТабСерийныеНомера.Количество) КАК Количество
	|ПОМЕСТИТЬ ТабСвернутыхСерийныхНомеров
	|ИЗ
	|	ТабСерийныеНомера КАК ТабСерийныеНомера
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСерийныеНомера.СерийныйНомер.Владелец,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ТабОстатокНоменклатур
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСвернутыхСерийныхНомеров КАК ТабСвернутыхСерийныхНомеров
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	НЕ ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров ЕСТЬ NULL
	|	И ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ТабСерийныеНомера.СерийныйНомер, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер,
	|	ВЫБОР
	|		КОГДА ТабСерийныеНомера.СерийныйНомер ЕСТЬ NULL
	|			ТОГДА ТабТовары.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ТабОбщая
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОстатокНоменклатур.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка),
	|	ТабОстатокНоменклатур.Количество
	|ИЗ
	|	ТабОстатокНоменклатур КАК ТабОстатокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийныеНомера.Номенклатура КАК Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаСерийныеНомера.Количество КАК Количество,
	|	&Склад КАК Отправитель,
	|	&Организация КАК Организация,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	&Период КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабОбщая.Номенклатура КАК Номенклатура,
	|		ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|		СУММА(ТабОбщая.Количество) КАК Количество
	|	ИЗ
	|		ТабОбщая КАК ТабОбщая
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабОбщая.Номенклатура,
	|		ТабОбщая.СерийныйНомер) КАК ТаблицаСерийныеНомера
	|ГДЕ
	|	&ФормироватьДвижения" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗаказыПокупателей()

	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	ТоварыВРезерве.НомерСтроки КАК НомерСтроки,
	|	ТоварыВРезерве.ВидДвижения КАК ВидДвижения,
	|	ТоварыВРезерве.Период КАК Период,
	|	ТоварыВРезерве.Магазин КАК Магазин,
	|	ТоварыВРезерве.Заказ КАК Заказ,
	|	ТоварыВРезерве.Номенклатура КАК Номенклатура,
	|	ТоварыВРезерве.Характеристика КАК Характеристика,
	|	ТоварыВРезерве.Количество КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|		&Период КАК Период,
	|		&Магазин КАК Магазин,
	|		&ЗаказПокупателя КАК Заказ,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Количество >= ТаблицаРезервы.КоличествоОстаток
	|				ТОГДА ТаблицаТовары.Количество
	|			ИНАЧЕ ТаблицаРезервы.КоличествоОстаток
	|		КОНЕЦ КАК Количество
	|	ИЗ
	|		ВтТаблицаТовары КАК ТаблицаТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.Остатки(
	|					&ГраницаСреза,
	|					Заказ = &ЗаказПокупателя
	|						И Магазин = &Магазин
	|						И (Номенклатура, Характеристика) В
	|							(ВЫБРАТЬ
	|								Товары.Номенклатура,
	|								Товары.Характеристика
	|							ИЗ
	|								ВтТаблицаТовары КАК Товары)) КАК ТаблицаРезервы
	|			ПО ТаблицаТовары.Номенклатура = ТаблицаРезервы.Номенклатура
	|				И ТаблицаТовары.Характеристика = ТаблицаРезервы.Характеристика
	|	ГДЕ
	|		&ФормироватьДвижения
	|		И НЕ &РазрешитьПрямуюИнтеграциюMagento = ИСТИНА
	|		И НЕ &ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		И ТаблицаРезервы.КоличествоОстаток >= 0) КАК ТоварыВРезерве
	|ГДЕ
	|	ТоварыВРезерве.Количество > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПродажиПоЗаказамПокупателей()

	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	ТоварыЗаказанные.Номенклатура КАК Номенклатура,
	|	ТоварыЗаказанные.Характеристика КАК Характеристика,
	|	СУММА(ТоварыЗаказанные.Количество) КАК Количество,
	|	СУММА(ТоварыЗаказанные.Сумма + ВЫБОР
	|			КОГДА ТоварыЗаказанные.Ссылка.УчитыватьНДС
	|					И НЕ ТоварыЗаказанные.Ссылка.ЦенаВключаетНДС
	|				ТОГДА ТоварыЗаказанные.СуммаНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ТоварыЗаказанные.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ТоварыЗаказанные
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары КАК ТоварыЗаказанные
	|ГДЕ
	|	ТоварыЗаказанные.Ссылка = &ЗаказПокупателя
	|	И ТоварыЗаказанные.Количество > 0
	|	И &ФормироватьДвижения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыЗаказанные.Номенклатура,
	|	ТоварыЗаказанные.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	&Магазин КАК Магазин,
	|	&ЗаказПокупателя КАК Заказ,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	&Основание КАК ДокументПродажи,
	|	&Продавец КАК Продавец,
	|	ЛОЖЬ КАК МотивацияНачислена,
	|	ВЫБОР
	|		КОГДА &ВидОтгрузкиПоЗаказуПокупателя = ""Сборка""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОтгрузкиПоЗаказуПокупателя.Сборка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОтгрузкиПоЗаказуПокупателя.Продажа)
	|	КОНЕЦ КАК ВидОтгрузки,
	|	ВЫБОР
	|		КОГДА ТоварыЗаказанные.Номенклатура ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СоставЗаказа,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыЗаказанные.Количество, 0) = 0
	|			ТОГДА ТабличнаяЧасть.СуммаОтгрузки
	|		КОГДА ТабличнаяЧасть.Количество = ТоварыЗаказанные.Количество
	|			ТОГДА ТоварыЗаказанные.Сумма
	|		ИНАЧЕ ТабличнаяЧасть.Количество * (ТоварыЗаказанные.Сумма / ТоварыЗаказанные.Количество)
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыЗаказанные.Количество, 0) = 0
	|			ТОГДА ТабличнаяЧасть.СуммаОтгрузки
	|		КОГДА ТабличнаяЧасть.Количество = ТоварыЗаказанные.Количество
	|			ТОГДА ТоварыЗаказанные.Сумма
	|		ИНАЧЕ ТабличнаяЧасть.Количество * (ТоварыЗаказанные.Сумма / ТоварыЗаказанные.Количество)
	|	КОНЕЦ КАК СтоимостьБезСкидок,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыЗаказанные.Количество, 0) = 0
	|			ТОГДА 0
	|		КОГДА ТабличнаяЧасть.Количество = ТоварыЗаказанные.Количество
	|			ТОГДА ТоварыЗаказанные.СуммаНДС
	|		ИНАЧЕ ТабличнаяЧасть.Количество * (ТоварыЗаказанные.СуммаНДС / ТоварыЗаказанные.Количество)
	|	КОНЕЦ КАК НДС
	|ИЗ
	|	ВтТаблицаТовары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыЗаказанные КАК ТоварыЗаказанные
	|		ПО ТабличнаяЧасть.Номенклатура = ТоварыЗаказанные.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ТоварыЗаказанные.Характеристика
	|ГДЕ
	|	НЕ &ВидОтгрузкиПоЗаказуПокупателя = """"
	|	И &ФормироватьДвижения
	|	И ТабличнаяЧасть.Количество > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаТаблицаПродажиПоЗаказамПокупателей()

///////////////////////////////////////////////////////////////////////////////
// Проведение

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.Магазин КАК Магазин,
	|	ДанныеДокумента.ДокументОснование КАК Основание,
	|	ДанныеДокумента.ДокументОснование.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЕСТЬNULL(ДанныеДокумента.ДокументОснование.ДокументОснование, НЕОПРЕДЕЛЕНО)) = ТИП(Документ.ЗапросДоступностиТоваров)
	|			ТОГДА ДанныеДокумента.ДокументОснование.ДокументОснование
	|		ИНАЧЕ ЕСТЬNULL(ДанныеДокумента.ДокументОснование.ЗаказПокупателя, ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка))
	|	КОНЕЦ КАК ЗаказПокупателя,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ДанныеДокумента.ДокументОснование.АналитикаХозяйственнойОперации
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.РеализацияТоваров
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.РеализацияТоваров)
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ПеремещениеТоваров
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ЕСТЬNULL(ДанныеДокумента.ДокументОснование.МагазинПолучательКонечный, ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|							И ТИПЗНАЧЕНИЯ(ЕСТЬNULL(ДанныеДокумента.ДокументОснование.ДокументОснование, НЕОПРЕДЕЛЕНО)) = ТИП(Документ.ЗапросДоступностиТоваров)
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.СборкаТоваровПодЗаказПокупателя)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПеремещениеТоваров)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПустаяСсылка)
	|	КОНЕЦ КАК АналитикаХозяйственнойОперации,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ДанныеДокумента.ДокументОснование.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Контрагент,
	|	НЕ ДанныеДокумента.Магазин.СкладУправляющейСистемы КАК ФормироватьДвижения,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(ДанныеДокумента.ДокументОснование.ЗаказПокупателя, ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				И ДанныеДокумента.Магазин.СкладУправляющейСистемы = ЛОЖЬ
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ДанныеДокумента.ДокументОснование.МагазинПолучательКонечный = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|						ТОГДА ""Сборка""
	|					ИНАЧЕ ""Продажа""
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВидОтгрузкиПоЗаказуПокупателя,
	|	ДанныеДокумента.Ответственный.ФизЛицо КАК Продавец,
	|	ДанныеДокумента.МоментВремени КАК МоментВремени
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	РезультатЗапроса = Запрос.Выполнить();

	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	Запрос.УстановитьПараметр("ПоВозвратуПоставщику", ТипЗнч(Реквизиты.Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") И ЗначениеЗаполнено(Реквизиты.Основание));
	Запрос.УстановитьПараметр("ГраницаСреза", Новый Граница(Реквизиты.МоментВремени, ВидГраницы.Исключая));
	
	Если ТипЗнч(Реквизиты.Основание) = Тип("ДокументСсылка.РеализацияТоваров") Тогда
		Запрос.УстановитьПараметр("СкладскаяОперация", Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	ИначеЕсли ТипЗнч(Реквизиты.Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		Запрос.УстановитьПараметр("СкладскаяОперация", Перечисления.СкладскиеОперации.ОтгрузкаПоВозвратуПоставщику);
	ИначеЕсли ТипЗнч(Реквизиты.Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Запрос.УстановитьПараметр("СкладскаяОперация", Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещению);
	Иначе
		Запрос.УстановитьПараметр("СкладскаяОперация", Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	КонецЕсли;

//	LNK 24.05.2022 06:16:11
	УчетнаяПолитика = ОбщегоНазначенияРТповтИсп.ПолучитьУчетнуюПолитику(Реквизиты.Период);
	Запрос.УстановитьПараметр("РазрешитьПрямуюИнтеграциюMagento", УчетнаяПолитика.РазрешитьПрямуюИнтеграциюMagento);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&Склад КАК Склад,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ВЫБОР
	|		КОГДА &ПоВозвратуПоставщику
	|			ТОГДА -ТаблицаТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА &ПоВозвратуПоставщику
	|			ТОГДА -ТаблицаТовары.Сумма
	|		ИНАЧЕ ТаблицаТовары.Сумма
	|	КОНЕЦ КАК СуммаОтгрузки,
	|	&Контрагент КАК Контрагент,
	|	&Основание КАК Основание
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|   И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//1 ТоварыНаСкладах
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТаблицаТовары.Контрагент КАК Контрагент,
	|	ТаблицаТовары.Сумма КАК СуммаПоступления
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|   &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//2 ТоварыКОтгрузке
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Основание КАК ДокументОснование
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
    |   &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаДвиженияСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Магазин КАК Магазин,
	|	&СкладскаяОперация КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Серии КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Запрос.Текст = Запрос.Текст + ТекстЗапросаТаблицаСерийныхНомеров();
	Запрос.Текст = Запрос.Текст + ТекстЗапросаТаблицаЗаказыПокупателей();
	Запрос.Текст = Запрос.Текст + ТекстЗапросаТаблицаПродажиПоЗаказамПокупателей();
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"            , Результат[ 1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаМагазинах"			, Результат[ 1].Выгрузить());	//	LNK 31.08.2021 13:07:46
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтгрузке"            , Результат[ 2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"       , Результат[ 3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"            , Результат[10].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыПокупателей"          , Результат[11].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПродажиПоЗаказамПокупателей", Результат[13].Выгрузить());

	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.Колонки.Удалить("Склад");	//	LNK 31.08.2021 13:07:46
	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.Колонки.Вставить(0, "Магазин", Новый ОписаниеТипов("СправочникСсылка.Магазины"));
	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.ЗаполнитьЗначения(Запрос.Параметры.Магазин, "Магазин");
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасходныйОрдерНаТовары") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РасходныйОрдерНаТовары",
				"Расходный ордер на товары",
				ПечатьРасходногоОрдераНаТовары(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,Истина);

	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьРасходногоОрдераНаТовары(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
		
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	ВыводитьУпаковки      = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент     = Новый ТабличныйДокумент;
	РеквизитыДокумента    = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента      = НСтр("ru='Расходный ордер на товары';uk='Видатковий ордер на товари'", КодЯзыкаПечать);
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходныйОрдерНаТовары_РасходныйОрдерНаТовары";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Магазин КАК Магазин,
	|	Документ.ДокументОснование.Организация КАК Организация,
	|	Документ.Склад КАК Склад,
	|	Документ.ДокументОснование КАК Основание,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Магазин) КАК МагазинПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.ДокументОснование.Организация) КАК ОрганизацияПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.ДокументОснование) КАК ОснованиеПредставление,
	|	Документ.Ответственный.ФизЛицо КАК Ответственный,
	|	Документ.Комментарий,
	|	Документ.МоментВремени КАК МоментВремени
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ПредставлениеЕдиницыИзмеренияУпаковки,
	|	ТаблицаТовары.Номенклатура.Производитель.Представление КАК ПредставлениеПроизводителя,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Код КАК Код,
	|	ТаблицаТовары.Артикул КАК Артикул,
	|	ТаблицаТовары.НоменклатураПредставление,
	|	ТаблицаТовары.ХарактеристикаПредставление,
	|	ТаблицаТовары.ПредставлениеБазовойЕдиницыИзмерения,
	|	ТаблицаТовары.ПредставлениеЕдиницыИзмеренияУпаковки,
	|	ТаблицаТовары.ПредставлениеПроизводителя,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Товары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Штрихкоды.Владелец КАК Номенклатура,
	|	Штрихкоды.Характеристика,
	|	Штрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Характеристика = Штрихкоды.Характеристика
	|ГДЕ
	|	Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	|	И ЕСТЬNULL(Штрихкоды.Упаковка.Коэффициент, 1) = 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	Штрихкод"
	);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.РасходныйОрдерНаТовары.ПФ_MXL_РасходныйОрдерНаТовары", КодЯзыкаПечать);
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	ОбластьШапкаТаблицыКолонкаУпаковок 		= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
	ОбластьСтрокаТаблицыКолонкаУпаковок 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
	ОбластьПодвалТаблицыКолонкаУпаковок		= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");
	
	ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
	
	Если НЕ ВыводитьУпаковки Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
		+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки; 		
		
	КонецЕсли;
	
	ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
	ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	
	ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
	ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
	ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
	
	ОбластьПодписей       = Макет.ПолучитьОбласть("Подписи");
	ОбластьИтого          = Макет.ПолучитьОбласть("Итого");
	ОбластьСуммаПрописью  = Макет.ПолучитьОбласть("СуммаПрописью");
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Штрихкоды = Новый ПостроительЗапроса;
	Штрихкоды.ИсточникДанных = Новый ОписаниеИсточникаДанных(Результаты[3].Выгрузить());
	Штрихкоды.Отбор.Добавить("Номенклатура");
	Штрихкоды.Отбор.Добавить("Характеристика");
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		//ЗАГОЛОВОК
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		//ШАПКА
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);	
		ОбластьШапка.Параметры.ОснованиеПредставление = СокрЛП(ОбластьШапка.Параметры.ОснованиеПредставление)
			+ ?(ПустаяСтрока(ВыборкаПоДокументам.Комментарий), "", Символы.ПС + СокрЛП(ВыборкаПоДокументам.Комментарий));
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
		ВсегоНаименований = 0;
		Итого             = 0;
		//СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
		//	LNK 26.10.2016 11:27:18
			Штрихкоды.Отбор.Номенклатура.Установить(ВыборкаПоСтрокамТЧ.Номенклатура);
			Штрихкоды.Отбор.Характеристика.Установить(ВыборкаПоСтрокамТЧ.Характеристика);
			Штрихкоды.Выполнить();

			ТекстШтрихкодов  = "";
			ШтрихкодыВыборка = Штрихкоды.Результат.Выбрать();

			Пока ШтрихкодыВыборка.Следующий() Цикл

				Если НЕ ПустаяСтрока(ШтрихкодыВыборка.Штрихкод) Тогда

					ТекстШтрихкодов = ТекстШтрихкодов + ?(ПустаяСтрока(ТекстШтрихкодов), "", Символы.ПС) + СокрЛП(ШтрихкодыВыборка.Штрихкод);

				КонецЕсли;

			КонецЦикла;
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
		//	LNK 26.10.2016 11:29:20
			ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Штрихкод = ТекстШтрихкодов;
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
			
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар =
				?(ПустаяСтрока(ВыборкаПоСтрокамТЧ.ПредставлениеПроизводителя), "", СокрЛП(ВыборкаПоСтрокамТЧ.ПредставлениеПроизводителя) + Символы.ПС)
				+ ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
			
			Если ВыводитьУпаковки Тогда
				
				ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаУпаковок);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);	
			
			ВсегоНаименований = ВсегоНаименований + 1;
			Итого             = Итого + ВыборкаПоСтрокамТЧ.Сумма;
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
		
		//ИТОГО
		ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Итого));
		ОбластьИтого.Параметры.Итого = ТекстИтоговойСтроки;
		
		ТабличныйДокумент.Вывести(ОбластьИтого);

		//СУММА ПРОПИСЬЮ
		
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Итого, , КодЯзыкаПечать);
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %Итого%';uk='Усього найменувань %ВсегоНаименований%, на суму %Итого%'", КодЯзыкаПечать);
			
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(Итого));
				
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;

		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
            
				
		//ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.ОтветственныйПредставление = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецЕсли





#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция определяет реквизиты документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ПередачаТоваровМеждуОрганизациями - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа
//
Функция ПолучитьРеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Организация = Выборка.Организация;
		ОрганизацияПолучатель = Выборка.ОрганизацияПолучатель;
	Иначе
		Организация = Справочники.Организации.ПустаяСсылка();
		ОрганизацияПолучатель = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Организация, ОрганизацияПолучатель",
		Организация,
		ОрганизацияПолучатель
	);
	
	Возврат СтруктураРеквизитов;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|		ПО Товары.Номенклатура = ТаблицаСправочник.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И ТаблицаСправочник.ИспользоватьСерийныеНомера
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер.Владелец КАК Номенклатура,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	СУММА(ТабСерийныеНомера.Количество) КАК Количество
	|ПОМЕСТИТЬ ТабСвернутыхСерийныхНомеров
	|ИЗ
	|	ТабСерийныеНомера КАК ТабСерийныеНомера
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСерийныеНомера.СерийныйНомер.Владелец,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ТабОстатокНоменклатур
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСвернутыхСерийныхНомеров КАК ТабСвернутыхСерийныхНомеров
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	НЕ ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров ЕСТЬ NULL
	|	И ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ТабСерийныеНомера.СерийныйНомер, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер,
	|	ВЫБОР
	|		КОГДА ТабСерийныеНомера.СерийныйНомер ЕСТЬ NULL
	|			ТОГДА ТабТовары.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ТабОбщая
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОстатокНоменклатур.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка),
	|	ТабОстатокНоменклатур.Количество
	|ИЗ
	|	ТабОстатокНоменклатур КАК ТабОстатокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийныеНомера.номенклатура КАК Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаСерийныеНомера.Количество КАК Количество,
	|	&Период КАК Период
	|ПОМЕСТИТЬ ТабОбщаяДвижений
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабОбщая.Номенклатура КАК номенклатура,
	|		ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|		СУММА(ТабОбщая.Количество) КАК Количество
	|	ИЗ
	|		ТабОбщая КАК ТабОбщая
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабОбщая.Номенклатура,
	|		ТабОбщая.СерийныйНомер) КАК ТаблицаСерийныеНомера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабОбщаяДвижений.Номенклатура КАК Номенклатура,
	|	ТабОбщаяДвижений.СерийныйНомер КАК СерийныйНомер,
	|	ТабОбщаяДвижений.Количество КАК Количество,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТабОбщаяДвижений.Период КАК Период,
	|	&Склад КАК Отправитель,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Получатель
	|ИЗ
	|	ТабОбщаяДвижений КАК ТабОбщаяДвижений
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОбщаяДвижений.Номенклатура,
	|	ТабОбщаяДвижений.СерийныйНомер,
	|	ТабОбщаяДвижений.Количество,
	|	&АналитикаХозяйственнойОперацииПолучатель,
	|	ТабОбщаяДвижений.Период,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	&ОрганизацияПолучатель,
	|	&Склад
	|ИЗ
	|	ТабОбщаяДвижений КАК ТабОбщаяДвижений" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции


///////////////////////////////////////////////////////////////////////////////
// Проведение

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.УчитыватьНДС КАК УчитыватьНДС,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаТоваровПослеРеализации)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПередачаТоваровПослеРеализации)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПередачаТоваровДоРеализации)
	|	КОНЕЦ КАК АналитикаХозяйственнойОперации,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПриемТоваровОтДругойОрганизации) КАК АналитикаХозяйственнойОперацииПолучатель,
	|	(НЕ ДанныеДокумента.Магазин.СкладУправляющейСистемы) КАК ФормироватьДвижения
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",       ?(Реквизиты.ЦенаВключаетНДС, 0, 1));
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                       КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                                            КАК Ссылка,
	|	ТаблицаТовары.Номенклатура                                      КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры                      КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика                                    КАК Характеристика,
	|	ТаблицаТовары.Количество                                        КАК Количество,
	|	ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС * &ЦенаВключаетНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары               КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	&Организация                           КАК ОрганизацияОтгрузки,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество
	|ИЗ
	|	ВтТаблицаТовары                        КАК ТаблицаТовары
	|ГДЕ
	|	(НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&ОрганизацияПолучатель,
	|	НЕОПРЕДЕЛЕНО,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ 
	|	(НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.Текст = Запрос.Текст + ТекстЗапросаТаблицаСерийныхНомеров();
		
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = СтруктураДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций", МассивРезультатов[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров",   МассивРезультатов[9].Выгрузить());
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Печать


// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"М4",
			"М-4 (Приходный ордер)",
			ПечатьМ4(МассивОбъектов, ОбъектыПечати));

	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьМ4(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;

	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                                  КАК Ссылка,
		|	Документ.Номер                                   КАК Номер,
		|	Документ.Дата                                    КАК Дата,
		|	Документ.Дата                                    КАК ДатаСоставления,
		|	Документ.Организация                             КАК Поставщик,
		|   Документ.Организация.Код                         КАК ПоставщикКод,
		|	Документ.ОрганизацияПолучатель                   КАК Организация,
		|	Документ.ОрганизацияПолучатель                   КАК ЮрФизЛицо,
		|	Документ.ОрганизацияПолучатель.Префикс           КАК Префикс,
		|	Документ.Склад.Наименование                      КАК СкладНаименование,
		|	Документ.Склад                                   КАК МестоПриемки,
		|	Документ.Ответственный.Физлицо                   КАК Получил,
        |	Документ.ЦенаВключаетНДС                         КАК ЦенаВключаетНДС
		|ИЗ
		|	Документ.ПередачаТоваровМеждуОрганизациями КАК Документ
		|
		|ГДЕ
		|	Документ.Ссылка В (&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК ЕдиницаИзмеренияКод,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.Цена 													   КАК Цена,
		|	ВложенныйЗапрос.Сумма              										   КАК Сумма,
		|	ВложенныйЗапрос.СуммаНДС           										   КАК СуммаНДС,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ВложенныйЗапрос.Количество                                                 КАК КоличествоПринято,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки
		|ИЗ (
		|	ВЫБРАТЬ
		|		Документ.Ссылка             КАК Ссылка,
		|		Документ.Номенклатура       КАК Номенклатура,
		|		ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Документ.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Документ.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ                       КАК ЕдиницаИзмерения,
		|		ВЫБОР
		|			КОГДА
		|				Документ.КоличествоУпаковок = 0
		|			ТОГДА
		|				Документ.Цена
		|			ИНАЧЕ
		|				Документ.Сумма / Документ.КоличествоУпаковок
		|		КОНЕЦ КАК Цена,
		|		Документ.Сумма              КАК Сумма,
		|		Документ.СуммаНДС           КАК СуммаНДС,
		|		Документ.Характеристика     КАК Характеристика,
		|		Документ.КоличествоУпаковок КАК Количество,
		|		Документ.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Документ
		|	ГДЕ
		|		Документ.Ссылка В (&МассивДокументов)
		|		И Документ.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваров_М4";
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати      = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.ПолучитьМакет("ОбщийМакет.ПФ_MXL_М4");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		// Выводим общие реквизиты шапки
		СведенияОПокупателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаСоставления);
		
		НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,");
		ОбластьМакета.Параметры.КодПоЕДРПОУ              = СведенияОПокупателе.КодПоЕДРПОУ;
		ОбластьМакета.Параметры.НомерДокумента           = НомерДокумента;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок докмента
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ДатаСоставления = ДанныеПечати.ДатаСоставления;
		ОбластьМакета.Параметры.НомерДокумента = НомерДокумента;
		
		СведенияОПоставщике     = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.ДатаСоставления);
		ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеПоставщика;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
			
		// Выводим заголовок таблицы
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

		НомерСтраницы = 1;
				
	
		ДанныеСтроки = Новый Структура;
		
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("СуммаСНДС", 0);
		ДанныеСтроки.Вставить("СуммаНДС", 0);
		ДанныеСтроки.Вставить("СуммаБезНДС", 0);
		ДанныеСтроки.Вставить("Количество", 0);
		ДанныеСтроки.Вставить("Цена", 0);
		
		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть докмента
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьШапкаСтрок       = Макет.ПолучитьОбласть("ШапкаСтрок");
		ОбластьПодвалСтрок      = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		
		Пока СтрокаТовары.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			
			ДанныеСтроки.Номер       = ДанныеСтроки.Номер + 1;
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
			ДанныеСтроки.СуммаСНДС   = Окр(СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС), 2);
			ДанныеСтроки.СуммаНДС    = Окр(СтрокаТовары.СуммаНДС, 2);
			ДанныеСтроки.СуммаБезНДС = ДанныеСтроки.СуммаСНДС - ДанныеСтроки.СуммаНДС;
				
			Если ДанныеПечати.ЦенаВключаетНДС Тогда
				ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
			Иначе
				ДанныеСтроки.Цена = СтрокаТовары.Цена;
			КонецЕсли;

			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				СтрокаТовары.ТоварНаименование,
				СтрокаТовары.Характеристика);
						
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьПодвалСтрок);
			
			Если ДанныеСтроки.Номер = КоличествоСтрок И НомерСтраницы > 1 Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;

			Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабличныйДокумент.Вывести(ПодвалСтрок);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапкаСтрок);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Увеличим итоги по документу.
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалСтрок);
				
		Если НомерСтраницы = 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();				
		КонецЕсли;
		
		// Выводим подвал документа
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.Получил, ДанныеПечати.Дата);
		ОбластьМакета.Параметры.КладовщикПринявшийТоварДолжностьФИО = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено,СтруктураФИО.Фамилия,СтруктураФИО.Имя,СтруктураФИО.Отчество);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
	
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
			
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецЕсли

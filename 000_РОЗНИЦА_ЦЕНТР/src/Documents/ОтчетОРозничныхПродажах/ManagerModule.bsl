#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//	Объект - ДокументОъъект или ДанныеФормыСтруктура - документ, для которого нужно сфомировать параметры проверки
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями фукнции ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоОрдер", Истина);
	
	СкладскиеОперации = Новый Массив;
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаВРозницу);
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента);
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция РеквизитыРедактируемыеВГрупповойОбработке()	Экспорт	//	LNK 13.10.2021 09:29:46

	РедактируемыеРеквизиты = Новый Массив;

	РедактируемыеРеквизиты.Добавить("Комментарий");
	РедактируемыеРеквизиты.Добавить("Ответственный");

	Возврат РедактируемыеРеквизиты;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область ИнициализацияДанныхДляПроведения

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	УчетнаяПолитика = ОбщегоНазначенияРТповтИсп.ПолучитьУчетнуюПолитику();

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номер КАК Номер,
	|	ТаблицаДокумента.Дата КАК Период,
	|	ТаблицаДокумента.Проведен КАК Проведен,
	|	ТаблицаДокумента.КассаККМ КАК КассаККМ,
	|	ТаблицаДокумента.Комментарий КАК Комментарий,
	|	ТаблицаДокумента.Ответственный КАК Ответственный,
	|	ТаблицаДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаДокумента.СуммаВозвратов КАК СуммаВозвратов,
	|	ТаблицаДокумента.Магазин КАК Магазин,
	|	ТаблицаДокумента.ДоговорЭквайринга КАК ДоговорЭквайринга,
	|	ТаблицаДокумента.Эквайрер КАК Эквайрер,
	|	ТаблицаДокумента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ТаблицаДокумента.УчитыватьНДС КАК УчитыватьНДС,
	|	ТаблицаДокумента.ОплатаПодарочнымиСертификатами КАК ОплатаПодарочнымиСертификатами,
	|	ТаблицаДокумента.Магазин.СкладПродажи КАК СкладПродажи,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	НЕ ТаблицаДокумента.Магазин.СкладУправляющейСистемы КАК ФормироватьДвижения
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	РезультатЗапроса = Запрос.Выполнить();
	
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	Запрос.УстановитьПараметр("АналитикаХозяйственнойОперации", Справочники.АналитикаХозяйственныхОпераций.РеализацияТоваров);
    Запрос.УстановитьПараметр("ФормироватьДвиженияРИБ", НЕ ПланыОбмена.ПоРабочемуМесту.ЭтоРабочееМесто());
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ФормироватьДвиженияБонусныхБаллов", Запрос.Параметры.ФормироватьДвиженияРИБ И НЕ УчетнаяПолитика.ИспользоватьЧекиКакРегистраторыНачисленияБонусныхБаллов);
	Запрос.УстановитьПараметр("РазрешитьПрямуюИнтеграциюMagento", УчетнаяПолитика.РазрешитьПрямуюИнтеграциюMagento);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыПродажа.Ссылка КАК Ссылка,
	|	ТоварыПродажа.НомерСтроки КАК НомерСтроки,
	|	ТоварыПродажа.Номенклатура КАК Номенклатура,
	|	ТоварыПродажа.Характеристика КАК Характеристика,
	|	ТоварыПродажа.Количество КАК Количество,
	|	ТоварыПродажа.Цена КАК Цена,
	|	ТоварыПродажа.Сумма КАК Сумма,
	|	ТоварыПродажа.СтавкаНДС КАК СтавкаНДС,
	|	ТоварыПродажа.СуммаНДС КАК СуммаНДС,
	|	ТоварыПродажа.СуммаОкругления КАК СуммаОкругления,
	|	ТоварыПродажа.СуммаБонусныхБалловНачислено КАК СуммаБонусныхБалловНачислено,
	|	ТоварыПродажа.СуммаБонусныхБалловСписано КАК СуммаБонусныхБалловСписано,
	|	ТоварыПродажа.Склад КАК Склад,
	|	ТоварыПродажа.Продавец КАК Продавец,
	|	ТоварыПродажа.Маржинальность КАК Маржинальность,
	|	ТоварыПродажа.УслугаБанка КАК УслугаБанка,
	|	ТоварыПродажа.УслугаБанкаПериодПредоставления КАК УслугаБанкаПериодПредоставления,
	|	ВЫБОР
	|		КОГДА ТоварыПродажа.ВладелецДисконтнойКарты В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
	|				И НЕ ТоварыПродажа.ДисконтнаяКарта = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|			ТОГДА ТоварыПродажа.ДисконтнаяКарта.ВладелецКарты
	|		ИНАЧЕ ТоварыПродажа.ВладелецДисконтнойКарты
	|	КОНЕЦ КАК ВладелецДисконтнойКарты,
	|	ТоварыПродажа.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТоварыПродажа.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫРАЗИТЬ(ТоварыПродажа.Упаковка КАК Справочник.УпаковкиНоменклатуры) КАК Упаковка,
	|	ТоварыПродажа.ДополнительнаяАналитика КАК ДополнительнаяАналитика,
	|	ТоварыПродажа.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТоварыПродажа
	|ГДЕ
	|	ТоварыПродажа.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыВозврат.Ссылка КАК Ссылка,
	|	ТоварыВозврат.НомерСтроки КАК НомерСтроки,
	|	ТоварыВозврат.Номенклатура КАК Номенклатура,
	|	ТоварыВозврат.Характеристика КАК Характеристика,
	|	ТоварыВозврат.Количество КАК Количество,
	|	ТоварыВозврат.Цена КАК Цена,
	|	ТоварыВозврат.Сумма КАК Сумма,
	|	ТоварыВозврат.Склад КАК Склад,
	|	ТоварыВозврат.СтавкаНДС КАК СтавкаНДС,
	|	ТоварыВозврат.СуммаНДС КАК СуммаНДС,
	|	ТоварыВозврат.СуммаОкругления КАК СуммаОкругления,
	|	ТоварыВозврат.СуммаБонусныхБалловНачислено КАК СуммаБонусныхБалловНачислено,
	|	ТоварыВозврат.СуммаБонусныхБалловСписано КАК СуммаБонусныхБалловСписано,
	|	ТоварыВозврат.Продавец КАК Продавец,
	|	ТоварыВозврат.Маржинальность КАК Маржинальность,
	|	ТоварыВозврат.УслугаБанка КАК УслугаБанка,
	|	ТоварыВозврат.УслугаБанкаПериодПредоставления КАК УслугаБанкаПериодПредоставления,
	|	ВЫБОР
	|		КОГДА ТоварыВозврат.ВладелецДисконтнойКарты В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
	|				И НЕ ТоварыВозврат.ДисконтнаяКарта = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|			ТОГДА ТоварыВозврат.ДисконтнаяКарта.ВладелецКарты
	|		ИНАЧЕ ТоварыВозврат.ВладелецДисконтнойКарты
	|	КОНЕЦ КАК ВладелецДисконтнойКарты,
	|	ТоварыВозврат.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТоварыВозврат.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТоварыВозврат.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТоварыВозврат.Упаковка КАК Упаковка,
	|	ТоварыВозврат.ВозвратНеЭтойСмены КАК ВозвратНеЭтойСмены,
	|	ТоварыВозврат.ДополнительнаяАналитика КАК ДополнительнаяАналитика,
	|	ТоварыВозврат.КлючСвязи КАК КлючСвязи
	|ПОМЕСТИТЬ ТаблицаВозвращенныеТовары
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ВозвращенныеТовары КАК ТоварыВозврат
	|ГДЕ
	|	ТоварыВозврат.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ТаблицаСертификаты.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаСертификаты.Количество КАК Количество,
	|	ВЫРАЗИТЬ(&Магазин КАК Справочник.Магазины) КАК Магазин,
	|	ТаблицаСертификаты.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСертификаты.ПодарочныйСертификат.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
	|	ТаблицаСертификаты.ПодарочныйСертификат.ТипНоменклатуры КАК ТипНоменклатуры
	|ПОМЕСТИТЬ ПогашенныеСертификаты
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ПогашениеПодарочныхСертификатов КАК ТаблицаСертификаты
	|ГДЕ
	|	ТаблицаСертификаты.ПодарочныйСертификат.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И ТаблицаСертификаты.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ТаблицаТовары.Сумма
	|			ИНАЧЕ -ТаблицаТовары.Сумма
	|		КОНЕЦ) КАК Сумма
	|ПОМЕСТИТЬ ТоварыЧеков
	|ИЗ
	|	Документ.ЧекККМ КАК ТаблицаДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТаблицаТовары
	|		ПО ТаблицаДокументы.Ссылка = ТаблицаТовары.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ОтчетОРозничныхПродажах = &Ссылка
	|	И ВЫБОР
	|			КОГДА ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|				ТОГДА ТаблицаДокументы.ЧекККМПродажа.ОтчетОРозничныхПродажах = &Ссылка
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС7) КАК СтавкаНДС,
	|	7 КАК ПроцентСтавки
	|ПОМЕСТИТЬ СтавкиНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20),
	|	20
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстаток.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаОстаток.СуммаОтчета) - СУММА(ТаблицаОстаток.СуммаЧека) КАК СуммаРазницы
	|ПОМЕСТИТЬ ПроблемыОкругления
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыОтчета.Номенклатура КАК Номенклатура,
	|		ТоварыОтчета.Сумма КАК СуммаОтчета,
	|		0 КАК СуммаЧека
	|	ИЗ
	|		ТаблицаТовары КАК ТоварыОтчета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыЧеков.Номенклатура,
	|		0,
	|		ТоварыЧеков.Сумма
	|	ИЗ
	|		ТоварыЧеков КАК ТоварыЧеков) КАК ТаблицаОстаток
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстаток.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	НЕ СУММА(ТаблицаОстаток.СуммаОтчета) - СУММА(ТаблицаОстаток.СуммаЧека) = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&Ссылка КАК ДокументПродажи,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ТаблицаТовары.УслугаБанка КАК УслугаБанка,
	|	ТаблицаТовары.УслугаБанкаПериодПредоставления КАК УслугаБанкаПериодПредоставления,
	|	ТаблицаТовары.Маржинальность КАК Маржинальность,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	(ТаблицаТовары.Количество * ТаблицаТовары.Цена + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаТовары.Количество * ТаблицаТовары.Цена * ЕСТЬNULL(СтавкиНДС.ПроцентСтавки, 0) / 100
	|		ИНАЧЕ 0
	|	КОНЕЦ) / ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ИЛИ ТаблицаТовары.Упаковка.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаТовары.Упаковка.Коэффициент
	|	КОНЕЦ КАК СтоимостьБезСкидок,
	|	ТаблицаТовары.СуммаНДС КАК НДС,
	|	ТаблицаТовары.СуммаОкругления КАК СуммаОкругления,
	|	ТаблицаТовары.СуммаБонусныхБалловНачислено КАК СуммаБонусныхБалловНачислено,
	|	ТаблицаТовары.СуммаБонусныхБалловСписано КАК СуммаБонусныхБалловСписано,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	&Период КАК Период,
	|	ТаблицаТовары.НомерСтроки * 100000 КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭмуляцияПродажи
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаТовары.СтавкаНДС = СтавкиНДС.СтавкаНДС
	|ГДЕ
	|	&ФормироватьДвиженияРИБ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВозвращенныеТовары.Склад,
	|	ТаблицаВозвращенныеТовары.Номенклатура,
	|	ТаблицаВозвращенныеТовары.Характеристика,
	|	&Ссылка,
	|	ТаблицаВозвращенныеТовары.Продавец,
	|	ТаблицаВозвращенныеТовары.УслугаБанка,
	|	ТаблицаВозвращенныеТовары.УслугаБанкаПериодПредоставления,
	|	ТаблицаВозвращенныеТовары.Маржинальность,
	|	ТаблицаВозвращенныеТовары.Количество,
	|	ТаблицаВозвращенныеТовары.Сумма + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаВозвращенныеТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	(ТаблицаВозвращенныеТовары.Количество * ТаблицаВозвращенныеТовары.Цена + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаВозвращенныеТовары.Количество * ТаблицаВозвращенныеТовары.Цена * ЕСТЬNULL(СтавкиНДС.ПроцентСтавки, 0) / 100
	|		ИНАЧЕ 0
	|	КОНЕЦ) / ВЫБОР
	|		КОГДА ТаблицаВозвращенныеТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ИЛИ ТаблицаВозвращенныеТовары.Упаковка.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаВозвращенныеТовары.Упаковка.Коэффициент
	|	КОНЕЦ,
	|	ТаблицаВозвращенныеТовары.СуммаНДС,
	|	ТаблицаВозвращенныеТовары.СуммаОкругления,
	|	ТаблицаВозвращенныеТовары.СуммаБонусныхБалловНачислено,
	|	ТаблицаВозвращенныеТовары.СуммаБонусныхБалловСписано,
	|	&АналитикаХозяйственнойОперации,
	|	&Период,
	|	ТаблицаВозвращенныеТовары.НомерСтроки * 200000,
	|	ИСТИНА
	|ИЗ
	|	ТаблицаВозвращенныеТовары КАК ТаблицаВозвращенныеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаВозвращенныеТовары.СтавкаНДС = СтавкиНДС.СтавкаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроблемыОкругления КАК ПроблемыОкругления
	|		ПО ТаблицаВозвращенныеТовары.Номенклатура = ПроблемыОкругления.Номенклатура
	|ГДЕ
	|	&ФормироватьДвиженияРИБ
	|	И ТаблицаВозвращенныеТовары.ВозвратНеЭтойСмены = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВозвращенныеТовары.Склад,
	|	ТаблицаВозвращенныеТовары.Номенклатура,
	|	ТаблицаВозвращенныеТовары.Характеристика,
	|	&Ссылка,
	|	ТаблицаВозвращенныеТовары.Продавец,
	|	ТаблицаВозвращенныеТовары.УслугаБанка,
	|	ТаблицаВозвращенныеТовары.УслугаБанкаПериодПредоставления,
	|	ТаблицаВозвращенныеТовары.Маржинальность,
	|	-ТаблицаВозвращенныеТовары.Количество,
	|	-(ТаблицаВозвращенныеТовары.Сумма + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаВозвращенныеТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ),
	|	-(ТаблицаВозвращенныеТовары.Количество * ТаблицаВозвращенныеТовары.Цена + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаВозвращенныеТовары.Количество * ТаблицаВозвращенныеТовары.Цена * ЕСТЬNULL(СтавкиНДС.ПроцентСтавки, 0) / 100
	|		ИНАЧЕ 0
	|	КОНЕЦ) / ВЫБОР
	|		КОГДА ТаблицаВозвращенныеТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ИЛИ ТаблицаВозвращенныеТовары.Упаковка.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаВозвращенныеТовары.Упаковка.Коэффициент
	|	КОНЕЦ,
	|	-ТаблицаВозвращенныеТовары.СуммаНДС,
	|	-ТаблицаВозвращенныеТовары.СуммаОкругления,
	|	-ТаблицаВозвращенныеТовары.СуммаБонусныхБалловНачислено,
	|	-ТаблицаВозвращенныеТовары.СуммаБонусныхБалловСписано,
	|	ТаблицаВозвращенныеТовары.АналитикаХозяйственнойОперации,
	|	&Период,
	|	ТаблицаВозвращенныеТовары.НомерСтроки * 300000,
	|	ЛОЖЬ
	|ИЗ
	|	ТаблицаВозвращенныеТовары КАК ТаблицаВозвращенныеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаВозвращенныеТовары.СтавкаНДС = СтавкиНДС.СтавкаНДС
	|ГДЕ
	|	&ФормироватьДвиженияРИБ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТаблицаТовары.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Сумма + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаТовары.СтавкаНДС = СтавкиНДС.СтавкаНДС
	|ГДЕ
	|	&ФормироватьДвиженияРИБ
	|	И НЕ ТаблицаТовары.ВладелецДисконтнойКарты В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаВозвращенныеТовары.ДисконтнаяКарта,
	|	ТаблицаВозвращенныеТовары.ВладелецДисконтнойКарты,
	|	ТаблицаВозвращенныеТовары.Номенклатура,
	|	ТаблицаВозвращенныеТовары.Характеристика,
	|	ТаблицаВозвращенныеТовары.Сумма + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаВозвращенныеТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаВозвращенныеТовары.Количество,
	|	ТаблицаВозвращенныеТовары.НомерСтроки * 100000
	|ИЗ
	|	ТаблицаВозвращенныеТовары КАК ТаблицаВозвращенныеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаВозвращенныеТовары.СтавкаНДС = СтавкиНДС.СтавкаНДС
	|ГДЕ
	|	&ФормироватьДвиженияРИБ
	|	И ТаблицаВозвращенныеТовары.ВозвратНеЭтойСмены = ЛОЖЬ
	|	И НЕ ТаблицаВозвращенныеТовары.ВладелецДисконтнойКарты В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаВозвращенныеТовары.ДисконтнаяКарта,
	|	ТаблицаВозвращенныеТовары.ВладелецДисконтнойКарты,
	|	ТаблицаВозвращенныеТовары.Номенклатура,
	|	ТаблицаВозвращенныеТовары.Характеристика,
	|	-(ТаблицаВозвращенныеТовары.Сумма + ВЫБОР
	|		КОГДА НЕ &ЦенаВключаетНДС
	|				И &УчитыватьНДС
	|			ТОГДА ТаблицаВозвращенныеТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ),
	|	-ТаблицаВозвращенныеТовары.Количество,
	|	ТаблицаВозвращенныеТовары.НомерСтроки * 200000
	|ИЗ
	|	ТаблицаВозвращенныеТовары КАК ТаблицаВозвращенныеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНДС КАК СтавкиНДС
	|		ПО ТаблицаВозвращенныеТовары.СтавкаНДС = СтавкиНДС.СтавкаНДС
	|ГДЕ
	|	&ФормироватьДвиженияРИБ
	|	И НЕ ТаблицаВозвращенныеТовары.ВладелецДисконтнойКарты В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ПродажиПоДисконтнымКартам.ДисконтнаяКарта,
	|	ПродажиПоДисконтнымКартам.ВладелецДисконтнойКарты,
	|	NULL,
	|	NULL,
	|	ПродажиПоДисконтнымКартам.Сумма,
	|	0,
	|	ПродажиПоДисконтнымКартам.НомерСтроки * 300000
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ПродажиПоДисконтнымКартам КАК ПродажиПоДисконтнымКартам
	|ГДЕ
	|	&ФормироватьДвиженияРИБ
	|	И ПродажиПоДисконтнымКартам.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОплатаПлатежнымиКартами.ВидОплаты КАК ВидОплаты,
	|	ТаблицаОплатаПлатежнымиКартами.СуммаТорговойУступки КАК СуммаТорговойУступки,
	|	ТаблицаОплатаПлатежнымиКартами.Сумма КАК Сумма,
	|	&Магазин КАК Магазин,
	|	&ДоговорЭквайринга КАК ДоговорЭквайринга,
	|	&Период КАК Период,
	|	ТаблицаОплатаПлатежнымиКартами.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОплатаПлатежнымиКартами.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ТаблицаОплатаПлатежнымиКартами
	|ГДЕ
	|	ТаблицаОплатаПлатежнымиКартами.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ФормироватьДвиженияРИБ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВозвращенныеТовары.Склад,
	|	ТаблицаВозвращенныеТовары.Номенклатура,
	|	ТаблицаВозвращенныеТовары.Характеристика,
	|	ТаблицаВозвращенныеТовары.Количество,
	|	&АналитикаХозяйственнойОперации,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаВозвращенныеТовары.НомерСтроки,
	|	&Период
	|ИЗ
	|	ТаблицаВозвращенныеТовары КАК ТаблицаВозвращенныеТовары
	|ГДЕ
	|	ТаблицаВозвращенныеТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ФормироватьДвиженияРИБ
	|	И ТаблицаВозвращенныеТовары.ВозвратНеЭтойСмены = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВозвращенныеТовары.Склад,
	|	ТаблицаВозвращенныеТовары.Номенклатура,
	|	ТаблицаВозвращенныеТовары.Характеристика,
	|	-ТаблицаВозвращенныеТовары.Количество,
	|	&АналитикаХозяйственнойОперации,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаВозвращенныеТовары.НомерСтроки,
	|	&Период
	|ИЗ
	|	ТаблицаВозвращенныеТовары КАК ТаблицаВозвращенныеТовары
	|ГДЕ
	|	ТаблицаВозвращенныеТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ФормироватьДвиженияРИБ
	|	И ТаблицаВозвращенныеТовары.ВозвратНеЭтойСмены = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВозвращенныеТовары.Склад,
	|	ТаблицаВозвращенныеТовары.Номенклатура,
	|	ТаблицаВозвращенныеТовары.Характеристика,
	|	ТаблицаВозвращенныеТовары.Количество,
	|	ТаблицаВозвращенныеТовары.АналитикаХозяйственнойОперации,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаВозвращенныеТовары.НомерСтроки,
	|	&Период
	|ИЗ
	|	ТаблицаВозвращенныеТовары КАК ТаблицаВозвращенныеТовары
	|ГДЕ
	|	ТаблицаВозвращенныеТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ФормироватьДвиженияРИБ
	|	И ТаблицаВозвращенныеТовары.ВозвратНеЭтойСмены
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПодарочныеСертификаты.Ссылка.Магазин.СкладПродажи,
	|	ПодарочныеСертификаты.ПодарочныйСертификат,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ПодарочныеСертификаты.Количество,
	|	&АналитикаХозяйственнойОперации,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	100000 + ПодарочныеСертификаты.НомерСтроки,
	|	&Период
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ПогашениеПодарочныхСертификатов КАК ПодарочныеСертификаты
	|ГДЕ
	|	ПодарочныеСертификаты.ПодарочныйСертификат.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И ПодарочныеСертификаты.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСредств.Период КАК Период,
	|	СУММА(ТаблицаСредств.Сумма) КАК Сумма,
	|	ТаблицаСредств.КассаККМ КАК КассаККМ
	|ИЗ
	|	(ВЫБРАТЬ
	|		&КассаККМ КАК КассаККМ,
	|		&Период КАК Период,
	|		&СуммаДокумента КАК Сумма
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&КассаККМ,
	|		&Период,
	|		-ТаблицаОплатаПлатежнымиКартами.Сумма
	|	ИЗ
	|		Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ТаблицаОплатаПлатежнымиКартами
	|	ГДЕ
	|		ТаблицаОплатаПлатежнымиКартами.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&КассаККМ,
	|		&Период,
	|		-ТаблицаОплатаБанковскимиКредитами.Сумма
	|	ИЗ
	|		Документ.ОтчетОРозничныхПродажах.ОплатаБанковскимиКредитами КАК ТаблицаОплатаБанковскимиКредитами
	|	ГДЕ
	|		ТаблицаОплатаБанковскимиКредитами.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&КассаККМ,
	|		&Период,
	|		-&ОплатаПодарочнымиСертификатами
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&КассаККМ,
	|		&Период,
	|		-ПроблемыОкругления.СуммаРазницы
	|	ИЗ
	|		ПроблемыОкругления КАК ПроблемыОкругления) КАК ТаблицаСредств
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСредств.Период,
	|	ТаблицаСредств.КассаККМ
	|
	|ИМЕЮЩИЕ
	|	НЕ СУММА(ТаблицаСредств.Сумма) = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Склад КАК Склад,
	|	&Организация КАК Организация,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ФормироватьДвиженияРИБ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВозвращенныеТовары.Номенклатура,
	|	ТаблицаВозвращенныеТовары.Характеристика,
	|	ТаблицаВозвращенныеТовары.Количество,
	|	ТаблицаВозвращенныеТовары.Склад,
	|	&Организация,
	|	&Организация,
	|	ТаблицаВозвращенныеТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период
	|ИЗ
	|	ТаблицаВозвращенныеТовары КАК ТаблицаВозвращенныеТовары
	|ГДЕ
	|	ТаблицаВозвращенныеТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ФормироватьДвиженияРИБ
	|	И НЕ ТаблицаВозвращенныеТовары.ВозвратНеЭтойСмены
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВозвращенныеТовары.Номенклатура,
	|	ТаблицаВозвращенныеТовары.Характеристика,
	|	-ТаблицаВозвращенныеТовары.Количество,
	|	ТаблицаВозвращенныеТовары.Склад,
	|	&Организация,
	|	&Организация,
	|	ТаблицаВозвращенныеТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период
	|ИЗ
	|	ТаблицаВозвращенныеТовары КАК ТаблицаВозвращенныеТовары
	|ГДЕ
	|	ТаблицаВозвращенныеТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ФормироватьДвиженияРИБ
	|	И НЕ ТаблицаВозвращенныеТовары.ВозвратНеЭтойСмены
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВозвращенныеТовары.Номенклатура,
	|	ТаблицаВозвращенныеТовары.Характеристика,
	|	ТаблицаВозвращенныеТовары.Количество,
	|	ТаблицаВозвращенныеТовары.Склад,
	|	&Организация,
	|	&Организация,
	|	ТаблицаВозвращенныеТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период
	|ИЗ
	|	ТаблицаВозвращенныеТовары КАК ТаблицаВозвращенныеТовары
	|ГДЕ
	|	ТаблицаВозвращенныеТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &ФормироватьДвиженияРИБ
	|	И ТаблицаВозвращенныеТовары.ВозвратНеЭтойСмены
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСертификаты.ПодарочныйСертификат,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ТаблицаСертификаты.Количество,
	|	ТаблицаСертификаты.Магазин.СкладПродажи,
	|	&Организация,
	|	&Организация,
	|	100000 + ТаблицаСертификаты.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период
	|ИЗ
	|	ПогашенныеСертификаты КАК ТаблицаСертификаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Магазин КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаВРозницу) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ФормироватьДвиженияРИБ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроблемыОкругления.Номенклатура КАК Номенклатура,
	|	ПроблемыОкругления.СуммаРазницы КАК СуммаРазницы
	|ИЗ
	|	ПроблемыОкругления КАК ПроблемыОкругления" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Запрос.Текст = Запрос.Текст
	+ ТекстЗапросаТаблицаСерийныхНомеров()
	+ ТекстЗапросаТаблицаЗаказыПокупателей()
	+ ТекстЗапросаТаблицаПродажиПоЗаказамПокупателей()
	+ ТекстЗапросаТаблицаСостоянияСерийныхНомеров()
	+ ТекстЗапросаТаблицаБонусныеБаллы()
	+ Символы.ПС +
	"
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаВозвращенныеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПогашенныеСертификаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварыЧеков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПроблемыОкругления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СтавкиНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаБонусыНачисление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаБонусыОплата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаБонусы"
	;

	Результат = Запрос.ВыполнитьПакет();
	ИндексПервый = 6;

	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаПродажи"                    , Результат[ИндексПервый +  0].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПродажиПоДисконтнымКартам"  , Результат[ИндексПервый +  1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПродажиПоПлатежнымКартам"   , Результат[ИндексПервый +  2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"            , Результат[ИндексПервый +  3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаМагазинах"			, Результат[ИндексПервый +  3].Выгрузить());	//	LNK 31.08.2021 13:07:46
	ТаблицыДляДвижений.Вставить("ТаблицаДенежныеСредстваККМ"        , Результат[ИндексПервый +  4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"          , Результат[ИндексПервый +  5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"       , Результат[ИндексПервый +  6].Выгрузить());

	РаспределитьПроблемноеОкругление(ТаблицыДляДвижений.ТаблицаПродажи, Результат[ИндексПервый + 7].Выгрузить());

    ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"            , Результат[ИндексПервый + 14].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыПокупателей"          , Результат[ИндексПервый + 17].Выгрузить());	//	LNK 03.10.2017 12:26:15
	ТаблицыДляДвижений.Вставить("ТаблицаПродажиПоЗаказамПокупателей", Результат[ИндексПервый + 18].Выгрузить());	//	LNK 13.12.2017 16:31:30
//	LNK 06.03.2020 12:11:35
	ТаблицыДляДвижений.Вставить("ТаблицаСостоянияСерийныхНомеров"   , Результат[ИндексПервый + 19].Выгрузить());

	ТаблицыДляДвижений.Вставить("ТаблицаБонусныеБаллы"				, Результат[ИндексПервый + 23].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаБонусныеБаллыВРезерве"		, Результат[ИндексПервый + 24].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСписанныеБонусныеБаллы"		, Результат[ИндексПервый + 25].Выгрузить());	//	LNK 24.09.2021 05:19:25

	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.Колонки.Удалить("Склад");	//	LNK 31.08.2021 13:07:46
	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.Колонки.Вставить(0, "Магазин", Новый ОписаниеТипов("СправочникСсылка.Магазины"));
	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.ЗаполнитьЗначения(Запрос.Параметры.Магазин, "Магазин");

КонецПроцедуры

//Функция формирует текст запроса по серийным номерам
//Возвращаемое значение: ТекстЗапроса - Строка
Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
//	LNK 02.03.2020 08:41:24 Оставим ТОЛЬКО ПОГАШЕНИЕ сертификатов.
//	Реализация сертификатов останется на чеках.
	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество КАК Количество,
	|	Товары.Склад КАК Склад
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|		ПО Товары.Номенклатура = ТаблицаСправочник.Ссылка
	|ГДЕ
	|	ЛОЖЬ
	|	И Товары.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|	И ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И ТаблицаСправочник.ИспользоватьСерийныеНомера
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Возвраты.Номенклатура КАК Номенклатура,
	|	Возвраты.ВозвратНеЭтойСмены КАК ВозвратНеЭтойСмены,
	|	Возвраты.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	Возвраты.Количество КАК Количество,
	|	Возвраты.Склад КАК Склад
	|ПОМЕСТИТЬ ТабВозвраты
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ВозвращенныеТовары КАК Возвраты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|		ПО Возвраты.Номенклатура = ТаблицаСправочник.Ссылка
	|ГДЕ
	|	ЛОЖЬ
	|	И Возвраты.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|	И ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И ТаблицаСправочник.ИспользоватьСерийныеНомера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	ЛОЖЬ
	|	И СерийныеНомера.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ТабТовары.Склад КАК Отправитель,
	|	NULL КАК Получатель,
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	1 КАК Количество,
	|	&Период КАК Период
	|ПОМЕСТИТЬ ТаблицаДвижений
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	ТабТовары.Номенклатура.ИспользоватьСерийныеНомера
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ТабТовары.Склад,
	|	NULL,
	|	ТабТовары.Номенклатура,
	|	&АналитикаХозяйственнойОперации,
	|	ТабТовары.Количество,
	|	&Период
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|ГДЕ
	|	НЕ ТабТовары.Номенклатура.ИспользоватьСерийныеНомера
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	NULL,
	|	ТабВозвраты.Склад,
	|	ТабВозвраты.Номенклатура,
	|	ТабВозвраты.АналитикаХозяйственнойОперации,
	|	-1 * ТабВозвраты.Количество,
	|	&Период
	|ИЗ
	|	ТабВозвраты КАК ТабВозвраты
	|ГДЕ
	|	НЕ ТабВозвраты.Номенклатура.ИспользоватьСерийныеНомера
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаПогашениеСертификатов.СерийныйНомер,
	|	NULL,
	|	&СкладПродажи,
	|	ТаблицаСправочник.Ссылка,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПогашениеПодарочныхСертификатов),
	|	ТаблицаПогашениеСертификатов.Количество,
	|	&Период
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ПогашениеПодарочныхСертификатов КАК ТаблицаПогашениеСертификатов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|		ПО ТаблицаПогашениеСертификатов.ПодарочныйСертификат = ТаблицаСправочник.Ссылка
	|ГДЕ
	|	ТаблицаПогашениеСертификатов.Ссылка = &Ссылка
	|	И &ФормироватьДвижения
	|	И ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И ТаблицаСправочник.ИспользоватьСерийныеНомера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабВозвраты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДвижений.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаДвижений.Отправитель КАК Отправитель,
	|	ТаблицаДвижений.Номенклатура КАК Номенклатура,
	|	ТаблицаДвижений.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	&Организация КАК Организация,
	|	СУММА(ТаблицаДвижений.Количество) КАК Количество,
	|	ТаблицаДвижений.Период КАК Период,
	|	ТаблицаДвижений.Получатель КАК Получатель
	|ИЗ
	|	ТаблицаДвижений КАК ТаблицаДвижений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДвижений.СерийныйНомер,
	|	ТаблицаДвижений.Отправитель,
	|	ТаблицаДвижений.Номенклатура,
	|	ТаблицаДвижений.АналитикаХозяйственнойОперации,
	|	ТаблицаДвижений.Период,
	|	ТаблицаДвижений.Получатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДвижений" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;
	
КонецФункции

//	LNK 03.10.2017 12:22:57
Функция ТекстЗапросаТаблицаЗаказыПокупателей()

	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	Фильтр.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ТоварыЗаказанные.НомерСтроки КАК НомерСтроки,
	|	ТоварыЗаказанные.Номенклатура КАК Номенклатура,
	|	ТоварыЗаказанные.Характеристика КАК Характеристика,
	|	ТоварыЗаказанные.Количество КАК Количество,
	|	ТоварыЗаказанные.Сумма + ВЫБОР
	|		КОГДА ТоварыЗаказанные.Ссылка.УчитыватьНДС
	|				И НЕ ТоварыЗаказанные.Ссылка.ЦенаВключаетНДС
	|			ТОГДА ТоварыЗаказанные.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ТоварыЗаказанные.СуммаНДС КАК СуммаНДС,
	|	ТоварыЗаказанные.Продавец КАК Продавец,
	|	ТоварыЗаказанные.Резервировать КАК Резервировать,
	|	Фильтр.ЭтоВозврат КАК ЭтоВозврат,
	|	Фильтр.ВозвратНеЭтойСмены КАК ВозвратНеЭтойСмены
	|ПОМЕСТИТЬ ТоварыЗаказанные
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары КАК ТоварыЗаказанные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Фильтр.ДополнительнаяАналитика КАК ЗаказПокупателя,
	|			ЛОЖЬ КАК ЭтоВозврат,
	|			ЛОЖЬ КАК ВозвратНеЭтойСмены
	|		ИЗ
	|			ТаблицаТовары КАК Фильтр
	|		ГДЕ
	|			&ФормироватьДвижения = ИСТИНА
	|			И Фильтр.ДополнительнаяАналитика ССЫЛКА Документ.ЗаказПокупателя
	|			И НЕ Фильтр.ДополнительнаяАналитика = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|		
	|		ОБЪЕДИНИТЬ
	|		
	|		ВЫБРАТЬ
	|			Фильтр.ДополнительнаяАналитика,
	|			ИСТИНА,
	|			Фильтр.ВозвратНеЭтойСмены
	|		ИЗ
	|			ТаблицаВозвращенныеТовары КАК Фильтр
	|		ГДЕ
	|			&ФормироватьДвижения = ИСТИНА
	|			И НЕ &РазрешитьПрямуюИнтеграциюMagento = ИСТИНА
	|			И Фильтр.ДополнительнаяАналитика ССЫЛКА Документ.ЗаказПокупателя
	|			И НЕ Фильтр.ДополнительнаяАналитика = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)) КАК Фильтр
	|		ПО ТоварыЗаказанные.Ссылка = Фильтр.ЗаказПокупателя
	|ГДЕ
	|	&ФормироватьДвижения = ИСТИНА
	|	И НЕ &РазрешитьПрямуюИнтеграциюMagento = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РезервТовары.НомерСтроки КАК НомерСтроки,
	|	&Магазин КАК Магазин,
	|	РезервТовары.ЗаказПокупателя КАК Заказ,
	|	РезервТовары.Номенклатура КАК Номенклатура,
	|	РезервТовары.Характеристика КАК Характеристика,
	|	РезервТовары.Количество КАК Количество
	|ИЗ
	|	ТоварыЗаказанные КАК РезервТовары
	|ГДЕ
	|	&ФормироватьДвижения = ИСТИНА
	|	И НЕ &РазрешитьПрямуюИнтеграциюMagento = ИСТИНА
	|	И РезервТовары.ЭтоВозврат = ЛОЖЬ
	|	И РезервТовары.Резервировать
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
//	Чеки возврата учитываем только НЕ этой смены!
//	НО! При возврате в резерв НЕ возвращаем - запрос просто на всякий случай.
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаТаблицаЗаказыПокупателей()

//	LNK 13.12.2017 13:26:56
Функция ТекстЗапросаТаблицаПродажиПоЗаказамПокупателей()

	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Магазин КАК Магазин,
	|	ТаблицаТовары.ДополнительнаяАналитика КАК Заказ,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&Ссылка КАК ДокументПродажи,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТовары.Продавец = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|				И (ТоварыВРезерве.Номенклатура ЕСТЬ NULL
	|					ИЛИ ТаблицаТовары.Продавец = ТоварыВРезерве.Продавец)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК МотивацияНачислена,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОтгрузкиПоЗаказуПокупателя.Продажа) КАК ВидОтгрузки,
	|	ВЫБОР
	|		КОГДА ТоварыВРезерве.Номенклатура ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СоставЗаказа,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма + ВЫБОР
	|		КОГДА &УчитыватьНДС
	|				И НЕ &ЦенаВключаетНДС
	|			ТОГДА ТаблицаТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ТаблицаТовары.Сумма + ВЫБОР
	|		КОГДА &УчитыватьНДС
	|				И НЕ &ЦенаВключаетНДС
	|			ТОГДА ТаблицаТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезСкидок,
	|	ТаблицаТовары.СуммаНДС КАК НДС
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТоварыЗаказанные.ЗаказПокупателя КАК ЗаказПокупателя,
	|			ТоварыЗаказанные.Номенклатура КАК Номенклатура,
	|			ТоварыЗаказанные.Характеристика КАК Характеристика,
	|			ТоварыЗаказанные.Продавец КАК Продавец,
	|			СУММА(ТоварыЗаказанные.Количество) КАК Количество,
	|			СУММА(ТоварыЗаказанные.Сумма) КАК Сумма,
	|			СУММА(ТоварыЗаказанные.СуммаНДС) КАК СуммаНДС
	|		ИЗ
	|			ТоварыЗаказанные КАК ТоварыЗаказанные
	|		ГДЕ
	|			НЕ ТоварыЗаказанные.ЭтоВозврат
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТоварыЗаказанные.Номенклатура,
	|			ТоварыЗаказанные.Характеристика,
	|			ТоварыЗаказанные.Продавец,
	|			ТоварыЗаказанные.ЗаказПокупателя) КАК ТоварыВРезерве
	|		ПО ТаблицаТовары.ДополнительнаяАналитика = ТоварыВРезерве.ЗаказПокупателя
	|			И ТаблицаТовары.Номенклатура = ТоварыВРезерве.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТоварыВРезерве.Характеристика
	|ГДЕ
	|	&ФормироватьДвижения = ИСТИНА
	|	И ТаблицаТовары.ДополнительнаяАналитика ССЫЛКА Документ.ЗаказПокупателя
	|	И НЕ ТаблицаТовары.ДополнительнаяАналитика = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Магазин,
	|	ТаблицаВозвраты.ДополнительнаяАналитика,
	|	ТаблицаВозвраты.НомерСтроки + 100000,
	|	ТаблицаВозвраты.Номенклатура,
	|	ТаблицаВозвраты.Характеристика,
	|	&Ссылка,
	|	ТаблицаВозвраты.Продавец,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаВозвраты.Продавец = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|				И (ТоварыВРезерве.Номенклатура ЕСТЬ NULL
	|					ИЛИ ТаблицаВозвраты.Продавец = ТоварыВРезерве.Продавец)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОтгрузкиПоЗаказуПокупателя.Продажа),
	|	ВЫБОР
	|		КОГДА ТоварыВРезерве.Номенклатура ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ТаблицаВозвраты.Количество,
	|	ТаблицаВозвраты.Сумма + ВЫБОР
	|		КОГДА &УчитыватьНДС
	|				И НЕ &ЦенаВключаетНДС
	|			ТОГДА ТаблицаВозвраты.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаВозвраты.Сумма + ВЫБОР
	|		КОГДА &УчитыватьНДС
	|				И НЕ &ЦенаВключаетНДС
	|			ТОГДА ТаблицаВозвраты.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТаблицаВозвраты.СуммаНДС
	|ИЗ
	|	ТаблицаВозвращенныеТовары КАК ТаблицаВозвраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТоварыЗаказанные.ЗаказПокупателя КАК ЗаказПокупателя,
	|			ТоварыЗаказанные.Номенклатура КАК Номенклатура,
	|			ТоварыЗаказанные.Характеристика КАК Характеристика,
	|			ТоварыЗаказанные.Продавец КАК Продавец,
	|			СУММА(ТоварыЗаказанные.Количество) КАК Количество,
	|			СУММА(ТоварыЗаказанные.Сумма) КАК Сумма,
	|			СУММА(ТоварыЗаказанные.СуммаНДС) КАК СуммаНДС
	|		ИЗ
	|			ТоварыЗаказанные КАК ТоварыЗаказанные
	|		ГДЕ
	|			ТоварыЗаказанные.ЭтоВозврат
	|			И НЕ ТоварыЗаказанные.ВозвратНеЭтойСмены
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТоварыЗаказанные.Номенклатура,
	|			ТоварыЗаказанные.Характеристика,
	|			ТоварыЗаказанные.Продавец,
	|			ТоварыЗаказанные.ЗаказПокупателя) КАК ТоварыВРезерве
	|		ПО ТаблицаВозвраты.ДополнительнаяАналитика = ТоварыВРезерве.ЗаказПокупателя
	|			И ТаблицаВозвраты.Номенклатура = ТоварыВРезерве.Номенклатура
	|			И ТаблицаВозвраты.Характеристика = ТоварыВРезерве.Характеристика
	|ГДЕ
	|	&ФормироватьДвижения = ИСТИНА
	|	И ТаблицаВозвраты.ДополнительнаяАналитика ССЫЛКА Документ.ЗаказПокупателя
	|	И НЕ ТаблицаВозвраты.ДополнительнаяАналитика = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|	И НЕ ТаблицаВозвраты.ВозвратНеЭтойСмены
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	&Магазин,
	|	ТаблицаВозвраты.ДополнительнаяАналитика,
	|	ТаблицаВозвраты.НомерСтроки + 200000,
	|	ТаблицаВозвраты.Номенклатура,
	|	ТаблицаВозвраты.Характеристика,
	|	&Ссылка,
	|	ТаблицаВозвраты.Продавец,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаВозвраты.Продавец = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|				И (ТоварыВРезерве.Номенклатура ЕСТЬ NULL
	|					ИЛИ ТаблицаВозвраты.Продавец = ТоварыВРезерве.Продавец)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОтгрузкиПоЗаказуПокупателя.Продажа),
	|	ВЫБОР
	|		КОГДА ТоварыВРезерве.Номенклатура ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	-ТаблицаВозвраты.Количество,
	|	-(ТаблицаВозвраты.Сумма + ВЫБОР
	|		КОГДА &УчитыватьНДС
	|				И НЕ &ЦенаВключаетНДС
	|			ТОГДА ТаблицаВозвраты.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ),
	|	-(ТаблицаВозвраты.Сумма + ВЫБОР
	|		КОГДА &УчитыватьНДС
	|				И НЕ &ЦенаВключаетНДС
	|			ТОГДА ТаблицаВозвраты.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ),
	|	-ТаблицаВозвраты.СуммаНДС
	|ИЗ
	|	ТаблицаВозвращенныеТовары КАК ТаблицаВозвраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТоварыЗаказанные.ЗаказПокупателя КАК ЗаказПокупателя,
	|			ТоварыЗаказанные.Номенклатура КАК Номенклатура,
	|			ТоварыЗаказанные.Характеристика КАК Характеристика,
	|			ТоварыЗаказанные.Продавец КАК Продавец,
	|			СУММА(ТоварыЗаказанные.Количество) КАК Количество,
	|			СУММА(ТоварыЗаказанные.Сумма) КАК Сумма,
	|			СУММА(ТоварыЗаказанные.СуммаНДС) КАК СуммаНДС
	|		ИЗ
	|			ТоварыЗаказанные КАК ТоварыЗаказанные
	|		ГДЕ
	|			ТоварыЗаказанные.ЭтоВозврат
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТоварыЗаказанные.Номенклатура,
	|			ТоварыЗаказанные.Характеристика,
	|			ТоварыЗаказанные.Продавец,
	|			ТоварыЗаказанные.ЗаказПокупателя) КАК ТоварыВРезерве
	|		ПО ТаблицаВозвраты.ДополнительнаяАналитика = ТоварыВРезерве.ЗаказПокупателя
	|			И ТаблицаВозвраты.Номенклатура = ТоварыВРезерве.Номенклатура
	|			И ТаблицаВозвраты.Характеристика = ТоварыВРезерве.Характеристика
	|ГДЕ
	|	&ФормироватьДвижения = ИСТИНА
	|	И ТаблицаВозвраты.ДополнительнаяАналитика ССЫЛКА Документ.ЗаказПокупателя
	|	И НЕ ТаблицаВозвраты.ДополнительнаяАналитика = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаТаблицаПродажиПоЗаказамПокупателей()

//	LNK 11.02.2020 09:02:10
Функция ТекстЗапросаТаблицаСостоянияСерийныхНомеров()

	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСертификаты.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСертификаты.ПодарочныйСертификат КАК Номенклатура,
	|	ТаблицаСертификаты.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаСертификаты.Магазин КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияСерийныхНомеров.Погашен) КАК Состояние
	|ИЗ
	|	ПогашенныеСертификаты КАК ТаблицаСертификаты
	|ГДЕ
	|	ТаблицаСертификаты.ИспользоватьСерийныеНомера
	|	И ТаблицаСертификаты.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаБонусныеБаллы()

	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТабличнаяЧасть.ДокументПродажи.Дата КАК ПериодОперации,
	|	ТабличнаяЧасть.ДокументПродажи.ВидОперации КАК ВидОперации,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧасть.Контрагент КАК Контрагент,
	|	ТабличнаяЧасть.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	ТабличнаяЧасть.ДокументПродажи КАК ДокументПродажи,
	|	ТабличнаяЧасть.ДокументПродажи.ЧекККМПродажа КАК ЧекККМПродажа,
	|	ТабличнаяЧасть.ДатаНачисления КАК ДатаНачисления,
	|	ТабличнаяЧасть.ДатаСписания КАК ДатаСписания,
	|	ТабличнаяЧасть.СуммаБонусныхБаллов КАК СуммаБонусныхБаллов
	|ПОМЕСТИТЬ ТаблицаБонусыНачисление
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.НачислениеБонусныхБаллов КАК ТабличнаяЧасть
	|ГДЕ
	|	&ФормироватьДвиженияБонусныхБаллов = ИСТИНА
	|	И ТабличнаяЧасть.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТабличнаяЧасть.ДокументПродажи.Дата КАК ПериодОперации,
	|	ТабличнаяЧасть.ДокументПродажи.ВидОперации КАК ВидОперации,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧасть.Контрагент КАК Контрагент,
	|	ТабличнаяЧасть.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	ТабличнаяЧасть.ДокументПродажи КАК ДокументПродажи,
	|	ТабличнаяЧасть.ДокументПродажи.ЧекККМПродажа КАК ЧекККМПродажа,
	|	ТабличнаяЧасть.ДатаОплаты КАК ДатаОплаты,
	|	ТабличнаяЧасть.СуммаБонусныхБаллов КАК СуммаБонусныхБаллов,
	|	ТабличнаяЧасть.ТипБонусов КАК ТипБонусов
	|ПОМЕСТИТЬ ТаблицаБонусыОплата
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами КАК ТабличнаяЧасть
	|ГДЕ
	|	&ФормироватьДвиженияБонусныхБаллов = ИСТИНА
	|	И ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ТабличнаяЧасть.Контрагент) = ТИП(Справочник.Контрагенты)
	|					И НЕ ТабличнаяЧасть.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И НЕ ТабличнаяЧасть.СуммаБонусныхБаллов = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаНачисление.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ТаблицаНачисление.ПериодОперации
	|		КОГДА ТаблицаНачисление.ДатаНачисления = НАЧАЛОПЕРИОДА(ТаблицаНачисление.ПериодОперации, ДЕНЬ)
	|			ТОГДА ДОБАВИТЬКДАТЕ(ТаблицаНачисление.ПериодОперации, ЧАС, 1)
	|		КОГДА ТаблицаНачисление.ДатаНачисления < ТаблицаНачисление.ПериодОперации
	|			ТОГДА ТаблицаНачисление.ПериодОперации
	|		ИНАЧЕ ТаблицаНачисление.ДатаНачисления
	|	КОНЕЦ КАК Период,
	|	ТаблицаНачисление.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаНачисление.НомерСтроки КАК НомерСтроки,
	|	ТаблицаНачисление.Контрагент КАК Контрагент,
	|	ТаблицаНачисление.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	ТаблицаНачисление.ДокументПродажи КАК ДокументОперации,
	|	ТаблицаНачисление.ЧекККМПродажа КАК ЧекККМПродажа,
	|	ТаблицаНачисление.ПериодОперации КАК ПериодОперации,
	|	ТаблицаНачисление.СуммаБонусныхБаллов КАК СуммаБонусныхБаллов,
	|	ВЫБОР
	|		КОГДА ТаблицаНачисление.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Возврат)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Начисление)
	|	КОНЕЦ КАК ВидОперации,
	|	ТаблицаНачисление.ДатаНачисления КАК ДатаНачисления,
	|	ТаблицаНачисление.ДатаСписания КАК ДатаСписания,
	|	ВЫБОР
	|		КОГДА ТаблицаНачисление.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СписаниеПартий,
	|	ТаблицаНачисление.ВидОперации КАК ВидОперацииРегистратора,
	|	ВЫБОР
	|		КОГДА ТаблицаНачисление.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаНачисление.ДатаНачисления = НАЧАЛОПЕРИОДА(ТаблицаНачисление.ПериодОперации, ДЕНЬ)
	|						ТОГДА ДОБАВИТЬКДАТЕ(ТаблицаНачисление.ЧекККМПродажа.Дата, ЧАС, 1) > ТаблицаНачисление.ПериодОперации
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВозвратДоНачисления,
	|	&ТекущаяДата КАК ДатаИзменения,
	|	1 КАК КлючПорядка
	|ПОМЕСТИТЬ ТаблицаБонусы
	|ИЗ
	|	ТаблицаБонусыНачисление КАК ТаблицаНачисление
	|ГДЕ
	|	НЕ ТаблицаНачисление.СуммаБонусныхБаллов = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаНачисление.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ТаблицаНачисление.ПериодОперации
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ТаблицаНачисление.ДатаСписания, ДЕНЬ)
	|	КОНЕЦ,
	|	ТаблицаНачисление.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаНачисление.НомерСтроки,
	|	ТаблицаНачисление.Контрагент,
	|	ТаблицаНачисление.ПрограммаЛояльности,
	|	ТаблицаНачисление.ДокументПродажи,
	|	ТаблицаНачисление.ЧекККМПродажа,
	|	ТаблицаНачисление.ПериодОперации,
	|	ТаблицаНачисление.СуммаБонусныхБаллов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Аннуляция),
	|	ТаблицаНачисление.ДатаНачисления,
	|	ТаблицаНачисление.ДатаСписания,
	|	ИСТИНА,
	|	ТаблицаНачисление.ВидОперации,
	|	ЛОЖЬ,
	|	&ТекущаяДата,
	|	3
	|ИЗ
	|	ТаблицаБонусыНачисление КАК ТаблицаНачисление
	|ГДЕ
	|	НЕ ТаблицаНачисление.СуммаБонусныхБаллов = 0
	|	И НЕ ТаблицаНачисление.ДатаСписания = ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОплата.ПериодОперации,
	|	ТаблицаОплата.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	ТаблицаОплата.НомерСтроки,
	|	ТаблицаОплата.Контрагент,
	|	ТаблицаОплата.ПрограммаЛояльности,
	|	ТаблицаОплата.ДокументПродажи,
	|	ТаблицаОплата.ЧекККМПродажа,
	|	ТаблицаОплата.ПериодОперации,
	|	ТаблицаОплата.СуммаБонусныхБаллов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Использование),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	ИСТИНА,
	|	ТаблицаОплата.ВидОперации,
	|	ЛОЖЬ,
	|	&ТекущаяДата,
	|	2
	|ИЗ
	|	ТаблицаБонусыОплата КАК ТаблицаОплата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаБонусы.Период КАК Период,
	|	ТаблицаБонусы.Регистратор КАК Регистратор,
	|	ТаблицаБонусы.ВидДвижения КАК ВидДвижения,
	|	МИНИМУМ(ТаблицаБонусы.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаБонусы.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	ТаблицаБонусы.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТаблицаБонусы.ВидОперацииРегистратора = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ТаблицаБонусы.ДокументОперации.ЧекККМПродажа
	|		КОГДА ТаблицаБонусы.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Начисление), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Аннуляция))
	|			ТОГДА ТаблицаБонусы.ДокументОперации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументНачисления,
	|	СУММА(ТаблицаБонусы.СуммаБонусныхБаллов) КАК СуммаБонусныхБаллов,
	|	ТаблицаБонусы.ВидОперации КАК ВидОперации,
	|	ТаблицаБонусы.ПериодОперации КАК ДатаОперации,
	|	ТаблицаБонусы.ДокументОперации КАК ДокументОперации,
	|	ТаблицаБонусы.ДатаИзменения КАК ДатаИзменения,
	|	ТаблицаБонусы.КлючПорядка КАК КлючПорядка
	|ИЗ
	|	ТаблицаБонусы КАК ТаблицаБонусы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаБонусы.Период,
	|	ТаблицаБонусы.Регистратор,
	|	ТаблицаБонусы.ВидДвижения,
	|	ТаблицаБонусы.ПрограммаЛояльности,
	|	ТаблицаБонусы.Контрагент,
	|	ТаблицаБонусы.ВидОперации,
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.ДокументОперации,
	|	ТаблицаБонусы.ДатаИзменения,
	|	ТаблицаБонусы.КлючПорядка,
	|	ВЫБОР
	|		КОГДА ТаблицаБонусы.ВидОперацииРегистратора = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ТаблицаБонусы.ДокументОперации.ЧекККМПродажа
	|		КОГДА ТаблицаБонусы.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Начисление), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Аннуляция))
	|			ТОГДА ТаблицаБонусы.ДокументОперации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка,
	|	ПрограммаЛояльности,
	|	Период,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаБонусы.ПериодОперации КАК Период,
	|	ТаблицаБонусы.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	МИНИМУМ(ТаблицаБонусы.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаБонусы.Контрагент КАК Контрагент,
	|	ТаблицаБонусы.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	ТаблицаБонусы.ДокументОперации КАК ДокументНачисления,
	|	СУММА(ТаблицаБонусы.СуммаБонусныхБаллов) КАК СуммаБонусныхБаллов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Резерв) КАК ВидОперации,
	|	ТаблицаБонусы.ПериодОперации КАК ДатаОперации,
	|	ТаблицаБонусы.ДокументОперации КАК ДокументОперации,
	|	&ТекущаяДата КАК ДатаИзменения,
	|	1 КАК КлючПорядка
	|ИЗ
	|	ТаблицаБонусы КАК ТаблицаБонусы
	|ГДЕ
	|	ТаблицаБонусы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Начисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.Регистратор,
	|	ТаблицаБонусы.Контрагент,
	|	ТаблицаБонусы.ПрограммаЛояльности,
	|	ТаблицаБонусы.ДокументОперации,
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.ДокументОперации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаБонусы.ДатаНачисления = НАЧАЛОПЕРИОДА(ТаблицаБонусы.ПериодОперации, ДЕНЬ)
	|			ТОГДА ДОБАВИТЬКДАТЕ(ТаблицаБонусы.ПериодОперации, ЧАС, 1)
	|		ИНАЧЕ ТаблицаБонусы.ДатаНачисления
	|	КОНЕЦ,
	|	ТаблицаБонусы.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	МИНИМУМ(ТаблицаБонусы.НомерСтроки),
	|	ТаблицаБонусы.Контрагент,
	|	ТаблицаБонусы.ПрограммаЛояльности,
	|	ТаблицаБонусы.ДокументОперации,
	|	СУММА(-ТаблицаБонусы.СуммаБонусныхБаллов),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Начисление),
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.ДокументОперации,
	|	&ТекущаяДата,
	|	2
	|ИЗ
	|	ТаблицаБонусы КАК ТаблицаБонусы
	|ГДЕ
	|	ТаблицаБонусы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Начисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаБонусы.Регистратор,
	|	ТаблицаБонусы.Контрагент,
	|	ТаблицаБонусы.ПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА ТаблицаБонусы.ДатаНачисления = НАЧАЛОПЕРИОДА(ТаблицаБонусы.ПериодОперации, ДЕНЬ)
	|			ТОГДА ДОБАВИТЬКДАТЕ(ТаблицаБонусы.ПериодОперации, ЧАС, 1)
	|		ИНАЧЕ ТаблицаБонусы.ДатаНачисления
	|	КОНЕЦ,
	|	ТаблицаБонусы.ДокументОперации,
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.ДокументОперации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	МИНИМУМ(ТаблицаБонусы.НомерСтроки),
	|	ТаблицаБонусы.Контрагент,
	|	ТаблицаБонусы.ПрограммаЛояльности,
	|	ТаблицаБонусы.ЧекККМПродажа,
	|	СУММА(ТаблицаБонусы.СуммаБонусныхБаллов),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Резерв),
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.ДокументОперации,
	|	&ТекущаяДата,
	|	1
	|ИЗ
	|	ТаблицаБонусы КАК ТаблицаБонусы
	|ГДЕ
	|	ТаблицаБонусы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Возврат)
	|	И ТаблицаБонусы.ВозвратДоНачисления
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.Регистратор,
	|	ТаблицаБонусы.Контрагент,
	|	ТаблицаБонусы.ПрограммаЛояльности,
	|	ТаблицаБонусы.ЧекККМПродажа,
	|	ТаблицаБонусы.ДокументОперации,
	|	ТаблицаБонусы.ПериодОперации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(ТаблицаБонусы.ЧекККМПродажа.Дата, ЧАС, 1),
	|	ТаблицаБонусы.Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	МИНИМУМ(ТаблицаБонусы.НомерСтроки),
	|	ТаблицаБонусы.Контрагент,
	|	ТаблицаБонусы.ПрограммаЛояльности,
	|	ТаблицаБонусы.ЧекККМПродажа,
	|	СУММА(-ТаблицаБонусы.СуммаБонусныхБаллов),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Начисление),
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.ДокументОперации,
	|	&ТекущаяДата,
	|	2
	|ИЗ
	|	ТаблицаБонусы КАК ТаблицаБонусы
	|ГДЕ
	|	ТаблицаБонусы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийБонусныхБаллов.Возврат)
	|	И ТаблицаБонусы.ВозвратДоНачисления
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаБонусы.Регистратор,
	|	ТаблицаБонусы.Контрагент,
	|	ТаблицаБонусы.ПрограммаЛояльности,
	|	ДОБАВИТЬКДАТЕ(ТаблицаБонусы.ЧекККМПродажа.Дата, ЧАС, 1),
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.ЧекККМПродажа,
	|	ТаблицаБонусы.ДокументОперации
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка,
	|	ПрограммаЛояльности,
	|	Период,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаБонусы.Регистратор КАК Регистратор,
	|	МИНИМУМ(ТаблицаБонусы.НомерСтроки) КАК НомерСтроки,
	|	0 КАК НомерСтрокиДокумента,
	|	ТаблицаБонусы.ВидОперации КАК ВидОперации,
	|	ТаблицаБонусы.Период КАК ПериодДвижения,
	|	ТаблицаБонусы.ПериодОперации КАК ДатаОперации,
	|	ТаблицаБонусы.ДатаНачисления КАК ДатаНачисления,
	|	ТаблицаБонусы.ДатаСписания КАК ДатаСписания,
	|	ТаблицаБонусы.ДокументОперации КАК ДокументОперации,
	|	ВЫБОР
	|		КОГДА ТаблицаБонусы.ВидОперацииРегистратора = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ТаблицаБонусы.ДокументОперации.ЧекККМПродажа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПродажи,
	|	ТаблицаБонусы.Контрагент КАК Контрагент,
	|	ТаблицаБонусы.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	ТаблицаБонусы.СписаниеПартий КАК СписаниеПартий,
	|	СУММА(ТаблицаБонусы.СуммаБонусныхБаллов) КАК СуммаБонусныхБаллов,
	|	ТаблицаБонусы.ДатаИзменения КАК ДатаИзменения,
	|	ТаблицаБонусы.КлючПорядка КАК КлючПорядка
	|ИЗ
	|	ТаблицаБонусы КАК ТаблицаБонусы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаБонусы.Регистратор,
	|	ТаблицаБонусы.ВидОперации,
	|	ТаблицаБонусы.Период,
	|	ТаблицаБонусы.ПериодОперации,
	|	ТаблицаБонусы.ДатаНачисления,
	|	ТаблицаБонусы.ДатаСписания,
	|	ТаблицаБонусы.ДокументОперации,
	|	ТаблицаБонусы.Контрагент,
	|	ТаблицаБонусы.ПрограммаЛояльности,
	|	ТаблицаБонусы.СписаниеПартий,
	|	ТаблицаБонусы.ДатаИзменения,
	|	ТаблицаБонусы.КлючПорядка,
	|	ВЫБОР
	|		КОГДА ТаблицаБонусы.ВидОперацииРегистратора = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|			ТОГДА ТаблицаБонусы.ДокументОперации.ЧекККМПродажа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка,
	|	ПрограммаЛояльности,
	|	ДатаОперации,
	|	НомерСтроки" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;

КонецФункции

//	LNK 17.10.2019 09:44:12
Процедура РаспределитьПроблемноеОкругление(ТаблицаПродажи, ТаблицаПроблемы)

	Перем СтрокиПродажи;

	Для каждого СтрокаПроблемы Из ТаблицаПроблемы Цикл

		ПараметрыОтбора = Новый Структура(
			"Номенклатура, ЭмуляцияПродажи"
			, СтрокаПроблемы.Номенклатура, Истина);

		СтрокаМаксимум   = Неопределено;	//	для "вброса" возможного остатка
		СуммаПродажиИтог = ОбщегоНазначенияКлиентСервер.ПолучитьИтогТаблицы("Стоимость", ПараметрыОтбора, ТаблицаПродажи, СтрокиПродажи);

		Для каждого СтрокаПродажи Из СтрокиПродажи Цикл

			Коэффициент = СтрокаПродажи.Стоимость / СуммаПродажиИтог;
			СуммаСтроки = Окр(СтрокаПроблемы.СуммаРазницы * Коэффициент, 2);

			Если (СтрокаПродажи.Стоимость - СуммаСтроки) > 0 Тогда

				СтрокаПродажи.Стоимость = СтрокаПродажи.Стоимость - СуммаСтроки;
				СтрокаПроблемы.СуммаРазницы = СтрокаПроблемы.СуммаРазницы - СуммаСтроки;

				Если СтрокаМаксимум = Неопределено ИЛИ СтрокаМаксимум.Стоимость < СтрокаПродажи.Стоимость Тогда

					СтрокаМаксимум = СтрокаПродажи;

				КонецЕсли;

			КонецЕсли;

		КонецЦикла;

		Если НЕ (СтрокаПроблемы.СуммаРазницы = 0 ИЛИ СтрокаМаксимум = Неопределено)
			И   (СтрокаМаксимум.Стоимость - СтрокаПроблемы.СуммаРазницы) > 0 Тогда

			СтрокаМаксимум.Стоимость = СтрокаМаксимум.Стоимость - СтрокаПроблемы.СуммаРазницы;
			СтрокаПроблемы.СуммаРазницы = 0;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ПоддержкаПечати

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетОРозничныхПродажах") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОтчетОРозничныхПродажах", 
			"Отчет о розничных продажах", 
			ПечатьОтчетаОРозничныхПродажах(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,Истина);
    
	КонецЕсли;
	
КонецПроцедуры

//
// Возвращаемое значение:
//  ТабличныйДокумент - печатная форма.
//
Функция ПечатьОтчетаОРозничныхПродажах(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
		
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Отчет о розничных продажах';uk='Звіт про роздрібні продажі'", КодЯзыкаПечать);

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетОРозничныхПродажах_ОтчетОРозничныхПродажах";
	
	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номер                        КАК Номер,
	|	Док.Дата                         КАК Дата,
	|	Док.Ссылка                       КАК Ссылка,
	|	Док.КассаККМ                     КАК КассаККМ,
	|	Док.ЦенаВключаетНДС              КАК ЦенаВключаетНДС,
	|	Док.УчитыватьНДС 				 КАК УчитыватьНДС,
	|	Док.КассаККМ.Представление       КАК Покупатель,
	|	Док.Ответственный.ФизЛицо 		 КАК Ответственный,
	|	Док.Организация                  КАК Организация,
	|	Док.Организация.Префикс          КАК Префикс,
	|	Док.Организация.Представление    КАК Поставщик,
	|	Док.СуммаДокумента               КАК СуммаДокумента,
	|	Док.Товары.(
	|		НомерСтроки                                                         КАК НомерСтроки,
	|		Номенклатура.НаименованиеПолное                                     КАК ПолноеНаименованиеНоменклатуры,
	|		Номенклатура.Код                                                    КАК Код,
	|		Номенклатура.Артикул                                                КАК Артикул,
	|		Характеристика.Наименование                                  	    КАК ПолноеНаименованиеХарактеристики,
	|		ВЫБОР КОГДА ЕСТЬNULL(Док.Товары.Упаковка.Коэффициент, 1) = 1
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ Док.Товары.Упаковка.Наименование
	|		КОНЕЦ                                                               КАК НаименованиеУпаковки,
	|		ВЫБОР КОГДА КоличествоУпаковок > 0 ТОГДА КоличествоУпаковок ИНАЧЕ -КоличествоУпаковок КОНЕЦ КАК Количество,
	|		ВЫБОР КОГДА Док.Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Док.Товары.Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.Товары.Упаковка.ЕдиницаИзмерения)
	|		КОНЕЦ                                                               КАК ЕдиницаИзмерения,
	|		Цена                                                                КАК Цена,
	|		Док.Товары.КоличествоУпаковок * Док.Товары.Цена - Док.Товары.Сумма  КАК Скидка,
	|		Сумма                                                               КАК Сумма,
	|		СуммаНДС                                                            КАК СуммаНДС
	|	),
	|	Док.ВозвращенныеТовары.(
	|		НомерСтроки                                                         КАК НомерСтроки,
	|		Номенклатура.НаименованиеПолное                                     КАК ПолноеНаименованиеНоменклатуры,
	|		Номенклатура.Код                                                    КАК Код,
	|		Номенклатура.Артикул                                                КАК Артикул,
	|		Характеристика.Наименование                                  	    КАК ПолноеНаименованиеХарактеристики,
	|		ВЫБОР КОГДА ЕСТЬNULL(Док.ВозвращенныеТовары.Упаковка.Коэффициент, 1) = 1
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ Док.ВозвращенныеТовары.Упаковка.Наименование
	|		КОНЕЦ                                                               КАК НаименованиеУпаковки,
	|		ВЫБОР КОГДА ВозвратНеЭтойСмены ТОГДА -КоличествоУпаковок ИНАЧЕ КоличествоУпаковок КОНЕЦ КАК Количество,
	|		ВЫБОР КОГДА Док.ВозвращенныеТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ПРЕДСТАВЛЕНИЕ(Док.ВозвращенныеТовары.Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Док.ВозвращенныеТовары.Упаковка.ЕдиницаИзмерения)
	|		КОНЕЦ                                                               КАК ЕдиницаИзмерения,
	|		Цена                                                                КАК Цена,
	|		Док.ВозвращенныеТовары.КоличествоУпаковок * Док.ВозвращенныеТовары.Цена - Док.ВозвращенныеТовары.Сумма КАК Скидка,
	|		ВЫБОР КОГДА ВозвратНеЭтойСмены ТОГДА -Сумма ИНАЧЕ Сумма КОНЕЦ       КАК Сумма,
	|		ВЫБОР КОГДА ВозвратНеЭтойСмены ТОГДА -СуммаНДС ИНАЧЕ СуммаНДС КОНЕЦ КАК СуммаНДС,
	|		ВозвратНеЭтойСмены                                                  КАК ВозвратНеЭтойСмены
	|	)
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК Док
	|ГДЕ
	|	Док.Ссылка В(&МассивДокументов)";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Результат = Запрос.Выполнить();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ОтчетОРозничныхПродажах.ПФ_MXL_ОтчетОРозничныхПродажах", КодЯзыкаПечать);
	
	ПервыйДокумент = Истина;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, Выборка);
		
		ОбластьМакета.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		СведенияОПоставщике = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
		
		ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование", , КодЯзыкаПечать);
		РеквизитыПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес, ИНН, КодПоЕДРПОУ, КодПоДРФО", , КодЯзыкаПечать);
		
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.РеквизитыПоставщика = РеквизитыПоставщика;
		ОбластьМакета.Параметры.Поставщик = Выборка.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ЕстьСкидки = Ложь;
		ЕстьНДС = Ложь;
		ВыборкаСтрокТовары = Выборка.Товары.Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			Если ВыборкаСтрокТовары.Скидка <> 0 Тогда
				ЕстьСкидки = Истина;
			КонецЕсли;
			Если ВыборкаСтрокТовары.СуммаНДС <> 0 Тогда
				ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаСтрокВозврат = Выборка.ВозвращенныеТовары.Выбрать();
		Пока ВыборкаСтрокВозврат.Следующий() Цикл
			Если ВыборкаСтрокВозврат.Скидка <> 0 Тогда
				ЕстьСкидки = Истина;
			КонецЕсли;
			Если ВыборкаСтрокВозврат.СуммаНДС <> 0 Тогда
				ЕстьНДС = Истина;
			КонецЕсли;
		КонецЦикла;
		ЗаголовокСкидки = ЗаголовокСкидки(Выборка.Товары.Выбрать(), ЕстьСкидки, КодЯзыкаПечать);
		
		ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ВыводитьКоды = Истина;
			Колонка = "Артикул";
		ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ВыводитьКоды = Истина;
			Колонка = "Код";
		Иначе
			ВыводитьКоды = Ложь;
		КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("ШапкаТаблицы|СуммаНДС");
		ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОбластьДанных.Параметры, ФормированиеПечатныхФормСервер.СформироватьЗаголовкиДляСуммовыхПоказателей(Выборка, КодЯзыкаПечать));
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		Если ЕстьСкидки Тогда
			ОбластьСкидок.Параметры.Скидка = ЗаголовокСкидки.Скидка;
			ОбластьСкидок.Параметры.СуммаБезСкидки = ЗаголовокСкидки.СуммаСкидки;
			ТабличныйДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		Если ЕстьНДС Тогда
			ТабличныйДокумент.Присоединить(ОбластьСуммыНДС);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьСуммы);
		
		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
		Если Не ЕстьСкидки Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			                                  + Макет.Область("СуммаБезСкидки").ШиринаКолонки
			                                  + Макет.Область("СуммаСкидки").ШиринаКолонки;
		КонецЕсли;
		
		ОбластьНомера   = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Строка|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("Строка|Скидка");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("Строка|СуммаНДС");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
		
		Сумма          = 0;
		ВсегоСкидок    = 0;
		ВсегоБезСкидок = 0;
		
		НомерСтроки = 1;
		
		Товары = Выборка.Товары.Выгрузить();
		ВозвращенныеТовары = Выборка.ВозвращенныеТовары.Выгрузить();
		Отбор = Новый Структура();
		Отбор.Вставить("ВозвратНеЭтойСмены", Истина);
		СтрокиВозвратНеЭтойСмены = ВозвращенныеТовары.НайтиСтроки(Отбор);
		ОбщегоНазначенияРТСервер.ЗагрузитьВТаблицуЗначений(СтрокиВозвратНеЭтойСмены, Товары, Ложь);
        		
		Для Каждого ВыборкаСтрокТовары Из Товары Цикл
		
			ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки + 1;
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				Если Колонка = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				ВыборкаСтрокТовары.ПолноеНаименованиеНоменклатуры,
				ВыборкаСтрокТовары.ПолноеНаименованиеХарактеристики
			);
			
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			Если ЕстьСкидки Тогда
				ОбластьСкидок.Параметры.Скидка         = ?(ЗаголовокСкидки.ТолькоНаценка,-ВыборкаСтрокТовары.Скидка, ВыборкаСтрокТовары.Скидка);
				ОбластьСкидок.Параметры.СуммаБезСкидки = ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.Скидка;
				ТабличныйДокумент.Присоединить(ОбластьСкидок);
			КонецЕсли;
			
			Если ЕстьНДС Тогда
				ОбластьСуммыНДС.Параметры.СуммаНДС = ВыборкаСтрокТовары.СуммаНДС;
				ТабличныйДокумент.Присоединить(ОбластьСуммыНДС);
			КонецЕсли;
			
			Если Не Выборка.ЦенаВключаетНДС Тогда
				СуммаСНДС = ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.СуммаНДС;
			Иначе
				СуммаСНДС = ВыборкаСтрокТовары.Сумма;
			КонецЕсли;
			
			ОбластьСуммы.Параметры.Сумма = СуммаСНДС;
			ТабличныйДокумент.Присоединить(ОбластьСуммы);
			
			ВсегоСкидок    = ВсегоСкидок    + ВыборкаСтрокТовары.Скидка;
			ВсегоБезСкидок = ВсегоБезСкидок + ВыборкаСтрокТовары.Сумма + ВыборкаСтрокТовары.Скидка;
			
		КонецЦикла;
		
		
		// Вывести Итого.
		ОбластьНомера   = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьКодов    = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
		ОбластьДанных   = Макет.ПолучитьОбласть("Итого|Данные");
		ОбластьСкидок   = Макет.ПолучитьОбласть("Итого|Скидка");
		ОбластьСуммы    = Макет.ПолучитьОбласть("Итого|Сумма");
		ОбластьСуммыНДС = Макет.ПолучитьОбласть("Итого|СуммаНДС");
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		Если ЕстьСкидки Тогда
			ОбластьСкидок.Параметры.ВсегоСкидок    = ?(ЗаголовокСкидки.ТолькоНаценка,-ВсегоСкидок, ВсегоСкидок);
			ОбластьСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
			ТабличныйДокумент.Присоединить(ОбластьСкидок);
		КонецЕсли;
		
		СуммаНДС = Товары.Итог("СуммаНДС");
		Сумма    = Товары.Итог("Сумма");
		
		Если ЕстьНДС Тогда
			ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
			ТабличныйДокумент.Присоединить(ОбластьСуммыНДС);
		КонецЕсли;
		
		Если Не Выборка.ЦенаВключаетНДС Тогда
			СуммаДокумента = Сумма + СуммаНДС;
		Иначе
			СуммаДокумента = Сумма;
		КонецЕсли;
		
		ОбластьСуммы.Параметры.Сумма = СуммаДокумента;
		ТабличныйДокумент.Присоединить(ОбластьСуммы);
		
		// Вывести Сумму прописью.
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		ОбластьМакета.Параметры.ИтоговаяСтрока = НСтр("ru = 'Всего наименований '; uk = 'Всього найменувань '", КодЯзыкаПечать) + Товары.Количество()

		                                       + НСтр("ru = ', на сумму '; uk = ', на суму '", КодЯзыкаПечать) + ФормированиеПечатныхФормСервер.ФорматСумм(Выборка.СуммаДокумента);
		ОбластьМакета.Параметры.СуммаПрописью  = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Выборка.СуммаДокумента, , КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		
		Отбор.Вставить("ВозвратНеЭтойСмены", Ложь);
		СтрокиВозвратЭтойСмены = ВозвращенныеТовары.НайтиСтроки(Отбор);
		
		Если СтрокиВозвратЭтойСмены.Количество() > 0 Тогда
			
			ОбластьВозвращенныеТовары = Макет.ПолучитьОбласть("ВозвращенныеТовары");
			ТабличныйДокумент.Вывести(ОбластьВозвращенныеТовары);
			
			ОбластьНомера   = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
			ОбластьКодов    = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
			ОбластьДанных   = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
			ОбластьСкидок   = Макет.ПолучитьОбласть("ШапкаТаблицы|Скидка");
			ОбластьСуммыНДС = Макет.ПолучитьОбласть("ШапкаТаблицы|СуммаНДС");
			ОбластьСуммы    = Макет.ПолучитьОбласть("ШапкаТаблицы|Сумма");
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			Если ВыводитьКоды Тогда
				ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ОбластьДанных.Параметры, ФормированиеПечатныхФормСервер.СформироватьЗаголовкиДляСуммовыхПоказателей(Выборка, КодЯзыкаПечать));
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			Если ЕстьСкидки Тогда
				ОбластьСкидок.Параметры.Скидка = ЗаголовокСкидки.Скидка;
				ОбластьСкидок.Параметры.СуммаБезСкидки = ЗаголовокСкидки.СуммаСкидки;
				ТабличныйДокумент.Присоединить(ОбластьСкидок);
			КонецЕсли;
			Если ЕстьНДС Тогда
				ТабличныйДокумент.Присоединить(ОбластьСуммыНДС);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьСуммы);
			
			ОбластьКолонкаТовар = Макет.Область("Товар");
			Если Не ВыводитьКоды Тогда
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
				+ Макет.Область("КолонкаКодов").ШиринаКолонки;
			КонецЕсли;
			Если Не ЕстьСкидки Тогда
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
				+ Макет.Область("СуммаБезСкидки").ШиринаКолонки
				+ Макет.Область("СуммаСкидки").ШиринаКолонки;
			КонецЕсли;
			
			ОбластьНомера   = Макет.ПолучитьОбласть("Строка|НомерСтроки");
			ОбластьКодов    = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
			ОбластьДанных   = Макет.ПолучитьОбласть("Строка|Данные");
			ОбластьСкидок   = Макет.ПолучитьОбласть("Строка|Скидка");
			ОбластьСуммыНДС = Макет.ПолучитьОбласть("Строка|СуммаНДС");
			ОбластьСуммы    = Макет.ПолучитьОбласть("Строка|Сумма");
			
			Сумма          = 0;
			СуммаНДС       = 0;
			ВсегоСкидок    = 0;
			ВсегоБезСкидок = 0;

			НомерСтроки = 1;
		
			Для Каждого ВыборкаСтрокВозвращенныеТовары Из СтрокиВозвратЭтойСмены Цикл
				
				ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
				НомерСтроки = НомерСтроки + 1;
				ТабличныйДокумент.Вывести(ОбластьНомера);
				
				Если ВыводитьКоды Тогда
					Если Колонка = "Артикул" Тогда
						ОбластьКодов.Параметры.Артикул = ВыборкаСтрокВозвращенныеТовары.Артикул;
					Иначе
						ОбластьКодов.Параметры.Артикул = ВыборкаСтрокВозвращенныеТовары.Код;
					КонецЕсли;
					ТабличныйДокумент.Присоединить(ОбластьКодов);
				КонецЕсли;
				
				ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокВозвращенныеТовары);
				ОбластьДанных.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				ВыборкаСтрокВозвращенныеТовары.ПолноеНаименованиеНоменклатуры,
				ВыборкаСтрокВозвращенныеТовары.ПолноеНаименованиеХарактеристики
				);
				
				ТабличныйДокумент.Присоединить(ОбластьДанных);
				
				Если ЕстьСкидки Тогда
					ОбластьСкидок.Параметры.Скидка         = ?(ЗаголовокСкидки.ТолькоНаценка,-ВыборкаСтрокВозвращенныеТовары.Скидка, ВыборкаСтрокВозвращенныеТовары.Скидка);
					ОбластьСкидок.Параметры.СуммаБезСкидки = ВыборкаСтрокВозвращенныеТовары.Сумма + ВыборкаСтрокВозвращенныеТовары.Скидка;
					ТабличныйДокумент.Присоединить(ОбластьСкидок);
				КонецЕсли;
				
				Если ЕстьНДС Тогда
					ОбластьСуммыНДС.Параметры.СуммаНДС = ВыборкаСтрокВозвращенныеТовары.СуммаНДС;
					СуммаНДС = СуммаНДС + ВыборкаСтрокВозвращенныеТовары.СуммаНДС;
					ТабличныйДокумент.Присоединить(ОбластьСуммыНДС);
				КонецЕсли;
				
				Если Не Выборка.ЦенаВключаетНДС Тогда
					СуммаСНДС = ВыборкаСтрокВозвращенныеТовары.Сумма + ВыборкаСтрокВозвращенныеТовары.СуммаНДС;
				Иначе
					СуммаСНДС = ВыборкаСтрокВозвращенныеТовары.Сумма;
				КонецЕсли;
				
				ОбластьСуммы.Параметры.Сумма = СуммаСНДС;
				ТабличныйДокумент.Присоединить(ОбластьСуммы);
				Сумма = Сумма + СуммаСНДС;
				
				ВсегоСкидок    = ВсегоСкидок    + ВыборкаСтрокВозвращенныеТовары.Скидка;
				ВсегоБезСкидок = ВсегоБезСкидок + ВыборкаСтрокВозвращенныеТовары.Сумма + ВыборкаСтрокВозвращенныеТовары.Скидка;
				
			КонецЦикла;
			
			ВозвращенныеТовары = Выборка.ВозвращенныеТовары.Выгрузить();
			
			// Вывести Итого.
			ОбластьНомера   = Макет.ПолучитьОбласть("Итого|НомерСтроки");
			ОбластьКодов    = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
			ОбластьДанных   = Макет.ПолучитьОбласть("Итого|Данные");
			ОбластьСкидок   = Макет.ПолучитьОбласть("Итого|Скидка");
			ОбластьСуммы    = Макет.ПолучитьОбласть("Итого|Сумма");
			ОбластьСуммыНДС = Макет.ПолучитьОбласть("Итого|СуммаНДС");
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			Если ЕстьСкидки Тогда
				ОбластьСкидок.Параметры.ВсегоСкидок    = ?(ЗаголовокСкидки.ТолькоНаценка,-ВсегоСкидок, ВсегоСкидок);
				ОбластьСкидок.Параметры.ВсегоБезСкидок = ВсегоБезСкидок;
				ТабличныйДокумент.Присоединить(ОбластьСкидок);
			КонецЕсли;
			
			
			Если ЕстьНДС Тогда
				ОбластьСуммыНДС.Параметры.СуммаНДС = СуммаНДС;
				ТабличныйДокумент.Присоединить(ОбластьСуммыНДС);
			КонецЕсли;
			
				СуммаДокумента = Сумма;
			
			ОбластьСуммы.Параметры.Сумма = СуммаДокумента;
			ТабличныйДокумент.Присоединить(ОбластьСуммы);
			
			// Вывести Сумму прописью.
			ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
			ОбластьМакета.Параметры.ИтоговаяСтрока = НСтр("ru = 'Всего наименований '; uk = 'Всього найменувань '", КодЯзыкаПечать) + СтрокиВозвратЭтойСмены.Количество()
			+ НСтр("ru = ', на сумму '; uk = ', на суму '", КодЯзыкаПечать) + ФормированиеПечатныхФормСервер.ФорматСумм(СуммаДокумента);
			ОбластьМакета.Параметры.СуммаПрописью  = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(СуммаДокумента, , КодЯзыкаПечать);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
	
		// Вывести подписи.
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Выборка);
		ОбластьМакета.Параметры.ОтветственныйПредставление = ФизическиеЛица.ФамилияИнициалыФизЛица(Выборка.Ответственный);

		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;

КонецФункции

// Функция возвращает структуру с заголовками Скидка или Наценка для таблицы печатной формы,
// а также с флагами ЕстьСкидки и ТолькоНаценка
//
Функция ЗаголовокСкидки(Знач Товары, ИспользоватьСкидки, КодЯзыкаПечать) Экспорт
		
	ЕстьНаценки = Ложь;
	ЕстьСкидки  = Ложь;
	
	СтруктураШапки = Новый Структура("Скидка, СуммаСкидки, ТолькоНаценка");
	
	Если ИспользоватьСкидки Тогда
		
		Пока Товары.Следующий() Цикл
			Если Товары.Скидка>0 Тогда
				ЕстьСкидки = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Товары.Сбросить();
		
		Пока Товары.Следующий() Цикл
			Если Товары.Скидка<0 Тогда
				ЕстьНаценки = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьНаценки И ЕстьСкидки Тогда
			СтруктураШапки.Вставить("Скидка", НСтр("ru = 'Скидка (Наценка)'; uk = 'Знижка (Націнка)'", КодЯзыкаПечать));
			СтруктураШапки.Вставить("СуммаСкидки", НСтр("ru = 'Сумма '; uk = 'Сума '", КодЯзыкаПечать) + Символы.ПС + НСтр("ru = 'без скидки (наценки)'; uk = 'без знижки (націнки)'", КодЯзыкаПечать));
		ИначеЕсли ЕстьНаценки И НЕ ЕстьСкидки Тогда
			СтруктураШапки.Вставить("Скидка", НСтр("ru = 'Наценка'; uk = 'Націнка'", КодЯзыкаПечать));
			СтруктураШапки.Вставить("СуммаСкидки", НСтр("ru = 'Сумма '; uk = 'Сума '", КодЯзыкаПечать) + Символы.ПС + НСтр("ru = 'без наценки'; uk = 'без націнки'", КодЯзыкаПечать));
		ИначеЕсли ЕстьСкидки Тогда
			СтруктураШапки.Вставить("Скидка", НСтр("ru = 'Скидка'; uk = 'Знижка'", КодЯзыкаПечать));
			СтруктураШапки.Вставить("СуммаСкидки", НСтр("ru = 'Сумма '; uk = 'Сума '", КодЯзыкаПечать) + Символы.ПС + НСтр("ru = 'без скидки'; uk = 'без знижки'", КодЯзыкаПечать));
		КонецЕсли;
		СтруктураШапки.Вставить("ТолькоНаценка", ЕстьНаценки);
	КонецЕсли;
	
	Возврат СтруктураШапки;
	
КонецФункции // НужноВыводитьСкидки()

#КонецОбласти

#КонецЕсли


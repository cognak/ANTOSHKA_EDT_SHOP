
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);
	
	Если ОбменДанными.Загрузка Тогда

		Возврат;
		
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ДанныеДляПроведения = ТаблицаДанныхОВремени();
	УчетРабочегоВремениРасширенный.ЗарегистрироватьДанныеТабеля(Движения, ДанныеДляПроведения); 

КонецПроцедуры


Функция СотрудникиДокумента()
	Сотрудники = Новый Массив;
	
	Для Каждого СтрокаДанныхОВремени Из ДанныеОВремени Цикл
		Если Сотрудники.Найти(СтрокаДанныхОВремени.Сотрудник) = Неопределено Тогда
			Сотрудники.Добавить(СтрокаДанныхОВремени.Сотрудник);
		КонецЕсли;
	КонецЦикла;	
	
	Возврат Сотрудники;
КонецФункции	


Функция ТаблицаДанныхОВремени()
	ТаблицаДанныхОВремени = Новый ТаблицаЗначений;
	ТаблицаДанныхОВремени.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	ТаблицаДанныхОВремени.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаДанныхОВремени.Колонки.Добавить("Магазин", Новый ОписаниеТипов("СправочникСсылка.Магазины"));
	ТаблицаДанныхОВремени.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДанныхОВремени.Колонки.Добавить("КоличествоЧасовПлан", Новый ОписаниеТипов("Число"));
	ТаблицаДанныхОВремени.Колонки.Добавить("КоличествоЧасовФактАвто", Новый ОписаниеТипов("Число"));
	ТаблицаДанныхОВремени.Колонки.Добавить("КоличествоЧасовФакт", Новый ОписаниеТипов("Число"));
	ТаблицаДанныхОВремени.Колонки.Добавить("Комментарий", Новый ОписаниеТипов("Строка"));
	ТаблицаДанныхОВремени.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
	НомерДняНачалаПериода = День(ДатаНачалаПериода);
	НомерДняОкончанияПериода = День(ДатаОкончанияПериода);
	Для Каждого СтрокаДанныхОВремени Из ДанныеОВремени Цикл 
		
		ОбрабатываемаяДата = ДатаНачалаПериода;
		Для НомерДня = НомерДняНачалаПериода По НомерДняОкончанияПериода Цикл
			Если ЗначениеЗаполнено(СтрокаДанныхОВремени["Часов" + НомерДня]) ИЛИ ЗначениеЗаполнено(СтрокаДанныхОВремени["ЧасовФактАвто" + НомерДня]) ИЛИ ЗначениеЗаполнено(СтрокаДанныхОВремени["ЧасовФакт" + НомерДня]) Тогда
				ДанныеПоВидуВремениНаДату = ТаблицаДанныхОВремени.Добавить();
				ДанныеПоВидуВремениНаДату.Дата = ОбрабатываемаяДата;
				ДанныеПоВидуВремениНаДату.Сотрудник = СтрокаДанныхОВремени.Сотрудник;
				ДанныеПоВидуВремениНаДату.Организация = Организация;
				ДанныеПоВидуВремениНаДату.Магазин = Магазин;
				ДанныеПоВидуВремениНаДату.КоличествоЧасовПлан = СтрокаДанныхОВремени["Часов" + НомерДня];		
				ДанныеПоВидуВремениНаДату.КоличествоЧасовФактАвто = СтрокаДанныхОВремени["ЧасовФактАвто" + НомерДня];
				ДанныеПоВидуВремениНаДату.КоличествоЧасовФакт = СтрокаДанныхОВремени["ЧасовФакт" + НомерДня];
				ДанныеПоВидуВремениНаДату.Комментарий = СтрокаДанныхОВремени["Комментарий" + НомерДня];
				ДанныеПоВидуВремениНаДату.ПериодРегистрации = ОбрабатываемаяДата;
			КонецЕсли;	
			ОбрабатываемаяДата = ОбрабатываемаяДата + 86400;
		КонецЦикла;	
	КонецЦикла;	
	
	Возврат ТаблицаДанныхОВремени;
КонецФункции	


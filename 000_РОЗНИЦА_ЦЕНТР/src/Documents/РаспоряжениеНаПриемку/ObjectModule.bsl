
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	Документы.РаспоряжениеНаПриемку.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ПроведениеСервер.ОтразитьДвиженияПоРегистру("РекламныеМатериалы",ДополнительныеСвойства, Движения, Отказ);
	ПроведениеСервер.ОтразитьДвиженияПоРегистру("РекламныеМатериалыКПриемке",ДополнительныеСвойства, Движения, Отказ);
	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля()

	СписокОбъектов = Новый Массив;
	СписокОбъектов.Добавить(Движения.РекламныеМатериалы);
	СписокОбъектов.Добавить(Движения.РекламныеМатериалыКПриемке);

	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", СписокОбъектов);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ЗаполнениеОбъектовСобытия.ОбщиеДействияПередЗаписью(ЭтотОбъект, Отказ);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

	Если ОбменДанными.Загрузка Тогда

		Возврат;

	КонецЕсли; 
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение тогда
		Отказ = КонтрольЗанятостиПлоскостей();
		Отказ = ПроверитьДоступностьРазмещения();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда

		Возврат;

	КонецЕсли; 
КонецПроцедуры

Функция КонтрольЗанятостиПлоскостей()
	Отказ = Ложь;
	
	Для Каждого строка из РекламныеМатериалы цикл
		Если ЗначениеЗаполнено(строка.РекламнаяПлоскость)  тогда 
			
		Отказ = ПроверитьСтроку(Строка.РекламнаяПлоскость);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Отказ; 
КонецФункции


Функция ПроверитьДоступностьРазмещения()
	Отказ = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧРекламныеМатериалы.Размещение КАК Размещение,
		|	ТЧРекламныеМатериалы.Количество КАК Количество
		|ПОМЕСТИТЬ Таб
		|ИЗ
		|	&ТЧРекламныеМатериалы КАК ТЧРекламныеМатериалы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таб.Размещение КАК Размещение,
		|	СУММА(Таб.Количество) КАК Количество
		|ИЗ
		|	Таб КАК Таб
		|
		|СГРУППИРОВАТЬ ПО
		|	Таб.Размещение";
	Запрос.УстановитьПараметр("ТЧРекламныеМатериалы",ЭтотОбъект.РекламныеМатериалы.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Занято = ПолучитьЗанятостьРазмещенияРМ(ЭтотОбъект.ДатаС,ЭтотОбъект.ДатаПо,ЭтотОбъект.Магазин,ВыборкаДетальныеЗаписи.Размещение);
		Доступно = ПолучитьДоступноеРазмещение(ВыборкаДетальныеЗаписи.Размещение);
		МожноРазместить =  Доступно-Занято; 
		Если МожноРазместить < ВыборкаДетальныеЗаписи.Количество тогда
			Отказ = истина;
			Сообщить("Для размещения " + ВыборкаДетальныеЗаписи.Размещение + " доступно всего " + МожноРазместить)
		КонецЕсли;	
	КонецЦикла;
	

	Возврат Отказ; 
КонецФункции

Функция ПолучитьДоступноеРазмещение(Размещение)
	ДоступноеРазмещение = 9999;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоступноеКоличествоРазмещенийРекламныхМатериаловСрезПоследних.ДоступноеРазмещение КАК ДоступноеРазмещение
		|ИЗ
		|	РегистрСведений.ДоступноеКоличествоРазмещенийРекламныхМатериалов.СрезПоследних(
		|			&ДатаПо,
		|			Магазин = &Магазин
		|				И РазмещениеРекламныхМатериалов = &Размещение) КАК ДоступноеКоличествоРазмещенийРекламныхМатериаловСрезПоследних";
	Запрос.УстановитьПараметр("ТЧРекламныеМатериалы",ЭтотОбъект.РекламныеМатериалы.Выгрузить());
	Запрос.УстановитьПараметр("ДатаПо",ЭтотОбъект.ДатаПо);
	Запрос.УстановитьПараметр("Магазин",ЭтотОбъект.Магазин);
	Запрос.УстановитьПараметр("Размещение",Размещение);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДоступноеРазмещение = ВыборкаДетальныеЗаписи.ДоступноеРазмещение; 
	КонецЦикла;
	

	Возврат ДоступноеРазмещение; 
КонецФункции


Функция ПолучитьЗанятостьРазмещенияРМ(ДатаС,ДатаПо,Магазин,РазмещениеРекламныхМатериалов) Экспорт
	Количество = 0;
	Занято  = 0;

	ТекДата = ДатаС;
	Пока ТекДата<=ДатаПо Цикл;
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СУММА(РекламныеМатериалы.Количество) КАК Кол
			|ИЗ
			|	РегистрСведений.РекламныеМатериалы КАК РекламныеМатериалы
			|ГДЕ
			|	РекламныеМатериалы.ДатаС <= &ТекДата
			|	И РекламныеМатериалы.ДатаПо >= &ТекДата
			|	И РекламныеМатериалы.Магазин = &Магазин
			|	И РекламныеМатериалы.РазмещениеРекламныхМатериалов = &РазмещениеРекламныхМатериалов
			|	И РекламныеМатериалы.Регистратор <> &Регистратор";
		
		Запрос.УстановитьПараметр("Магазин", Магазин);
		Запрос.УстановитьПараметр("РазмещениеРекламныхМатериалов", РазмещениеРекламныхМатериалов);
		Запрос.УстановитьПараметр("ТекДата", ТекДата);
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Кол) тогда
				Занято = Макс(Занято,ВыборкаДетальныеЗаписи.Кол);
			КонецЕсли;
		КонецЦикла;
		ТекДата = КонецДня(ТекДата) + 1;


	КонецЦикла;
	
		
	Возврат Занято;		
КонецФункции


Функция ПроверитьСтроку(РекламнаяПлоскость)
	Отказ = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РекламныеМатериалы.ДатаС КАК ДатаС,
		|	РекламныеМатериалы.ДатаПо КАК ДатаПо,
		|	РекламныеМатериалы.РекламныйМатериал КАК РекламныйМатериал,
		|	РекламныеМатериалы.РаспоряжениеНаПриемку КАК РаспоряжениеНаПриемку
		|ИЗ
		|	РегистрСведений.РекламныеМатериалы КАК РекламныеМатериалы
		|ГДЕ
		|	РекламныеМатериалы.РекламнаяПлоскость = &РекламнаяПлоскость
		|	И РекламныеМатериалы.Магазин = &Магазин
		|	И (РекламныеМатериалы.ДатаС МЕЖДУ &ДатаС И &ДатаПо
		|			ИЛИ РекламныеМатериалы.ДатаПо МЕЖДУ &ДатаС И &ДатаПо)
		|	И РекламныеМатериалы.Регистратор <> &Регистратор";
	
	Запрос.УстановитьПараметр("ДатаПо", ДатаПо);
	Запрос.УстановитьПараметр("ДатаС", ДатаС);
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("РекламнаяПлоскость", РекламнаяПлоскость);
	Запрос.УстановитьПараметр("Регистратор", ЭтотОбъект.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ТекстСообщения = "";
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
        ТекстСообщения =ТекстСообщения + "Рекламная плоскость " + РекламнаяПлоскость + " занята " +  ВыборкаДетальныеЗаписи.РекламныйМатериал + " с " + выборкаДетальныеЗаписи.ДатаС + " по " + выборкаДетальныеЗаписи.ДатаПо+ "!   ";
	КонецЦикла;
	
	Если НЕ РезультатЗапроса.Пустой() тогда
		Сообщение = Новый СообщениеПользователю;
    	Сообщение.Текст = ТекстСообщения;
        Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Отказ; 
КонецФункции

Процедура ПередУдалением(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;

	КонецЕсли; 
	Отказ = КонтрольЗанятостиПлоскостей();

КонецПроцедуры

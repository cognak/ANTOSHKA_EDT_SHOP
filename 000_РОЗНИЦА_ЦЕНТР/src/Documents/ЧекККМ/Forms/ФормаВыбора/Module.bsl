
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Перем ПараметрыОтбора;
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("СтруктураПараметрыОтбора", ПараметрыОтбора)  Тогда
		
		ДанныеВыбора = СписокЧековДляВыбора(ПараметрыОтбора);
		
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Ссылка", ДанныеВыбора , Истина, ВидСравненияКомпоновкиДанных.ВСписке);
		
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Получаем список чеков для выбора по параметрам
//
// Параметры:
//  СтруктураПараметров - Структура
//
// Возвращаемое значение:
// Список значений
//
&НаСервере
Функция СписокЧековДляВыбора(СтруктураПараметров)

	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЧекККМТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &Магазин = НЕОПРЕДЕЛЕНО
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЧекККМТовары.Ссылка.Магазин = &Магазин
	|		КОНЕЦ" + "
	|	%ОтборПоВидуОперации%
	|	%ОтборПоНоменклатуре%
	|	%ОтборПоХарактеристике%
	|	%ОтборПоНомеру%
	|	%ОтборПоДоговоруСтрахования%
	|	%ОтборПоДате%";
	
	Запрос.УстановитьПараметр("Магазин", СтруктураПараметров.Магазин);
	
	Если СтруктураПараметров.Свойство("ВидОперации") Тогда
		Запрос.УстановитьПараметр("ВидОперации", СтруктураПараметров.ВидОперации);
		ОтборПоВидуОперации = " И ЧекККМТовары.Ссылка.ВидОперации = &ВидОперации";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоВидуОперации%", ОтборПоВидуОперации);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоВидуОперации%", "");
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("Номенклатура") Тогда
		Запрос.УстановитьПараметр("Номенклатура", СтруктураПараметров.Номенклатура);
		ОтборПоНоменклатуре = " И ЧекККМТовары.Номенклатура = &Номенклатура";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоНоменклатуре%", ОтборПоНоменклатуре);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоНоменклатуре%", "");
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("Характеристика") Тогда
		Запрос.УстановитьПараметр("Характеристика", СтруктураПараметров.Характеристика);
		ОтборПоХарактеристике = " И ЧекККМТовары.Характеристика = &Характеристика";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоХарактеристике%", ОтборПоХарактеристике);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоХарактеристике%", "");
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("Номер") Тогда
		Запрос.УстановитьПараметр("Номер", СтруктураПараметров.Номер);
		ОтборПоНомеру = " И ЧекККМТовары.Ссылка.НомерЧекаККМ = &Номер";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоНомеру%", ОтборПоНомеру);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоНомеру%", "");
	КонецЕсли;
	
//	LNK 28.08.2017 17:39:37
	Если СтруктураПараметров.Свойство("ДоговорСтрахования") Тогда
		Запрос.УстановитьПараметр("ДоговорСтрахования", СтруктураПараметров.ДоговорСтрахования);
		ОтборПоНомеру = " И ЧекККМТовары.Ссылка.ДоговорСтрахования = &ДоговорСтрахования";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоДоговоруСтрахования%", ОтборПоНомеру);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоДоговоруСтрахования%", "");
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("Дата") Тогда
		Запрос.УстановитьПараметр("Дата", СтруктураПараметров.Дата);
		ОтборПоДате = " И ЧекККМТовары.Ссылка.Дата >= НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
					   |И ЧекККМТовары.Ссылка.Дата <= КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоДате%", ОтборПоДате);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ОтборПоДате%", "");
	КонецЕсли;
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	Возврат ДанныеВыбора;
	
КонецФункции

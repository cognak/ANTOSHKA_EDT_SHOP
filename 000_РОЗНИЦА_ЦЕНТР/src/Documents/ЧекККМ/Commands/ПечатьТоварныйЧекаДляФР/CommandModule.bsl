&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)

	ИспользоватьПодключаемоеОборудование = ЗначениеНастроекПовтИсп.ИспользоватьПодключаемоеОборудование();

	Если НЕ ИспользоватьПодключаемоеОборудование Тогда

		ТекстСообщения = "Не використовується обладнання, що підключається";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат

	КонецЕсли;

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда // Проверка на определенность рабочего места ВО

		РабочееМесто = МенеджерОборудованияКлиентПовтИсп.ПолучитьРабочееМестоКлиента();

	Иначе

		ТекстСообщения = "Попередньо потрібно вибрати робоче місце зовнішнього обладнання поточного сеансу.";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;

	КонецЕсли;

	МассивНепроведенныхДокументов = ФормированиеПечатныхФормСервер.ПолучитьМассивНепроведенныхДокументов(ПараметрКоманды);

	Если МассивНепроведенныхДокументов.Количество() > 0 Тогда

		Если МассивНепроведенныхДокументов.Количество() = 1 Тогда

				ТекстВопроса = "Друк можливий лише після проведення документа, провести документ?";

		Иначе	ТекстВопроса = "Друк можливий лише після проведення документів, провести документи?";

		КонецЕсли;

		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);

		Если Ответ = КодВозвратаДиалога.Да Тогда

			МассивНепроведенныхДокументов = ФормированиеПечатныхФормСервер.ПровестиДокументы(МассивНепроведенныхДокументов);

		КонецЕсли;

	КонецЕсли;

	Если МассивНепроведенныхДокументов.Количество() = 0 Тогда

		СтруктураПараметровПечати = ПолучитьПараметрыПечати(ПараметрКоманды, РабочееМесто);

		Если СтруктураПараметровПечати = Неопределено Тогда

			ТекстСообщения = "Перевірте налаштування каси ККМ, ширину стрічки та обладнання, що підключається.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;

		КонецЕсли;

		СтрокаПечати = СтрокаПечатиНаФР(ПараметрКоманды, СтруктураПараметровПечати.ШиринаЛенты);

		Если ПустаяСтрока(СтрокаПечати) Тогда

			ТекстСообщения = "Інформація для друку відсутня.";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;

		КонецЕсли;

		ИдентификаторУстройстваФР = СтруктураПараметровПечати.ИдентификаторУстройства;

		Если НЕ ИдентификаторУстройстваФР = Неопределено Тогда

		//	Подключаем ФР
			УникальныйИдентификатор = Новый УникальныйИдентификатор;

			ОписаниеОшибки = "";
			Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(
				  УникальныйИдентификатор
				, ИдентификаторУстройстваФР
				, ОписаниеОшибки
			);

			Если Результат Тогда

			//	Готовим данные
				ВходныеПараметры  = Новый Массив();
				ВходныеПараметры.Добавить(СтрокаПечати);
				ВыходныеПараметры = Неопределено;

				РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(
					ИдентификаторУстройстваФР
					, "PrintText"
					, ВходныеПараметры
					, ВыходныеПараметры
				);

				Если НЕ РезультатФР Тогда

					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						СтрЗаменить(
							"При печати товарного чека произошла ошибка.
                            |Товарный чек не напечатан на фискальном регистраторе.
                            |Додатковий опис:
                            |%ДополнительноеОписание%"
							, "%ДополнительноеОписание%"
							, ВыходныеПараметры[1]
						)
					);

				КонецЕсли;

			//	Отключаем ФР
				МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор, ИдентификаторУстройстваФР);

			Иначе

				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрЗаменить(
						"При підключенні пристрою сталася помилка.
		                |Додатковий опис:
		                |%ДополнительноеОписание%"
						, "%ДополнительноеОписание%"
						, ОписаниеОшибки
					)
				);

			КонецЕсли;

		Иначе

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не обрано фіскального реєстратора.");

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#Область ФункционалПоддержкиПечатиНаФР

&НаСервере
Функция СтрокаПечатиНаФР(МассивОбъектов, ШиринаЛенты)
	
	Возврат Документы.ЧекККМ.ТекстПечатиЧекаНаФР(МассивОбъектов, ШиринаЛенты);
	
КонецФункции

&НаСервере	//	LNK 01.02.2023 10:04:16
Функция ПолучитьПараметрыПечати(СписокДокументов, РабочееМесто)

	Возврат Справочники.РабочиеМеста.ПолучитьПараметрыПечати(СписокДокументов, РабочееМесто);

КонецФункции

#КонецОбласти




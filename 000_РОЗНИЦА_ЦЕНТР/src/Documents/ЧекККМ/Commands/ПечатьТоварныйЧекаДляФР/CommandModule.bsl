&НаСервере
Функция СтрокаПечатиНаФР(МассивОбъектов, ШиринаЛенты)
	
	Возврат Документы.ЧекККМ.ТекстПечатиЧекаНаФР(МассивОбъектов, ШиринаЛенты);
	
КонецФункции // СтрокаПечатинаФР()


&НаСервере
Функция СтруктураПараметровПечати(МассивДокументов, РабочееМесто)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЧекККМ.КассаККМ КАК КассаККМ
	|ПОМЕСТИТЬ ТаблицаКасс
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|ГДЕ
	|	ЧекККМ.Ссылка В(&МассивДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КассаККМ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КассыККМ.Ссылка КАК КассаККМ,
	|	КассыККМ.ПодключаемоеОборудование КАК ИдентификаторУстройства,
	|	КассыККМ.ШиринаЛенты КАК ШиринаЛенты,
	|	ВЫБОР
	|		КОГДА КассыККМ.Ссылка В
	|				(ВЫБРАТЬ
	|					ТаблицаКасс.КассаККМ
	|				ИЗ
	|					ТаблицаКасс КАК ТаблицаКасс)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КассаИзДокументов
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.РабочееМесто = &РабочееМесто
	|	И КассыККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ФискальныйРегистратор)
	|	И НЕ КассыККМ.ПометкаУдаления
	|	И НЕ КассыККМ.ШиринаЛенты = 0
	|	И НЕ КассыККМ.ПодключаемоеОборудование = ЗНАЧЕНИЕ(Справочник.ПодключаемоеОборудование.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КассаИзДокументов,
	|	КассаККМ
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.Параметры.Вставить("МассивДокументов", МассивДокументов);
	Запрос.Параметры.Вставить("РабочееМесто"    , РабочееМесто);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		СтруктураОтвета = Новый Структура;
		СтруктураОтвета.Вставить("ИдентификаторУстройства", Выборка.ИдентификаторУстройства);
		СтруктураОтвета.Вставить("ШиринаЛенты"            , Выборка.ШиринаЛенты);
		
		Возврат СтруктураОтвета;
		
	КонецЕсли;
	
КонецФункции // СтруктураПараметровПечати()



&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ИспользоватьПодключаемоеОборудование = ЗначениеНастроекПовтИсп.ИспользоватьПодключаемоеОборудование();
	
	Если НЕ ИспользоватьПодключаемоеОборудование Тогда
		
		ТекстСообщения = НСтр("ru = 'Не используется подключаемое оборудование.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат
		
	КонецЕсли;
	
	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда // Проверка на определенность рабочего места ВО
		РабочееМесто = МенеджерОборудованияКлиентПовтИсп.ПолучитьРабочееМестоКлиента();
	Иначе
		ТекстСообщения = НСтр("ru = 'Предварительно необходимо выбрать рабочее место внешнего оборудования текущего сеанса.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	МассивНепроведенныхДокументов = ФормированиеПечатныхФормСервер.ПолучитьМассивНепроведенныхДокументов(ПараметрКоманды);
	
	Если МассивНепроведенныхДокументов.Количество() > 0 Тогда

		Если МассивНепроведенныхДокументов.Количество() = 1 Тогда
			ТекстВопроса = НСтр("ru = 'Печать возможна только после проведения документа, провести документ?'")
		Иначе
			ТекстВопроса = НСтр("ru = 'Печать возможна только после проведения документов, провести документы?'")
		КонецЕсли;

		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			МассивНепроведенныхДокументов = ФормированиеПечатныхФормСервер.ПровестиДокументы(МассивНепроведенныхДокументов);
		КонецЕсли;

	КонецЕсли;

	Если МассивНепроведенныхДокументов.Количество() = 0 Тогда
		
		СтруктураПараметровПечати = СтруктураПараметровПечати(ПараметрКоманды, РабочееМесто);
		
		Если СтруктураПараметровПечати = Неопределено Тогда
			ТекстСообщения = НСтр("ru = 'Проверьте настройку кассы ККМ, ширины ленты и подключаемого оборудования.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		СтрокаПечати = СтрокаПечатиНаФР(ПараметрКоманды, СтруктураПараметровПечати.ШиринаЛенты);
		
		Если ПустаяСтрока(СтрокаПечати) Тогда
			ТекстСообщения = НСтр("ru = 'Данные для печати отсутствуют.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		ИдентификаторУстройстваФР = СтруктураПараметровПечати.ИдентификаторУстройства;
		
		Если ИдентификаторУстройстваФР <> Неопределено Тогда
			
			// Подключаем ФР
			УникальныйИдентификатор = Новый УникальныйИдентификатор;
			
			ОписаниеОшибки = "";
			Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
			                                                                              ИдентификаторУстройстваФР,
			                                                                              ОписаниеОшибки);
			
			Если Результат Тогда
				
				
				// Готовим данные
				ВходныеПараметры  = Новый Массив();
				ВходныеПараметры.Добавить(СтрокаПечати);
				ВыходныеПараметры = Неопределено;
				
				РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
																		 "PrintText",
																		  ВходныеПараметры,
																		  ВыходныеПараметры);
				
				Если НЕ РезультатФР Тогда
					ТекстСообщения = НСтр("ru = 'При печати товарного чека произошла ошибка.
					                            |Товарный чек не напечатан на фискальном регистраторе.
					                            |Дополнительное описание:
					                            |%ДополнительноеОписание%'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения,
					                             "%ДополнительноеОписание%",
					                             ВыходныеПараметры[1]);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
				
				// Отключаем ФР
				МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор, ИдентификаторУстройстваФР);
				
			Иначе
				ТекстСообщения = НСтр("ru = 'При подключении устройства произошла ошибка.
				                            |Дополнительное описание:
				                            |%ДополнительноеОписание%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ОписаниеОшибки);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
			
		Иначе
			ТекстСообщения = НСтр("ru = 'Не выбран фискальный регистратор.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

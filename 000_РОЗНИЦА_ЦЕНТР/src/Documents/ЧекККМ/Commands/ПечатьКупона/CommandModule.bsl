
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)

	ПроверитьАцкцииНаПечатьУникальныхКупонов(ПараметрКоманды);

КонецПроцедуры

&НаСервере
Функция ПроверитьЗаписи(Ссылка)
	 	МассивНепроведенныхДокументов = Новый Массив;
	

	Если МассивНепроведенныхДокументов.Количество() = 0 Тогда

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЧекККМСкидкиНаценки.СкидкаНаценка КАК СкидкаНаценка,
		|	СерийныеНомераДляАкций.СерийныйНомер КАК СерийныйНомер,
		|	ЧекККМСкидкиНаценки.СкидкаНаценка.ШаблонЧека КАК СкидкаНаценкаШаблонЧека
		|ИЗ
		|	Документ.ЧекККМ.СкидкиНаценки КАК ЧекККМСкидкиНаценки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СерийныеНомераДляАкций КАК СерийныеНомераДляАкций
		|		ПО ЧекККМСкидкиНаценки.СкидкаНаценка = СерийныеНомераДляАкций.СкидкаНаценка
		|			И ЧекККМСкидкиНаценки.Ссылка = СерийныеНомераДляАкций.ЧекККМПродажи
		|ГДЕ
		|	ЧекККМСкидкиНаценки.СкидкаНаценка.ПечататьСерийныйНомер = ИСТИНА
		|	И ЧекККМСкидкиНаценки.СкидкаНаценка.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.СерийныйНомер) тогда
			
		Иначе
			
		КонецЕсли;
	КонецЦикла;
	
		
	КонецЕсли;

КонецФункции


&НаКлиенте 
Функция ПроверитьАцкцииНаПечатьУникальныхКупонов(ЧекККМСсылка)
	КассаККМ =  ПолучитьКассуККМ();      
	// Готовим данные
	МассивВходныеПараметры  = ПолучитьТекстУникальногоКупона(ЧекККМСсылка);
	ОписаниеОшибки = "";
	Если ЗначениеЗаполнено(КассаККМ) тогда  
		Если НЕ МассивВходныеПараметры = Неопределено тогда 
			Для каждого ВходныеПараметры из МассивВходныеПараметры	цикл
				Если НЕ ВходныеПараметры = Неопределено тогда 

					//Если НЕ ИспользоватьПодключаемоеОборудование  Тогда // если сразу печатать на принтер чеков
					//	Возврат Ложь;
					//КонецЕсли;
					Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда // Проверка на определенность рабочего места ВО
					
						ПараметрыКассыККМ = ЗначениеНастроекПовтИсп.ПолучитьПараметрыКассыККМ(КассаККМ);
						ИдентификаторУстройстваФР = ПараметрыКассыККМ.ИдентификаторУстройства;
						
						Если ИдентификаторУстройстваФР <> Неопределено Тогда
							
						//	Подключаем ФР
							Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ЭтотОбъект,
							                                                                              ИдентификаторУстройстваФР,
							                                                                              ОписаниеОшибки);
							Если Результат Тогда

								ВыходныеПараметры = Неопределено;
							//	Печатаем чек.
								Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,"beginNonFiscal",ВходныеПараметры,ВыходныеПараметры);
								Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,"printNonFiscalText",ВходныеПараметры,ВыходныеПараметры);

								СтрокиШаблона = РМКСервер.ПолучитьШаблонЧека(ВходныеПараметры[7]);

								Если НЕ СтрокиШаблона = Неопределено тогда

									Для каждого ДанныеСтроки из СтрокиШаблона цикл

										ВходныеПараметры[2] = СтрЗаменить(ДанныеСтроки.СтрокаТекста	, "#SUM#"		, Формат(ВходныеПараметры[9], "ЧДЦ=2; ЧН=0,00; ЧГ="));
										ВходныеПараметры[2] = СтрЗаменить(ВходныеПараметры[2]		, "#SERIALNUM#"	, СокрЛП(ВходныеПараметры[1]));

										Если ПараметрыКассыККМ.ПечатьКодQR = Истина И ДанныеСтроки.QRкод = Истина Тогда

											ДанныеДляQRКода = Новый Массив;
											ДанныеДляQRКода.Добавить(ВходныеПараметры[2]);

											Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР
												, "PrintQR"
												, ДанныеДляQRКода
												, ВыходныеПараметры
											);

										Иначе

											Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР
												, "printNonFiscalText"
												, ВходныеПараметры
												, ВыходныеПараметры
											);

										КонецЕсли;

									КонецЦикла;		

								КонецЕсли;

								Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,"printBarCode",ВходныеПараметры,ВыходныеПараметры);
								ВходныеПараметры[2] = ВходныеПараметры[1];
								Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,"printNonFiscalText",ВходныеПараметры,ВыходныеПараметры);
								ВходныеПараметры[2] = ПолучитьТексКонстантыНаСервере();
								Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,"printNonFiscalText",ВходныеПараметры,ВыходныеПараметры);
								Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,"endNonFiscal",ВходныеПараметры,ВыходныеПараметры);

								Если НЕ ВходныеПараметры[8] Тогда

									СделатьЗаписьВРССерийныеНомераДляАкций(ЧекККМСсылка,ВходныеПараметры[3],ВходныеПараметры[1],ВходныеПараметры[6]);

								КонецЕсли;

							КонецЕсли;

						КонецЕсли;

					КонецЕсли;

				КонецЕсли;

			КонецЦикла;

		КонецЕсли;					

	КонецЕсли;	

КонецФункции

&НаСервере
Функция ПолучитьКассуККМ()
КассаККМ = Неопределено;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КассыККМ.Ссылка КАК КассаККМ
		|ИЗ
		|	Справочник.КассыККМ КАК КассыККМ
		|ГДЕ
		|	КассыККМ.ПометкаУдаления = ЛОЖЬ
		|	И КассыККМ.РабочееМесто = &РабочееМесто";
	
	Запрос.УстановитьПараметр("РабочееМесто", ПараметрыСеанса.РабочееМестоКлиента);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КассаККМ = ВыборкаДетальныеЗаписи.КассаККМ;	
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	Возврат КассаККМ;
КонецФункции


&НаСервере
Функция ПолучитьТексКонстантыНаСервере()
	  Возврат Константы.ТекстПодвалаДляКупона.Получить();
КонецФункции

&НаСервере
Функция  ПолучитьТекстУникальногоКупона(ЧекККМСсылка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СерийныеНомераДляАкций.СкидкаНаценка КАК СкидкаНаценка,
		|	СерийныеНомераДляАкций.СкидкаНаценка.ТекстУсловияДляПечатиВЧекеККМ КАК ТекстУсловияДляПечатиВЧекеККМ,
		|	СерийныеНомераДляАкций.СкидкаНаценка.ТекстСообщения КАК ТекстСообщения,
		|	СерийныеНомераДляАкций.СкидкаНаценка.ВариантВыдачиКупона КАК ВариантВыдачиКупона,
		|	СерийныеНомераДляАкций.СкидкаНаценка.НоменклатураСкидочногоКупона КАК НоменклатураСкидочногоКупона,
		|	СерийныеНомераДляАкций.СкидкаНаценка.ШаблонЧека КАК ШаблонЧека,
		|	СерийныеНомераДляАкций.Сумма КАК СуммаКупона,
		|	СерийныеНомераДляАкций.ЧекККМПродажи.Номер КАК НомерЧека,
		|	СерийныеНомераДляАкций.СерийныйНомер КАК СкидочныйКупон,
		|	Штрихкоды.Штрихкод КАК КодСерийногоНомера
		|ИЗ
		|	РегистрСведений.СерийныеНомераДляАкций КАК СерийныеНомераДляАкций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО СерийныеНомераДляАкций.СерийныйНомер = Штрихкоды.Владелец
		|ГДЕ
		|	СерийныеНомераДляАкций.ЧекККМПродажи = &Ссылка";

	
	
	
	Запрос.УстановитьПараметр("Ссылка", ЧекККМСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() тогда 
		ОбщиеПараметрыМассив = Новый Массив;
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбщиеПараметры = Новый Массив();
			ОбщиеПараметры.Добавить("CODE128");
			СерийныйНомер = ВыборкаДетальныеЗаписи.СкидочныйКупон;
			Если  ВыборкаДетальныеЗаписи.ВариантВыдачиКупона = Перечисления.ВариантыВыдачиКупона.ПечататьНаЧекеИзСписка тогда
				//СкидочныйКупон = Новый Структура;
				//СкидочныйКупон.Вставить("СкидочныйКупон",ВыборкаДетальныеЗаписи.СкидочныйКупон);
				//СкидочныйКупон.Вставить("КодСерийногоНомера",ВыборкаДетальныеЗаписи.КодСерийногоНомера);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.КодСерийногоНомера);				
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ТекстУсловияДляПечатиВЧекеККМ);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.СкидкаНаценка);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ТекстСообщения);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ВариантВыдачиКупона);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.СкидочныйКупон);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ШаблонЧека);
				ОбщиеПараметры.Добавить(Истина);
				ОбщиеПараметры.Добавить(0);				
			Иначе
				//Номер = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ЧекККМСсылка,"Номер");
				//НомерСокр = Прав(Лев(Номер,4),3)+прав(Номер,6);
				//Сумма = ВыборкаДетальныеЗаписи.СуммаКупона;
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.КодСерийногоНомера);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ТекстУсловияДляПечатиВЧекеККМ);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.СкидкаНаценка);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ТекстСообщения);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ВариантВыдачиКупона);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.СкидочныйКупон);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ШаблонЧека);
				ОбщиеПараметры.Добавить(Истина);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.СуммаКупона);
			КонецЕсли;
			ОбщиеПараметрыМассив.Добавить(ОбщиеПараметры);
		КонецЦикла;
		
	Иначе
	ОбщиеПараметрыМассив =	ЗаписатьКупон(ЧекККМСсылка); // Запись в РС не обнаружена сделаемм ее и передадим на печать 
	КонецЕсли;	

	
	
	
	Возврат ОбщиеПараметрыМассив;
	
КонецФункции

&НаСервере
Функция  ЗаписатьКупон(ЧекККМСсылка)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ Фильтр
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СкидкиНаценки.СкидкаНаценка КАК СкидкаНаценка,
	|	МИНИМУМ(СкидкиНаценки.НомерСтроки) КАК НомерСтроки,
	|	СкидкиНаценки.Ссылка КАК Ссылка,
	|	СкидкиНаценки.СкидкаНаценка.ТекстУсловияДляПечатиВЧекеККМ КАК ТекстУсловияДляПечатиВЧекеККМ,
	|	ВЫРАЗИТЬ(СкидкиНаценки.СкидкаНаценка.ТекстСообщения КАК СТРОКА(1000)) КАК ТекстСообщения,
	|	СкидкиНаценки.СкидкаНаценка.ВариантВыдачиКупона КАК ВариантВыдачиКупона,
	|	СкидкиНаценки.СкидкаНаценка.НоменклатураСкидочногоКупона КАК НоменклатураСкидочногоКупона,
	|	СкидкиНаценки.СкидкаНаценка.ШаблонЧека КАК ШаблонЧека,
	|	ТаблицаСегмента.Номенклатура КАК Номенклатура,
	|	СкидкиНаценки.СкидкаНаценка.ЗначениеСкидкиНаценки КАК ЗначениеСкидкиНаценки,
	|	СкидкиНаценки.Ссылка.Номер КАК НомерЧека
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ЧекККМ.СкидкиНаценки КАК СкидкиНаценки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СкидкиНаценки.УсловияПредоставления КАК ТаблицаУсловий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураСегмента КАК ТаблицаСегмента
	|			ПО ТаблицаУсловий.УсловиеПредоставления.СегментНоменклатурыОграничения = ТаблицаСегмента.Сегмент
	|				И (ТаблицаСегмента.Номенклатура В
	|					(ВЫБРАТЬ
	|						Фильтр.Номенклатура
	|					ИЗ
	|						Фильтр))
	|		ПО СкидкиНаценки.СкидкаНаценка = ТаблицаУсловий.Ссылка
	|ГДЕ
	|	СкидкиНаценки.Ссылка = &Ссылка
	|	И СкидкиНаценки.СкидкаНаценка.ВариантВыдачиКупона = ЗНАЧЕНИЕ(Перечисление.ВариантыВыдачиКупона.ПечататьНаЧекеСНоминалом)
	|	И СкидкиНаценки.СкидкаНаценка.ПечататьСерийныйНомер = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	СкидкиНаценки.Ссылка,
	|	ВЫРАЗИТЬ(СкидкиНаценки.СкидкаНаценка.ТекстСообщения КАК СТРОКА(1000)),
	|	СкидкиНаценки.СкидкаНаценка.ТекстУсловияДляПечатиВЧекеККМ,
	|	СкидкиНаценки.СкидкаНаценка.ВариантВыдачиКупона,
	|	СкидкиНаценки.СкидкаНаценка.НоменклатураСкидочногоКупона,
	|	СкидкиНаценки.СкидкаНаценка.ШаблонЧека,
	|	СкидкиНаценки.СкидкаНаценка,
	|	ТаблицаСегмента.Номенклатура,
	|	СкидкиНаценки.СкидкаНаценка.ЗначениеСкидкиНаценки,
	|	СкидкиНаценки.Ссылка.Номер
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СкидкиНаценки.СкидкаНаценка,
	|	МИНИМУМ(СкидкиНаценки.НомерСтроки),
	|	СкидкиНаценки.Ссылка,
	|	СкидкиНаценки.СкидкаНаценка.ТекстУсловияДляПечатиВЧекеККМ,
	|	ВЫРАЗИТЬ(СкидкиНаценки.СкидкаНаценка.ТекстСообщения КАК СТРОКА(1000)),
	|	СкидкиНаценки.СкидкаНаценка.ВариантВыдачиКупона,
	|	СкидкиНаценки.СкидкаНаценка.НоменклатураСкидочногоКупона,
	|	СкидкиНаценки.СкидкаНаценка.ШаблонЧека,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|	СкидкиНаценки.СкидкаНаценка.ЗначениеСкидкиНаценки,
	|	СкидкиНаценки.Ссылка.Номер
	|ИЗ
	|	Документ.ЧекККМ.СкидкиНаценки КАК СкидкиНаценки
	|ГДЕ
	|	СкидкиНаценки.Ссылка = &Ссылка
	|	И НЕ СкидкиНаценки.СкидкаНаценка.ВариантВыдачиКупона = ЗНАЧЕНИЕ(Перечисление.ВариантыВыдачиКупона.ПечататьНаЧекеСНоминалом)
	|	И СкидкиНаценки.СкидкаНаценка.ПечататьСерийныйНомер = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	СкидкиНаценки.СкидкаНаценка,
	|	СкидкиНаценки.Ссылка,
	|	СкидкиНаценки.СкидкаНаценка.ТекстУсловияДляПечатиВЧекеККМ,
	|	ВЫРАЗИТЬ(СкидкиНаценки.СкидкаНаценка.ТекстСообщения КАК СТРОКА(1000)),
	|	СкидкиНаценки.СкидкаНаценка.ВариантВыдачиКупона,
	|	СкидкиНаценки.СкидкаНаценка.НоменклатураСкидочногоКупона,
	|	СкидкиНаценки.СкидкаНаценка.ШаблонЧека,
	|	СкидкиНаценки.СкидкаНаценка.ЗначениеСкидкиНаценки,
	|	СкидкиНаценки.Ссылка.Номер
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаДанных.СкидкаНаценка КАК СкидкаНаценка,
	|	ТаблицаДанных.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДанных.ТекстУсловияДляПечатиВЧекеККМ КАК ТекстУсловияДляПечатиВЧекеККМ,
	|	ТаблицаДанных.ТекстСообщения КАК ТекстСообщения,
	|	ТаблицаДанных.ВариантВыдачиКупона КАК ВариантВыдачиКупона,
	|	ТаблицаДанных.НоменклатураСкидочногоКупона КАК НоменклатураСкидочногоКупона,
	|	ТаблицаДанных.ШаблонЧека КАК ШаблонЧека,
	|	ТаблицаДанных.СуммаКупона КАК СуммаКупона,
	|	ТаблицаДанных.НомерЧека КАК НомерЧека
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыСегмента.СкидкаНаценка КАК СкидкаНаценка,
	|		МИНИМУМ(ТоварыСегмента.НомерСтроки) КАК НомерСтроки,
	|		ТоварыСегмента.ТекстУсловияДляПечатиВЧекеККМ КАК ТекстУсловияДляПечатиВЧекеККМ,
	|		ТоварыСегмента.ТекстСообщения КАК ТекстСообщения,
	|		ТоварыСегмента.ВариантВыдачиКупона КАК ВариантВыдачиКупона,
	|		ТоварыСегмента.НоменклатураСкидочногоКупона КАК НоменклатураСкидочногоКупона,
	|		ТоварыСегмента.ШаблонЧека КАК ШаблонЧека,
	|		СУММА(ТабличнаяЧасть.Сумма / 100 * ТоварыСегмента.ЗначениеСкидкиНаценки) КАК СуммаКупона,
	|		ТоварыСегмента.НомерЧека КАК НомерЧека
	|	ИЗ
	|		ВТ_Товары КАК ТоварыСегмента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТабличнаяЧасть
	|			ПО ТоварыСегмента.Ссылка = ТабличнаяЧасть.Ссылка
	|				И ТоварыСегмента.Номенклатура = ТабличнаяЧасть.Номенклатура
	|	ГДЕ
	|		ТоварыСегмента.ВариантВыдачиКупона = ЗНАЧЕНИЕ(Перечисление.ВариантыВыдачиКупона.ПечататьНаЧекеСНоминалом)
	|		И ТабличнаяЧасть.Сумма / 100 * ТоварыСегмента.ЗначениеСкидкиНаценки <> 0
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыСегмента.НоменклатураСкидочногоКупона,
	|		ТоварыСегмента.СкидкаНаценка,
	|		ТоварыСегмента.ТекстУсловияДляПечатиВЧекеККМ,
	|		ТоварыСегмента.ВариантВыдачиКупона,
	|		ТоварыСегмента.ТекстСообщения,
	|		ТоварыСегмента.ШаблонЧека,
	|		ТоварыСегмента.НомерЧека
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыСегмента.СкидкаНаценка,
	|		ТоварыСегмента.НомерСтроки,
	|		ТоварыСегмента.ТекстУсловияДляПечатиВЧекеККМ,
	|		ТоварыСегмента.ТекстСообщения,
	|		ТоварыСегмента.ВариантВыдачиКупона,
	|		ТоварыСегмента.НоменклатураСкидочногоКупона,
	|		ТоварыСегмента.ШаблонЧека,
	|		0,
	|		ТоварыСегмента.НомерЧека
	|	ИЗ
	|		ВТ_Товары КАК ТоварыСегмента
	|	ГДЕ
	|		НЕ ТоварыСегмента.ВариантВыдачиКупона = ЗНАЧЕНИЕ(Перечисление.ВариантыВыдачиКупона.ПечататьНаЧекеСНоминалом)) КАК ТаблицаДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Фильтр
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Товары";

	
	
	
	Запрос.УстановитьПараметр("Ссылка", ЧекККМСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() тогда 
		ОбщиеПараметрыМассив = Новый Массив;
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбщиеПараметры = Новый Массив();
			ОбщиеПараметры.Добавить("CODE128");
			//СерийныйНомер = ВыборкаДетальныеЗаписи.СкидочныйКупон;
			Если  ВыборкаДетальныеЗаписи.ВариантВыдачиКупона = Перечисления.ВариантыВыдачиКупона.ПечататьНаЧекеИзСписка тогда
				СкидочныйКупон = ПолучитьСерийныйНомерДляПечати(ВыборкаДетальныеЗаписи.НоменклатураСкидочногоКупона);
				Если НЕ СкидочныйКупон = Неопределено тогда 
					ОбщиеПараметры.Добавить(СкидочныйКупон.КодСерийногоНомера);				
					ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ТекстУсловияДляПечатиВЧекеККМ);
					ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.СкидкаНаценка);
					ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ТекстСообщения);
					ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ВариантВыдачиКупона);
					ОбщиеПараметры.Добавить(СкидочныйКупон.СкидочныйКупон);
					ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ШаблонЧека);
					ОбщиеПараметры.Добавить(Ложь);
					ОбщиеПараметры.Добавить(0);  				
				Иначе
					ОбщиеПараметры = Неопределено;
				КонецЕсли;
			Иначе
				Номер = ВыборкаДетальныеЗаписи.НомерЧека;
				НомерСокр = Прав(Лев(Номер, 4), 3) + Прав(Номер, 6) + ВыборкаДетальныеЗаписи.НомерСтроки;
				Сумма = ВыборкаДетальныеЗаписи.СуммаКупона;
				ОбщиеПараметры.Добавить(НомерСокр+Формат(Год(ТекущаяДата()),"ЧГ=0"));
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ТекстУсловияДляПечатиВЧекеККМ);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.СкидкаНаценка);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ТекстСообщения);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ВариантВыдачиКупона);
				ОбщиеПараметры.Добавить(Неопределено);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.ШаблонЧека);
				ОбщиеПараметры.Добавить(Ложь);
				ОбщиеПараметры.Добавить(ВыборкаДетальныеЗаписи.СуммаКупона);
			КонецЕсли;
			ОбщиеПараметрыМассив.Добавить(ОбщиеПараметры);
		КонецЦикла;
	Иначе
		ОбщиеПараметрыМассив = Неопределено;
	КонецЕсли;	

	
	
	
	Возврат ОбщиеПараметрыМассив;
	
КонецФункции


&НаСервере
Функция ПолучитьСерийныйНомерДляПечати(НоменклатураСкидочногоКупона) 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СерийныеНомера.Ссылка КАК СкидочныйКупон,
		|	Штрихкоды.Штрихкод КАК КодСерийногоНомера
		|ИЗ
		|	Справочник.СерийныеНомера КАК СерийныеНомера
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО (Штрихкоды.Владелец = СерийныеНомера.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СерийныеНомераДляАкций КАК СерийныеНомераДляАкций
		|		ПО СерийныеНомера.Ссылка = СерийныеНомераДляАкций.СерийныйНомер
		|ГДЕ
		|	СерийныеНомера.Владелец = &Владелец
		|	И СерийныеНомераДляАкций.СерийныйНомер ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Владелец", НоменклатураСкидочногоКупона);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() тогда 
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СкидочныйКупон = Новый Структура;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СкидочныйКупон.Вставить("СкидочныйКупон",ВыборкаДетальныеЗаписи.СкидочныйКупон);
		СкидочныйКупон.Вставить("КодСерийногоНомера",ВыборкаДетальныеЗаписи.КодСерийногоНомера);
	КонецЦикла;
		
		Возврат СкидочныйКупон;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции
	
&НаСервере
Функция СделатьЗаписьВРССерийныеНомераДляАкций(ЧекККМСсылка,СкидкаНаценка,КодСерийногоНомера,СерийныйНомер)
	Если Не ЗначениеЗаполнено(СерийныйНомер) тогда
		ТекСерийныйНомер = СкидкиНаценкиСервер.СоздатьСерийныйНомер(КодСерийногоНомера,ОбщегоНазначения.ПолучитьЗначениеРеквизита(СкидкаНаценка,"НоменклатураСкидочногоКупона"));
	Иначе
		ТекСерийныйНомер = СерийныйНомер;
	КонецЕсли;
	   	НаборЗаписей = РегистрыСведений.СерийныеНомераДляАкций.СоздатьНаборЗаписей(); 

		НаборЗаписей.Отбор.СерийныйНомер.Установить(ТекСерийныйНомер); 
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ЧекККМПродажи = ЧекККМСсылка;
		НоваяЗапись.СерийныйНомер = ТекСерийныйНомер;
		НоваяЗапись.ЧекККПИспользования = Документы.ЧекККМ.ПустаяСсылка();
		НоваяЗапись.Использован = Ложь; 
		НоваяЗапись.СкидкаНаценка = СкидкаНаценка; 
		НаборЗаписей.Записать();
КонецФункции


&НаСервере
Процедура ЗаписатьСкидочныйКупонВРегистрПоКоду(ЧекККМСсылка,КодСерийногоНомера);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ Разрешенные
		|	СерийныеНомераДляАкций.СерийныйНомер КАК СерийныйНомер,
		|	СерийныеНомераДляАкций.ЧекККМПродажи КАК ЧекККМПродажи,
		|	СерийныеНомераДляАкций.ЧекККПИспользования КАК ЧекККПИспользования,
		|	СерийныеНомераДляАкций.Использован КАК Использован
		|ИЗ
		|	РегистрСведений.СерийныеНомераДляАкций КАК СерийныеНомераДляАкций
		|ГДЕ
		|	СерийныеНомераДляАкций.СерийныйНомер.КодСерийногоНомера = &КодСерийногоНомера";
	
	Запрос.УстановитьПараметр("КодСерийногоНомера",КодСерийногоНомера);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.СерийныеНомераДляАкций.СоздатьНаборЗаписей(); 

		НаборЗаписей.Отбор.СерийныйНомер.Установить(ВыборкаДетальныеЗаписи.СерийныйНомер);

		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.СерийныйНомер = ВыборкаДетальныеЗаписи.СерийныйНомер;
		НоваяЗапись.ЧекККМПродажи = ВыборкаДетальныеЗаписи.ЧекККМПродажи;
		НоваяЗапись.ЧекККПИспользования = ЧекККМСсылка;
		НоваяЗапись.Использован = Истина; 

		НаборЗаписей.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры



#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область АвтоматическоеФормированиеДокументов

//	LNK 24.11.2016 15:24:13
//	Вызов данной процедуры производится из обработчика события "ПриЗаписи"
//	модуля объекта "РегистрыСведений.ОбъектУчтенВNavision" ТОЛЬКО при установленном
//	флаге "УчтеноNavision" и только для ордерного типа объекта!
//
Процедура ПроверитьНеобходимыеКорректировки(ДокументСсылка, ВыполнитьОбязательно = Ложь, Загрузка = Ложь)	Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Если НЕ ВыполнитьОбязательно = Истина И НЕ ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ИспользоватьКорректировкиПеремещения") = Истина Тогда

		Возврат;

	КонецЕсли;

//	Если по всем документам ордерной схемы установлен флаг "УчтеноNavision", значит,
//	вся карусель с изменениями как ордера, так и перемещения завершена.
//	Таким образом мы имеем моральное право создать нужные корректировки (если
//	они ещё не созданы) для погашения возможных "висяков" в регистрах ордерной передачи.

//	Перед тем, как начинать всю работу, проверим, а установлен-ли флаг "УчтеноNavision"
//	для всех входящих в схему документов? Мало-ли какие косяки могут иметь место.
//	Одновременно "разведём" понятия, где "ДокументОснование", а где "Ордер".

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаОрдеры.ДокументОснование КАК ПеремещениеТоваров,
	|	ТаблицаОрдеры.Ссылка КАК ТоварныйОрдер
	|ПОМЕСТИТЬ Фильтр
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары КАК ТаблицаОрдеры
	|ГДЕ
	|	ТаблицаОрдеры.Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаОрдеры.ДокументОснование,
	|	ТаблицаОрдеры.Ссылка
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК ТаблицаОрдеры
	|ГДЕ
	|	ТаблицаОрдеры.Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаВедущая.Ссылка,
	|	МАКСИМУМ(ТаблицаОрдеры.Ссылка)
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ТаблицаВедущая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары КАК ТаблицаОрдеры
	|		ПО ТаблицаВедущая.Ссылка = ТаблицаОрдеры.ДокументОснование
	|			И ТаблицаВедущая.МагазинПолучатель = ТаблицаОрдеры.Магазин
	|			И (ТаблицаОрдеры.Проведен)
	|ГДЕ
	|	ТаблицаВедущая.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВедущая.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаВедущая.Ссылка,
	|	МАКСИМУМ(ТаблицаОрдеры.Ссылка)
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ТаблицаВедущая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК ТаблицаОрдеры
	|		ПО ТаблицаВедущая.Ссылка = ТаблицаОрдеры.ДокументОснование
	|			И ТаблицаВедущая.МагазинОтправитель = ТаблицаОрдеры.Магазин
	|			И (ТаблицаОрдеры.Проведен)
	|ГДЕ
	|	ТаблицаВедущая.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВедущая.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПодчинная.ТоварныйОрдер,
	|	ТаблицаВедущая.ДокументОснование,
	|	ТаблицаВедущая.УчтеноNavision,
	|	ТаблицаПодчинная.УзелСоздания
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаРегистра.Объект КАК ДокументОснование,
	|		МАКСИМУМ(ТаблицаРегистра.УчтеноNavision) КАК УчтеноNavision,
	|		ТаблицаРегистра.Объект.УзелСоздания КАК УзелСоздания
	|	ИЗ
	|		РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаРегистра
	|	ГДЕ
	|		ТаблицаРегистра.Объект ССЫЛКА Документ.ПеремещениеТоваров
	|		И ТаблицаРегистра.Объект В
	|				(ВЫБРАТЬ
	|					Фильтр.ПеремещениеТоваров
	|				ИЗ
	|					Фильтр)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаРегистра.Объект,
	|		ТаблицаРегистра.Объект.УзелСоздания) КАК ТаблицаВедущая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ТаблицаРегистра.Объект КАК ТоварныйОрдер,
	|			ТаблицаРегистра.Объект.ДокументОснование КАК ДокументОснование,
	|			ТаблицаРегистра.Объект.УзелСоздания КАК УзелСоздания
	|		ИЗ
	|			РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаРегистра
	|		ГДЕ
	|			(ТаблицаРегистра.Объект ССЫЛКА Документ.ПриходныйОрдерНаТовары
	|					ИЛИ ТаблицаРегистра.Объект ССЫЛКА Документ.РасходныйОрдерНаТовары)
	|			И ТаблицаРегистра.Объект В
	|					(ВЫБРАТЬ
	|						Фильтр.ТоварныйОрдер
	|					ИЗ
	|						Фильтр)) КАК ТаблицаПодчинная
	|		ПО ТаблицаВедущая.ДокументОснование = ТаблицаПодчинная.ДокументОснование
	|ГДЕ
	|	ТаблицаВедущая.УчтеноNavision = ИСТИНА
	|	И (ТаблицаПодчинная.УзелСоздания = &ТекущийУзел
	|			ИЛИ &УчитыватьУзел = ЛОЖЬ)"
	);
//	Корректировку нужно создавать только в узле рождения товарного ордера! Иначе могут быть различные проблемы
//	данными - что-то недоехало или ещё чего.
	Запрос.УстановитьПараметр("ТекущийУзел"   , ОбменДаннымиПовтИсп.ПолучитьТекущийЭлементСтруктурыУзлов());
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("УчитыватьУзел" , Истина);

	ОснованиеВыборка = Запрос.Выполнить().Выбрать();

	Если ОснованиеВыборка.Следующий() Тогда

		ТипЗначения = ТипЗнч(ОснованиеВыборка.ТоварныйОрдер);

		ЖурналСобытий.Регистрация("КорректировкаПеремещения.Формирование"
			, УровеньЖурналаРегистрации.Примечание
			, ДокументСсылка.Метаданные()
			, ДокументСсылка
			,
			,
			"02. Согласования КСУ обнаружены по основанию «" + ОснованиеВыборка.ДокументОснование + "». Раздел учёта «" + ВнешниеИсточникиПовтИсп.ТипыТоварныйОрдер().Получить(ТипЗначения) + "»"
			,
			,
			, Ложь
		);

	//	Памятка о значениях ключей:
	//	"П" (магазин получил больше отправленного) - приход на магазин (доп.) для NAV, когда ЦО не согласен.
	//		В NAV должен быть сформировано доп.Перемещение с ЦО на магазин
	//	"Р" (магазин получил меньше отправленного) - расход с магазина (доп.) для NAV, когда ЦО не согласен.
	//		В NAV должен быть сформировано доп.Перемещение из магазина на ЦО (возврат)

		Для каждого КлючТипаNavision Из ОбщегоНазначенияКлиентСервер.AAD("П", "Р") Цикл

			ТаблицаКорректировки = ТаблицаКорректировкиПеремещения(ОснованиеВыборка.ДокументОснование
							, ВнешниеИсточникиПовтИсп.ТипыТоварныйОрдер().Получить(ТипЗначения)
							, КлючТипаNavision);

			Если НЕ ТаблицаКорректировки.Количество() = 0 Тогда

				ЖурналСобытий.Регистрация("КорректировкаПеремещения.Формирование"
					, УровеньЖурналаРегистрации.Примечание
					, ДокументСсылка.Метаданные()
					, ДокументСсылка
					,
					, "03. По ключу [" + КлючТипаNavision + "] есть отклонения в количестве " + Формат(ТаблицаКорректировки.Количество(), "ЧДЦ=; ЧН=0; ЧГ=") + " строк"
					,
					,
					, Ложь
				);

				КорректировкаПеремещенияСформировать(ОснованиеВыборка.ДокументОснование, ВнешниеИсточникиПовтИсп.ТипыТоварныйОрдер().Получить(ТипЗначения), КлючТипаNavision, ТаблицаКорректировки, Загрузка);

			Иначе

				ЖурналСобытий.Регистрация("КорректировкаПеремещения.Формирование"
					, УровеньЖурналаРегистрации.Примечание
					, ДокументСсылка.Метаданные()
					, ДокументСсылка
					,
					, "03. По ключу [" + КлючТипаNavision + "] нет отклонений."
					,
					,
					, Ложь
				);

			КонецЕсли;

		КонецЦикла;

	Иначе

		ЖурналСобытий.Регистрация("КорректировкаПеремещения.Формирование"
			, УровеньЖурналаРегистрации.Примечание
			, ДокументСсылка.Метаданные()
			, ДокументСсылка
			,
			, "02. Нет либо ордеров, либо нужных согласований КСУ"
			,
			,
			, Ложь
		);

	КонецЕсли;

КонецПроцедуры

Процедура КорректировкаПеремещенияСформировать(ДокументОснование, ВидОперации, КлючТипаNavision, ТаблицаКорректировки, Загрузка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаКорректировки.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ТаблицаКорректировки.Количество
	|ПОМЕСТИТЬ Источник
	|ИЗ
	|	&ТаблицаКорректировки КАК ТаблицаКорректировки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ВидОперации КАК ВидОперации,
	|	&КлючТипаNavision КАК КлючТипаNavision,
	|	ТаблицаВедущая.Номер КАК Номер,
	|	ТаблицаВедущая.Ссылка КАК ДокументОснование,
	|	ЕСТЬNULL(ТаблицаКорректировки.Ссылка, ЗНАЧЕНИЕ(Документ.КорректировкаПеремещения.ПустаяСсылка)) КАК ДокументКорректировки,
	|	ВЫБОР
	|		КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаПеремещения.ТоварыКПоступлению)
	|			ТОГДА ВЫБОР
	|					КОГДА &КлючТипаNavision = ""П""
	|						ТОГДА ТаблицаВедущая.МагазинОтправитель
	|					ИНАЧЕ ТаблицаВедущая.МагазинПолучатель
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &КлючТипаNavision = ""П""
	|					ТОГДА ТаблицаВедущая.МагазинПолучатель
	|				ИНАЧЕ ТаблицаВедущая.МагазинОтправитель
	|			КОНЕЦ
	|	КОНЕЦ КАК МагазинОтправитель,
	|	ВЫБОР
	|		КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаПеремещения.ТоварыКПоступлению)
	|			ТОГДА ВЫБОР
	|					КОГДА &КлючТипаNavision = ""П""
	|						ТОГДА ТаблицаВедущая.МагазинПолучатель
	|					ИНАЧЕ ТаблицаВедущая.МагазинОтправитель
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &КлючТипаNavision = ""П""
	|					ТОГДА ТаблицаВедущая.МагазинОтправитель
	|				ИНАЧЕ ТаблицаВедущая.МагазинПолучатель
	|			КОНЕЦ
	|	КОНЕЦ КАК МагазинПолучатель,
	|	ТаблицаВедущая.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаПеремещения.ТоварыКПоступлению)
	|			ТОГДА ВЫБОР
	|					КОГДА &КлючТипаNavision = ""П""
	|						ТОГДА ТаблицаВедущая.СкладОтправитель
	|					ИНАЧЕ ТаблицаВедущая.СкладПолучатель
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &КлючТипаNavision = ""П""
	|					ТОГДА ТаблицаВедущая.СкладПолучатель
	|				ИНАЧЕ ТаблицаВедущая.СкладОтправитель
	|			КОНЕЦ
	|	КОНЕЦ КАК СкладОтправитель,
	|	ВЫБОР
	|		КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаПеремещения.ТоварыКПоступлению)
	|			ТОГДА ВЫБОР
	|					КОГДА &КлючТипаNavision = ""П""
	|						ТОГДА ТаблицаВедущая.СкладПолучатель
	|					ИНАЧЕ ТаблицаВедущая.СкладОтправитель
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &КлючТипаNavision = ""П""
	|					ТОГДА ТаблицаВедущая.СкладОтправитель
	|				ИНАЧЕ ТаблицаВедущая.СкладПолучатель
	|			КОНЕЦ
	|	КОНЕЦ КАК СкладПолучатель
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ТаблицаВедущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПеремещения КАК ТаблицаКорректировки
	|		ПО ТаблицаВедущая.Ссылка = ТаблицаКорректировки.ДокументОснование
	|			И (ТаблицаКорректировки.ВидОперации = &ВидОперации)
	|			И (ТаблицаКорректировки.КлючТипаNavision = &КлючТипаNavision)
	|ГДЕ
	|	ТаблицаВедущая.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ЦеныОснования.НомерСтроки, 1000) КАК НомерСтроки,
	|	Источник.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ЦеныОснования.Характеристика, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика,
	|	Источник.Количество КАК Количество,
	|	Источник.Количество КАК КоличествоУпаковок,
	|	ЕСТЬNULL(ЦеныОснования.Цена, 0) КАК Цена,
	|	Источник.Количество * ЕСТЬNULL(ЦеныОснования.Цена, 0) КАК Сумма
	|ИЗ
	|	Источник КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МИНИМУМ(ТабличнаяЧасть.НомерСтроки) КАК НомерСтроки,
	|			ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|			ТабличнаяЧасть.Характеристика КАК Характеристика,
	|			МАКСИМУМ(ТабличнаяЧасть.Цена) КАК Цена
	|		ИЗ
	|			Источник КАК Источник
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|				ПО Источник.Номенклатура = ТабличнаяЧасть.Номенклатура
	|		ГДЕ
	|			ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТабличнаяЧасть.Номенклатура,
	|			ТабличнаяЧасть.Характеристика) КАК ЦеныОснования
	|		ПО Источник.Номенклатура = ЦеныОснования.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки"
	);
	Запрос.УстановитьПараметр("ВидОперации"         , ВидОперации);
	Запрос.УстановитьПараметр("КлючТипаNavision"    , КлючТипаNavision);
	Запрос.УстановитьПараметр("ДокументОснование"   , ДокументОснование);
	Запрос.УстановитьПараметр("ТаблицаКорректировки", ТаблицаКорректировки);
	
	Результаты = Запрос.ВыполнитьПакет();

	Шапка = Результаты[1].Выбрать();
	Шапка.Следующий();

	Если Шапка.ДокументКорректировки.Пустая() Тогда

		ОбъектКорректировка = Документы.КорректировкаПеремещения.СоздатьДокумент();
		ОбъектКорректировка.ОбменДанными.Загрузка = Загрузка;
		ЗаполнитьЗначенияСвойств(ОбъектКорректировка, Шапка);
		ОбъектКорректировка.Дата  = ТекущаяДатаСеанса();
		ОбъектКорректировка.Номер = Прав("000000" + СокрЛП(Шапка.Номер), 11) + "-" + Шапка.КлючТипаNavision;

	Иначе

		ОбъектКорректировка = Шапка.ДокументКорректировки.ПолучитьОбъект();
		ОбъектКорректировка.ОбменДанными.Загрузка = Загрузка;

		Если ОбъектКорректировка.ПометкаУдаления Тогда

			ОбъектКорректировка.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
			ОбъектКорректировка.УстановитьПометкуУдаления(Ложь);

		КонецЕсли;

	КонецЕсли;

	ОбъектКорректировка.Товары.Загрузить(Результаты[2].Выгрузить());
	БылИсключительныйРежим = ТехническаяПоддержкаВызовСервера.ИсключительныйРежим();
	ПараметрыСеанса.ИсключительныйРежим = Истина;

	Попытка

		ОбъектКорректировка.ДополнительныеСвойства.Вставить("РегистрацияПередачиВNavision", Истина);
		ОбъектКорректировка.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		ОбъектКорректировка.ОбменДанными.Загрузка = Ложь;	//	Проведение - никаких загрузок!
		ОбъектКорректировка.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);

	Исключение

		ТекстОшибки = ОписаниеОшибки();
		ЖурналСобытий.Регистрация("КорректировкаПеремещения.Формирование"
			, УровеньЖурналаРегистрации.Ошибка
			, Метаданные.Документы.ПеремещениеТоваров
			, ДокументОснование
			,
			, "04. " + СокрЛП(ОбъектКорректировка) + Символы.ПС + "Ошибка: " + ТекстОшибки
			,
			,
			, Ложь
		);

	КонецПопытки;

	ПараметрыСеанса.ИсключительныйРежим = БылИсключительныйРежим;

КонецПроцедуры

Функция ТаблицаКорректировкиПеремещения(ДокументОснование, ВидОперации, КлючТипаNavision)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыПлановые
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанных.Номенклатура КАК Номенклатура,
	|	ТаблицаДанных.Характеристика,
	|	СУММА(ТаблицаДанных.Количество) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыПлановые.Номенклатура КАК Номенклатура,
	|		ТоварыПлановые.Характеристика КАК Характеристика,
	|		ТоварыПлановые.Количество КАК Количество
	|	ИЗ
	|		ТоварыПлановые КАК ТоварыПлановые
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыПоступление.Номенклатура,
	|		ТоварыПоступление.Характеристика,
	|		-СУММА(ТоварыПоступление.Количество)
	|	ИЗ
	|		Документ.ПриходныйОрдерНаТовары.Товары КАК ТоварыПоступление
	|	ГДЕ
	|		ТоварыПоступление.Ссылка.ДокументОснование = &ДокументОснование
	|		И &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаПеремещения.ТоварыКПоступлению)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыПоступление.Номенклатура,
	|		ТоварыПоступление.Характеристика
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыСписание.Номенклатура,
	|		ТоварыСписание.Характеристика,
	|		-СУММА(ТоварыСписание.Количество)
	|	ИЗ
	|		Документ.РасходныйОрдерНаТовары.Товары КАК ТоварыСписание
	|	ГДЕ
	|		ТоварыСписание.Ссылка.ДокументОснование = &ДокументОснование
	|		И &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаПеремещения.ТоварыКОтгрузке)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыСписание.Номенклатура,
	|		ТоварыСписание.Характеристика) КАК ТаблицаДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.Номенклатура,
	|	ТаблицаДанных.Характеристика
	|
	|ИМЕЮЩИЕ
	|	НЕ СУММА(ТаблицаДанных.Количество) = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварыПлановые
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество * ВЫБОР
	|		КОГДА Товары.Количество < 0
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаПеремещения.ТоварыКПоступлению)
	|				ТОГДА ВЫБОР
	|						КОГДА &КлючТипаNavision = ""Р""
	|							ТОГДА Товары.Количество > 0
	|						ИНАЧЕ Товары.Количество < 0
	|					КОНЕЦ
	|			КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаПеремещения.ТоварыКОтгрузке)
	|				ТОГДА ВЫБОР
	|						КОГДА &КлючТипаNavision = ""Р""
	|							ТОГДА Товары.Количество < 0
	|						ИНАЧЕ Товары.Количество > 0
	|					КОНЕЦ
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ"
	);
	Запрос.УстановитьПараметр("КлючТипаNavision" , КлючТипаNavision);
	Запрос.УстановитьПараметр("ВидОперации"      , ВидОперации);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ТаблицаКорректировкиПеремещения()

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// Проведение

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка.Дата КАК Период,
	|	ТаблицаТовары.Ссылка КАК Регистратор,
	|	ТаблицаТовары.Ссылка.Организация КАК Организация,
	|	ТаблицаТовары.Ссылка.ВидОперации,
	|	ТаблицаТовары.Ссылка.КлючТипаNavision,
	|	ТаблицаТовары.Ссылка.МагазинОтправитель,
	|	ТаблицаТовары.Ссылка.МагазинПолучатель,
	|	ТаблицаТовары.Ссылка.СкладОтправитель,
	|	ТаблицаТовары.Ссылка.СкладПолучатель,
	|	ТаблицаТовары.Ссылка.ДокументОснование КАК ДокументОснование,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.КорректировкаПеремещения.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Период,
	|	Товары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА Товары.КлючТипаNavision = ""П""
	|			ТОГДА Товары.СкладПолучатель
	|		ИНАЧЕ Товары.СкладОтправитель
	|	КОНЕЦ КАК Склад,
	|	Товары.ДокументОснование,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Количество * ВЫБОР
	|		КОГДА Товары.КлючТипаNavision = ""П""
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	Товары.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаПеремещения.ТоварыКПоступлению)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Период,
	|	Товары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА Товары.КлючТипаNavision = ""П""
	|			ТОГДА Товары.СкладПолучатель
	|		ИНАЧЕ Товары.СкладОтправитель
	|	КОНЕЦ КАК Склад,
	|	Товары.ДокументОснование,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Количество * ВЫБОР
	|		КОГДА Товары.КлючТипаNavision = ""П""
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	Товары.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаПеремещения.ТоварыКОтгрузке)"
	);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКПоступлению", Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтгрузке"   , Результат[2].Выгрузить());
	
КонецПроцедуры

#КонецЕсли













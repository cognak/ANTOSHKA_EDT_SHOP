#Область ОбработчикиОсновныхСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

//	Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);

//	Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(Объект, КартинкаСостоянияДокумента, СостояниеДокумента, РазрешеноПроведение);
	
	НастроитьФормуПоДополнительнымПравам();

	УправлениеДоступомРТ.ПриСозданииФормыНаСервере(ЭтотОбъект);	//	LNK 17.10.2019 14:30:01

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОпределитьПараметрыПрограммы();
	УстановитьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	Элементы.ГруппаОписание.Картинка = ОбщегоНазначенияРТ.ПолучитьКартинкуКомментария(Объект.Описание);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НазначениеДляМагазиновПриИзменении(Элемент)

	ПредыдущееСостояние = Объект.ДляВсехМагазинов;

	Если НазначениеДляМагазинов = "ИндивидуальноеНазначение" Тогда

		Объект.ДляВсехМагазинов = Ложь;

	ИначеЕсли НазначениеДляМагазинов = "ДляВсехМагазинов" Тогда

		Объект.ДляВсехМагазинов = Истина;

	КонецЕсли;

	Если НЕ ПредыдущееСостояние = Объект.ДляВсехМагазинов Тогда

		Объект.Программа.Очистить();

	КонецЕсли;

	ОпределитьПараметрыПрограммы();
	УстановитьДоступность();

КонецПроцедуры

&НаКлиенте
Процедура НазначениеДляДолжностейПриИзменении(Элемент)

	ПредыдущееСостояние = Объект.ДляВсехНазначений;

	Если НазначениеДляДолжностей = "ИндивидуальноеНазначение" Тогда

		Объект.ДляВсехНазначений = Ложь;

	ИначеЕсли НазначениеДляДолжностей = "ДляВсехДолжностей" Тогда

		Объект.ДляВсехНазначений = Истина;

	КонецЕсли;

	Если НЕ ПредыдущееСостояние = Объект.ДляВсехНазначений Тогда

		Объект.Назначения.Очистить();

	КонецЕсли;

	ОпределитьПараметрыПрограммы();
	УстановитьДоступность();

КонецПроцедуры

&НаКлиенте
Процедура ПредметМотивационнойПрограммыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	Если НЕ ВыбранноеЗначение = Объект.ПредметМотивационнойПрограммы Тогда

		Объект.Программа.Очистить();

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПредметМотивационнойПрограммыПриИзменении(Элемент)

	ОпределитьПараметрыПрограммы();
	УстановитьДоступность();

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОбщегоНазначенияКлиент.ОткрытьФормуРедактированияКомментария(Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);

КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийТабличногоПоляПрограмма

&НаКлиенте
Процедура ПрограммаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НоваяСтрока
	ИЛИ  Элемент.ТекущиеДанные.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ПустаяСсылка")
	ИЛИ  Элемент.ТекущиеДанные.КритерийПредоставления = ПредопределенноеЗначение("Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.ПустаяСсылка")
	ИЛИ  Элемент.ТекущиеДанные.ЗначениеКритерия = 0	Тогда

		Если НоваяСтрока И Объект.Программа.Количество() >= 2 Тогда
			
			ДанныеПредыдущейСтроки = Объект.Программа[Объект.Программа.Количество() - 2];

		Иначе

			ДанныеПредыдущейСтроки = Объект.Программа.НайтиПоИдентификатору(Элемент.ТекущаяСтрока - 1);

		КонецЕсли;

		Если НЕ ДанныеПредыдущейСтроки = Неопределено Тогда

			Если Элемент.ТекущиеДанные.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ПустаяСсылка") Тогда

				Элемент.ТекущиеДанные.СпособПредоставления = ДанныеПредыдущейСтроки.СпособПредоставления;

			КонецЕсли;

			Если Элемент.ТекущиеДанные.КритерийПредоставления = ПредопределенноеЗначение("Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.ПустаяСсылка") Тогда

				Элемент.ТекущиеДанные.КритерийПредоставления = ДанныеПредыдущейСтроки.КритерийПредоставления;

			КонецЕсли;

			Если Элемент.ТекущиеДанные.ЗначениеКритерия = 0 Тогда

				Элемент.ТекущиеДанные.ЗначениеКритерия = ДанныеПредыдущейСтроки.ЗначениеКритерия;

			КонецЕсли;

		КонецЕсли;

		Если Элемент.ТекущиеДанные.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ПустаяСсылка") Тогда

			Элемент.ТекущиеДанные.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Сумма");

		КонецЕсли;

		Если Элемент.ТекущиеДанные.КритерийПредоставления = ПредопределенноеЗначение("Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.ПустаяСсылка") Тогда

			Элемент.ТекущиеДанные.КритерийПредоставления = ПредопределенноеЗначение("Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Количество");

		КонецЕсли;

		Если Элемент.ТекущиеДанные.ЗначениеКритерия = 0 Тогда

			Элемент.ТекущиеДанные.ЗначениеКритерия = 1;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры
	
#КонецОбласти

#Область ПоддержкаФункционалаФормы

&НаКлиенте
Процедура УстановитьДоступность()

	Элементы.ГруппаЛево.Видимость     = НЕ Объект.ДляВсехМагазинов;
	Элементы.ГруппаСередина.Видимость = НЕ Объект.ДляВсехНазначений;

	Если Объект.ПредметМотивационнойПрограммы = ПредопределенноеЗначение("Перечисление.ПредметыМотивационныхПрограмм.ВидНоменклатуры") Тогда

		ОписаниеТипаПредмета = Новый ОписаниеТипов("СправочникСсылка.ВидыНоменклатуры");

	ИначеЕсли Объект.ПредметМотивационнойПрограммы = ПредопределенноеЗначение("Перечисление.ПредметыМотивационныхПрограмм.СегментНоменклатуры") Тогда

		ОписаниеТипаПредмета = Новый ОписаниеТипов("СправочникСсылка.СегментыНоменклатуры");

	Иначе

		ОписаниеТипаПредмета = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");

	КонецЕсли;

	Элементы.ПрограммаПредметПрограммы.ОграничениеТипа = ОписаниеТипаПредмета;

КонецПроцедуры

&НаКлиенте
Процедура ОпределитьПараметрыПрограммы()

	Если ПустаяСтрока(НазначениеДляМагазинов) Тогда

		Если Объект.ДляВсехМагазинов Тогда

			НазначениеДляМагазинов = "ДляВсехМагазинов";

		Иначе

			НазначениеДляМагазинов = "ИндивидуальноеНазначение";

		КонецЕсли;

	КонецЕсли;

	Если ПустаяСтрока(НазначениеДляДолжностей) Тогда

		Если Объект.ДляВсехНазначений Тогда

			НазначениеДляДолжностей = "ДляВсехДолжностей";

		Иначе

			НазначениеДляДолжностей = "ИндивидуальноеНазначение";

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоДополнительнымПравам()


КонецПроцедуры

#КонецОбласти









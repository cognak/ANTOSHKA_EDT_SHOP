
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	ДатаОбновленияСостоянияОплатыИПоступления = Константы.ДатаОбновленияСостоянияОплатыИПоступления.Получить();
	Если НачалоДня(ТекущаяДатаСеанса()) > НачалоДня(ДатаОбновленияСостоянияОплатыИПоступления) Тогда
		Элементы.ГруппаПодвал.Видимость = Истина;
	Иначе
		Элементы.ГруппаПодвал.Видимость = Ложь;
	КонецЕсли;
	
//	LNK 03.05.2017 12:59:20
	Список.Параметры.УстановитьЗначениеПараметра("Организация"
		, ?(ОбменДаннымиПовтИсп.ЭтоГлавныйУзел()
			, Неопределено
			, ПараметрыСеанса.ТекущаяОрганизация));
	
//	LNK 13.11.2016 13:47:50
	ЭлементОтбора = Список.Отбор.Элементы.Вставить(0, Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПометкаУдаления");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Ложь;
	ЭлементОтбора.Использование  = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьДоступностьСклада();
	
//	LNK 13.11.2016 13:14:13
	УстановитьОформлениеЭлементов();
	УстановитьОтборДинамическогоСписка("ВозвратПоставщику");

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Магазин       = Настройки.Получить("Магазин");
		Склад         = Настройки.Получить("Склад");
		Организация   = Настройки.Получить("Организация");

	КонецЕсли;

	Контрагент    = Настройки.Получить("Контрагент");

	УстановитьОтборДинамическогоСписка("Магазин");
	УстановитьОтборДинамическогоСписка("Склад");
	УстановитьОтборДинамическогоСписка("Контрагент");
	УстановитьОтборДинамическогоСписка("Организация");
			
КонецПроцедуры

//	LNK 03.05.2017 13:35:01
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПользовательИзменилТекущуюОрганизацию" Тогда

		Если НЕ Параметр.Организация = Список.Параметры.Элементы.Найти("Организация").Значение Тогда

			Список.Параметры.УстановитьЗначениеПараметра("Организация", Параметр.Организация);
			Элементы.Список.Обновить();

		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтборСкладПриИзменении(Элемент)
	
	УстановитьОтборДинамическогоСписка("Склад");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборМагазинПриИзменении(Элемент)
	
	УстановитьОтборДинамическогоСписка("Магазин");
	УстановитьОтборДинамическогоСписка("Склад");
	
	УстановитьДоступностьСклада();

КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентПриИзменении(Элемент)
	
	УстановитьОтборДинамическогоСписка("Контрагент");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	УстановитьОтборДинамическогоСписка("Организация");
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояниеОплатыИПоступления(Команда)
		
	ЗакупкиСервер.ОбновлениеСостоянияОплатыИПоступления();
	
	ПоказатьОповещениеПользователя(
			,
			,
			НСтр("ru='Статусы просрочки поступления и оплаты успешно обновлены'"),
			БиблиотекаКартинок.Информация32
		);
	Элементы.ГруппаПодвал.Видимость = Ложь;
	
КонецПроцедуры

//	LNK 13.11.2016 13:07:36
&НаКлиенте
Процедура ПоказатьВсеИлиНепомеченные(Команда)

	Список.Отбор.Элементы[0].Использование = НЕ Список.Отбор.Элементы[0].Использование;

	УстановитьОформлениеЭлементов();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура устанавливает отбор динамических списка формы.
//
&НаСервере
Процедура УстановитьОтборДинамическогоСписка(ИмяРеквизита)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список, 
		ИмяРеквизита, 
		ЭтотОбъект[ИмяРеквизита], 
		ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизита]));
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьСклада()

	Элементы.ОтборСклад.ТолькоПросмотр = НЕ ЗначениеЗаполнено(Магазин);

КонецПроцедуры

//	LNK 13.11.2016 11:32:18
&НаКлиенте
Процедура УстановитьОформлениеЭлементов()

	НужныйЭлемент = Элементы.СписокПоказатьВсеИлиНепомеченные;

	Если Список.Отбор.Элементы[0].Использование Тогда

		НужныйЭлемент.Картинка  = БиблиотекаКартинок.ПоказыватьБезПомеченных;

	Иначе

		НужныйЭлемент.Картинка  = БиблиотекаКартинок.ПоказыватьВсеОбъекты;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтборВозвратПоставщикуПриИзменении(Элемент)
	УстановитьОтборДинамическогоСписка("ВозвратПоставщику");
КонецПроцедуры



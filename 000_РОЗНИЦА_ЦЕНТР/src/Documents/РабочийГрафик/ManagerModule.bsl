#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПроцедурыОбеспеченияПечати

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)	Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МакетТабель") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МакетТабель", 
			"Рабочий график", 
			ПечатьРабочегоГрафика(МассивОбъектов, ОбъектыПечати, ПараметрыВывода,ПараметрыПечати),,,Истина);

	КонецЕсли;

КонецПроцедуры

Функция ПечатьРабочегоГрафика(МассивОбъектов, ОбъектыПечати, ПараметрыВывода,ПараметрыПечати)
	
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	ТабличныйДокумент  = Новый ТабличныйДокумент;
	СинонимДокумента   = НСтр("ru='Рабочий график';uk='Рабочий график'", КодЯзыкаПечать);

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_МакетТабель";

	
	
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РабочийГрафикДанныеОВремени.Сотрудник КАК Сотрудник,
		|	РабочийГрафикДанныеОВремени.Должность КАК Должность,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода1 КАК ВремяПрихода1,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода2 КАК ВремяПрихода2,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода3 КАК ВремяПрихода3,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода4 КАК ВремяПрихода4,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода5 КАК ВремяПрихода5,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода6 КАК ВремяПрихода6,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода7 КАК ВремяПрихода7,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода8 КАК ВремяПрихода8,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода9 КАК ВремяПрихода9,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода10 КАК ВремяПрихода10,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода11 КАК ВремяПрихода11,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода12 КАК ВремяПрихода12,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода13 КАК ВремяПрихода13,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода14 КАК ВремяПрихода14,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода15 КАК ВремяПрихода15,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода16 КАК ВремяПрихода16,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода17 КАК ВремяПрихода17,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода18 КАК ВремяПрихода18,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода19 КАК ВремяПрихода19,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода20 КАК ВремяПрихода20,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода21 КАК ВремяПрихода21,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода22 КАК ВремяПрихода22,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода23 КАК ВремяПрихода23,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода24 КАК ВремяПрихода24,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода25 КАК ВремяПрихода25,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода26 КАК ВремяПрихода26,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода27 КАК ВремяПрихода27,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода28 КАК ВремяПрихода28,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода29 КАК ВремяПрихода29,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода30 КАК ВремяПрихода30,
		|	РабочийГрафикДанныеОВремени.ВремяПрихода31 КАК ВремяПрихода31,
		|	РабочийГрафикДанныеОВремени.ВремяУхода1 КАК ВремяУхода1,
		|	РабочийГрафикДанныеОВремени.ВремяУхода2 КАК ВремяУхода2,
		|	РабочийГрафикДанныеОВремени.ВремяУхода3 КАК ВремяУхода3,
		|	РабочийГрафикДанныеОВремени.ВремяУхода4 КАК ВремяУхода4,
		|	РабочийГрафикДанныеОВремени.ВремяУхода5 КАК ВремяУхода5,
		|	РабочийГрафикДанныеОВремени.ВремяУхода6 КАК ВремяУхода6,
		|	РабочийГрафикДанныеОВремени.ВремяУхода7 КАК ВремяУхода7,
		|	РабочийГрафикДанныеОВремени.ВремяУхода8 КАК ВремяУхода8,
		|	РабочийГрафикДанныеОВремени.ВремяУхода9 КАК ВремяУхода9,
		|	РабочийГрафикДанныеОВремени.ВремяУхода10 КАК ВремяУхода10,
		|	РабочийГрафикДанныеОВремени.ВремяУхода11 КАК ВремяУхода11,
		|	РабочийГрафикДанныеОВремени.ВремяУхода12 КАК ВремяУхода12,
		|	РабочийГрафикДанныеОВремени.ВремяУхода13 КАК ВремяУхода13,
		|	РабочийГрафикДанныеОВремени.ВремяУхода14 КАК ВремяУхода14,
		|	РабочийГрафикДанныеОВремени.ВремяУхода15 КАК ВремяУхода15,
		|	РабочийГрафикДанныеОВремени.ВремяУхода16 КАК ВремяУхода16,
		|	РабочийГрафикДанныеОВремени.ВремяУхода17 КАК ВремяУхода17,
		|	РабочийГрафикДанныеОВремени.ВремяУхода18 КАК ВремяУхода18,
		|	РабочийГрафикДанныеОВремени.ВремяУхода19 КАК ВремяУхода19,
		|	РабочийГрафикДанныеОВремени.ВремяУхода20 КАК ВремяУхода20,
		|	РабочийГрафикДанныеОВремени.ВремяУхода21 КАК ВремяУхода21,
		|	РабочийГрафикДанныеОВремени.ВремяУхода22 КАК ВремяУхода22,
		|	РабочийГрафикДанныеОВремени.ВремяУхода23 КАК ВремяУхода23,
		|	РабочийГрафикДанныеОВремени.ВремяУхода24 КАК ВремяУхода24,
		|	РабочийГрафикДанныеОВремени.ВремяУхода25 КАК ВремяУхода25,
		|	РабочийГрафикДанныеОВремени.ВремяУхода26 КАК ВремяУхода26,
		|	РабочийГрафикДанныеОВремени.ВремяУхода27 КАК ВремяУхода27,
		|	РабочийГрафикДанныеОВремени.ВремяУхода28 КАК ВремяУхода28,
		|	РабочийГрафикДанныеОВремени.ВремяУхода29 КАК ВремяУхода29,
		|	РабочийГрафикДанныеОВремени.ВремяУхода30 КАК ВремяУхода30,
		|	РабочийГрафикДанныеОВремени.ВремяУхода31 КАК ВремяУхода31,
		|	РабочийГрафикДанныеОВремени.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Документ.РабочийГрафик.ДанныеОВремени КАК РабочийГрафикДанныеОВремени
		|ГДЕ
		|	РабочийГрафикДанныеОВремени.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", МассивОбъектов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоСтрокамТЧ = РезультатЗапроса.ВЫгрузить();
	


	Макет = УправлениеПечатью.ПолучитьМакет("Документ.РабочийГрафик.МакетТабель", КодЯзыкаПечать);

	ОбластьЗаголовок     = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьДоДня");
	ОбластьСтрокаТаблицыСотрудник = Макет.ПолучитьОбласть("ОбластьСотрудник|ОбластьДоДня");
	ОбластьСтрокаТаблицыВремя = Макет.ПолучитьОбласть("ОбластьСотрудник|ОбластьДень");
	ОбластьКолонкаТаблицы = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьДень");
	ОбластьКолонкаТаблицыПлан = Макет.ПолучитьОбласть("ОбластьПлан|ОбластьДень");

	ТабличныйДокумент.Вывести(ОбластьЗаголовок); 
	ОбластьПлан = Макет.ПолучитьОбласть("ОбластьПлан|ОбластьДоДня");

			НомерДняНачалаПериода = День(ОбщегоНазначения.ПолучитьЗначениеРеквизита(МассивОбъектов,"ДатаНачалаПериода"));
			НомерДняОкончанияПериода = День(ОбщегоНазначения.ПолучитьЗначениеРеквизита(МассивОбъектов,"ДатаОкончанияПериода"));
			
			Для НомерДня = НомерДняНачалаПериода По НомерДняОкончанияПериода Цикл
				ОбластьКолонкаТаблицы.Параметры.День = ПолучитДеньСтрокой(МассивОбъектов,НомерДня);	
				ТабличныйДокумент.Присоединить(ОбластьКолонкаТаблицы); 
			КонецЦикла;
			
			ТабличныйДокумент.Вывести(ОбластьПлан); 
			Для НомерДня = НомерДняНачалаПериода По НомерДняОкончанияПериода Цикл
				ОбластьКолонкаТаблицыПлан.Параметры.ПланПродаж = ПолучитьПланПродаж(МассивОбъектов,НомерДня);	
				ТабличныйДокумент.Присоединить(ОбластьКолонкаТаблицыПлан); 
				
			КонецЦикла;
	
			Для Каждого строка из ВыборкаПоСтрокамТЧ цикл
				ОбластьСтрокаТаблицыСотрудник.Параметры.Сотрудник = 	строка.Сотрудник;
				ОбластьСтрокаТаблицыСотрудник.Параметры.Должность = 	строка.Должность;
				ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыСотрудник); 
				Для НомерДня = НомерДняНачалаПериода По НомерДняОкончанияПериода Цикл      
					ОбластьСтрокаТаблицыВремя.Параметры.Время = Формат(строка["ВремяПрихода" + НомерДня],"ДФ=HH:mm") + " - " + Формат(строка["ВремяУхода" + НомерДня],"ДФ=HH:mm");	
					ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыВремя); 
		        КонецЦикла;
				
			КонецЦикла;

	//	ЗАГОЛОВОК

	ТабличныйДокумент.АвтоМасштаб = Истина;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьАктаПереоценкиТоваровНаСкладах()


Функция ПолучитДеньСтрокой(МассивОбъектов,НомерДня)
	Месяц =  НачалоМесяца(ОбщегоНазначения.ПолучитьЗначениеРеквизита(МассивОбъектов,"ДатаНачалаПериода"));
	
		
		ТекущийДень = Дата(Год(Месяц), Месяц(Месяц), НомерДня);
		
		ДеньНедели = ДеньНедели(ТекущийДень);
		
		Разделить = " ";
		
		//Разделить = ?(Ложь, Символы.ПС, " ");
		
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								"%1%2%3", НомерДня, Разделить, Формат(ТекущийДень, "ДФ=ддд"));
		
КонецФункции

 Функция ПолучитьПланПродаж(МассивОбъектов,НомерДня) 
	 	Месяц =  НачалоМесяца(ОбщегоНазначения.ПолучитьЗначениеРеквизита(МассивОбъектов,"ДатаНачалаПериода"));
		
		ТекущийДень = Дата(Год(Месяц), Месяц(Месяц), НомерДня);

	 
	 Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ПланПродажПоЧасам.ПланПродаж) КАК ПланПродаж
		|ИЗ
		|	РегистрСведений.ПланПродажПоЧасам КАК ПланПродажПоЧасам
		|ГДЕ
		|	ПланПродажПоЧасам.Период МЕЖДУ &ПериодС И &ПериодПо
		|	И ПланПродажПоЧасам.Организация = &Организация
		|	И ПланПродажПоЧасам.Магазин = &Магазин";
	
	Запрос.УстановитьПараметр("ПериодС", НачалоДня(ТекущийДень));
	Запрос.УстановитьПараметр("ПериодПо", КонецДня(ТекущийДень));
	Запрос.УстановитьПараметр("Организация", ОбщегоНазначения.ПолучитьЗначениеРеквизита(МассивОбъектов,"Организация"));
	Запрос.УстановитьПараметр("Магазин", ОбщегоНазначения.ПолучитьЗначениеРеквизита(МассивОбъектов,"Магазин"));
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() тогда
		План = "";
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	Пока выборка.Следующий() цикл
		План = Формат(выборка.ПланПродаж,"ЧДЦ=");	
	КонецЦикла;
	Возврат план;	
КонецФункции


#КонецОбласти

#КонецЕсли


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
//	LNK 25.04.2017 09:43:32
	Список.Параметры.УстановитьЗначениеПараметра("Организация"
		, ?(ОбменДаннымиПовтИсп.ЭтоГлавныйУзел(), Неопределено, ПараметрыСеанса.ТекущаяОрганизация));
	Список.Параметры.УстановитьЗначениеПараметра("Магазин"
		, ?(ОбменДаннымиПовтИсп.ЭтоГлавныйУзел(), Неопределено, ПараметрыСеанса.ТекущийМагазин));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьСклада();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)

	Если ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Магазин = Настройки.Получить("Магазин");
		Склад   = Настройки.Получить("Склад");

	Иначе

		Магазин = ПараметрыСеанса.ТекущийМагазин;
		Склад   = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Магазин, "СкладПродажи");

	КонецЕсли;

	УстановитьОтборДинамическогоСписка("Магазин");
	УстановитьОтборДинамическогоСписка("Склад");
	
КонецПроцедуры

//	LNK 25.04.2017 14:42:11
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ПользовательИзменилТекущуюОрганизацию" Тогда

		Если НЕ Параметр.Организация = Список.Параметры.Элементы.Найти("Организация").Значение Тогда

			Список.Параметры.УстановитьЗначениеПараметра("Организация", Параметр.Организация);

		КонецЕсли;

		Если НЕ Магазин = Параметр.Магазин Тогда

			Список.Параметры.УстановитьЗначениеПараметра("Магазин", Параметр.Магазин);
			Магазин = Параметр.Магазин;
			Склад   = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Магазин, "СкладПродажи");
			ОтборМагазинПриИзменении(Неопределено);

		КонецЕсли;
		
		Элементы.Список.Обновить();

	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтборМагазинПриИзменении(Элемент)
	
	УстановитьВсеОтборыДинамическогоСписка();
	УстановитьДоступностьСклада();

КонецПроцедуры

&НаКлиенте
Процедура ОтборСкладПриИзменении(Элемент)
	
	УстановитьОтборДинамическогоСписка("Склад");

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьВсеОтборыДинамическогоСписка()
	
	УстановитьОтборДинамическогоСписка("Магазин");
	УстановитьОтборДинамическогоСписка("Склад");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборДинамическогоСписка(ИмяРеквизита)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список,
		ИмяРеквизита,
		ЭтотОбъект[ИмяРеквизита],
		ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизита]));
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьСклада()

	Элементы.ОтборСклад.ТолькоПросмотр = НЕ ЗначениеЗаполнено(Магазин);

КонецПроцедуры




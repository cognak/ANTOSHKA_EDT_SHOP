
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	Документы.ПересортицаТоваров.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ПроведениеСервер.ОтразитьДвиженияПоРегистру("ТоварыНаМагазинах", ДополнительныеСвойства, Движения, Отказ); 
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОформлениюИзлишковНедостач(ДополнительныеСвойства, Движения, Отказ);

	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
//	LNK 16.02.2017 14:33:05
	ЗаполнениеОбъектовСобытия.ОбщиеДействияПередЗаписью(ЭтотОбъект, Отказ);

	ДополнительныеСвойства.Вставить("ЭтоНовый"	 , ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	ДополнительныеСвойства.Вставить("Проведен"   , ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Проведен", Ложь));
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;	
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);

//	LNK 10.09.2016 10:19:52
//	NAV:БлокировкаДанныхУчестьДокументВNavision
	Если НЕ ТехническаяПоддержкаВызовСервера.ИсключительныйРежим() И НЕ ЭтоНовый() Тогда

		Если ВнешниеИсточникиСобытия.ПередачаNavision(Ссылка) Тогда

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ «" + СокрЛП(Ссылка) + "» учтён в КСУ Navision! Изменения запрещены. Отказано.", Ссылка,,, Отказ);
			Возврат;

		КонецЕсли;

	КонецЕсли;

//	LNK 02.08.2021 05:44:04
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение
	И НЕ (Отказ ИЛИ ВнешниеИсточникиСобытия.ПередачаNavision(Ссылка))
	Тогда

		ДополнительныеСвойства.Вставить("РегистрацияПередачиВNavision", Истина);

	КонецЕсли;

КонецПроцедуры

//	LNK 27.12.2016 14:29:34
Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда

		Возврат;

	КонецЕсли;	

//	NAV:БлокировкаДанныхУчестьДокументВNavision
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение
	И	 ОбщегоНазначенияКлиентСервер.ЗначениеКлючаСтруктуры(ДополнительныеСвойства, "РегистрацияПередачиВNavision", Ложь) Тогда

		ВнешниеИсточникиСобытия.УстановитьПереданоNavision(Ссылка, ОбщегоНазначенияРТСервер.ПолучитьМагазиныПоОбъекту(Ссылка)
			, ОбщегоНазначенияКлиентСервер.ЗначениеКлючаСтруктуры(ДополнительныеСвойства, "РесурсВидПередачиВNavision", Перечисления.ВидыПередачиNavision.ПереданВNavision),,,, Истина);

	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.ДокументОснование;
		Иначе
			ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения);
		КонецЕсли;
	КонецЕсли;
	
	ДокументОснование = ЗапасыСервер.ПолучитьОснованиеОформленияИзлишковНедостачТоваров(ДанныеЗаполнения);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриказНаПроведениеИнвентаризацииТоваров") 
	 ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОрдерНаОтражениеРезультатовПересчетовТоваров") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		
		ЗаполнитьЗначенияСвойств(
			ЭтотОбъект, 
			ДанныеЗаполнения,
			"Склад, Магазин, Организация");
			
		
		Если ЗначениеЗаполнено(Магазин)
			И Магазин.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
			И Не ЗначениеЗаполнено(ДокументОснование) Тогда
			
			ТекстСообщения = НСтр("ru='В магазине ""%1%"" используется ордерная схема для отражения излишков и недостач, поэтому ""Пересортица товаров"" нужно вводить по основанию.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,"%1%",Склад);
			
			ВызватьИсключение ТекстСообщения;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если Магазин.СкладУправляющейСистемы Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Склад");
	КонецЕсли;
	
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ, Новый Структура("СуффиксДопРеквизита", "Оприходование"));
	
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьВыборНоменклатуры(ЭтотОбъект, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Инициализирует документ
//
Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Ответственный = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("Товары") Тогда
			
			Товары.Загрузить(ДанныеЗаполнения.Товары);
			
		КонецЕсли;
		
	КонецЕсли;
	
	
	Магазин       = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(Магазин);
	Организация   = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация,Ответственный);	
	Склад         = ЗначениеНастроекПовтИсп.ПолучитьСкладПоступленияПоУмолчанию(Магазин,,Склад, Ответственный);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Склад")
			И НЕ ЗначениеЗаполнено(Склад) Тогда
			Если ЗначениеЗаполнено(Магазин) Тогда
				Если НЕ Справочники.Склады.ПроверитьПринадлежностьСкладаМагазину(Магазин, ДанныеЗаполнения.Склад) Тогда
					ДанныеЗаполнения.Склад = Справочники.Склады.ПустаяСсылка();
				КонецЕсли;
			Иначе
				Магазин = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения.Склад, "Магазин");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

//Процедура формирует массив имен регистров для контроля проведения
//
Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;

//	При проведении выполняется контроль превышения остатков на складах
//	LNK 14.11.2016 11:11:43
	Если ОбщегоНазначенияРТ.НужноЗаполнитьСписокРегистровДляКонтроля(ДополнительныеСвойства.РежимЗаписи, Дата) Тогда
		
		Массив.Добавить(Движения.ТоварыНаСкладах);
		
	КонецЕсли;

	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		
		ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
		
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЭтоНовый()	//	LNK 19.11.2022 06:44:58
	ИЛИ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "СтатусКассовогоДня") = Перечисления.СтатусыКассовойСмены.Открыта Тогда

			ПроверитьКонфликты = Истина;

	Иначе	ПроверитьКонфликты = Ложь;

	КонецЕсли;

	Если ПроверитьКонфликты Тогда

		ПлохойКассовыйДень = РозничныеПродажиСервер.ПолучитьКонфликтыКассовогоДня(Магазин, Ссылка, НачалоКассовогоДня, ОкончаниеКассовогоДня);

		Если НЕ ПлохойКассовыйДень = Неопределено Тогда

			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"За даним магазином на дату %1 вже зареєстровано %2 (мають місце конфлікти часу)",
				Дата,
				ПлохойКассовыйДень
			);

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ЭтотОбъект,
				,,
				Отказ
			);

		КонецЕсли;

	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ОкончаниеКассовогоДня)
		 И ЗначениеЗаполнено(СтатусКассовогоДня)
		 И СтатусКассовогоДня <> Перечисления.СтатусыКассовойСмены.Открыта Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Поле «Закінчення касового дня» не заповнено", 
			ЭтотОбъект, 
			"ОкончаниеКассовогоДня"
			,,
			Отказ);
		
	КонецЕсли;

	Если ЗначениеЗаполнено(ОкончаниеКассовогоДня)
		 И ОкончаниеКассовогоДня < НачалоКассовогоДня Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Час початку касового дня більше часу закінчення касового дня", 
			ЭтотОбъект, 
			"ОкончаниеКассовогоДня"
			,,
			Отказ);
		
	КонецЕсли;

	Если ЗначениеЗаполнено(СтатусКассовогоДня)
		 И СтатусКассовогоДня = Перечисления.СтатусыКассовойСмены.Открыта
		 И НачалоКассовогоДня <> Дата
		 И НЕ ТехническаяПоддержкаВызовСервера.ИсключительныйРежим()	Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Час початку касового дня відрізняється від дати документа", 
			ЭтотОбъект, 
			"НачалоКассовогоДня"
			,,
			Отказ);
		
	КонецЕсли;

	Если ЗначениеЗаполнено(СтатусКассовогоДня)
		 И СтатусКассовогоДня <> Перечисления.СтатусыКассовойСмены.Открыта
		 И ОкончаниеКассовогоДня <> Дата
		 И НЕ ТехническаяПоддержкаВызовСервера.ИсключительныйРежим()	Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Час закінчення касового дня відрізняється від дати документа", 
			ЭтотОбъект, 
			"ОкончаниеКассовогоДня"
			,,
			Отказ);
		
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
//	LNK 16.02.2017 14:33:05
	ЗаполнениеОбъектовСобытия.ОбщиеДействияПередЗаписью(ЭтотОбъект, Отказ);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый"   , ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	ДополнительныеСвойства.Вставить("Проведен"   , ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Проведен"));
	ДополнительныеСвойства.Вставить("СтатусКассовогоДня", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "СтатусКассовогоДня"));

	ДополнительныеСвойства.Вставить("СписокОшибок", Новый Массив);	//	LNK 02.01.2019 09:47:27

	Если ОбменДанными.Загрузка Тогда

		Возврат;

	КонецЕсли;
	
//	LNK 16.04.2018 11:55:12	- закрытие КД допустимо только в узле рождения!
	Если НЕ ЭтоНовый() И СтатусКассовогоДня = Перечисления.СтатусыКассовойСмены.Закрыта И ДополнительныеСвойства.СтатусКассовогоДня = Перечисления.СтатусыКассовойСмены.Открыта Тогда

		Если НЕ УзелСоздания = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().ЭлементСтруктуры Тогда

			ОписаниеОшибки = "Відмовлено! Закриття касового дня допустиме лише у вузлі його створення!";

			ДополнительныеСвойства.СписокОшибок.Добавить(ОписаниеОшибки);
			ВызватьИсключение ОписаниеОшибки;

		КонецЕсли;

	КонецЕсли;

	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);
	
//	LNK 20.09.2016 09:50:56
//	NAV:БлокировкаДанныхУчестьДокументВNavision
	Если НЕ ТехническаяПоддержкаВызовСервера.ИсключительныйРежим() И НЕ ЭтоНовый() Тогда

		Если ВнешниеИсточникиСобытия.ПередачаNavision(Ссылка) Тогда

			ОписаниеОшибки = "Документ «" + СокрЛП(Ссылка) + "» враховано у КСУ Navision! Зміни заборонені. Відмовлено.";
			ДополнительныеСвойства.СписокОшибок.Добавить(ОписаниеОшибки);	//	LNK 02.01.2019 09:49:27
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки, Ссылка,,, Отказ);
			Возврат;

		КонецЕсли;

		Если  ДополнительныеСвойства.Проведен = Истина И РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения
			И ДополнительныеСвойства.СтатусКассовогоДня = Перечисления.СтатусыКассовойСмены.Закрыта	Тогда

			ОписаниеОшибки = "Документ «" + СокрЛП(Ссылка) + "» закритий! Скасування проведення неможливе. Відмовлено.";
			ДополнительныеСвойства.СписокОшибок.Добавить(ОписаниеОшибки);	//	LNK 02.01.2019 09:49:27
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки, Ссылка,,, Отказ);
			Возврат;

		КонецЕсли;

	КонецЕсли;

	Если ЭтоНовый() Тогда	//	LNK 11.01.2018 10:30:48

		ОписаниеОшибки = "";
		СтруктураДня   = Новый Структура("Магазин, Дата, НачалоКассовогоДня");
		ЗаполнитьЗначенияСвойств(СтруктураДня, ЭтотОбъект);

		Если НЕ РозничныеПродажиСервер.ПроверитьВозможностьОткрытияКассовогоДня(СтруктураДня, Отказ, ОписаниеОшибки) Тогда

			ТекстСообщения = "Відмовлено. Відкриття касового дня є неприпустимим!
                            |Перевірка можливості відкриття виявила такі проблеми:
                            |%ДополнительноеОписание%'";
			ДополнительныеСвойства.СписокОшибок.Добавить(ОписаниеОшибки);	//	LNK 02.01.2019 09:49:27

			ВызватьИсключение СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ОписаниеОшибки);

		КонецЕсли;

	ИначеЕсли НЕ СтатусКассовогоДня = Перечисления.СтатусыКассовойСмены.Закрыта Тогда	//	LNK 11.09.2020 06:50:07

		Если ОбщегоНазначенияКлиентСервер.ЗначениеКлючаСтруктуры(ДополнительныеСвойства, "РегистрацияПередачиВNavision", Ложь) Тогда

		//	Какая-то проблема возникла.. отсекаем.
			ОписаниеОшибки = "Передача до NAV можлива тільки для ЗАКРИТОГО касового дня!";
			ДополнительныеСвойства.СписокОшибок.Добавить(ОписаниеОшибки);
			ВызватьИсключение ОписаниеОшибки;

		КонецЕсли;

	ИначеЕсли СтатусКассовогоДня = Перечисления.СтатусыКассовойСмены.Закрыта Тогда

		Если НЕ СтатусКассовогоДня = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "СтатусКассовогоДня")	Тогда
		
		//	То есть сейчас идет процесс закрытия кассового дня... а можно ли его закрыть?

			ТаблицаКассовыхСмен = РозничныеПродажиСервер.ПолучитьСостояниеКассовыхСменКассовогоДня(Ссылка);

			СтрокиОткрытыеСмены = ТаблицаКассовыхСмен.НайтиСтроки(Новый Структура("СтатусКассовойСмены", Перечисления.СтатусыКассовойСмены.Открыта));

			Если НЕ СтрокиОткрытыеСмены.Количество() = 0 Тогда

				ОписаниеОшибки = "";

				Для каждого СтрокаТаблицы Из СтрокиОткрытыеСмены Цикл

					ОписаниеОшибки = ОписаниеОшибки + ?(ПустаяСтрока(ОписаниеОшибки), "", ", ")
						+ СтрокаТаблицы.КассоваяСменаПредставление;

				КонецЦикла;

				ДополнительныеСвойства.СписокОшибок.Добавить(ОписаниеОшибки);	//	LNK 02.01.2019 09:49:27
				ВызватьИсключение "Закрити «" + Ссылка + "» неможливо, тому що в цьому дні існують відкриті касові зміни:" + Символы.ПС + ОписаниеОшибки;

			Иначе

			//	Вроде как, всё хорошо.. но могут быть "рваные" отчеты о розничных продажах, непроведенные и БЕЗ указания кассовой смены!
			//	необходимо проверить.
				ПроверитьПотерянныеОтчетыОРозничныхПродажах();

			КонецЕсли;

		КонецЕсли;

		Если ОбщегоНазначенияКлиентСервер.ЗначениеКлючаСтруктуры(ДополнительныеСвойства, "РегистрацияПередачиВNavision", Ложь) Тогда

			УстановитьПривилегированныйРежим(Истина);

		//	Имеет место интерактивная установка флага передачи в КСУ.
		//	Проверим, нет ли НЕпроведенных документов "ОтчетОРозничныхПродажах"?

			ОписаниеОшибки = "";

			Если НЕ РозничныеПродажиСервер.ПроверитьОтчетыОПродажахЗаКассовыйДень(Магазин, Ссылка, ОписаниеОшибки) Тогда

				ТекстСообщения = "Під час передачі в КСУ Navision сталася помилка.
	                            |Надсилання даних про продаж неможливе
								|з наступної причини:
	                            |%ДополнительноеОписание%";
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ОписаниеОшибки);
				ДополнительныеСвойства.СписокОшибок.Добавить(ОписаниеОшибки);	//	LNK 02.01.2019 09:49:27
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);

			Иначе

				ДанныеУзла = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла();

				Если УзелСоздания = ОбщегоНазначенияКлиентСервер.ЗначениеКлючаСтруктуры(ДанныеУзла, "ЭлементСтруктуры") Тогда

				//	Необходимо выполнять перед назначением контрольной суммы (используется при выгрузке продаж в Navision),
				//	так как суммы реализаций товаров (НЕ розничные продажи) тоже должны попасть в контрольную сумму.
					ВыполнитьПроцедуруРегистрацииNavisionВсехПодчинённыхОбъектов(Отказ);

				//	Контрольную сумму заполняем только в узле рождения данного документа!
					СуммаДокумента = РозничныеПродажиСервер.КонтрольнаяСуммаКассовогоДня(Ссылка, Истина);

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

//	LNK 20.09.2016 09:50:56
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда

		Возврат;
		
	КонецЕсли;

//	NAV:БлокировкаДанныхУчестьДокументВNavision
	Если ОбщегоНазначенияКлиентСервер.ЗначениеКлючаСтруктуры(ДополнительныеСвойства, "РегистрацияПередачиВNavision", Ложь) Тогда

		ВнешниеИсточникиСобытия.УстановитьПереданоNavision(Ссылка, ОбщегоНазначенияРТСервер.ПолучитьМагазиныПоОбъекту(Ссылка),,,,, Истина);

	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение

// Инициализирует документ
//
Процедура ИнициализироватьДокумент()
	
	Магазин     = ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(Магазин);
	
	ТекущаяДатаСеанса     = ТекущаяДатаСеанса();
	НачалоКассовогоДня    = НачалоДня(ТекущаяДатаСеанса);
	ОкончаниеКассовогоДня = КонецДня(ТекущаяДатаСеанса);
	
КонецПроцедуры

// Заполняет отчет о розничных продажах в соответствии с отбором.
//
// Параметры
//  ДанныеЗаполнения - Структура со значениями отбора
//
Процедура ЗаполнитьДокументПоОтбору(ДанныеЗаполнения)
	
	Если ДанныеЗаполнения.Свойство("Магазин") Тогда
		
		РеквизитыМагазина = Справочники.Магазины.РеквизитыМагазина(ДанныеЗаполнения.Магазин);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыМагазина);

		Магазин = ДанныеЗаполнения.Магазин;
		
	КонецЕсли;
	
КонецПроцедуры

//	LNK 20.09.2016 10:18:16
Процедура ВыполнитьПроцедуруРегистрацииNavisionВсехПодчинённыхОбъектов(Отказ)

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаВедущая.Дата КАК Период,
	|	ТаблицаВедущая.Магазин КАК Магазин,
	|	ТаблицаВедущая.Ссылка КАК КассовыйДень,
	|	ТаблицаВедущая.НачалоКассовогоДня КАК НачалоКассовогоДня,
	|	ТаблицаВедущая.ОкончаниеКассовогоДня КАК ОкончаниеКассовогоДня
	|ПОМЕСТИТЬ Ведущая
	|ИЗ
	|	Документ.КассовыйДень КАК ТаблицаВедущая
	|ГДЕ
	|	ТаблицаВедущая.Ссылка = &КассовыйДень
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КассовыйДень
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСмены.Дата КАК Период,
	|	ТаблицаСмены.Ссылка КАК Регистратор,
	|	ТаблицаСмены.Магазин КАК Магазин
	|ПОМЕСТИТЬ РеестрСмен
	|ИЗ
	|	Ведущая КАК Ведущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КассоваяСмена КАК ТаблицаСмены
	|		ПО Ведущая.КассовыйДень = ТаблицаСмены.КассовыйДень
	|ГДЕ
	|	ТаблицаСмены.Проведен
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСмены.Период КАК Период,
	|	ТаблицаСмены.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаУчтено.КассовыйДень, ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОбновитьЗаписи
	|ИЗ
	|	РеестрСмен КАК ТаблицаСмены
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчтено
	|		ПО ТаблицаСмены.Регистратор = ТаблицаУчтено.Объект
	|			И ТаблицаСмены.Магазин = ТаблицаУчтено.Магазин
	|ГДЕ
	|	(ТаблицаУчтено.Объект ЕСТЬ NULL
	|			ИЛИ ТаблицаУчтено.КассовыйДень = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОтчетыОПродажах.Дата,
	|	ТаблицаОтчетыОПродажах.Ссылка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаУчтено.КассовыйДень, ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	РеестрСмен КАК РеестрСмен
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ТаблицаОтчетыОПродажах
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчтено
	|			ПО ТаблицаОтчетыОПродажах.Ссылка = ТаблицаУчтено.Объект
	|				И ТаблицаОтчетыОПродажах.Магазин = ТаблицаУчтено.Магазин
	|		ПО РеестрСмен.Регистратор = ТаблицаОтчетыОПродажах.КассоваяСмена
	|ГДЕ
	|	ТаблицаОтчетыОПродажах.Проведен
	|	И (ТаблицаУчтено.Объект ЕСТЬ NULL
	|			ИЛИ ТаблицаУчтено.КассовыйДень = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОрдеры.Дата,
	|	ТаблицаОрдеры.Ссылка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаУчтено.КассовыйДень, ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаПриходныйОрдер.Дата КАК Дата,
	|		ТаблицаПриходныйОрдер.Ссылка КАК Ссылка,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаПриходныйОрдер.Касса.Магазин, ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|				ТОГДА ЕСТЬNULL(ТаблицаПриходныйОрдер.КассаККМ.Магазин, НЕОПРЕДЕЛЕНО)
	|			ИНАЧЕ ТаблицаПриходныйОрдер.Касса.Магазин
	|		КОНЕЦ КАК Магазин
	|	ИЗ
	|		Ведущая КАК Ведущая
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер КАК ТаблицаПриходныйОрдер
	|			ПО (Ведущая.Магазин В (ТаблицаПриходныйОрдер.Касса.Магазин, ТаблицаПриходныйОрдер.КассаККМ.Магазин))
	|				И (ВЫБОР
	|					КОГДА Ведущая.ОкончаниеКассовогоДня = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ТаблицаПриходныйОрдер.Дата >= Ведущая.НачалоКассовогоДня
	|					ИНАЧЕ ТаблицаПриходныйОрдер.Дата МЕЖДУ Ведущая.НачалоКассовогоДня И Ведущая.ОкончаниеКассовогоДня
	|				КОНЕЦ)
	|	ГДЕ
	|		ТаблицаПриходныйОрдер.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаРасходныйОрдер.Дата,
	|		ТаблицаРасходныйОрдер.Ссылка,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаРасходныйОрдер.Касса.Магазин, ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|				ТОГДА ЕСТЬNULL(ТаблицаРасходныйОрдер.КассаККМ.Магазин, НЕОПРЕДЕЛЕНО)
	|			ИНАЧЕ ТаблицаРасходныйОрдер.Касса.Магазин
	|		КОНЕЦ
	|	ИЗ
	|		Ведущая КАК Ведущая
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК ТаблицаРасходныйОрдер
	|			ПО (Ведущая.Магазин В (ТаблицаРасходныйОрдер.Касса.Магазин, ТаблицаРасходныйОрдер.КассаККМ.Магазин))
	|				И (ВЫБОР
	|					КОГДА Ведущая.ОкончаниеКассовогоДня = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ТаблицаРасходныйОрдер.Дата >= Ведущая.НачалоКассовогоДня
	|					ИНАЧЕ ТаблицаРасходныйОрдер.Дата МЕЖДУ Ведущая.НачалоКассовогоДня И Ведущая.ОкончаниеКассовогоДня
	|				КОНЕЦ)
	|	ГДЕ
	|		ТаблицаРасходныйОрдер.Проведен) КАК ТаблицаОрдеры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчтено
	|		ПО ТаблицаОрдеры.Ссылка = ТаблицаУчтено.Объект
	|			И ТаблицаОрдеры.Магазин = ТаблицаУчтено.Магазин
	|ГДЕ
	|	(ТаблицаУчтено.Магазин ЕСТЬ NULL
	|			ИЛИ ТаблицаУчтено.КассовыйДень = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРеализаций.Дата,
	|	ТаблицаРеализаций.Ссылка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаУчтено.КассовыйДень, ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Ведущая КАК Ведущая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров КАК ТаблицаРеализаций
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчтено
	|			ПО (ТаблицаУчтено.Объект ССЫЛКА Документ.РеализацияТоваров)
	|				И ТаблицаРеализаций.Ссылка = ТаблицаУчтено.Объект
	|				И ТаблицаРеализаций.Магазин = ТаблицаУчтено.Магазин
	|		ПО Ведущая.Магазин = ТаблицаРеализаций.Магазин
	|ГДЕ
	|	ТаблицаРеализаций.Проведен
	|	И (ТаблицаУчтено.Магазин ЕСТЬ NULL
	|			ИЛИ ТаблицаУчтено.КассовыйДень = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВозвратов.Дата,
	|	ТаблицаВозвратов.Ссылка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаУчтено.КассовыйДень, ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Ведущая КАК Ведущая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ТаблицаВозвратов
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчтено
	|			ПО (ТаблицаУчтено.Объект ССЫЛКА Документ.ВозвратТоваровОтПокупателя)
	|				И ТаблицаВозвратов.Ссылка = ТаблицаУчтено.Объект
	|				И ТаблицаВозвратов.Магазин = ТаблицаУчтено.Магазин
	|		ПО Ведущая.Магазин = ТаблицаВозвратов.Магазин
	|ГДЕ
	|	ТаблицаВозвратов.Проведен
	|	И (ТаблицаУчтено.Магазин ЕСТЬ NULL
	|			ИЛИ ТаблицаУчтено.КассовыйДень = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаЗаказы.Дата,
	|	ТаблицаЗаказы.Ссылка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаУчтено.КассовыйДень, ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Ведущая КАК Ведущая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ТаблицаЗаказы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчтено
	|			ПО (ТаблицаУчтено.Объект ССЫЛКА Документ.ЗаказПоставщику)
	|				И ТаблицаЗаказы.Ссылка = ТаблицаУчтено.Объект
	|				И ТаблицаЗаказы.Магазин = ТаблицаУчтено.Магазин
	|		ПО Ведущая.Магазин = ТаблицаЗаказы.Магазин
	|ГДЕ
	|	ЛОЖЬ
	|	И ТаблицаЗаказы.Проведен
	|	И (ТаблицаУчтено.Магазин ЕСТЬ NULL
	|			ИЛИ ТаблицаУчтено.КассовыйДень = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОплатыКартой.Дата,
	|	ТаблицаОплатыКартой.Ссылка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаУчтено.КассовыйДень, ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Ведущая КАК Ведущая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОплатаОтПокупателяПлатежнойКартой КАК ТаблицаОплатыКартой
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчтено
	|			ПО (ТаблицаУчтено.Объект ССЫЛКА Документ.ОплатаОтПокупателяПлатежнойКартой)
	|				И ТаблицаОплатыКартой.Ссылка = ТаблицаУчтено.Объект
	|				И ТаблицаОплатыКартой.Магазин = ТаблицаУчтено.Магазин
	|		ПО (ТаблицаОплатыКартой.Дата МЕЖДУ Ведущая.НачалоКассовогоДня И Ведущая.ОкончаниеКассовогоДня)
	|			И (Ведущая.Магазин В (ТаблицаОплатыКартой.Магазин, ТаблицаОплатыКартой.ЭквайринговыйТерминал.Магазин, ТаблицаОплатыКартой.ЭквайринговыйТерминал.Касса.Магазин))
	|ГДЕ
	|	ТаблицаОплатыКартой.Проведен
	|	И (ТаблицаУчтено.Магазин ЕСТЬ NULL
	|			ИЛИ ТаблицаУчтено.КассовыйДень = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаБезналичнаяОплата.Дата,
	|	ТаблицаБезналичнаяОплата.Ссылка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаУчтено.КассовыйДень, ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)) = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Ведущая КАК Ведущая
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РегистрацияБезналичнойОплаты КАК ТаблицаБезналичнаяОплата
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчтено
	|			ПО (ТаблицаУчтено.Объект ССЫЛКА Документ.РегистрацияБезналичнойОплаты)
	|				И ТаблицаБезналичнаяОплата.Ссылка = ТаблицаУчтено.Объект
	|				И ТаблицаБезналичнаяОплата.Магазин = ТаблицаУчтено.Магазин
	|		ПО (ТаблицаБезналичнаяОплата.Дата МЕЖДУ Ведущая.НачалоКассовогоДня И Ведущая.ОкончаниеКассовогоДня)
	|			И Ведущая.Магазин = ТаблицаБезналичнаяОплата.Магазин
	|ГДЕ
	|	ТаблицаБезналичнаяОплата.Проведен
	|	И (ТаблицаУчтено.Магазин ЕСТЬ NULL
	|			ИЛИ ТаблицаУчтено.КассовыйДень = ЗНАЧЕНИЕ(Документ.КассовыйДень.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Ведущая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РеестрСмен"
	);
	Запрос.УстановитьПараметр("КассовыйДень", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда

		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл

			ВнешниеИсточникиСобытия.УстановитьПереданоNavision(Выборка.Регистратор
				, ОбщегоНазначенияРТСервер.ПолучитьМагазиныПоОбъекту(Выборка.Регистратор)
				, Перечисления.ВидыПередачиNavision.ТолькоБлокирован
				, Выборка.ОбновитьЗаписи
				,
				, Ссылка
				, Истина
			);

			Если ОбщегоНазначенияРТ.ЕстьРеквизитОбъекта("КассовыйДень", Выборка.Регистратор.Метаданные()) Тогда

				ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
				#Если _ Тогда
				ДокументОбъект = Документы.РеализацияТоваров.СоздатьДокумент();
				#КонецЕсли
				ДокументОбъект.КассовыйДень = Ссылка;
				ДокументОбъект.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
				ДокументОбъект.ОбменДанными.Загрузка = Истина;

				ДокументОбъект.Записать();

			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

//	LNK 23.05.2019 10:09:35
Процедура ПроверитьПотерянныеОтчетыОРозничныхПродажах()

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Представление КАК Представление
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Дата МЕЖДУ &НачалоКассовогоДня И &ОкончаниеКассовогоДня
	|	И ТаблицаДокумента.Магазин = &Магазин
	|	И НЕ ТаблицаДокумента.Проведен
	|	И НЕ ТаблицаДокумента.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка"
	);
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("НачалоКассовогоДня"   , НачалоКассовогоДня);
	Запрос.УстановитьПараметр("ОкончаниеКассовогоДня", ОкончаниеКассовогоДня);

	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		ОписаниеОшибки = "";

		Выборка = Результат.Выбрать();

		Пока Выборка.Следующий() Цикл

			ОписаниеОшибки = ОписаниеОшибки + ?(ПустаяСтрока(ОписаниеОшибки), "", Символы.ПС)
			+ Выборка.Представление;

		КонецЦикла;

		ОписаниеОшибки = "Отказано! В текущем кассовом дне обнаружены
		|непроведенные документы «Отчет о розничных продажах»:" + Символы.ПС + ОписаниеОшибки;

		ДополнительныеСвойства.СписокОшибок.Добавить(ОписаниеОшибки);	//	LNK 23.05.2019 10:39:45
		ВызватьИсключение ОписаниеОшибки;

	КонецЕсли;

КонецПроцедуры







#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(Объект,КартинкаСостоянияДокумента,СостояниеДокумента,РазрешеноПроведение);

	Если НЕ ИнтернетМагазин(Объект.Магазин) Тогда

	//	LNK 20.09.2016 09:35:33
	//	NAV:БлокировкаДанныхУчестьДокументВNavision
	//	Обработчик подсистемы "NAV"
		ВнешниеИсточникиСобытия.ДобавитьКнопкуУчестьВNavision(ЭтотОбъект, ЭтотОбъект.КоманднаяПанель);
	//	Оформление элементов в обработчике подсистемы "NAV"
		ВнешниеИсточникиСобытия.ПроверитьКнопкуУчестьВNavision(ЭтотОбъект,, УсловиеДоступностиКнопкиNAV());

	КонецЕсли;

	ПроверитьДоступностьКомандыВыгрузитьПродажиДляАрендодателя();

	УправлениеДоступомРТ.ПриСозданииФормыНаСервере(ЭтотОбъект);	//	LNK 17.10.2019 14:30:01

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
//	LNK 24.03.2017 08:52:24
	УстановитьКонтрольныеСуммы();

	УстановитьIDC();	//	LNK 23.01.2020 11:08:39
	
КонецПроцедуры

&НаКлиенте	//	LNK 12.01.2018 13:28:27
Процедура ПриОткрытии(Отказ)

	#Если НЕ ВебКлиент Тогда
	ПодключитьОбработчикОжидания("РегулярнаяПроверкаКнопкиУчестьВNavision", 15);
	#КонецЕсли

КонецПроцедуры

//	LNK 20.09.2016 09:36:14
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
//	NAV:БлокировкаДанныхУчестьДокументВNavision
	Если ИмяСобытия = "РегистрацияПередачиВNavision" Тогда

		ОбработкаОповещенияНаСервере(ИмяСобытия, Параметр, Источник);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте	//	LNK 13.04.2020 07:30:46
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	Если НЕ ИнтернетМагазин(Объект.Магазин)
	И	 ЭтотОбъект["РегистрацияПередачиВNavision"] = Истина
	И НЕ Объект.СтатусКассовогоДня = ПредопределенноеЗначение("Перечисление.СтатусыКассовойСмены.Закрыта") Тогда

		Отказ = Истина;
		ПоказатьОповещениеПользователя("Отказно в записи!",, "Кассовый день НЕ закрыт!" + Символы.ПС + "запись невозможна.", БиблиотекаКартинок.Ошибка32);

	КонецЕсли;

КонецПроцедуры

//	LNK 20.09.2016 09:37:10
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если НЕ ИнтернетМагазин(Объект.Магазин) Тогда

	//	LNK 20.09.2016 09:37:10
	//	NAV:БлокировкаДанныхУчестьДокументВNavision
	//	Управление блокировкой "УчётВNavision" подсистемы "NAV" (реквизит "РегистрацияПередачиВNavision" создается в обработчике ПриСозданииНаСервере)
		ТекущийОбъект.ДополнительныеСвойства.Вставить("РегистрацияПередачиВNavision", ЭтотОбъект["РегистрацияПередачиВNavision"]);

	КонецЕсли;

КонецПроцедуры

//	LNK 20.09.2016 09:37:54
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
//	LNK 20.09.2016 09:37:54
//	NAV:БлокировкаДанныхУчестьДокументВNavision
//	Оформление элементов в обработчике подсистемы "NAV"
	ВнешниеИсточникиСобытия.ПроверитьКнопкуУчестьВNavision(ЭтотОбъект,, УсловиеДоступностиКнопкиNAV());
	
//	LNK 24.03.2017 08:52:24
	УстановитьКонтрольныеСуммы();

	УстановитьIDC();	//	LNK 23.01.2020 11:08:39

//	LNK 04.06.2023 05:57:11
	ПроверитьДоступностьКомандыВыгрузитьПродажиДляАрендодателя();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
	Если НЕ ИнтернетМагазин(Объект.Магазин) Тогда

	//	LNK 20.09.2016 09:38:50
	//	NAV:БлокировкаДанныхУчестьДокументВNavision
		ВнешниеИсточникиКлиент.ВыполнитьОповещениеПередачиДокументаВNavision(Объект.Ссылка, Объект.Ссылка, ЭтотОбъект["РегистрацияПередачиВNavision"]);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьДанныеКассовогоДняCRM(Команда)

	ПроверитьДанныеКассовогоДняCRMНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура АктуализироватьСуммуПродаж(Команда)

	АктуализироватьСуммуПродажНаСервере();

КонецПроцедуры

&НаКлиенте	//	LNK 04.06.2023 05:48:46
Процедура КомандаВыгрузитьПродажиДляАрендодателя(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаВыгрузитьПродажиДляАрендодателяЗавершение", ЭтотОбъект);

	ПоказатьВопрос(ОписаниеОповещения
		, "Будет произведена выгрузка продаж
		  |по текущему кассовому дню
		  |Подтвердите своё решение"
		, РежимДиалогаВопрос.ОКОтмена
		, 60
		, КодВозвратаДиалога.ОК
		, "Экспорт для арендодателя"
		, КодВозвратаДиалога.Отмена
	);

КонецПроцедуры

&НаКлиенте	//	LNK 05.06.2023 06:07:25
Процедура КомандаВыгрузитьПродажиДляАрендодателяЗавершение(КодВозврата, ДополнительныеПараметры)	Экспорт

	Если КодВозврата = КодВозвратаДиалога.ОК Тогда

		ЭкспортАрендодателю.ВыполнитьФоновуюВыгрузку(Объект.Ссылка);

		ПоказатьОповещениеПользователя("Выгрузка запущена"
			,
			, "Выгрузка продаж запущена в фоновом режиме"
			, БиблиотекаКартинок.Информация32
		);

	Иначе

		ПоказатьОповещениеПользователя("Отмена операции"
			,
			, "Операция отменена пользователем"
			, БиблиотекаКартинок.Предупреждение32
		);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

//	NAV:БлокировкаДанныхУчестьДокументВNavision
#Область ОбслуживаниеКнопкиУчестьДокументВNavision

//	LNK 20.09.2016 09:39:43
//	Обработчик события кнопки подсистемы "NAV"
&НаКлиенте
Процедура РегистрацияПередачиВNavisionНажатие(Элемент)

	Если Объект.СтатусКассовогоДня = ПредопределенноеЗначение("Перечисление.СтатусыКассовойСмены.Закрыта") Тогда

		Если ПроверитьОтчетыОРозничныхПродажахКассовогоДня() Тогда

			ВнешниеИсточникиКлиент.ПодтвердитьРешениеУчетВNavision(ЭтотОбъект);

		КонецЕсли;

	Иначе

		ПоказатьОповещениеПользователя("Необходимо закрыть кассовый день"
			,, "Назначить продажи для отправки в КСУ Navision можно только после полного закрытия кассового дня!"
			, БиблиотекаКартинок.Предупреждение32);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте	//	LNK 18.06.2023 06:12:51
Процедура РегистрацияПередачиВNavisionПовторнаяНажатие(Элемент)

	ВнешниеИсточникиКлиент.ПодтвердитьПовторнуюВыгрузкуВNavision(ЭтотОбъект);

КонецПроцедуры

//	LNK 20.09.2016 09:39:43
//	Обработчик события кнопки подсистемы "NAV"
&НаСервере
Процедура РегистрацияПередачиВNavisionНаСервере()	Экспорт

//	Оформление элементов в обработчике подсистемы "NAV"
	ВнешниеИсточникиСобытия.ПроверитьКнопкуУчестьВNavision(ЭтотОбъект, Истина, УсловиеДоступностиКнопкиNAV());

КонецПроцедуры

&НаСервере	//	LNK 23.10.2017 14:18:28
Процедура ОбработкаОповещенияНаСервере(ИмяСобытия, Параметр, Источник)

//	LNK 20.09.2016 09:36:30
//	NAV:БлокировкаДанныхУчестьДокументВNavision
	Если ИмяСобытия = "РегистрацияПередачиВNavision" Тогда

		Если НЕ Источник = Объект.Ссылка И Параметр.Объект = Объект.Ссылка Тогда

		//	Оформление элементов в обработчике подсистемы "NAV"
			ВнешниеИсточникиСобытия.ПроверитьКнопкуУчестьВNavision(ЭтотОбъект,, УсловиеДоступностиКнопкиNAV());

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаСервере	//	LNK 12.01.2018 13:09:22
Функция УсловиеДоступностиКнопкиNAV()

	УсловиеДоступности = Объект.Проведен И Объект.СтатусКассовогоДня = Перечисления.СтатусыКассовойСмены.Закрыта;

	УчетнаяПолитика = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику(Объект.Дата);

//	не ранее определённого вечернего времени!
	МоментДоступности = НачалоДня(Объект.НачалоКассовогоДня) + ОбщегоНазначенияКлиентСервер.ВРЕМЯ(УчетнаяПолитика.ВремяУчетаКассовогоДня);
//	17 * 3600 + 15;

	Возврат УсловиеДоступности И ТекущаяДатаСеанса() >= МоментДоступности;

КонецФункции

&НаКлиенте	//	LNK 12.01.2018 13:23:18
Процедура РегулярнаяПроверкаКнопкиУчестьВNavision()

//	NAV:БлокировкаДанныхУчестьДокументВNavision
	ВнешниеИсточникиКлиент.ВыполнитьОповещениеПередачиДокументаВNavision(Неопределено, Объект.Ссылка, ЭтотОбъект["РегистрацияПередачиВNavision"]);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура АктуализироватьСуммуПродажНаСервере()

	Если ТехническаяПоддержкаВызовСервера.ИсключительныйРежим() Тогда

		Объект.СуммаДокумента = РозничныеПродажиСервер.КонтрольнаяСуммаКассовогоДня(Объект.Ссылка, Истина);
		Модифицированность = Истина;

	//	LNK 19.08.2022 04:09:29
		УстановитьКонтрольныеСуммы();

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПроверитьОтчетыОРозничныхПродажахКассовогоДня()

	ТекстСообщения = Документы.КассовыйДень.ПроверитьОтчетыОРозничныхПродажахКассовогоДня(Объект.Ссылка, Объект.Магазин, Объект.НачалоКассовогоДня, Объект.ОкончаниеКассовогоДня);

	Если НЕ ПустаяСтрока(ТекстСообщения) Тогда

		Сообщить("Невозможно учесть день для КСУ Navision - обнаружены непроведенные отчеты о розничных продажах! Необходимо провести следующие документы:");
		Сообщить(ТекстСообщения);

	КонецЕсли;

	Возврат ПустаяСтрока(ТекстСообщения);

КонецФункции

&НаСервере	//	LNK 24.03.2017 08:52:00
Процедура УстановитьКонтрольныеСуммы()

	СуммаКонтрольОбщая = РозничныеПродажиСервер.КонтрольнаяСуммаКассовогоДня(Объект.Ссылка, Истина);
	СуммаКонтрольКасса = РозничныеПродажиСервер.КонтрольнаяСуммаКассовогоДняКасса(Объект.Ссылка);

	Элементы.ФормаПроверитьДанныеКассовогоДняCRM.Доступность = РольДоступна(Метаданные.Роли.АдминистраторСистемы) И НЕ Объект.Ссылка.Пустая();

КонецПроцедуры

&НаСервере	//	LNK 29.11.2019 11:11:10
Процедура ПроверитьДанныеКассовогоДняCRMНаСервере()

	ТекстОшибки  = "";
	ДанныеОтвета = ОбменMicrosoftDynamicsСлужебный.ДанныеКассовогоДняCRM(Объект.Ссылка, ТекстОшибки);

	Если ПустаяСтрока(ТекстОшибки) И ТипЗнч(ДанныеОтвета) = Тип("Структура") Тогда

		Сообщить("СУММА: " + ДанныеОтвета.sum);
		Сообщить("КОЛВО: " + ДанныеОтвета.count);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьIDC()

	IDC = СокрЛП(Объект.Ссылка.УникальныйИдентификатор());

КонецПроцедуры

&НаСервереБезКонтекста	//	LNK 14.04.2022 10:56:49
Функция ИнтернетМагазин(Магазин)

	Соответствует = Ложь;

	Если НЕ Магазин.Пустая() Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаСправочник.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Магазины КАК ТаблицаСправочник
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитика.СрезПоследних КАК УчетнаяПолитика
		|		ПО ТаблицаСправочник.Ссылка = УчетнаяПолитика.ИнтернетМагазин
		|ГДЕ
		|	ТаблицаСправочник.Ссылка = &Магазин"
		);
		Запрос.УстановитьПараметр("Магазин", Магазин);
		
		Соответствует = НЕ Запрос.Выполнить().Пустой();

	КонецЕсли;

	Возврат Соответствует;

КонецФункции

&НаСервере	//	LNK 04.06.2023 05:53:19
Процедура ПроверитьДоступностьКомандыВыгрузитьПродажиДляАрендодателя()

	КомандаДоступна = Объект.Проведен И Объект.СтатусКассовогоДня = Перечисления.СтатусыКассовойСмены.Закрыта;
	КомандаДоступна = КомандаДоступна И ЭкспортАрендодателю.ПараметрыСоединения().Активен = Истина;

КонецПроцедуры

#КонецОбласти















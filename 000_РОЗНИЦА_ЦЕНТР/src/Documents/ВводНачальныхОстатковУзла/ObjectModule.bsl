
///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Заполнение табличных частей по остаткам регистров
//
Процедура ЗаполнитьОстатки(МассивМагазинов = Неопределено) Экспорт
		
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//0 - Товары на складах
	|	ТоварыНаСкладахОстатки.Склад,
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаДокумента, Склад.Магазин В (&МассивМагазинов)) КАК ТоварыНаСкладахОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//1 - Товары организаций
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыОрганизацийОстатки.Номенклатура,
	|	ТоварыОрганизацийОстатки.Характеристика,
	|	ТоварыОрганизацийОстатки.Склад,
	|	ТоварыОрганизацийОстатки.Организация,
	|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(&ДатаДокумента, Склад.Магазин В (&МассивМагазинов)) КАК ТоварыОрганизацийОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//2 - Денежные средства наличные
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДенежныеСредстваНаличныеОстатки.Организация,
	|	ДенежныеСредстваНаличныеОстатки.Касса,
	|	ДенежныеСредстваНаличныеОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные.Остатки(&ДатаДокумента, Касса.Магазин В (&МассивМагазинов)) КАК ДенежныеСредстваНаличныеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//3 - Денежные средства ККМ
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДенежныеСредстваККМОстатки.КассаККМ,
	|	ДенежныеСредстваККМОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваККМ.Остатки(&ДатаДокумента, КассаККМ.Магазин В (&МассивМагазинов)) КАК ДенежныеСредстваККМОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//4 - Действующие цены номенклатуры
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДействующиеЦеныНоменклатурыСрезПоследних.ОбъектЦенообразования КАК Магазин,
	|	ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ДействующиеЦеныНоменклатурыСрезПоследних.Характеристика,
	|	ДействующиеЦеныНоменклатурыСрезПоследних.Цена,
	|	ДействующиеЦеныНоменклатурыСрезПоследних.Упаковка
	|ИЗ
	|	РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ДатаДокумента, ОбъектЦенообразования В (&МассивМагазинов)) КАК ДействующиеЦеныНоменклатурыСрезПоследних
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//5 - Цены номенклатуры
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦеныНоменклатурыСрезПоследних.ВидЦены КАК ВидЦены,
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Характеристика,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ЦеныНоменклатурыСрезПоследних.Упаковка
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаДокумента) КАК ЦеныНоменклатурыСрезПоследних
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//6 - Себестоимость номенклатуры
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СебестоимостьНоменклатурыСрезПоследних.Магазин,
	|	СебестоимостьНоменклатурыСрезПоследних.Номенклатура,
	|	СебестоимостьНоменклатурыСрезПоследних.Характеристика,
	|	СебестоимостьНоменклатурыСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.СебестоимостьНоменклатуры.СрезПоследних(
	|			&ДатаДокумента,
	|			Магазин В (&МассивМагазинов)
	|				ИЛИ Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)) КАК СебестоимостьНоменклатурыСрезПоследних
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//7 - Товары к поступлению
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыКПоступлениюОстатки.Номенклатура,
	|	ТоварыКПоступлениюОстатки.Характеристика,
	|	ТоварыКПоступлениюОстатки.Склад,
	|	ТоварыКПоступлениюОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(
	|			&ДатаДокумента,
	|			Склад.Магазин В (&МассивМагазинов)) КАК ТоварыКПоступлениюОстатки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//8 - Товары к отгрузке
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыКОтгрузкеОстатки.Номенклатура,
	|	ТоварыКОтгрузкеОстатки.Характеристика,
	|	ТоварыКОтгрузкеОстатки.Склад,
	|	ТоварыКОтгрузкеОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|			&ДатаДокумента,
	|			Склад.Магазин В (&МассивМагазинов)) КАК ТоварыКОтгрузкеОстатки");
	
	Запрос.УстановитьПараметр("МассивМагазинов", ?(МассивМагазинов = Неопределено, Узел.Магазины.ВыгрузитьКолонку("Магазин"), МассивМагазинов));
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТоварыНаСкладах.Загрузить(РезультатЗапроса[0].Выгрузить());
	ТоварыОрганизаций.Загрузить(РезультатЗапроса[1].Выгрузить());
	ДенежныеСредстваНаличные.Загрузить(РезультатЗапроса[2].Выгрузить());
	ДенежныеСредстваККМ.Загрузить(РезультатЗапроса[3].Выгрузить());
	ДействующиеЦеныНоменклатуры.Загрузить(РезультатЗапроса[4].Выгрузить());
	ЦеныНоменклатуры.Загрузить(РезультатЗапроса[5].Выгрузить());
	СебестоимостьНоменклатуры.Загрузить(РезультатЗапроса[6].Выгрузить());
	ТоварыКПоступлению.Загрузить(РезультатЗапроса[7].Выгрузить());
	ТоварыКОтгрузке.Загрузить(РезультатЗапроса[8].Выгрузить());
	
КонецПроцедуры

// Функция проверки табличных частей на наличие строк
//
Функция Пустой() Экспорт
	
	Результат = Истина;
	
	Для Каждого ТаблЧасть Из Метаданные().ТабличныеЧасти Цикл
	
		Если ЭтотОбъект[ТаблЧасть.Имя].Количество() > 0 Тогда
			Результат = Ложь;
			Прервать
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
//	LNK 16.02.2017 14:33:05
	ЗаполнениеОбъектовСобытия.ОбщиеДействияПередЗаписью(ЭтотОбъект, Отказ);
	
	УзелОбмена = ПланыОбмена.ПоМагазину.НайтиПоКоду(КодУзлаОбмена);

	Если НЕ УзелОбмена.Пустая() Тогда
		
		Узел = УзелОбмена;
		
	КонецЕсли;

	Если ОбменДанными.Загрузка Тогда

		Возврат;

	КонецЕсли;
			
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если ЭтоНовый() Тогда


	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.ВводНачальныхОстатковУзла.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ПроведениеСервер.ОтразитьДвиженияПоРегистру("ТоварыНаМагазинах", ДополнительныеСвойства, Движения, Отказ); 

	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОтгрузке(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСебестоимостьНоменклатуры(ДополнительныеСвойства, Движения, Отказ);	
	ДенежныеСредстваСервер.ОтразитьДенежныеСредстваККМ(ДополнительныеСвойства, Движения, Отказ);
	ДенежныеСредстваСервер.ОтразитьДенежныеСредстваНаличные(ДополнительныеСвойства, Движения, Отказ);
	Ценообразование.ОтразитьЦеныНоменклатуры(ДополнительныеСвойства, Движения, Отказ);
	Ценообразование.ОтразитьПрименениеЦенНоменклатуры(ДополнительныеСвойства, Движения, Отказ);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры


Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)

	Если ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Префикс = СокрЛп(КодУзлаОбмена) + "-";

	КонецЕсли;

КонецПроцедуры


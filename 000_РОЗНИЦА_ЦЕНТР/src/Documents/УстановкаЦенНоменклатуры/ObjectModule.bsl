
///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Процедура ЗаполнитьНаборыЗначенийДоступа заполняет наборы значений доступа
// по объекту в таблице с полями:
//  - НомерНабора     Число                                     (необязательно, если набор один),
//  - ВидДоступа      ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//  - ЗначениеДоступа Неопределено, СправочникСсылка или др.    (обязательно),
//  - Чтение          Булево (необязательно, если набор для всех прав; устанавливается для одной строки набора),
//  - Добавление      Булево (необязательно, если набор для всех прав; устанавливается для одной строки набора),
//  - Изменение       Булево (необязательно, если набор для всех прав; устанавливается для одной строки набора),
//  - Удаление        Булево (необязательно, если набор для всех прав; устанавливается для одной строки набора).
//
//  Вызывается из процедуры УправлениеДоступом.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	// Логика ограничения следующая:
	// объект доступен, если доступны все виды цен
	// 
	
	Для Каждого СтрокаТаблицы Из ВидыЦен Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ВидЦены) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.ВидДоступа      = ПланыВидовХарактеристик.ВидыДоступа.ВидыЦен;
		СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.ВидЦены;
	КонецЦикла;
	
	Если Таблица.Количество() = 0 Тогда
	
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.Чтение          = Истина;
		СтрокаТаб.Добавление      = Истина;
		СтрокаТаб.Изменение       = Истина;
		СтрокаТаб.ВидДоступа      = ПланыВидовХарактеристик.ВидыДоступа.ВидыЦен;
		СтрокаТаб.ЗначениеДоступа = Справочники.ВидыЦен.ПустаяСсылка();
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
//	LNK 16.02.2017 14:33:05
	ЗаполнениеОбъектовСобытия.ОбщиеДействияПередЗаписью(ЭтотОбъект, Отказ);

	Если ОбменДанными.Загрузка Тогда

		ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);

		Возврат;

	КонецЕсли;

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
//	LNK 09.09.2016 08:55:37
//	NAV:БлокировкаДанныхУчестьДокументВNavision
	Если НЕ ТехническаяПоддержкаВызовСервера.ИсключительныйРежим() И НЕ ЭтоНовый() Тогда

		Если ВнешниеИсточникиСобытия.ПередачаNavision(Ссылка) Тогда

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ «" + СокрЛП(Ссылка) + "» учтён в КСУ Navision! Изменения запрещены. Отказано.", Ссылка,,, Отказ);
			Возврат;

		КонецЕсли;

	КонецЕсли;

	Ценообразование.ИзменитьПризнакСогласованностиДокумента(ЭтотОбъект, РежимЗаписи);

//	LNK 02.09.2016 11:11:43
	УстановитьДополнительнуюИнформацию();

//	LNK 05.09.2016 09:27:01
	УстановитьСпециальныйРежимРегистрации();

КонецПроцедуры

//	LNK 07.09.2016 11:28:37
Процедура ПриЗаписи(Отказ)

//	NAV:БлокировкаДанныхУчестьДокументВNavision
	Если ОбщегоНазначенияКлиентСервер.ЗначениеКлючаСтруктуры(ДополнительныеСвойства, "РегистрацияПередачиВNavision", Ложь) Тогда

		ВнешниеИсточникиСобытия.УстановитьПереданоNavision(Ссылка
			, ОбщегоНазначенияРТСервер.ПолучитьМагазиныПоСпискуВидовЦен(ВидыЦен.ВыгрузитьКолонку("ВидЦены"))
			, ?(УзелСоздания = Справочники.СтруктураУзлов.КСУ_Navision
				, Перечисления.ВидыПередачиNavision.ПолученИзNavision
				, Перечисления.ВидыПередачиNavision.ТолькоБлокирован),,,, Истина);
	//	Ценами управляет внешний источник - КСУ. Но оставим "дырку" для (мало-ли) возможности создания документа
	//	в текущем узле Розницы путём установки признака учёта - "ТолькоБлокирован". Таким образом, созданный
	//	в Рознице документ просто блокируется, но в Navision не отправляется.

	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Ответственный.Пустая() Тогда

		Ответственный = ПараметрыСеанса.ТекущийПользователь;

	КонецЕсли;

	Если (НЕ Пользователи.РолиДоступны("ДобавлениеИзменениеЦенНоменклатуры")) И (НЕ Пользователи.РолиДоступны("ПолныеПрава")) Тогда
				
		ТекстОшибки = НСтр("ru='Нет прав на установку цен номенклатуры'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			,
			,
			Отказ);
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент();
	ЦенообразованиеПереопределяемый.ОбработкаЗаполненияУстановкиЦенНоменклатуры(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Ценообразование.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	Документы.УстановкаЦенНоменклатуры.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	Ценообразование.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	Ценообразование.ОтразитьЦеныНоменклатуры(ДополнительныеСвойства, Движения, Отказ);

	Ценообразование.ЗаписатьНаборыЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	Ценообразование.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	Ценообразование.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	Ценообразование.ЗаписатьНаборыЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	Согласован = Ложь;
	ДополнительнаяИнформация = "";
	Комментарий = "";
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение

// Инициализирует установку цен номенклатуры.
//
Процедура ИнициализироватьДокумент()

	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

//	LNK 13.02.2017 08:49:56
Процедура УстановитьСпециальныйРежимРегистрации()	Экспорт

	Если ВидыЦен.Количество() = 1 Тогда

	//	Выбор узлов для регистрации осуществляется по каждой записи набора записей "ЦеныНоменклатуры".
	//	Это очень долго для большого документа. Делаем обход такой проблемы, если узел, собственно, может быть только один.
		Документы.УстановкаЦенНоменклатуры.УстановитьОбменДаннымиПолучатели(ОбменДанными.Получатели, ВидыЦен.ВыгрузитьКолонку("ВидЦены"));
		Документы.УстановкаЦенНоменклатуры.УстановитьОбменДаннымиПолучатели(Движения.ЦеныНоменклатуры.ОбменДанными.Получатели, ВидыЦен.ВыгрузитьКолонку("ВидЦены"));

		Движения.ЦеныНоменклатуры.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов", Истина);
		ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов", Истина);

	КонецЕсли;

КонецПроцедуры

//	LNK 13.02.2017 08:29:41
Процедура УстановитьДополнительнуюИнформацию()	Экспорт

	ДополнительнаяИнформация = "";

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаВидовЦен.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаВидовЦен.ВидЦены КАК Справочник.ВидыЦен) КАК ВидЦены
	|ПОМЕСТИТЬ ТабличнаяЧасть
	|ИЗ
	|	&ВидыЦен КАК ТаблицаВидовЦен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.ВидЦены.Представление КАК ВидЦены
	|ИЗ
	|	ТабличнаяЧасть КАК ТабличнаяЧасть"
	);
	Запрос.УстановитьПараметр("ВидыЦен", ВидыЦен);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		ДополнительнаяИнформация = ДополнительнаяИнформация
								+ ?(ПустаяСтрока(ДополнительнаяИнформация), "", ", ")
								+ Выборка.ВидЦены;

	КонецЦикла;

	ДополнительнаяИнформация = "(" + Формат(Товары.Количество(), "ЧДЦ=; ЧН=0; ЧГ=") + " строк) " + ДополнительнаяИнформация;

КонецПроцедуры





///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранныеТовары = ПолучитьИзВременногоХранилища(Параметры.ВыбранныеТовары);
	Запрос = Новый Запрос();
	
	Запрос.Текст = "ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ПО (ХарактеристикиНоменклатуры.Владелец = Номенклатура.Ссылка
		|				ИЛИ ХарактеристикиНоменклатуры.Владелец = Номенклатура.ВидНоменклатуры)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура ИЕРАРХИЯ,
		|	Характеристика";
		
	ДеревоТоваров = РеквизитФормыВЗначение("Товары");
	ДобавитьСтрокиВДеревоТоваров(ДеревоТоваров.Строки, Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией), ВыбранныеТовары);
	ЗначениеВРеквизитФормы(ДеревоТоваров, "Товары");
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "Товары"

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		УстановитьВыборТовара(Элемент.ТекущиеДанные, Не Элемент.ТекущиеДанные.Добавлен);
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Выбрать(Команда)
	
	УстановитьВыборТоваров(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	Закрыть(ПоместитьРезультатВоВременноеХранилище());
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВыбор(Команда)
	
	УстановитьВыборТоваров(Ложь);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Добавляет строки в дерево товаров
//
// Параметры:
// КоллекцияСтрок - КоллекцияСтрокДереваЗначений - Строки дерева товаров
// Выборка - ВыборкаИзРезультатаЗапроса - Выборка из справочника Номенклатура
// ВыбранныеТовары - ТаблицаЗначений - Товары, подобранные в документ
//
&НаСервере
Процедура ДобавитьСтрокиВДеревоТоваров(КоллекцияСтрок, Выборка, ВыбранныеТовары)
	
	Перем ТекущаяСтрока;
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.Характеристика) Или Не ЗначениеЗаполнено(ТекущаяСтрока) Или ТекущаяСтрока.Ссылка <> Выборка.Номенклатура Тогда
			
			НоваяСтрока        = КоллекцияСтрок.Добавить();
			НоваяСтрока.Ссылка = Выборка.Номенклатура;
			ТекущаяСтрока      = НоваяСтрока;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.Характеристика) Тогда
			
			НоваяСтрока        = ТекущаяСтрока.Строки.Добавить();
			НоваяСтрока.Ссылка = Выборка.Характеристика;
			
		КонецЕсли;
		
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			НоваяСтрока.Выбран = ВыбранныеТовары.НайтиСтроки(Новый Структура("Номенклатура,Характеристика", Выборка.Номенклатура, Выборка.Характеристика)).Количество() > 0;
		КонецЕсли;
		
		ДобавитьСтрокиВДеревоТоваров(НоваяСтрока.Строки, Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией), ВыбранныеТовары);
		
	КонецЦикла;
	
КонецПроцедуры

// Помещает товары из документа во временное хранилище
//
&НаСервере
Функция ПоместитьРезультатВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(РеквизитФормыВЗначение("ДобавленныеТовары"));
	
КонецФункции

// Добавляет/удаляет строку с товаром в таблицу значений ДобавленныеТовары
//
// Параметры:
// СтрокаТовара - ДанныеФормыЭлементДерева - Добавляемая/удаляемая строка
// Выбрать - Булево - Истина, если строка добавляется, Ложь, если строка удаляется
//
&НаКлиенте
Процедура УстановитьВыборТовара(СтрокаТовара, Выбрать)
	
	Если Не СтрокаТовара.Выбран И СтрокаТовара.Добавлен <> Выбрать Тогда
		
		Характеристика           = ?(ТипЗнч(СтрокаТовара.Ссылка) = Тип("СправочникСсылка.ХарактеристикиНоменклатуры"), СтрокаТовара.Ссылка, ХарактеристикиНоменклатурыПустаяСсылка);
		Номенклатура             = ?(ЗначениеЗаполнено(Характеристика), СтрокаТовара.ПолучитьРодителя().Ссылка, СтрокаТовара.Ссылка);
		СтрокиДобавленныхТоваров = ДобавленныеТовары.НайтиСтроки(Новый Структура("Номенклатура,Характеристика", Номенклатура, Характеристика));
		
		Если (СтрокиДобавленныхТоваров.Количество() = 0) = Выбрать Тогда
			
			Если Выбрать Тогда
				
				НоваяСтрока                = ДобавленныеТовары.Добавить();
				НоваяСтрока.Номенклатура   = Номенклатура;
				НоваяСтрока.Характеристика = Характеристика;
				СтрокаТовара.Добавлен      = Истина;
				
			Иначе
				
				ДобавленныеТовары.Удалить(СтрокиДобавленныхТоваров[0]);
				СтрокаТовара.Добавлен = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает признак, что товар выбран для подбора в документ
//
// Параметры:
// Выбрать - Булево - Истина, если товар выбран, иначе Ложь 
//
&НаКлиенте
Процедура УстановитьВыборТоваров(Выбрать)
	
	Для Каждого Идентификатор Из Элементы.Товары.ВыделенныеСтроки Цикл
		
		ВыделеннаяСтрока = Товары.НайтиПоИдентификатору(Идентификатор);
		
		Если ВыделеннаяСтрока.ПолучитьЭлементы().Количество() = 0 Тогда
			УстановитьВыборТовара(ВыделеннаяСтрока, Выбрать);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

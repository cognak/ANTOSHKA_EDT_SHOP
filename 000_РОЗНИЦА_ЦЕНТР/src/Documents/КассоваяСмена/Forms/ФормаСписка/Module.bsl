
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);

	Если Магазин.Пустая() И НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Магазин  = ПараметрыСеанса.ТекущийМагазин;
		КассаККМ = Неопределено;
		УстановитьОтборДинамическихСписков();

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Магазин  = Настройки.Получить("Магазин");
		КассаККМ = Настройки.Получить("КассаККМ");

	Иначе

		Магазин  = ПараметрыСеанса.ТекущийМагазин;
		КассаККМ = Неопределено;

	КонецЕсли;

	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьКассыККМ();
КонецПроцедуры

//	LNK 24.04.2017 12:49:55
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ПользовательИзменилТекущуюОрганизацию" Тогда

		Если НЕ Магазин = Параметр.Магазин Тогда

			Магазин  = Параметр.Магазин;
			КассаККМ = Неопределено;
			МагазинОтборПриИзменении(Неопределено);

		КонецЕсли;

	ИначеЕсли ИмяСобытия = "ИзмененыДанныеКассовойСмены" Тогда

		Элементы.Список.Обновить();

	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КассаОтборПриИзменении(Элемент)
	
	УстановитьОтборДинамическихСписковНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура МагазинОтборПриИзменении(Элемент)
	
	УстановитьОтборДинамическихСписковНаКлиенте();
	УстановитьДоступностьКассыККМ();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусКассовойСменыОтборПриИзменении(Элемент)
	
	УстановитьОтборДинамическихСписковНаКлиенте();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Прочее

// Процедура устанавливает отбор динамических списков формы.
//
&НаСервере
Процедура УстановитьОтборДинамическихСписков()
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Магазин", Магазин, ЗначениеЗаполнено(Магазин), ВидСравненияКомпоновкиДанных.Равно);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "КассаККМ", КассаККМ, ЗначениеЗаполнено(КассаККМ), ВидСравненияКомпоновкиДанных.Равно);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "СтатусКассовойСмены", СтатусКассовойСмены, ЗначениеЗаполнено(СтатусКассовойСмены), ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

// Процедура устанавливает отбор динамических списков формы.
//
&НаКлиенте
Процедура УстановитьОтборДинамическихСписковНаКлиенте()
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Магазин", Магазин, ЗначениеЗаполнено(Магазин), ВидСравненияКомпоновкиДанных.Равно);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "КассаККМ", КассаККМ, ЗначениеЗаполнено(КассаККМ), ВидСравненияКомпоновкиДанных.Равно);
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "СтатусКассовойСмены", СтатусКассовойСмены, ЗначениеЗаполнено(СтатусКассовойСмены), ВидСравненияКомпоновкиДанных.Равно);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКассыККМ()
	
	Элементы.КассаОтбор.ТолькоПросмотр = НЕ ЗначениеЗаполнено(Магазин);
	
КонецПроцедуры


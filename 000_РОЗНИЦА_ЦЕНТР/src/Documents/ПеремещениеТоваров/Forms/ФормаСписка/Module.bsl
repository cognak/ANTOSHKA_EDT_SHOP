#Область ОбработчикиОсновныхСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
//	LNK 25.04.2017 14:26:29
	Список.Параметры.УстановитьЗначениеПараметра("Организация"
		, ?(ОбменДаннымиПовтИсп.ЭтоГлавныйУзел()
			, Неопределено
			, ПараметрыСеанса.ТекущаяОрганизация));

//	LNK 13.11.2016 13:47:50
	ЭлементОтбора = Список.Отбор.Элементы.Вставить(0, Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПометкаУдаления");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Ложь;
	ЭлементОтбора.Использование  = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьСкладаОтправителя();
	УстановитьДоступностьСкладаПолучателя();
	
//	LNK 13.11.2016 13:14:13
	УстановитьОформлениеЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСписокРаспоряженийНаОтгрузкуТоваров"
	ИЛИ  ИмяСобытия = "ОбновитьСписокРаспоряженийНаПриемкуТоваров"	Тогда

		Элементы.Список.Обновить();

	ИначеЕсли ИмяСобытия = "ПользовательИзменилТекущуюОрганизацию" Тогда

		Если НЕ Параметр.Организация = Список.Параметры.Элементы.Найти("Организация").Значение Тогда

			Список.Параметры.УстановитьЗначениеПараметра("Организация", Параметр.Организация);
			Элементы.Список.Обновить();

		КонецЕсли;

	ИначеЕсли ИмяСобытия = "ИзменениеОбъектУчтенВNavision" ИЛИ ИмяСобытия = "ОбновитьСписокПеремещений" Тогда	//	LNK 11.09.2020 08:25:19

		Элементы.Список.Обновить();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		МагазинОтправитель   = Настройки.Получить("МагазинОтправитель");
		МагазинПолучатель    = Настройки.Получить("МагазинПолучатель");
		СкладОтправитель     = Настройки.Получить("СкладОтправитель");
		СкладПолучатель      = Настройки.Получить("СкладПолучатель");

	КонецЕсли;

	УстановитьОтборДинамическогоСписка("МагазинОтправитель");
	УстановитьОтборДинамическогоСписка("МагазинПолучатель");
	УстановитьОтборДинамическогоСписка("СкладОтправитель");
	УстановитьОтборДинамическогоСписка("СкладПолучатель");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапки

&НаКлиенте
Процедура ОтборМагазинОтправительПриИзменении(Элемент)
	
	УстановитьОтборыМагазинСклад("Отправитель");
	УстановитьДоступностьСкладаОтправителя();
КонецПроцедуры

&НаКлиенте
Процедура ОтборСкладОтправительПриИзменении(Элемент)
	
	УстановитьОтборДинамическогоСписка("СкладОтправитель");

КонецПроцедуры

&НаКлиенте
Процедура ОтборМагазинПолучательПриИзменении(Элемент)
	
	УстановитьОтборыМагазинСклад("Получатель");
	УстановитьДоступностьСкладаПолучателя();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСкладПолучательПриИзменении(Элемент)
	
	УстановитьОтборДинамическогоСписка("СкладПолучатель");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементаСписок

&НаКлиенте	//	LNK 26.10.2022 07:53:24
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ИменаКолонок = Новый Массив;
	ИменаКолонок.Добавить("МагазинОтправитель");
	ИменаКолонок.Добавить("СкладОтправитель");
	ИменаКолонок.Добавить("МагазинПолучатель");
	ИменаКолонок.Добавить("СкладПолучатель");
	ИменаКолонок.Добавить("МагазинПолучательКонечный");
	ИменаКолонок.Добавить("ЗаказПокупателя");

	РаботаСФормамиКлиент.ОбработчикСобытияСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка, ИменаКолонок,, Элементы);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийКомандФормы

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

//	LNK 13.11.2016 13:07:36
&НаКлиенте
Процедура ПоказатьВсеИлиНепомеченные(Команда)

	Список.Отбор.Элементы[0].Использование = НЕ Список.Отбор.Элементы[0].Использование;

	УстановитьОформлениеЭлементов();

КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура УстановитьОтборыМагазинСклад(ИмяРеквизита)
	
	УстановитьОтборДинамическогоСписка("Магазин" + ИмяРеквизита);
	УстановитьОтборДинамическогоСписка("Склад" + ИмяРеквизита);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборДинамическогоСписка(ИмяРеквизита)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		Список, 
		ИмяРеквизита, 
		ЭтотОбъект[ИмяРеквизита], 
		ЗначениеЗаполнено(ЭтотОбъект[ИмяРеквизита]));
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьСкладаОтправителя()
	
	Элементы.ОтборСкладОтправитель.ТолькоПросмотр = НЕ ЗначениеЗаполнено(МагазинОтправитель);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьСкладаПолучателя()
	
	Элементы.ОтборСкладПолучатель.ТолькоПросмотр = НЕ ЗначениеЗаполнено(МагазинПолучатель);
	
КонецПроцедуры

//	LNK 13.11.2016 11:32:18
&НаКлиенте
Процедура УстановитьОформлениеЭлементов()

	НужныйЭлемент = Элементы.СписокПоказатьВсеИлиНепомеченные;

	Если Список.Отбор.Элементы[0].Использование Тогда

		НужныйЭлемент.Картинка  = БиблиотекаКартинок.ПоказыватьБезПомеченных;

	Иначе

		НужныйЭлемент.Картинка  = БиблиотекаКартинок.ПоказыватьВсеОбъекты;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзТСДНаСервере()
	ТранспортТерминалов.ПроверитьСтатусТСД();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзТСД(Команда)
	ЗагрузитьИзТСДНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВТСДНаСервере()
	ТранспортТерминалов.ПроверитьСтатусТСД();	
	ТранспортТерминалов.ВыгрузитьДанныеВТранспортТерминала();
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВТСД(Команда)
	ВыгрузитьВТСДНаСервере();
КонецПроцедуры

#Область РаботаСОбщейФормойРедактированияОтдельныхРеквизитов

&НаКлиенте
Процедура ИзменитьОтдельныеРеквизиты(Команда)

	ТекущиеДанные = Элементы.Список.ТекущиеДанные;

	Если НЕ ТекущиеДанные = Неопределено Тогда

		ПараметрыФормы = Новый Структура("ДокументСсылка", ТекущиеДанные.Ссылка);
		ОткрытьФорму("ОбщаяФорма.ФормаИзмененияОтдельныхРеквизитов"
			, ПараметрыФормы, ЭтотОбъект, ТекущиеДанные.Ссылка,
			,, Новый ОписаниеОповещения("ИзменитьОтдельныеРеквизитыЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОтдельныеРеквизитыЗавершение(Результат, ДополнительныеПараметры)	Экспорт

	Элементы.Список.Обновить();

КонецПроцедуры

#КонецОбласти



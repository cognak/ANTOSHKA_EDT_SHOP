#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//	Объект - ДокументОъъект или ДанныеФормыСтруктура - документ, для которого нужно сфомировать параметры проверки
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями фукнции ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект)Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") 
							И ПланыОбмена.ОбменУправлениеТорговлейРозница.СуществуютУзлыПланаОбмена()
							И ПолучитьФункциональнуюОпцию("ИспользоватьСинхронизациюДанных");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоНакладная", Истина);
	ПараметрыУказанияСерий.Вставить("ЭтоПеремещениеМеждуСкладами", Истина);
	ПараметрыУказанияСерий.Вставить("ИмяПоляМагазин", "МагазинОтправитель");
	
	СкладскиеОперации = Новый Массив;
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещению);
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПоПеремещению);
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Функция получает данные для формирования печатной формы Транспортная накладная.
//
Функция ПолучитьДанныеДляПечатнойФормыТранспортнаяНакладная(МассивДокументов) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка                                  КАК Ссылка,
	|	ПеремещениеТоваров.Дата                                    КАК Дата,
	|	ПеремещениеТоваров.Организация                             КАК Грузополучатель,
	|	ПеремещениеТоваров.Организация                             КАК Грузоотправитель,
	|	ЕСТЬNULL(МагазинКонтактнаяОтправитель.Представление, """") КАК ПунктПогрузки,
	|	ЕСТЬNULL(МагазинКонтактнаяПолучатель.Представление, """")  КАК ПунктРазгрузки
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.Магазины.КонтактнаяИнформация КАК МагазинКонтактнаяПолучатель
	|ПО
	|	ПеремещениеТоваров.МагазинПолучатель = МагазинКонтактнаяПолучатель.Ссылка
	|	И МагазинКонтактнаяПолучатель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресМагазина)
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.Магазины.КонтактнаяИнформация КАК МагазинКонтактнаяОтправитель
	|ПО
	|	ПеремещениеТоваров.МагазинОтправитель = МагазинКонтактнаяОтправитель.Ссылка
	|	И МагазинКонтактнаяОтправитель.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресМагазина)
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата, Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаРезульта = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаРезульта
КонецФункции

//	LNK 05.08.2019 10:22:01
Процедура ЖурналРазрешениеПредоставлено(ДокументСсылка)	Экспорт

	Попытка

		Если НЕ (ПараметрыСеанса.ТекущийПользователь.Пустая() ИЛИ ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.АдминистраторАвтоматов) Тогда

			ЖурналСобытий.Регистрация("NAV:УчестьДокументВNavision.ПропущеноПоРазрешению", УровеньЖурналаРегистрации.Предупреждение
				, ДокументСсылка.Метаданные(), ДокументСсылка, "Обход блокировки по разрешению", СокрЛП(ДокументСсылка), Истина);

		Иначе

			А = 22;	//	отладочная

		КонецЕсли;

	Исключение

		ТекстОшибки = ОписаниеОшибки();

	КонецПопытки;

КонецПроцедуры

Функция ПолучитьДатуПоОрдеру(Знач ДатаОрдера)	Экспорт	//	LNK 06.08.2021 09:45:02

	Если НЕ ЗначениеЗаполнено(ДатаОрдера) ИЛИ НЕ ТипЗнч(ДатаОрдера) = Тип("Дата") Тогда

		ДатаОрдера = ТекущаяДата();

	КонецЕсли;

	ДатаПеремещения = ДатаОрдера - Мин(2, ДатаОрдера - НачалоМесяца(ДатаОрдера));

	Возврат ДатаПеремещения;

КонецФункции

//	LNK 22.03.2022 07:14:47
Процедура УстановитьДанныеПакетаТСД(ДокументСсылка, ДанныеПакетаТСД)	Экспорт

	Если НЕ (ТипЗнч(ДанныеПакетаТСД) = Тип("Структура") И ДанныеПакетаТСД.Свойство("Номер") И НЕ ПустаяСтрока(ДанныеПакетаТСД.Номер)) Тогда

		Возврат;

	КонецЕсли;

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	НаборЗаписей = РегистрыСведений.ПакетыДокументов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ДокументСсылка);

	НаборЗаписей.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
	НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов", Истина);
	НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения"  , Истина);

	Для каждого Магазин Из ОбщегоНазначенияРТСервер.ПолучитьМагазиныПоОбъекту(ДокументСсылка) Цикл

		НаборЗаписей.Очистить();
		НаборЗаписей.ОбменДанными.Получатели.Очистить();

		ОбменДаннымиСервер.УстановитьПолучателейМагазина(НаборЗаписей.ОбменДанными.Получатели, Магазин);

		НаборЗаписей.Отбор.Магазин.Установить(Магазин);

		ЗаписьНабора = НаборЗаписей.Добавить();

		ЗаписьНабора.Объект		 = НаборЗаписей.Отбор.Объект.Значение;
		ЗаписьНабора.Магазин	 = НаборЗаписей.Отбор.Магазин.Значение;

		ЗаписьНабора.НомерПакета = ДанныеПакетаТСД.Номер;
		ЗаписьНабора.Количество	 = ДанныеПакетаТСД.Количество;

		НаборЗаписей.Записать();

	КонецЦикла;

КонецПроцедуры

//	\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\/
//	ПОДДЕРЖКА ПОДЧИНЁННЫХ ДОКУМЕНТОВ
//	---------------------------------------------------------------------------------------

//	LNK 15.11.2016 16:11:58
Процедура ПроверитьПоступлениеНаМагазинПолучательКонечный(ДокументОснование, ПроверятьПередачуNavision = Истина)	Экспорт

	Если НЕ ПроверятьПередачуNavision ИЛИ ВнешниеИсточникиСобытия.ПередачаNavision(ДокументОснование) = Истина	Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаДокументы.МагазинПолучатель КАК МагазинОтправитель,
		|	ТаблицаДокументы.МагазинПолучательКонечный КАК МагазинПолучатель
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ТаблицаДокументы
		|ГДЕ
		|	ТаблицаДокументы.Ссылка = &ДокументОснование
		|	И ТаблицаДокументы.МагазинПолучатель.СкладУправляющейСистемы = ИСТИНА
		|	И НЕ ТаблицаДокументы.МагазинПолучательКонечный = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)"
		);
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);

		ШапкаВыборка = Запрос.Выполнить().Выбрать();

		Если ШапкаВыборка.Следующий() Тогда

			Попытка
			
				ПеремещениеОбъект = Документы.ПеремещениеТоваров.СоздатьДокумент();
				ПеремещениеОбъект.Заполнить(ДокументОснование);

				Если  ПеремещениеОбъект.МагазинОтправитель = ШапкаВыборка.МагазинОтправитель
					И ПеремещениеОбъект.МагазинПолучатель = ШапкаВыборка.МагазинПолучатель
					И НЕ ПеремещениеОбъект.Товары.Количество() = 0	Тогда

					УчетнаяПолитика = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику();

					ПеремещениеОбъект.УстановитьНовыйНомер();
					ПеремещениеОбъект.ВидПеремещения = Перечисления.ВидыПеремещенийТоваров.ПоступлениеПереброски;
					ПеремещениеОбъект.УстановитьВидНоменклатуры(Истина);	//	LNK 14.10.2021 06:36:21

					ПеремещениеОбъект.ДополнительныеСвойства.Вставить("СлужебнаяЗапись", Истина);
					ПеремещениеОбъект.ДополнительныеСвойства.Вставить("ПроведениеДокументаПереброски", Истина);

					Если УчетнаяПолитика.УчитыватьNavisionПоступлениеПереброски Тогда

						ПеремещениеОбъект.ДополнительныеСвойства.Вставить("РегистрацияПередачиВNavision", Истина);

					КонецЕсли;

					ПеремещениеОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);

				КонецЕсли;
			
			Исключение

				ТекстОшибки = ОписаниеОшибки();
				ЗаписьЖурналаРегистрации("Переброска", УровеньЖурналаРегистрации.Ошибка
					, ДокументОснование.Метаданные(), ДокументОснование, ТекстОшибки, РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);

			КонецПопытки;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

Функция ПроверитьСерийныеНомераОрдера(ДокументОснование, СерийныеНомера, ТоварныйОрдер, Отказ)	Экспорт
	
	ТекстСообщения = "";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаОрдера.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОрдера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер
	|ПОМЕСТИТЬ ТаблицаОрдера
	|ИЗ
	|	&СерийныеНомера КАК ТаблицаОрдера
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СерийныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПередачи.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПередачи.СерийныйНомер КАК СерийныйНомер
	|ПОМЕСТИТЬ ТаблицаПередачи
	|ИЗ
	|	Документ.ПеремещениеТоваров.СерийныеНомера КАК ТаблицаПередачи
	|ГДЕ
	|	ТаблицаПередачи.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПередачи.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПередачи.СерийныйНомер КАК СерийныйНомер,
	|	""отсутствует в товарном ордере"" КАК ТекстСообщения
	|ИЗ
	|	ТаблицаПередачи КАК ТаблицаПередачи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОрдера КАК ТаблицаОрдера
	|		ПО ТаблицаПередачи.СерийныйНомер = ТаблицаОрдера.СерийныйНомер
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаВладельцы
	|		ПО ТаблицаПередачи.СерийныйНомер.Владелец = ТаблицаВладельцы.Ссылка
	|ГДЕ
	|	ТаблицаОрдера.СерийныйНомер ЕСТЬ NULL
	|	И ТаблицаВладельцы.ИспользоватьСерийныеНомера
	|	И ТаблицаВладельцы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОрдера.НомерСтроки,
	|	ТаблицаОрдера.СерийныйНомер,
	|	""отсутствует в перемещении""
	|ИЗ
	|	ТаблицаОрдера КАК ТаблицаОрдера
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПередачи КАК ТаблицаПередачи
	|		ПО ТаблицаОрдера.СерийныйНомер = ТаблицаПередачи.СерийныйНомер
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаВладельцы
	|		ПО ТаблицаОрдера.СерийныйНомер.Владелец = ТаблицаВладельцы.Ссылка
	|ГДЕ
	|	ТаблицаПередачи.СерийныйНомер ЕСТЬ NULL
	|	И ТаблицаВладельцы.ИспользоватьСерийныеНомера
	|	И ТаблицаВладельцы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОрдера
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПередачи"
	);
	Запрос.УстановитьПараметр("СерийныеНомера"   , СерийныеНомера);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ПроблемыВыборка = Запрос.Выполнить().Выбрать();
	
	Пока ПроблемыВыборка.Следующий() Цикл

		ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения), "", Символы.ПС)
		+ "СН «" + ПроблемыВыборка.СерийныйНомер + "» " + ПроблемыВыборка.ТекстСообщения;

	КонецЦикла;

	Если НЕ ПустаяСтрока(ТекстСообщения) Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отказано! В документе «" + СокрЛП(ТоварныйОрдер) + "»" + Символы.ПС
		+ "Серийные номера отличаются:" + Символы.ПС
		+ ТекстСообщения, ТоварныйОрдер,,, Отказ);

	КонецЕсли;

	Возврат НЕ Отказ;

КонецФункции

//	LNK 13.03.2020 13:41:45
Процедура ПроверитьСерийныеНомераПеремещенияПереброскиПолучатель(ОбъектОтправитель)	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК ДокументПолучатель
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ТаблицаДокументы
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокументы.Ссылка"
	);
	Запрос.УстановитьПараметр("ДокументСсылка", ОбъектОтправитель.Ссылка);
	
	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		ДокументыВыборка = Результат.Выбрать();

		Пока ДокументыВыборка.Следующий() Цикл

			ДокументОбъект = ДокументыВыборка.ДокументПолучатель.ПолучитьОбъект();

			ДокументОбъект.ДополнительныеСвойства.Вставить("СлужебнаяЗапись", Истина);

			ДокументОбъект.Товары.Загрузить(ОбъектОтправитель.Товары.Выгрузить());
			ДокументОбъект.СерийныеНомера.Загрузить(ОбъектОтправитель.СерийныеНомера.Выгрузить());
			ДокументОбъект.Серии.Загрузить(ОбъектОтправитель.Серии.Выгрузить());

			Если ДокументОбъект.Проведен Тогда

					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);

			Иначе	ДокументОбъект.Записать();

			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//Функция формирует текст запроса по серийным номерам
//Возвращаемое значение: ТекстЗапроса - Строка
Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|		ПО Товары.Номенклатура = ТаблицаСправочник.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И ТаблицаСправочник.ИспользоватьСерийныеНомера
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.ПеремещениеТоваров.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер.Владелец КАК Номенклатура,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	СУММА(ТабСерийныеНомера.Количество) КАК Количество
	|ПОМЕСТИТЬ ТабСвернутыхСерийныхНомеров
	|ИЗ
	|	ТабСерийныеНомера КАК ТабСерийныеНомера
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСерийныеНомера.СерийныйНомер.Владелец,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ТабОстатокНоменклатур
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСвернутыхСерийныхНомеров КАК ТабСвернутыхСерийныхНомеров
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	НЕ ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров ЕСТЬ NULL
	|	И ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ТабСерийныеНомера.СерийныйНомер, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер,
	|	ВЫБОР
	|		КОГДА ТабСерийныеНомера.СерийныйНомер ЕСТЬ NULL
	|			ТОГДА ТабТовары.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ТабОбщая
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОстатокНоменклатур.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка),
	|	ТабОстатокНоменклатур.Количество
	|ИЗ
	|	ТабОстатокНоменклатур КАК ТабОстатокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийныеНомера.номенклатура КАК Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаСерийныеНомера.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &ПоступлениеПоОрдернойСхеме
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ &СкладПолучатель
	|	КОНЕЦ КАК Получатель,
	|	ВЫБОР
	|		КОГДА &РеализацияПоОрдернойСхеме
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ &СкладОтправитель
	|	КОНЕЦ КАК Отправитель,
	|	&Организация КАК Организация,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	&Период КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабОбщая.Номенклатура КАК номенклатура,
	|		ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|		СУММА(ТабОбщая.Количество) КАК Количество
	|	ИЗ
	|		ТабОбщая КАК ТабОбщая
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабОбщая.Номенклатура,
	|		ТабОбщая.СерийныйНомер) КАК ТаблицаСерийныеНомера
	|ГДЕ
	|	(НЕ &ПоступлениеПоОрдернойСхеме
	|				И &ДвиженияПоПолучателю
	|			ИЛИ НЕ &РеализацияПоОрдернойСхеме
	|				И &ДвиженияПоОтправителю)" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//	LNK 12.12.2017 14:00:59
Функция ТекстЗапросаТаблицаПродажиПоЗаказамПокупателей()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыЗаказанные.Номенклатура КАК Номенклатура,
	|	ТоварыЗаказанные.Характеристика КАК Характеристика,
	|	СУММА(ТоварыЗаказанные.Количество) КАК Количество,
	|	СУММА(ТоварыЗаказанные.Сумма + ВЫБОР
	|			КОГДА ТоварыЗаказанные.Ссылка.УчитыватьНДС
	|					И НЕ ТоварыЗаказанные.Ссылка.ЦенаВключаетНДС
	|				ТОГДА ТоварыЗаказанные.СуммаНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ТоварыЗаказанные.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ТоварыЗаказанные
	|ИЗ
	|	Документ.ЗаказПокупателя.Товары КАК ТоварыЗаказанные
	|ГДЕ
	|	ТоварыЗаказанные.Ссылка = &ЗаказПокупателя
	|	И ТоварыЗаказанные.Количество > 0
	|	И НЕ &РеализацияПоОрдернойСхеме
	|	И &ДвиженияПоОтправителю
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыЗаказанные.Номенклатура,
	|	ТоварыЗаказанные.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	&МагазинОтправитель КАК Магазин,
	|	&ЗаказПокупателя КАК Заказ,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	&Ссылка КАК ДокументПродажи,
	|	&Продавец КАК Продавец,
	|	ЛОЖЬ КАК МотивацияНачислена,
	|	ВЫБОР
	|		КОГДА &ВидОтгрузкиПоЗаказуПокупателя = ""Сборка""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОтгрузкиПоЗаказуПокупателя.Сборка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОтгрузкиПоЗаказуПокупателя.Продажа)
	|	КОНЕЦ КАК ВидОтгрузки,
	|	ВЫБОР
	|		КОГДА ТоварыЗаказанные.Номенклатура ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СоставЗаказа,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыЗаказанные.Количество, 0) = 0
	|			ТОГДА ТабличнаяЧасть.Сумма
	|		КОГДА ТабличнаяЧасть.Количество = ТоварыЗаказанные.Количество
	|			ТОГДА ТоварыЗаказанные.Сумма
	|		ИНАЧЕ ТабличнаяЧасть.Количество * (ТоварыЗаказанные.Сумма / ТоварыЗаказанные.Количество)
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыЗаказанные.Количество, 0) = 0
	|			ТОГДА ТабличнаяЧасть.Сумма
	|		КОГДА ТабличнаяЧасть.Количество = ТоварыЗаказанные.Количество
	|			ТОГДА ТоварыЗаказанные.Сумма
	|		ИНАЧЕ ТабличнаяЧасть.Количество * (ТоварыЗаказанные.Сумма / ТоварыЗаказанные.Количество)
	|	КОНЕЦ КАК СтоимостьБезСкидок,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыЗаказанные.Количество, 0) = 0
	|			ТОГДА 0
	|		КОГДА ТабличнаяЧасть.Количество = ТоварыЗаказанные.Количество
	|			ТОГДА ТоварыЗаказанные.СуммаНДС
	|		ИНАЧЕ ТабличнаяЧасть.Количество * (ТоварыЗаказанные.СуммаНДС / ТоварыЗаказанные.Количество)
	|	КОНЕЦ КАК НДС
	|ИЗ
	|	ВтТаблицаТовары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыЗаказанные КАК ТоварыЗаказанные
	|		ПО ТабличнаяЧасть.Номенклатура = ТоварыЗаказанные.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ТоварыЗаказанные.Характеристика
	|ГДЕ
	|	НЕ &ВидОтгрузкиПоЗаказуПокупателя = """"
	|	И НЕ &РеализацияПоОрдернойСхеме
	|	И &ДвиженияПоОтправителю
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаТаблицаПродажиПоЗаказамПокупателей()

///////////////////////////////////////////////////////////////////////////////
// Проведение

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.МагазинОтправитель КАК МагазинОтправитель,
	|	ДанныеДокумента.МагазинПолучатель КАК МагазинПолучатель,
	|	ДанныеДокумента.СкладОтправитель КАК СкладОтправитель,
	|	НЕ ДанныеДокумента.МагазинОтправитель.СкладУправляющейСистемы КАК ДвиженияПоОтправителю,
	|	НЕ ДанныеДокумента.МагазинПолучатель.СкладУправляющейСистемы КАК ДвиженияПоПолучателю,
	|	ДанныеДокумента.СкладПолучатель КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПеремещениеТоваров) КАК АналитикаХозяйственнойОперации,
	|	ДанныеДокумента.Ссылка КАК Основание,
	|	ДанныеДокумента.МагазинПолучатель.ИспользоватьОрдернуюСхемуПриПеремещении КАК ПоступлениеПоОрдернойСхеме,
	|	ДанныеДокумента.МагазинОтправитель.ИспользоватьОрдернуюСхемуПриПеремещении КАК РеализацияПоОрдернойСхеме,
	|	ДанныеДокумента.ДокументОснование КАК ДокументОснование,
	|	ДанныеДокумента.ЗаказПокупателя КАК ЗаказПокупателя,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ЗаказНаПеремещение
	|				И НЕ ДанныеДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПоЗаказу,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДокумента.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				И ДанныеДокумента.МагазинОтправитель.СкладУправляющейСистемы = ЛОЖЬ
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ДанныеДокумента.МагазинПолучательКонечный = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|						ТОГДА ""Сборка""
	|					ИНАЧЕ ""Продажа""
	|				КОНЕЦ
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ВидОтгрузкиПоЗаказуПокупателя,
	|	ДанныеДокумента.Ответственный.ФизЛицо КАК Продавец,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ПеремещениеТоваров
	|				И НЕ ДанныеДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.ДокументОснование.МагазинОтправитель
	|		ИНАЧЕ ДанныеДокумента.МагазинОтправитель
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументОснование ССЫЛКА Документ.ЗаказПоставщику
	|				И НЕ ДанныеДокумента.ДокументОснование = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ДвижениеНоменклатурыПоставщиков
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	&СкладПолучатель КАК СкладПолучатель,
	|	&СкладОтправитель КАК СкладОтправитель,
	|	&МагазинПолучатель КАК МагазинПолучатель,
	|	&МагазинОтправитель КАК МагазинОтправитель,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	&Основание КАК Основание
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ ТаблицаТовары.Количество = 0
	|	И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.СкладПолучатель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ПоступлениеПоОрдернойСхеме
	|	И &ДвиженияПоПолучателю
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	ТаблицаТовары.СкладОтправитель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &РеализацияПоОрдернойСхеме
	|	И &ДвиженияПоОтправителю
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.МагазинПолучатель КАК Магазин,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ПоступлениеПоОрдернойСхеме
	|	И &ДвиженияПоПолучателю
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	ТаблицаТовары.МагазинОтправитель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &РеализацияПоОрдернойСхеме
	|	И &ДвиженияПоОтправителю
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.СкладПолучатель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Основание КАК ДокументОснование
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоОрдернойСхеме
	|	И &ДвиженияПоПолучателю
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.СкладОтправитель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Основание КАК ДокументОснование
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&РеализацияПоОрдернойСхеме
	|	И &ДвиженияПоОтправителю
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	&СкладОтправитель КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ДвиженияПоОтправителю
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	&СкладПолучатель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ДвиженияПоПолучателю
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&ДокументОснование КАК Заказ,
	|	&МагазинПолучатель КАК Магазин,
	|	&МагазинОтправитель КАК Поставщик,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ДвиженияПоПолучателю
	|	И &ПоЗаказу
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&МагазинПолучатель КАК Магазин,
	|	&Поставщик КАК Поставщик,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА СРЕДНЕЕ(ТаблицаТовары.Цена)
	|		ИНАЧЕ СРЕДНЕЕ(ТаблицаТовары.Цена) / ТаблицаТовары.Упаковка.Коэффициент
	|	КОНЕЦ КАК Цена,
	|	&Период КАК ДатаПоследнегоПоступления
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ДвиженияПоПолучателю
	|	И &ДвижениеНоменклатурыПоставщиков
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.Упаковка.Коэффициент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&МагазинПолучатель КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоПеремещению) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И НЕ &ПоступлениеПоОрдернойСхеме
	|	И &ДвиженияПоПолучателю
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	&МагазинОтправитель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещению),
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	ТаблицаСерии.НомерСтроки
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И НЕ &РеализацияПоОрдернойСхеме
	|	И &ДвиженияПоОтправителю
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
		
	Запрос.Текст = Запрос.Текст + ТекстЗапросаТаблицаСерийныхНомеров();
	Запрос.Текст = Запрос.Текст + ТекстЗапросаТаблицаПродажиПоЗаказамПокупателей();
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"            , Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаМагазинах"          , Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКПоступлению"         , Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКОтгрузке"            , Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"          , Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыТоваров"              , Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаНоменклатураПоставщиков"    , Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"       , Результат[8].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"            , Результат[15].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаПродажиПоЗаказамПокупателей", Результат[17].Выгрузить());
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяНаПеремещение") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НакладнаяНаПеремещение", 
			"Накладная на перемещение", 
			ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыВывода,ПараметрыПечати = "ПечататьСтаруюЦену",ПараметрыПечати = "ПечататьАкц"),,,Истина);

	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяНаПеремещениеСоСтаройЦеной") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НакладнаяНаПеремещение", 
			"Накладная на перемещение", 
			ПечатьНакладнаяСоСтаройЦеной(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,Истина);

	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"М4",
			"М-4 (Приходный ордер)",
			ПечатьМ4(МассивОбъектов, ОбъектыПечати));

	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М11",
			"М-11 (Требование - накладная)",
			ПечатьМ11(МассивОбъектов, ОбъектыПечати));

	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТТН",
			"1-ТН (Товарно-транспортная накладная)",
			ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));

	КонецЕсли;
	
//	LNK 07.02.2017 11:05:54
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктРазногласий") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктРазногласий",
			"Акт разногласий",
			ПечатьАктаРазногласий(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода),,, Ложь);

	КонецЕсли;

КонецПроцедуры

Функция ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыВывода,ПечататьСтаруюЦену, ПечататьАкцию=Ложь)
		
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Перемещение товаров';uk='Переміщення товарів'", КодЯзыкаПечать);

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_НакладнаяНаПеремещение";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.СкладОтправитель КАК Отправитель,
	|	Документ.СкладПолучатель КАК Получатель,
	|	ПРЕДСТАВЛЕНИЕ(Документ.СкладОтправитель) КАК ОтправительПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.СкладПолучатель) КАК ПолучательПредставление,
	|	Документ.Организация.Префикс КАК Префикс
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаСведений.Значение КАК Размер,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ПредставлениеЕдиницыИзмеренияУпаковки,
	|	ТаблицаТовары.Номенклатура.Производитель.Представление КАК ПредставлениеПроизводителя,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК ТаблицаСведений
	|		ПО ТаблицаТовары.Номенклатура = ТаблицаСведений.Ссылка
	|			И (ТаблицаСведений.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.РазмерностьТовара))
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.НоменклатураПредставление КАК НоменклатураПредставление,
	|	ТаблицаТовары.ХарактеристикаПредставление КАК ХарактеристикаПредставление,
	|	ТаблицаТовары.ПредставлениеБазовойЕдиницыИзмерения КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ТаблицаТовары.ПредставлениеЕдиницыИзмеренияУпаковки КАК ПредставлениеЕдиницыИзмеренияУпаковки,
	|	ТаблицаТовары.ПредставлениеПроизводителя КАК ПредставлениеПроизводителя,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Размер) КАК Размер,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Упаковка КАК Упаковка
	|ИЗ
	|	Товары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Штрихкоды.Владелец КАК Номенклатура,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	Штрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Характеристика = Штрихкоды.Характеристика
	|ГДЕ
	|	Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	|	И ЕСТЬNULL(Штрихкоды.Упаковка.Коэффициент, 1) = 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	Штрихкод"
	);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПеремещениеТоваров.ПФ_MXL_НакладнаяНаПеремещение", КодЯзыкаПечать);

	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
		
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	ОбластьШапкаТаблицыКолонкаУпаковок 				= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
	ОбластьСтрокаТаблицыКолонкаУпаковок 			= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
	ОбластьПодвалТаблицыКолонкаУпаковок				= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");
	ОбластьСтрокаТаблицыКолонкаОбластьСтараяЦена 	= Макет.ПолучитьОбласть("СтрокаТаблицы|ОбластьСтараяЦена");
	ОбластьСтрокаТаблицыКолонкаШапкаСтараяЦена 		= Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьСтараяЦена");
	ОбластьСтрокаТаблицыКолонкаОбластьАкция 		= Макет.ПолучитьОбласть("СтрокаТаблицы|ОбластьАкция");
	ОбластьСтрокаТаблицыКолонкаШапкаАкция 			= Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьАкция");
	
	ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
	
	Если НЕ ВыводитьУпаковки Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
		+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки; 		
		
	КонецЕсли;
	
	ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
	ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	
	ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
	ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
	ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
	
	ОбластьПодписей       = Макет.ПолучитьОбласть("Подписи");
	ОбластьИтого          = Макет.ПолучитьОбласть("Итого");
		
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Штрихкоды = Новый ПостроительЗапроса;
	Штрихкоды.ИсточникДанных = Новый ОписаниеИсточникаДанных(Результаты[3].Выгрузить());
	Штрихкоды.Отбор.Добавить("Номенклатура");
	Штрихкоды.Отбор.Добавить("Характеристика");
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка", ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		//ЗАГОЛОВОК
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		//ШАПКА
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
		Если ПечататьСтаруюЦену тогда
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаШапкаСтараяЦена);  				
		КонецЕсли; 	
		Если ПечататьАкцию тогда
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаШапкаАкция);  				
		КонецЕсли; 		
		
		ВсегоНаименований = 0;
		Итого             = 0;
		//СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
		//	LNK 26.10.2016 11:27:18
			Штрихкоды.Отбор.Номенклатура.Установить(ВыборкаПоСтрокамТЧ.Номенклатура);
			Штрихкоды.Отбор.Характеристика.Установить(ВыборкаПоСтрокамТЧ.Характеристика);
			Штрихкоды.Выполнить();

			ТекстШтрихкодов  = "";
			ШтрихкодыВыборка = Штрихкоды.Результат.Выбрать();

			Пока ШтрихкодыВыборка.Следующий() Цикл

				Если НЕ ПустаяСтрока(ШтрихкодыВыборка.Штрихкод) Тогда

					ТекстШтрихкодов = ТекстШтрихкодов + ?(ПустаяСтрока(ТекстШтрихкодов), "", Символы.ПС) + СокрЛП(ШтрихкодыВыборка.Штрихкод);

				КонецЕсли;

			КонецЦикла;
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
		//	LNK 26.10.2016 11:29:20
			ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Штрихкод = ТекстШтрихкодов;
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
			
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар =
				?(ПустаяСтрока(ВыборкаПоСтрокамТЧ.ПредставлениеПроизводителя), "", СокрЛП(ВыборкаПоСтрокамТЧ.ПредставлениеПроизводителя) + Символы.ПС)
				+ ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление)
				+ ?(ПустаяСтрока(ВыборкаПоСтрокамТЧ.Размер), "", "; р-р " + СокрЛП(ВыборкаПоСтрокамТЧ.Размер));
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
			
			Если ВыводитьУпаковки Тогда
				
				ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаУпаковок);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);	
			Если ПечататьСтаруюЦену тогда
				ОбластьСтрокаТаблицыКолонкаОбластьСтараяЦена.Параметры.ПредЦена = ПолучитьПредЦену(ВыборкаПоСтрокамТЧ.Номенклатура,ВыборкаПоСтрокамТЧ.Упаковка,ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаПоДокументам.Получатель,"Магазин"));
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаОбластьСтараяЦена);
			КонецЕсли;
			Если ПечататьАкцию тогда
				ОбластьСтрокаТаблицыКолонкаОбластьАкция.Параметры.Акция = ПолучитьАкцию(ВыборкаПоСтрокамТЧ.Номенклатура,ОбщегоНазначения.ПолучитьЗначениеРеквизита(ВыборкаПоДокументам.Получатель,"Магазин"));
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаОбластьАкция);
			КонецЕсли;
			
			ВсегоНаименований = ВсегоНаименований + 1;
			Итого             = Итого + ВыборкаПоСтрокамТЧ.Сумма;
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
		
		//ИТОГО
		ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", Итого);
		ОбластьИтого.Параметры.Итого = ТекстИтоговойСтроки;
								
		//ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьНакладнаяСоСтаройЦеной(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
		
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Перемещение товаров';uk='Переміщення товарів'", КодЯзыкаПечать);

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_НакладнаяНаПеремещение";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.СкладОтправитель КАК Отправитель,
	|	Документ.СкладПолучатель КАК Получатель,
	|	ПРЕДСТАВЛЕНИЕ(Документ.СкладОтправитель) КАК ОтправительПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.СкладПолучатель) КАК ПолучательПредставление,
	|	Документ.Организация.Префикс КАК Префикс
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаСведений.Значение КАК Размер,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ПредставлениеЕдиницыИзмеренияУпаковки,
	|	ТаблицаТовары.Номенклатура.Производитель.Представление КАК ПредставлениеПроизводителя,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК ТаблицаСведений
	|		ПО ТаблицаТовары.Номенклатура = ТаблицаСведений.Ссылка
	|			И (ТаблицаСведений.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.РазмерностьТовара))
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.НоменклатураПредставление КАК НоменклатураПредставление,
	|	ТаблицаТовары.ХарактеристикаПредставление КАК ХарактеристикаПредставление,
	|	ТаблицаТовары.ПредставлениеБазовойЕдиницыИзмерения КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ТаблицаТовары.ПредставлениеЕдиницыИзмеренияУпаковки КАК ПредставлениеЕдиницыИзмеренияУпаковки,
	|	ТаблицаТовары.ПредставлениеПроизводителя КАК ПредставлениеПроизводителя,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Размер) КАК Размер,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Упаковка КАК Упаковка
	|ИЗ
	|	Товары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Штрихкоды.Владелец КАК Номенклатура,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	Штрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Характеристика = Штрихкоды.Характеристика
	|ГДЕ
	|	Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	|	И ЕСТЬNULL(Штрихкоды.Упаковка.Коэффициент, 1) = 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	Штрихкод"
	);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПеремещениеТоваров.ПФ_MXL_НакладнаяНаПеремещение", КодЯзыкаПечать);

	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
		
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	ОбластьШапкаТаблицыКолонкаУпаковок 		= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
	ОбластьСтрокаТаблицыКолонкаУпаковок 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
	ОбластьПодвалТаблицыКолонкаУпаковок		= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");
	ОбластьСтрокаТаблицыКолонкаОбластьСтараяЦена 	= Макет.ПолучитьОбласть("СтрокаТаблицы|ОбластьСтараяЦена");
	ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
	
	Если НЕ ВыводитьУпаковки Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
		+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки; 		
		
	КонецЕсли;
	
	ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
	ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	
	ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
	ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
	ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
	
	ОбластьПодписей       = Макет.ПолучитьОбласть("Подписи");
	ОбластьИтого          = Макет.ПолучитьОбласть("Итого");
		
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Штрихкоды = Новый ПостроительЗапроса;
	Штрихкоды.ИсточникДанных = Новый ОписаниеИсточникаДанных(Результаты[3].Выгрузить());
	Штрихкоды.Отбор.Добавить("Номенклатура");
	Штрихкоды.Отбор.Добавить("Характеристика");
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка", ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		//ЗАГОЛОВОК
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		//ШАПКА
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
		ВсегоНаименований = 0;
		Итого             = 0;
		//СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
		//	LNK 26.10.2016 11:27:18
			Штрихкоды.Отбор.Номенклатура.Установить(ВыборкаПоСтрокамТЧ.Номенклатура);
			Штрихкоды.Отбор.Характеристика.Установить(ВыборкаПоСтрокамТЧ.Характеристика);
			Штрихкоды.Выполнить();

			ТекстШтрихкодов  = "";
			ШтрихкодыВыборка = Штрихкоды.Результат.Выбрать();

			Пока ШтрихкодыВыборка.Следующий() Цикл

				Если НЕ ПустаяСтрока(ШтрихкодыВыборка.Штрихкод) Тогда

					ТекстШтрихкодов = ТекстШтрихкодов + ?(ПустаяСтрока(ТекстШтрихкодов), "", Символы.ПС) + СокрЛП(ШтрихкодыВыборка.Штрихкод);

				КонецЕсли;

			КонецЦикла;
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
		//	LNK 26.10.2016 11:29:20
			ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Штрихкод = ТекстШтрихкодов;
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
			
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар =
				?(ПустаяСтрока(ВыборкаПоСтрокамТЧ.ПредставлениеПроизводителя), "", СокрЛП(ВыборкаПоСтрокамТЧ.ПредставлениеПроизводителя) + Символы.ПС)
				+ ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление)
				+ ?(ПустаяСтрока(ВыборкаПоСтрокамТЧ.Размер), "", "; р-р " + СокрЛП(ВыборкаПоСтрокамТЧ.Размер));
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
			
			Если ВыводитьУпаковки Тогда
				
				ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаУпаковок);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);	

			ВсегоНаименований = ВсегоНаименований + 1;
			Итого             = Итого + ВыборкаПоСтрокамТЧ.Сумма;
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
		
		//ИТОГО
		ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", Итого);
		ОбластьИтого.Параметры.Итого = ТекстИтоговойСтроки;
								
		//ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции



Функция ПечатьМ4(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                                  КАК Ссылка,
		|	Документ.Номер                                   КАК Номер,
		|	Документ.Дата                                    КАК Дата,
		|	Документ.Дата                                    КАК ДатаСоставления,
		|	Документ.Организация                             КАК Поставщик,
		|	Документ.Организация                             КАК Организация,
		|	Документ.Организация                             КАК ЮрФизЛицо,
		|	Документ.Организация.Префикс                     КАК Префикс,
		|	Документ.СкладПолучатель.Наименование            КАК СкладНаименование,
		|	Документ.СкладПолучатель                         КАК МестоПриемки,
		|	Документ.Ответственный.Физлицо                   КАК Получил
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК Документ
		|
		|ГДЕ
		|	Документ.Ссылка В (&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК ЕдиницаИзмеренияКод,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.Цена 													   КАК Цена,
		|	ВложенныйЗапрос.Сумма              										   КАК СуммаСНДС,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ВложенныйЗапрос.Количество                                                 КАК КоличествоПринято,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки
		|ИЗ (
		|	ВЫБРАТЬ
		|		Документ.Ссылка             КАК Ссылка,
		|		Документ.Номенклатура       КАК Номенклатура,
		|		ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Документ.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Документ.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ                       КАК ЕдиницаИзмерения,
		|		Документ.Характеристика     КАК Характеристика,
		|		ВЫБОР
		|			КОГДА
		|				Документ.КоличествоУпаковок = 0
		|			ТОГДА
		|				Документ.Цена
		|			ИНАЧЕ
		|				Документ.Сумма / Документ.КоличествоУпаковок
		|		КОНЕЦ КАК Цена,
		|		Документ.Сумма              КАК Сумма,
	   	|		Документ.КоличествоУпаковок КАК Количество,
		|		Документ.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.ПеремещениеТоваров.Товары КАК Документ
		|	ГДЕ
		|		Документ.Ссылка В (&МассивДокументов)
		|
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_М4";
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати      = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.ПолучитьМакет("ОбщийМакет.ПФ_MXL_М4");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		// Выводим общие реквизиты шапки
		СведенияОПокупателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаСоставления);

		НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,");
		ОбластьМакета.Параметры.КодПоЕДРПОУ              = СведенияОПокупателе.КодПоЕДРПОУ;
		ОбластьМакета.Параметры.НомерДокумента           = НомерДокумента;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок докмента
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ДатаСоставления = ДанныеПечати.ДатаСоставления;
		ОбластьМакета.Параметры.НомерДокумента = НомерДокумента;
		
		СведенияОПоставщике     = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.ДатаСоставления);
		ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеПоставщика;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
			
		// Выводим заголовок таблицы
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

		НомерСтраницы = 1;
				
				
		ДанныеСтроки = Новый Структура;
		
		ДанныеСтроки.Вставить("Номер", 0);
			
		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть докмента
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьШапкаСтрок       = Макет.ПолучитьОбласть("ШапкаСтрок");
		ОбластьПодвалСтрок      = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		
		Пока СтрокаТовары.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			
			ДанныеСтроки.Номер       = ДанныеСтроки.Номер + 1;
					
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				СтрокаТовары.ТоварНаименование,
				СтрокаТовары.Характеристика);
						
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьПодвалСтрок);
			
			Если ДанныеСтроки.Номер = КоличествоСтрок И НомерСтраницы > 1 Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;

			Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабличныйДокумент.Вывести(ПодвалСтрок);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапкаСтрок);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалСтрок);
				
		Если НомерСтраницы = 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();				
		КонецЕсли;
		
		// Выводим подвал документа
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.Получил, ДанныеПечати.Дата);
		ОбластьМакета.Параметры.КладовщикПринявшийТоварДолжностьФИО = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено,СтруктураФИО.Фамилия,СтруктураФИО.Имя,СтруктураФИО.Отчество);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
	
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
			
	Возврат ТабличныйДокумент;
		
КонецФункции

Функция ПечатьМ11(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                                  КАК Ссылка,
		|	Документ.Номер                                   КАК Номер,
		|	Документ.Дата                                    КАК Дата,
		|	Документ.Номер                                   КАК НомерДокумента,
		|	Документ.Дата                                    КАК ДатаДокумента,
		|	Документ.Организация                             КАК Организация,
		|	Документ.Организация.Префикс                     КАК Префикс,
		|	Документ.СкладПолучатель                         КАК Подразделение,
		|	Документ.Организация							 КАК Руководители,
		|	""Внутрішнє переміщення"" 						 КАК КодВидаОперации,
		|	Документ.ПредставлениеДокументаОснования         КАК ПредставлениеОснования,
		|	Документ.СкладОтправитель                        КАК Склад
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК Документ
		|
		|ГДЕ
		|	Документ.Ссылка В (&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК НоменклатурныйНомер,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК ЕдиницаИзмеренияКод,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.Цена 													   КАК Цена,
		|	ВложенныйЗапрос.Сумма              										   КАК Сумма,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки
		|ИЗ (
		|	ВЫБРАТЬ
		|		Документ.Ссылка             КАК Ссылка,
		|		Документ.Номенклатура       КАК Номенклатура,
		|		ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Документ.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Документ.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ                       КАК ЕдиницаИзмерения,
		|		Документ.Характеристика     КАК Характеристика,
		|		ВЫБОР
		|			КОГДА
		|				Документ.КоличествоУпаковок = 0
		|			ТОГДА
		|				Документ.Цена
		|			ИНАЧЕ
		|				Документ.Сумма / Документ.КоличествоУпаковок
		|		КОНЕЦ КАК Цена,
		|		Документ.Сумма              КАК Сумма,
		|		Документ.КоличествоУпаковок КАК Количество,
		|		Документ.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.ПеремещениеТоваров.Товары КАК Документ
		|	ГДЕ
		|		Документ.Ссылка В (&МассивДокументов)
		|		И Документ.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_М11";
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати      = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.ПолучитьМакет("ОбщийМакет.ПФ_MXL_М11");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		// Выводим общие реквизиты шапки
		СведенияОбОрганизации = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		ОбластьМакета.Параметры.КодПоЕДРПОУ              = СведенияОбОрганизации.КодПоЕДРПОУ;			
		
		ОбластьМакета.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);			
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		НомерСтраницы = 1;
		
		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть докмента
        ОбластьШапкаСтрок  		= Макет.ПолучитьОбласть("ШапкаСтрок");
        ОбластьПодвалСтрок 		= Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодписи     		= Макет.ПолучитьОбласть("Подписи");
		
		НомерСтраницы = 1;
		НомерСтроки = 0;
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		
		КоличествоСтрок = СтрокаТовары.Количество();
		
		Сумма = 0;
		
		Пока СтрокаТовары.Следующий() Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			
			ОбластьМакета.Параметры.МатериалНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				СтрокаТовары.ТоварНаименование,
				СтрокаТовары.Характеристика);
						
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьМакета); // вместо ОбластьПодвалСтрок по высоте всегда меньше Область
			Если НомерСтроки = КоличествоСтрок И НомерСтраницы > 1 Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодписи);
			КонецЕсли;
			Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.Вывести(ОбластьПодвалСтрок);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапкаСтрок);
			КонецЕсли;
		
			НомерСтроки = НомерСтроки +1;
			Сумма = Сумма+СтрокаТовары.Сумма;
			ТабличныйДокумент.Вывести(ОбластьМакета);
						
				
		КонецЦикла;
		
		// Выводим подвал документа
		ТабличныйДокумент.Вывести(ОбластьПодвалСтрок);
	    		
		Если НомерСтраницы = 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();				
		КонецЕсли;
		
		// Вывод подписей
		Если ЗначениеЗаполнено(КоличествоСтрок) Тогда
			Если КоличествоСтрок = 1 Тогда
				ОбластьПодписи.Параметры.КоличествоНаименований = "одне найменування";
			Иначе
				ОбластьПодписи.Параметры.КоличествоНаименований = НРег(ЧислоПрописью(КоличествоСтрок, "Л=uk; НП=Истина", "найменування, найменування, найменувань, с, , , , , 0"));
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Сумма) Тогда
			ОбластьПодписи.Параметры.СуммаПрописью  = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма, , "uk");
		КонецЕсли;		
		
		Руководители = ФормированиеПечатныхФормСервер.ОтветственныеЛицаОрганизаций(ДанныеПечати.Руководители, ДанныеПечати.Дата);
		Руководитель = Руководители.Руководитель;
		Бухгалтер    = Руководители.ГлавныйБухгалтер;
		
		ОбластьПодписи.Параметры.РуководительДолжностьФИО  = СокрЛП(СокрП(Руководители.РуководительДолжность)+" "+Руководитель);
		ОбластьПодписи.Параметры.ГлавныйБухгалтерФИО       = Бухгалтер;
		ТабличныйДокумент.Вывести(ОбластьПодписи);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
			
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ПеремещениеТоваровТовары.НомерСтроки) КАК НомерСтроки,
	|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
	|	ПеремещениеТоваровТовары.Упаковка КАК Упаковка,
	|	ПеремещениеТоваровТовары.Цена КАК Цена,
	|	СУММА(ПеремещениеТоваровТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ПеремещениеТоваровТовары.Количество) КАК Количество,
	|	СУММА(ПеремещениеТоваровТовары.Сумма) КАК Сумма,
	|	&ВидЦен КАК ВидЦен,
	|	ПеремещениеТоваровТовары.Ссылка.Дата КАК Дата
	|ПОМЕСТИТЬ ПеремещениеТоваровТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Ссылка,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика,
	|	ПеремещениеТоваровТовары.Упаковка,
	|	ПеремещениеТоваровТовары.Цена,
	|	ПеремещениеТоваровТовары.Ссылка.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	|	ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ТаблицаПериодовЦен
	|ИЗ
	|	ПеремещениеТоваровТовары КАК ПеремещениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПеремещениеТоваровТовары.ВидЦен = ЦеныНоменклатуры.ВидЦены
	|			И ПеремещениеТоваровТовары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ПеремещениеТоваровТовары.Характеристика = ЦеныНоменклатуры.Характеристика
	|			И ПеремещениеТоваровТовары.Дата >= ЦеныНоменклатуры.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Ссылка,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика,
	|	ЦеныНоменклатуры.ВидЦены";
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВидЦен", ПараметрыПечати.ВидЦен);

	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номер КАК Номер,
	|	ПеремещениеТоваров.Дата КАК Дата,
	|	ПеремещениеТоваров.Организация КАК Организация,
	|	ПеремещениеТоваров.Организация КАК Руководители,
	|	ПеремещениеТоваров.Организация КАК Грузополучатель,
	|	ПеремещениеТоваров.Организация КАК Грузоотправитель,
	|	ПеремещениеТоваров.Организация КАК Контрагент,
	|	ПеремещениеТоваров.СкладОтправитель.Организация.Префикс КАК Префикс,
	|	&МаркаАвтомобиля КАК МаркаАвтомобиля,
	|	&ГосНомерАвтомобиля КАК ГосНомерАвтомобиля,
	|	&ГосНомерПрицепа КАК ГосНомерПрицепа,
	|	&ПунктПогрузки КАК ПунктПогрузки,
	|	&ПунктРазгрузки КАК ПунктРазгрузки,
	|	&Водитель КАК Водитель,
	|	&Перевозчик КАК Перевозчик,
	|	&ВидПеревозки КАК ВидПеревозки,
	|	&ВидЦен КАК ВидЦен,
	|	&ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СУММА(1) КАК Количество,
	|			СписокТоваров.Ссылка КАК Ссылка
	|		ИЗ
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	|				ПеремещениеТоваровТовары.Номенклатура КАК Номенклатура,
	|				ПеремещениеТоваровТовары.Характеристика КАК Характеристика
	|			ИЗ
	|				Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|			ГДЕ
	|				ПеремещениеТоваровТовары.Ссылка В(&МассивДокументов)) КАК СписокТоваров
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СписокТоваров.Ссылка) КАК НаименованияТоваров
	|		ПО ПеремещениеТоваров.Ссылка = НаименованияТоваров.Ссылка
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПеремещениеТоваров.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ПеремещениеТоваров.Характеристика КАК Характеристика,
	|	ПеремещениеТоваров.Номенклатура."+КолонкаКодов+" КАК ТоварКод,
	|	ПеремещениеТоваров.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.ЕдиницаИзмерения.Наименование
	|	КОНЕЦ КАК ВидУпаковки,
	|	ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения.Наименование КАК БазоваяЕдиницаНаименование,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Цена <> 0
	|			ТОГДА ПеремещениеТоваров.Цена
	|		КОГДА (НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL )
	|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
	|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка.Вес ЕСТЬ NULL 
	|			ТОГДА ПеремещениеТоваров.Количество * ПеремещениеТоваров.Номенклатура.Вес
	|		ИНАЧЕ ПеремещениеТоваров.КоличествоУпаковок * ПеремещениеТоваров.Упаковка.Вес
	|	КОНЕЦ КАК Масса,
	|	ПеремещениеТоваров.КоличествоУпаковок КАК КоличествоМест,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Сумма <> 0
	|			ТОГДА ПеремещениеТоваров.Сумма
	|		КОГДА (НЕ ЦеныНоменклатуры.Упаковка.Коэффициент ЕСТЬ NULL )
	|				И ЦеныНоменклатуры.Упаковка.Коэффициент <> 0
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЦеныНоменклатуры.Упаковка.Коэффициент
	|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|	КОНЕЦ * ПеремещениеТоваров.Количество КАК Сумма,
	|	0 КАК СуммаНДС,
	|	ПеремещениеТоваров.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеТоваров.Номенклатура.Весовой КАК Весовой
	|ИЗ
	|	ПеремещениеТоваровТовары КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПериодовЦен КАК ТаблицаПериодовЦен
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО ТаблицаПериодовЦен.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|				И ТаблицаПериодовЦен.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И ТаблицаПериодовЦен.Характеристика = ЦеныНоменклатуры.Характеристика
	|				И ТаблицаПериодовЦен.Период = ЦеныНоменклатуры.Период
	|		ПО ПеремещениеТоваров.Ссылка = ТаблицаПериодовЦен.Ссылка
	|			И ПеремещениеТоваров.Номенклатура = ТаблицаПериодовЦен.Номенклатура
	|			И ПеремещениеТоваров.Характеристика = ТаблицаПериодовЦен.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеТоваров.Ссылка,
	|	ПеремещениеТоваров.НомерСтроки
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПеремещениеТоваровТовары";
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("МаркаАвтомобиля", ПараметрыПечати.МаркаАвтомобиля);
	Запрос.УстановитьПараметр("ГосНомерАвтомобиля", ПараметрыПечати.ГосНомерАвтомобиля);
	Запрос.УстановитьПараметр("ГосНомерПрицепа", ПараметрыПечати.ГосНомерПрицепа);
	Запрос.УстановитьПараметр("ПунктПогрузки", ПараметрыПечати.ПунктПогрузки);
	Запрос.УстановитьПараметр("ПунктРазгрузки", ПараметрыПечати.ПунктРазгрузки);
	Запрос.УстановитьПараметр("Водитель", ПараметрыПечати.Водитель);
	Запрос.УстановитьПараметр("Перевозчик", ПараметрыПечати.Перевозчик);
	Запрос.УстановитьПараметр("ВидПеревозки", ПараметрыПечати.ВидПеревозки);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", ПараметрыПечати.ВидЦен.ЦенаВключаетНДС);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТТН";
	
	ФормированиеПечатныхФормСервер.ЗаполнитьТабличныйДокументТТН(ТабличныйДокумент, Запрос, ОбъектыПечати);
		
	Возврат ТабличныйДокумент;
	
КонецФункции

//	LNK 07.02.2017 11:05:49
Функция ПечатьАктаРазногласий(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода)

	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Перемещение товаров';uk='Переміщення товарів'", КодЯзыкаПечать);

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_АктРазногласий";

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Реестр.Ссылка,
	|	Реестр.Номер,
	|	Реестр.Дата,
	|	Реестр.IDN,
	|	Реестр.Магазин,
	|	Реестр.МагазинПредставление,
	|	Реестр.НомерМагазина,
	|	Реестр.Действие,
	|	Реестр.ВидНакладной,
	|	ЕСТЬNULL(ТаблицаКонтакты.Представление, """") КАК АдресМагазина
	|ИЗ
	|	(ВЫБРАТЬ
	|		Документ.Ссылка КАК Ссылка,
	|		Документ.Номер КАК Номер,
	|		Документ.Дата КАК Дата,
	|		Документ.IDN КАК IDN,
	|		ВЫБОР
	|			КОГДА Документ.МагазинОтправитель.СкладУправляющейСистемы = ИСТИНА
	|				ТОГДА Документ.МагазинПолучатель
	|			ИНАЧЕ Документ.МагазинОтправитель
	|		КОНЕЦ КАК Магазин,
	|		ВЫБОР
	|			КОГДА Документ.МагазинОтправитель.СкладУправляющейСистемы = ИСТИНА
	|				ТОГДА Документ.МагазинПолучатель.Представление
	|			ИНАЧЕ Документ.МагазинОтправитель.Представление
	|		КОНЕЦ КАК МагазинПредставление,
	|		ВЫБОР
	|			КОГДА Документ.МагазинОтправитель.СкладУправляющейСистемы = ИСТИНА
	|				ТОГДА Документ.МагазинПолучатель.НомерМагазина
	|			ИНАЧЕ Документ.МагазинОтправитель.НомерМагазина
	|		КОНЕЦ КАК НомерМагазина,
	|		ВЫБОР
	|			КОГДА Документ.МагазинОтправитель.СкладУправляющейСистемы = ИСТИНА
	|				ТОГДА ""приемки""
	|			ИНАЧЕ ""отгрузки""
	|		КОНЕЦ КАК Действие,
	|		ВЫБОР
	|			КОГДА Документ.МагазинОтправитель.СкладУправляющейСистемы = ИСТИНА
	|				ТОГДА ""приходной""
	|			ИНАЧЕ ""расходной""
	|		КОНЕЦ КАК ВидНакладной
	|	ИЗ
	|		Документ.ПеремещениеТоваров КАК Документ
	|	ГДЕ
	|		Документ.Ссылка В(&МассивОбъектов)
	|		И Документ.Проведен) КАК Реестр
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Магазины.КонтактнаяИнформация КАК ТаблицаКонтакты
	|		ПО Реестр.Магазин = ТаблицаКонтакты.Ссылка
	|			И (ТаблицаКонтакты.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресМагазина))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Реестр.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ПеремещениеТоваров,
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Количество,
	|	Товары.Цена,
	|	ЕСТЬNULL(ТаблицаРеквизиты.Значение, """") КАК Размер
	|ПОМЕСТИТЬ ТоварыПлан
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыПлановые.Ссылка КАК ПеремещениеТоваров,
	|		МИНИМУМ(ТоварыПлановые.НомерСтроки) КАК НомерСтроки,
	|		ТоварыПлановые.Номенклатура КАК Номенклатура,
	|		СУММА(ТоварыПлановые.Количество) КАК Количество,
	|		МАКСИМУМ(ТоварыПлановые.Цена / ВЫБОР
	|				КОГДА ЕСТЬNULL(ТоварыПлановые.Упаковка.Коэффициент, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ ТоварыПлановые.Упаковка.Коэффициент
	|			КОНЕЦ) КАК Цена
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК ТоварыПлановые
	|	ГДЕ
	|		ТоварыПлановые.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыПлановые.Ссылка,
	|		ТоварыПлановые.Номенклатура) КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК ТаблицаРеквизиты
	|		ПО Товары.Номенклатура = ТаблицаРеквизиты.Ссылка
	|			И (ТаблицаРеквизиты.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.РазмерностьТовара))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Товары.ПеремещениеТоваров,
	|	Товары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПлан.ПеремещениеТоваров КАК ПеремещениеТоваров,
	|	ТоварыПлан.НомерСтроки КАК НомерСтроки,
	|	ТоварыПлан.Номенклатура,
	|	ТоварыПлан.Количество КАК Количество,
	|	ЕСТЬNULL(ТоварыФакт.Количество, 0) КАК КоличествоФакт,
	|	ТоварыПлан.Цена КАК Цена,
	|	ТоварыПлан.Номенклатура.IDN КАК IDN,
	|	ТоварыПлан.Номенклатура.Артикул КАК Артикул,
	|	ТоварыПлан.Номенклатура.Наименование КАК Наименование,
	|	ТоварыПлан.Номенклатура.Производитель КАК Производитель,
	|	ТоварыПлан.Номенклатура.Производитель.Представление КАК ПроизводительПредставление,
	|	ТоварыПлан.Размер
	|ИЗ
	|	ТоварыПлан КАК ТоварыПлан
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТоварыПлан.ПеремещениеТоваров КАК ПеремещениеТоваров,
	|			ТоварыФакт.Номенклатура КАК Номенклатура,
	|			СУММА(ТоварыФакт.Количество) КАК Количество
	|		ИЗ
	|			ТоварыПлан КАК ТоварыПлан
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары.Товары КАК ТоварыФакт
	|				ПО ТоварыПлан.ПеремещениеТоваров = ТоварыФакт.Ссылка.ДокументОснование
	|					И ТоварыПлан.Номенклатура = ТоварыФакт.Номенклатура
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТоварыПлан.ПеремещениеТоваров,
	|			ТоварыФакт.Номенклатура
	|		
	|		ОБЪЕДИНИТЬ
	|		
	|		ВЫБРАТЬ
	|			ТоварыПлан.ПеремещениеТоваров,
	|			ТоварыФакт.Номенклатура,
	|			СУММА(ТоварыФакт.Количество)
	|		ИЗ
	|			ТоварыПлан КАК ТоварыПлан
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.Товары КАК ТоварыФакт
	|				ПО ТоварыПлан.ПеремещениеТоваров = ТоварыФакт.Ссылка.ДокументОснование
	|					И ТоварыПлан.Номенклатура = ТоварыФакт.Номенклатура
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТоварыПлан.ПеремещениеТоваров,
	|			ТоварыФакт.Номенклатура) КАК ТоварыФакт
	|		ПО ТоварыПлан.ПеремещениеТоваров = ТоварыФакт.ПеремещениеТоваров
	|			И ТоварыПлан.Номенклатура = ТоварыФакт.Номенклатура
	|ГДЕ
	|	НЕ ТоварыПлан.Количество - ЕСТЬNULL(ТоварыФакт.Количество, 0) = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеТоваров,
	|	НомерСтроки
	|ИТОГИ ПО
	|	ПеремещениеТоваров"
	);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПеремещениеТоваров.ПФ_АктРазногласий", КодЯзыкаПечать);

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка     = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока    = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал    = Макет.ПолучитьОбласть("Подвал");

	ВыборкаПоДокументам = Результаты[0].Выбрать();
	ВыборкаПоТабличнымЧастям = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("ПеремещениеТоваров", ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
	//	ЗАГОЛОВОК
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
	//	ШАПКА
		ТабличныйДокумент.Вывести(ОбластьШапка);

		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрока);

		КонецЦикла;

		ОбластьПодвал.Параметры.Заполнить(ВыборкаПоДокументам);
		ТабличныйДокумент.Вывести(ОбластьПодвал);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьАктаРазногласий()

Функция ПолучитьПредЦену(Номенклатура,Упаковка,Магазин)
	СтараяЦена = "";
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 2
		|	ДействующиеЦеныНоменклатуры.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦеныНоменклатуры
		|ГДЕ
		|	ДействующиеЦеныНоменклатуры.Упаковка = &Упаковка
		|	И ДействующиеЦеныНоменклатуры.Номенклатура = &Номенклатура
		|	И ДействующиеЦеныНоменклатуры.ОбъектЦенообразования = &ОбъектЦенообразования
		|	И ДействующиеЦеныНоменклатуры.Период <= &Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДействующиеЦеныНоменклатуры.Период УБЫВ";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ОбъектЦенообразования", Магазин);
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("Упаковка", Упаковка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтараяЦена =  ВыборкаДетальныеЗаписи.Цена;
	КонецЦикла;
	
	Возврат СтараяЦена;
	
КонецФункции


Функция ПолучитьАкцию(Номенклатура,Магазин)
	СтараяЦена = "";
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ) КАК ЦеныНоменклатурыСрезПоследних
		|ГДЕ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура = &Номенклатура
		|	И ЦеныНоменклатурыСрезПоследних.Период <= &Период
		|	И ЦеныНоменклатурыСрезПоследних.ТипПереоценки = &ТипПереоценки
		|	И ЦеныНоменклатурыСрезПоследних.ВидЦены = &ВидЦены";
	ВидЦены = РозничныеПродажиСерверПовтИсп.РеквизитыМагазина(Магазин,ТекущаяДатаСеанса()).ВидЦен;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ВидЦены",ВидЦены);
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ТипПереоценки", Перечисления.ТипыПереоценок.ПромоНачало);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() тогда 
		
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	НоменклатураСегмента.Номенклатура КАК Номенклатура,
			|	ДействиеСкидокНаценок.СкидкаНаценка КАК СкидкаСложная
			|ИЗ
			|	РегистрСведений.ДействиеСкидокНаценок КАК ДействиеСкидокНаценок
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
			|		ПО ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления = НоменклатураСегмента.Сегмент
			|ГДЕ
			|	ДействиеСкидокНаценок.Период <= &КонецДня
			|	И ДействиеСкидокНаценок.ДатаОкончания >= &НачалоДня
			|	И ДействиеСкидокНаценок.СкидкаНаценка.УчаствуетВПереоценке = ИСТИНА
			|
			|СГРУППИРОВАТЬ ПО
			|	НоменклатураСегмента.Номенклатура,
			|	ДействиеСкидокНаценок.СкидкаНаценка";
		
		Запрос.УстановитьПараметр("КонецДня", КонецДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ТекущаяДатаСеанса()));
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() тогда 
			Акция = "";
		Иначе
			Акция = "Акція!";
		КонецЕсли;
	Иначе 
		Акция = "Акція!";
	КонецЕсли;
	Возврат Акция;
	
КонецФункции


#КонецЕсли














///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Процедура ЗаполнитьНаборыЗначенийДоступа заполняет наборы значений доступа
// по объекту в таблице с полями:
//  - НомерНабора     Число                                     (необязательно, если набор один),
//  - ВидДоступа      ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//  - ЗначениеДоступа Неопределено, СправочникСсылка или др.    (обязательно),
//  - Чтение          Булево (необязательно, если набор для всех прав; устанавливается для одной строки набора),
//  - Добавление      Булево (необязательно, если набор для всех прав; устанавливается для одной строки набора),
//  - Изменение       Булево (необязательно, если набор для всех прав; устанавливается для одной строки набора),
//  - Удаление        Булево (необязательно, если набор для всех прав; устанавливается для одной строки набора).
//
//  Вызывается из процедуры УправлениеДоступом.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	// Логика ограничения следующая:
	// объект доступен, если доступны все магазины и скидки
	// 
	
	Для Каждого СтрокаТаблицы Из Магазины Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Магазин) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.ВидДоступа      = ПланыВидовХарактеристик.ВидыДоступа.Магазины;
		СтрокаТаб.ЗначениеДоступа = СтрокаТаблицы.Магазин;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(СкидкиНаценки.СкидкаНаценка КАК Справочник.СкидкиНаценки) КАК СкидкаНаценка
	|ПОМЕСТИТЬ ТаблицаСкидок
	|ИЗ
	|	&СкидкиНаценки КАК СкидкиНаценки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСкидок.СкидкаНаценка.ВидЦены КАК ВидЦены
	|ИЗ
	|	ТаблицаСкидок КАК ТаблицаСкидок
	|ГДЕ
	|	(НЕ ТаблицаСкидок.СкидкаНаценка.ВидЦены = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))";
	
	Запрос.УстановитьПараметр("СкидкиНаценки", СкидкиНаценки.Выгрузить());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.ВидДоступа      = ПланыВидовХарактеристик.ВидыДоступа.ВидыЦен;
		СтрокаТаб.ЗначениеДоступа = Выборка.ВидЦены;
		
	КонецЦикла;
	
	
	Если Таблица.Количество() = 0 Тогда
	
		СтрокаТаб = Таблица.Добавить();
		СтрокаТаб.Чтение          = Истина;
		СтрокаТаб.Добавление      = Истина;
		СтрокаТаб.Изменение       = Истина;
		СтрокаТаб.ВидДоступа      = ПланыВидовХарактеристик.ВидыДоступа.Магазины;
		СтрокаТаб.ЗначениеДоступа = Справочники.Магазины.ПустаяСсылка();
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.МаркетинговаяАкция.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	МаркетинговыеАкцииСервер.ОтразитьДействиеСкидокНаценок(ДополнительныеСвойства, Движения, Отказ);

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты);
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ДляВсехМагазинов Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Магазины");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	МаркетинговыеАкцииСервер.ПроверитьЗаполнениеДокументаМаркетинговаяАкция(
		ЭтотОбъект,
		Отказ
	);
	
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
//	LNK 16.02.2017 14:33:05
	ЗаполнениеОбъектовСобытия.ОбщиеДействияПередЗаписью(ЭтотОбъект, Отказ);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если  ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда
		Если НЕ ЭтоНовый() тогда 
			Если  Ссылка.ДатаОкончанияДействия > ТекущаяДата() или ДатаОкончанияДействия > ТекущаяДата() тогда
				УстановитьПривилегированныйРежим(Истина);
				Если Ссылка.ДатаНачалаДействия <> ДатаНачалаДействия ИЛИ Ссылка.ДатаОкончанияДействия <> ДатаОкончанияДействия  тогда
						СделатьЗаписьПоДате();	
				Иначе		
					Если НЕ Ссылка.ДляВсехМагазинов = ДляВсехМагазинов тогда
						Если  ДляВсехМагазинов = Ложь тогда
							СделатьЗаписьДляВсехМагазинов();
						Иначе
							СдлеатьЗаписьДляВыбранныхМагазинов();
						КонецЕсли;   					
					ИначеЕсли ДляВсехМагазинов = Ложь тогда 
					 СравнитьТЧ();	
					КонецЕсли;
				 КонецЕсли;
				УстановитьПривилегированныйРежим(Ложь);
			 КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда

		Возврат;

	КонецЕсли;	

	Если ОбщегоНазначенияРТСервер.РазрешеноИзменениеВУзле(ЭтотОбъект, Отказ) Тогда

	//	LNK 27.09.2017 15:30:43
		Возврат;

	КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);

	Если НЕ ДляВсехМагазинов И ИспользоватьИнтернетМагазин Тогда

		ИспользоватьИнтернетМагазин = Ложь;

	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение

// Инициализирует документ
//
Процедура ИнициализироватьДокумент()
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Если  ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда
		Если ДополнительныеСвойства.ЭтоНовый тогда 
			УстановитьПривилегированныйРежим(Истина);			
			Для каждого УзелПолучатель Из ОбменBigQueryПовтИсп.ПолучитьМассивУзлов() Цикл
				  ПланыОбмена.ЗарегистрироватьИзменения(УзелПолучатель, Ссылка);
			КонецЦикла;
			УстановитьПривилегированныйРежим(Ложь);			
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

Процедура ЗапросПоДобавленнымМазазинам(ТЧМагазины)
	
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Организация = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику().ОсновнаяОрганизация;

	Если НЕ ЗначениеЗаполнено(Организация) Тогда

		Организация = Справочники.Организации.ПолучитьОрганизациюПоУмолчанию();

	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЧМагазины.Магазин КАК Магазин
		|ПОМЕСТИТЬ ТЧМагазины
		|ИЗ
		|	&ТЧМагазины КАК ТЧМагазины
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Магазин
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Магазины.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВсеМагазины
		|ИЗ
		|	Справочник.Магазины КАК Магазины
		|ГДЕ
		|	Магазины.ВведенВЭксплуатацию = ИСТИНА
		|	И Магазины.Организация = &Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеМагазины.Ссылка,
		|	ТЧМагазины.Магазин
		|ПОМЕСТИТЬ ТабСравнениямагазинов
		|ИЗ
		|	ВсеМагазины КАК ВсеМагазины
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТЧМагазины КАК ТЧМагазины
		|		ПО ВсеМагазины.Ссылка = ТЧМагазины.Магазин
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабСравнениямагазинов.Ссылка КАК Магазин
		|ИЗ
		|	ТабСравнениямагазинов КАК ТабСравнениямагазинов
		|ГДЕ
		|	ТабСравнениямагазинов.Магазин = NULL";
	
	Запрос.УстановитьПараметр("ТчМагазины", ДополнительныеСвойства.ТЧМагазины);  	
	Запрос.УстановитьПараметр("Организация", Организация);  		
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СделатьЗаписьВДатаИзмененияСегментов(ВыборкаДетальныеЗаписи.Магазин);
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	
КонецПроцедуры


Процедура СделатьЗаписьВДатаИзмененияСегментов(Магазин);
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НоменклатураСегмента.Номенклатура
		|ИЗ
		|	Документ.МаркетинговаяАкция.СкидкиНаценки КАК МаркетинговаяАкцияСкидкиНаценки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
		|		ПО МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.СегментНоменклатурыПредоставления = НоменклатураСегмента.Сегмент
		|ГДЕ
		|	МаркетинговаяАкцияСкидкиНаценки.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ДатаИзмененияСегментов.СоздатьНаборЗаписей(); 

		НаборЗаписей.Отбор.Номенклатура.Установить(ВыборкаДетальныеЗаписи.Номенклатура);
		НаборЗаписей.Отбор.Магазин.Установить(Магазин);

		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Магазин = Магазин;
		НоваяЗапись.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		НоваяЗапись.Дата = ТекущаяДатаСеанса(); 

		НаборЗаписей.Записать();	
	КонецЦикла;
	
	
	
	
КонецПроцедуры


Процедура  СделатьЗаписьПоДате()
	Если ДляВсехМагазинов тогда  
		Если ДляВсехМагазинов  = Ссылка.ДляВсехМагазинов тогда 
			СделеатьПросутюЗапись();
		Иначе
			СдлеатьЗаписьДляВыбранныхМагазинов_ПлюсИзменениеДаты();
		КонецЕсли;		
	Иначеесли ДляВсехМагазинов = Ложь тогда
		Если ДляВсехМагазинов  = Ссылка.ДляВсехМагазинов тогда 
			СдлеатьЗаписьДляВыбранныхМагазинов_ПлюсИзменениеДаты2();
		Иначе
			СделатьЗаписьДляВсехМагазинов_ПлюсИзменениеДаты();
		КонецЕсли;		
	КонецЕсли;	
КонецПроцедуры

Процедура СделеатьПросутюЗапись()
	СделатьЗаписьВРегистр(ТекущаяДата(),Справочники.Магазины.ПустаяСсылка(),"delete",Ссылка.ДатаНачалаДействия,Ссылка.ДатаОкончанияДействия);
	Если ДатаОкончанияДействия > НачалоДня(ТекущаяДата()) тогда
		СделатьЗаписьВРегистр(ТекущаяДата(),Справочники.Магазины.ПустаяСсылка(),"create",ДатаНачалаДействия,ДатаОкончанияДействия);
 	КонецЕсли;
КонецПроцедуры

Процедура СравнитьТЧ();
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
				"ВЫБРАТЬ
				|	ТЧ.Магазин КАК Магазин
				|ПОМЕСТИТЬ ТЧпосле
				|ИЗ
				|	&ТЧпосле КАК ТЧ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТЧ.Магазин КАК Магазин
				|ПОМЕСТИТЬ ТЧдо
				|ИЗ
				|	&ТЧдо КАК ТЧ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТЧдо.Магазин КАК Магазин,
				|	ТЧпосле.Магазин КАК Магазин1
				|ИЗ
				|	ТЧдо КАК ТЧдо
				|		ЛЕВОЕ СОЕДИНЕНИЕ ТЧпосле КАК ТЧпосле
				|		ПО ТЧдо.Магазин = ТЧпосле.Магазин
				|ГДЕ
				|	ТЧпосле.Магазин ЕСТЬ NULL
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ТЧдо
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ТЧпосле";
				
				
				
				
							
	Запрос.УстановитьПараметр("ТЧдо",Ссылка.Магазины.Выгрузить());
	Запрос.УстановитьПараметр("ТЧпосле",Магазины.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СделатьЗаписьВРегистр(ТекущаяДата(),ВыборкаДетальныеЗаписи.Магазин,"delete",Ссылка.ДатаНачалаДействия,Ссылка.ДатаОкончанияДействия);
		Если Ссылка.ДатаНачалаДействия <= ТекущаяДата()	тогда	
			СделатьЗаписьВРегистр(ТекущаяДата(),ВыборкаДетальныеЗаписи.Магазин,"create",Ссылка.ДатаНачалаДействия,ТекущаяДата())
		КонецЕсли;	
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
				"ВЫБРАТЬ
				|	ТЧ.Магазин КАК Магазин
				|ПОМЕСТИТЬ ТЧпосле
				|ИЗ
				|	&ТЧпосле КАК ТЧ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТЧ.Магазин КАК Магазин
				|ПОМЕСТИТЬ ТЧдо
				|ИЗ
				|	&ТЧдо КАК ТЧ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТЧпосле.Магазин КАК Магазин
				|ИЗ
				|	ТЧпосле КАК ТЧпосле
				|		ЛЕВОЕ СОЕДИНЕНИЕ ТЧдо КАК ТЧдо
				|		ПО ТЧпосле.Магазин = ТЧдо.Магазин
				|ГДЕ
				|	ТЧдо.Магазин ЕСТЬ NULL
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ТЧдо
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ТЧпосле";
	Запрос.УстановитьПараметр("ТЧдо",Ссылка.Магазины.Выгрузить());
	Запрос.УстановитьПараметр("ТЧпосле",Магазины.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СделатьЗаписьВРегистр(ТекущаяДата(),ВыборкаДетальныеЗаписи.Магазин,"create",Ссылка.ДатаНачалаДействия,Ссылка.ДатаОкончанияДействия)
	КонецЦикла;
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
КонецПроцедуры

Процедура СравнитьТЧ_ПлюсИзменениеДаты();
		Если Ссылка.ДатаНачалаДействия <= ТекущаяДата() тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ТЧ.Магазин КАК Магазин
				|ПОМЕСТИТЬ ТЧпосле
				|ИЗ
				|	&ТЧпосле КАК ТЧ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТЧ.Магазин КАК Магазин
				|ПОМЕСТИТЬ ТЧдо
				|ИЗ
				|	&ТЧдо КАК ТЧ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТЧдо.Магазин КАК Магазин,
				|	ТЧпосле.Магазин КАК Магазин1
				|ИЗ
				|	ТЧдо КАК ТЧдо
				|		ЛЕВОЕ СОЕДИНЕНИЕ ТЧпосле КАК ТЧпосле
				|		ПО ТЧдо.Магазин = ТЧпосле.Магазин
				|ГДЕ
				|	ТЧпосле.Магазин ЕСТЬ NULL
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ТЧдо
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ТЧпосле";
			Запрос.УстановитьПараметр("ТЧСсылка",Ссылка.Магазины.Выгрузить());
			Запрос.УстановитьПараметр("ТЧ",Магазины.Выгрузить());
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СделатьЗаписьВРегистр(ТекущаяДата(),ВыборкаДетальныеЗаписи.Магазин,"delete",Ссылка.ДатаНачалаДействия,Ссылка.ДатаОкончанияДействия);
				СделатьЗаписьВРегистр(ТекущаяДата(),ВыборкаДетальныеЗаписи.Магазин,"create",Ссылка.ДатаНачалаДействия,ТекущаяДата());
			КонецЦикла;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ТЧ.Магазин КАК Магазин
				|ПОМЕСТИТЬ ТЧпосле
				|ИЗ
				|	&ТЧпосле КАК ТЧ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТЧ.Магазин КАК Магазин
				|ПОМЕСТИТЬ ТЧдо
				|ИЗ
				|	&ТЧдо КАК ТЧ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТЧпосле.Магазин КАК Магазин
				|ИЗ
				|	ТЧпосле КАК ТЧпосле
				|		ЛЕВОЕ СОЕДИНЕНИЕ ТЧдо КАК ТЧдо
				|		ПО ТЧпосле.Магазин = ТЧдо.Магазин
				|ГДЕ
				|	ТЧдо.Магазин ЕСТЬ NULL
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ТЧдо
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ТЧпосле";
				
			Запрос.УстановитьПараметр("ТЧСсылка",Ссылка.Магазины.Выгрузить());
			Запрос.УстановитьПараметр("ТЧ",Магазины.Выгрузить());
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СделатьЗаписьВРегистр(ТекущаяДата(),ВыборкаДетальныеЗаписи.Магазин,"create",ДатаНачалаДействия,ДатаОкончанияДействия);
			КонецЦикла;
			
			
		Иначе
			Для каждого строка из  Ссылка.Магазины цикл
				СделатьЗаписьВРегистр(ТекущаяДата(),строка.Магазин,"delete",Ссылка.ДатаНачалаДействия,Ссылка.ДатаОкончанияДействия);
			КонецЦикла;
			Для каждого строка из  Магазины цикл
				СделатьЗаписьВРегистр(ТекущаяДата(),строка.Магазин,"delete",ДатаНачалаДействия,ДатаОкончанияДействия);
			КонецЦикла;
		КонецЕсли;
	
	
	
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

Процедура  СделатьЗаписьДляВсехМагазинов_ПлюсИзменениеДаты()  	// Было для всех магазинов стало для списка
	СделатьЗаписьВРегистр(ТекущаяДата(),Справочники.Магазины.ПустаяСсылка(),"delete",Ссылка.ДатаНачалаДействия,Ссылка.ДатаОкончанияДействия);
	Если Ссылка.ДатаНачалаДействия <= ТекущаяДата()	тогда	
		СделатьЗаписьВРегистр(ТекущаяДата(),Справочники.Магазины.ПустаяСсылка(),"create",Ссылка.ДатаНачалаДействия,ТекущаяДата());
	КонецЕсли;
	Если ДатаОкончанияДействия > НачалоДня(ТекущаяДата()) тогда
		Для каждого строка из  Ссылка.Магазины цикл
			СделатьЗаписьВРегистр(ТекущаяДата(),строка.Магазин,"create",ДатаНачалаДействия,ДатаОкончанияДействия);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура  СдлеатьЗаписьДляВыбранныхМагазинов_ПлюсИзменениеДаты()  

	Для каждого строка из  Ссылка.Магазины цикл
		СделатьЗаписьВРегистр(ТекущаяДата(),строка.Магазин,"delete",Ссылка.ДатаНачалаДействия,Ссылка.ДатаОкончанияДействия);
	КонецЦикла;
		
	Если ДатаНачалаДействия <= ТекущаяДата() тогда 
		Для каждого строка из  Ссылка.Магазины цикл
			СделатьЗаписьВРегистр(ТекущаяДата(),строка.Магазин,"create",ДатаНачалаДействия,ТекущаяДата());
		КонецЦикла;
	КонецЕсли;
	
	Если ДатаОкончанияДействия > НачалоДня(ТекущаяДата()) тогда
		СделатьЗаписьВРегистр(ТекущаяДата(),строка.Магазин,"create",ДатаНачалаДействия,ДатаОкончанияДействия);
	КонецЕсли;
КонецПроцедуры


Процедура  СдлеатьЗаписьДляВыбранныхМагазинов_ПлюсИзменениеДаты2()  // Было для для списка стало всех магазинов  
	
	Для каждого строка из  Ссылка.Магазины цикл
		СделатьЗаписьВРегистр(ТекущаяДата(),строка.Магазин,"delete",Ссылка.ДатаНачалаДействия,Ссылка.ДатаОкончанияДействия);
	КонецЦикла;
		
	Если Ссылка.ДатаОкончанияДействия <= ТекущаяДата() тогда 
		Для каждого строка из  Ссылка.Магазины цикл
			СделатьЗаписьВРегистр(ТекущаяДата(),строка.Магазин,"create",ДатаНачалаДействия,ТекущаяДата());
		КонецЦикла;
	КонецЕсли;
	
	Если ДатаОкончанияДействия > НачалоДня(ТекущаяДата()) тогда
		Для каждого строка из  Магазины цикл
			СделатьЗаписьВРегистр(ТекущаяДата(),строка.Магазин,"create",ДатаНачалаДействия,ДатаОкончанияДействия);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры



Процедура  СдлеатьЗаписьДляВыбранныхМагазинов()  	// Было для для списка стало всех магазинов  

	Для каждого строка из  Ссылка.Магазины цикл
		СделатьЗаписьВРегистр(ТекущаяДата(),строка.Магазин,"delete",ДатаНачалаДействия,ДатаОкончанияДействия);
	КонецЦикла;
		
	Если ДатаНачалаДействия <= ТекущаяДата() тогда 
		Для каждого строка из  Ссылка.Магазины цикл
			СделатьЗаписьВРегистр(ТекущаяДата(),строка.Магазин,"create",ДатаНачалаДействия,ТекущаяДата());
		КонецЦикла;
	КонецЕсли;
	Если ДатаОкончанияДействия > НачалоДня(ТекущаяДата()) тогда
		СделатьЗаписьВРегистр(ТекущаяДата(),Справочники.Магазины.ПустаяСсылка(),"create",ДатаНачалаДействия,ДатаОкончанияДействия);
	КонецЕсли;
КонецПроцедуры


Процедура  СделатьЗаписьДляВсехМагазинов()	// Было для всех магазинов стало для списка
	СделатьЗаписьВРегистр(ТекущаяДата(),Справочники.Магазины.ПустаяСсылка(),"delete",ДатаНачалаДействия,ДатаОкончанияДействия);
	
	Если ДатаНачалаДействия <= ТекущаяДата() тогда 
		СделатьЗаписьВРегистр(ТекущаяДата(),Справочники.Магазины.ПустаяСсылка(),"delete",ДатаНачалаДействия,ТекущаяДата());
	КонецЕсли;
		
	Если ДатаОкончанияДействия > НачалоДня(ТекущаяДата()) тогда
		Для каждого строка из  Магазины цикл
			СделатьЗаписьВРегистр(ТекущаяДата(),строка.Магазин,"create",ДатаНачалаДействия,ДатаОкончанияДействия);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


Процедура СделатьЗаписьВРегистр(ТекДата,Магазин,Действие,ТекДатаНачалаДействия,ТекДатаОкончанияДействия)

	НаборЗаписей = РегистрыСведений.ОбъектыДляОбработкиBigQuery.СоздатьНаборЗаписей(); 

	НаборЗаписей.Отбор.Объект.Установить(Ссылка);
	НаборЗаписей.Отбор.Период.Установить(ТекДата); 
	НаборЗаписей.Отбор.Магазин.Установить(Магазин); 
	НаборЗаписей.Отбор.ДатаНачалаДействия.Установить(ТекДатаНачалаДействия); 
	НаборЗаписей.Отбор.ДатаОкончанияДействия.Установить(ТекДатаОкончанияДействия); 
	
	НовЗапись = НаборЗаписей.Добавить();
	НовЗапись.Магазин = Магазин;
	НовЗапись.Период = ТекДата;
	НовЗапись.Объект = Ссылка;
	НовЗапись.action = Действие; 
	НовЗапись.ДатаНачалаДействия = ТекДатаНачалаДействия; 
	НовЗапись.ДатаОкончанияДействия = ТекДатаОкончанияДействия; 
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры
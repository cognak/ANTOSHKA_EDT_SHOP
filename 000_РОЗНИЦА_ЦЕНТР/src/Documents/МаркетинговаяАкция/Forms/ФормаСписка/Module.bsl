
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
    
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборДействующихАкций(Команда)

	ИдентификаторНастройки = "ОтборыТолькоДействующиеАкции";

	Если Элементы.СписокУстановитьОтбор.Пометка = Ложь Тогда

	//	видим пока все акции, нужно отобрать действующие

        ГруппаВедущая = Неопределено;    

        Для каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл

			Если ЭлементОтбора.ИдентификаторПользовательскойНастройки = ИдентификаторНастройки Тогда

				ГруппаВедущая = ЭлементОтбора;
				ГруппаВедущая.Использование = Истина;
                ЭлементОтбора.Элементы.Очистить();

				Прервать;

			КонецЕсли;

        КонецЦикла;
        
        Если ГруппаВедущая = Неопределено Тогда
            
			ГруппаВедущая = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
 			ГруппаВедущая.ИдентификаторПользовательскойНастройки = ИдентификаторНастройки;

        КонецЕсли;
		
		ЭлементОтбора = ГруппаВедущая.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Проведен");
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Истина;

		// создадим группу ИЛИ
		ГруппаОтбора = ГруппаВедущая.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ;

		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДатаОкончанияДействия");
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		ЭлементОтбора.ПравоеЗначение = НачалоДня(ТекущаяДата());

		// акции с пустой датой окончания тоже оставим
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДатаОкончанияДействия");
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = '00010101';
        
        Элементы.СписокУстановитьОтбор.Пометка = Истина;
        
    Иначе
        // кнопка уже нажата, нужно отобразить все акции
        
		Для каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл

			Если ЭлементОтбора.ИдентификаторПользовательскойНастройки = ИдентификаторНастройки Тогда

	            ЭлементОтбора.Использование  = Ложь; 

			КонецЕсли;

		КонецЦикла;
        
        Элементы.СписокУстановитьОтбор.Пометка = Ложь;
        
    КонецЕсли; 
    
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Перем мМагазинПриНачалеРедактирования;

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(Объект,КартинкаСостоянияДокумента,СостояниеДокумента,РазрешеноПроведение);
	
	НастроитьФормуПоДополнительнымПравам();

	УправлениеДоступомРТ.ПриСозданииФормыНаСервере(ЭтотОбъект);	//	LNK 17.10.2019 14:30:01
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОпределитьПараметрыПроведенияАкции();
	УстановитьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
//	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);	//	LNK 01.02.2017 10:26:30 комментарий
	
	Элементы.ГруппаОписание.Картинка = ОбщегоНазначенияРТ.ПолучитьКартинкуКомментария(Объект.Описание);
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Элементы.ГруппаОписание.Картинка = ОбщегоНазначенияРТ.ПолучитьКартинкуКомментария(Объект.Описание);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДляВсехМагазиновПриИзменении(Элемент)
	
	Если Объект.Магазины.Количество()>0 ИЛИ Объект.СкидкиНаценки.Количество()>0 Тогда
		ТекстВопроса = НСтр("ru = 'Выбран другой режим учета магазинов. Очистить таблицы?'"); 
		
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да;
		Если Ответ Тогда
			Объект.Магазины.Очистить();
			Объект.СкидкиНаценки.Очистить();
			
		Иначе
			Объект.ДляВсехМагазинов = Не Объект.ДляВсехМагазинов;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ДляВсехМагазинов  Тогда
		Объект.ДляВсехМагазиновОдноРасписаниеСкидок = Истина;
		УстановитьОтборСтрокВСкидкахНаценках(ПредопределенноеЗначение("Справочник.Магазины.ПустаяСсылка"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДляВсехМагазиновОдноРасписаниеСкидокПриИзменении(Элемент)
	
	Если Объект.СкидкиНаценки.Количество()>0 Тогда
		ТекстВопроса = НСтр("ru = 'Выбран другой режим расписания. Очистить таблицу ""Скидки/наценки""?'"); 
		
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да;
		Если Ответ Тогда
			Объект.СкидкиНаценки.Очистить();
		Иначе
			Объект.ДляВсехМагазиновОдноРасписаниеСкидок = Не Объект.ДляВсехМагазиновОдноРасписаниеСкидок;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		УстановитьОтборСтрокВСкидкахНаценках(ПредопределенноеЗначение("Справочник.Магазины.ПустаяСсылка"));
	ИначеЕсли Объект.Магазины.Количество()>0 Тогда
		ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
		Если ТекущаяСтрокаМагазины = Неопределено Тогда
			УстановитьОтборСтрокВСкидкахНаценках(ПредопределенноеЗначение("Справочник.Магазины.ПустаяСсылка"));
		Иначе
			УстановитьОтборСтрокВСкидкахНаценках(ТекущаяСтрокаМагазины.Магазин);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ОткрытьФормуРедактированияКомментария(Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроведенияАкцииПриИзменении(Элемент)

	ПредыдущееСостояниеРасписания = Объект.ДляВсехМагазиновОдноРасписаниеСкидок;

	Если ПараметрыПроведенияАкции = "ИндивидуальноеРасписание" Тогда

		Объект.ДляВсехМагазинов = Ложь;
		Объект.ДляВсехМагазиновОдноРасписаниеСкидок = Ложь;

	ИначеЕсли ПараметрыПроведенияАкции = "ОдноДляВсех" Тогда

		Объект.ДляВсехМагазинов = Истина;
		Объект.ДляВсехМагазиновОдноРасписаниеСкидок = Истина;
		Объект.Магазины.Очистить();
		Для каждого СтрокаСкидкиНаценки Из Объект.СкидкиНаценки Цикл
			СтрокаСкидкиНаценки.Магазин = ПредопределенноеЗначение("Справочник.Магазины.ПустаяСсылка");
		КонецЦикла;

	ИначеЕсли ПараметрыПроведенияАкции = "ОдноДляВыбранных" Тогда

		Объект.ДляВсехМагазинов = Ложь;
		Объект.ДляВсехМагазиновОдноРасписаниеСкидок = Истина;

	КонецЕсли;

	Если НЕ ПредыдущееСостояниеРасписания = Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда

		Объект.СкидкиНаценки.Очистить();

	КонецЕсли;

	УстановитьДоступность();
	ОпределитьПараметрыПроведенияАкции();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "Магазины"

&НаКлиенте
Процедура МагазиныПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
	Если ТекущаяСтрокаМагазины = Неопределено ИЛИ Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		УстановитьОтборСтрокВСкидкахНаценках(ПредопределенноеЗначение("Справочник.Магазины.ПустаяСсылка"));
	Иначе
		УстановитьОтборСтрокВСкидкахНаценках(ТекущаяСтрокаМагазины.Магазин);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура МагазиныПередУдалением(Элемент, Отказ)
	ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
	
	мОтбор = Новый Структура;
	мОтбор.Вставить("Магазин",ТекущаяСтрокаМагазины.Магазин);
	
	СтрокиСкидкиНаценки = Объект.СкидкиНаценки.НайтиСтроки(мОтбор);
	Для каждого СтрокаСкидкиНаценки Из СтрокиСкидкиНаценки Цикл
		Объект.СкидкиНаценки.Удалить(СтрокаСкидкиНаценки);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПослеУдаления(Элемент)
	ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
	Если ТекущаяСтрокаМагазины = Неопределено Тогда
		УстановитьОтборСтрокВСкидкахНаценках(ПредопределенноеЗначение("Справочник.Магазины.ПустаяСсылка"));
	Иначе
		УстановитьОтборСтрокВСкидкахНаценках(ТекущаяСтрокаМагазины.Магазин);
	КонецЕсли;
	УстановитьДоступностьТаблицыСкидкиНаценки();
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		мМагазинПриНачалеРедактирования = "";
	Иначе
		мМагазинПриНачалеРедактирования = Элементы.Магазины.ТекущиеДанные.Магазин;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПриИзменении(Элемент)
	
	Если НЕ Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
		Если ТекущаяСтрокаМагазины <> Неопределено Тогда
			УстановитьОтборСтрокВСкидкахНаценках(ТекущаяСтрокаМагазины.Магазин);
		КонецЕсли;
	КонецЕсли;
	
	УстановитьДоступностьТаблицыСкидкиНаценки();
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныМагазинПриИзменении(Элемент)
	Если НЕ Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
		
		Если Не ТекущаяСтрокаМагазины.Магазин = мМагазинПриНачалеРедактирования Тогда
		
			мОтбор = Новый Структура;
			мОтбор.Вставить("Магазин",мМагазинПриНачалеРедактирования);
			
			СтрокиСкидкиНаценки = Объект.СкидкиНаценки.НайтиСтроки(мОтбор);
			Для каждого СтрокаСкидкиНаценки Из СтрокиСкидкиНаценки Цикл
				СтрокаСкидкиНаценки.Магазин = ТекущаяСтрокаМагазины.Магазин;
			КонецЦикла;
			УстановитьОтборСтрокВСкидкахНаценках(ТекущаяСтрокаМагазины.Магазин);
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "СкидкиНаценки"

&НаКлиенте
Процедура СкидкиНаценкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элементы.СкидкиНаценки.ТекущиеДанные;
	Если НЕ Элементы.СкидкиНаценки.ОтборСтрок = Неопределено Тогда
		ТекущиеДанные.Магазин = Элементы.СкидкиНаценки.ОтборСтрок.Магазин;
	КонецЕсли; 
	//
	Если НоваяСтрока Тогда
		ТекущиеДанные.ДатаНачала    = Объект.ДатаНачалаДействия;
		ТекущиеДанные.ДатаОкончания = Объект.ДатаОкончанияДействия;
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура НастроитьФормуПоДополнительнымПравам()

	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Дата.ТолькоПросмотр, 
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьДату);
//	LNK 04.01.2017 13:54:53
	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Номер.ТолькоПросмотр,
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьНомерДокумента);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность()

	УстановитьДоступностьТаблицыСкидкиНаценки();
	Элементы.ГруппаЛево.Видимость = НЕ Объект.ДляВсехМагазинов;
	Элементы.ИспользоватьИнтернетМагазин.Видимость = Объект.ДляВсехМагазинов;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьТаблицыСкидкиНаценки()

	ДоступностьРасписания = Объект.ДляВсехМагазинов
							ИЛИ Объект.ДляВсехМагазиновОдноРасписаниеСкидок 
							ИЛИ Объект.Магазины.Количество()>0;
	Элементы.СкидкиНаценки.Доступность = ДоступностьРасписания;
	Элементы.СкидкиНаценки.ТолькоПросмотр = НЕ Элементы.СкидкиНаценки.Доступность;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборСтрокВСкидкахНаценках(МагазинОтбора)

	Элементы.СкидкиНаценки.ОтборСтрок = Новый ФиксированнаяСтруктура("Магазин", МагазинОтбора);
	Если НЕ Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		
		Если НЕ ЗначениеЗаполнено(МагазинОтбора) Тогда
			МагазинОтбораТекст = НСтр("ru = '<выберите магазин>'");
		Иначе
			МагазинОтбораТекст = Строка(МагазинОтбора);
		КонецЕсли;
		
		ТекстЗаголовка = НСтр("ru = 'Расписание для магазина: %1'");
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, МагазинОтбораТекст);
		Элементы.ГруппаПраво.Заголовок = ТекстЗаголовка;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОпределитьПараметрыПроведенияАкции()
	
	ТекстЗаголовка = "";
	
	Если Объект.ДляВсехМагазинов И Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		
		Если ПустаяСтрока(ПараметрыПроведенияАкции) Тогда
			ПараметрыПроведенияАкции = "ОдноДляВсех";
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Расписание для всех магазинов'");
		
	ИначеЕсли (НЕ Объект.ДляВсехМагазинов) И Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
		
		Если ПустаяСтрока(ПараметрыПроведенияАкции) Тогда
			ПараметрыПроведенияАкции = "ОдноДляВыбранных";
		КонецЕсли;
		ТекстЗаголовка = НСтр("ru = 'Расписание для всех выбранных магазинов'");
		
	Иначе
		
		Если ПустаяСтрока(ПараметрыПроведенияАкции) Тогда
			ПараметрыПроведенияАкции = "ИндивидуальноеРасписание";
		КонецЕсли;
		ТекущаяСтрокаМагазины = Элементы.Магазины.ТекущиеДанные;
		ТекущийМагазин = "";
		Если ТекущаяСтрокаМагазины <> Неопределено Тогда
			ТекущийМагазин = ТекущаяСтрокаМагазины.Магазин;
		КонецЕсли;
		
		ТекстЗаголовка = НСтр("ru = 'Расписание для магазина %1'");
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, ТекущийМагазин);
		
	КонецЕсли;
	Элементы.ГруппаПраво.Заголовок = ТекстЗаголовка;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// +HVOYA. 10.02.2017 14:00:08, Львова Е.А.
&НаСервере
Процедура РаспределитьСкидкуПоМагазинамНаСервере()
    
    Если Объект.ДляВсехМагазиновОдноРасписаниеСкидок Тогда
        ТЗСкидки = Объект.СкидкиНаценки.Выгрузить();
        Объект.СкидкиНаценки.Очистить();
        
        ТЧМагазины = Объект.Магазины;
        ТЧМагазины.Очистить();
        
        Объект.ДляВсехМагазиновОдноРасписаниеСкидок = Ложь;
        Объект.ДляВсехМагазинов = Ложь;
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |   Магазины.Ссылка КАК Магазин
        |ИЗ
        |   Справочник.Магазины КАК Магазины
        |ГДЕ
        |   НЕ Магазины.СкладУправляющейСистемы
        |   И Магазины.ВведенВЭксплуатацию
        |
        |УПОРЯДОЧИТЬ ПО
        |   Магазины.НомерМагазина
        |АВТОУПОРЯДОЧИВАНИЕ";
        
        РезультатЗапроса = Запрос.Выполнить();     
        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
        
        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
            ТекМагазин = ВыборкаДетальныеЗаписи.Магазин;
            НоваяСтрокаМагазина = ТЧМагазины.Добавить();
            НоваяСтрокаМагазина.Магазин = ТекМагазин;
            
            Для каждого СкидкаИсходная Из ТЗСкидки Цикл
                СкидкаПоМагазину = Объект.СкидкиНаценки.Добавить();
                ЗаполнитьЗначенияСвойств(СкидкаПоМагазину,СкидкаИсходная);
                СкидкаПоМагазину.Магазин = ТекМагазин;           
            КонецЦикла; 
        КонецЦикла;
        
    Модифицированность = Истина;
    КонецЕсли;       
    
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьСкидкуПоМагазинам(Команда)
    
    РаспределитьСкидкуПоМагазинамНаСервере();
    
    Если Модифицированность Тогда
        
        ПараметрыПроведенияАкции = "ИндивидуальноеРасписание";
        УстановитьДоступность();
        ОпределитьПараметрыПроведенияАкции();
        
    КонецЕсли;
   
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

//Попытка
//	Для Каждого Строка из Объект.СкидкиНаценки цикл
//		ТипСкидкиНаценки =  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.СкидкаНаценка, "ТипСкидкиНаценки");
//		Если ТипСкидкиНаценки	= Перечисления.ТипСкидкиНаценки.Оптовая или ТипСкидкиНаценки	= Перечисления.ТипСкидкиНаценки.НаПервуюПозицию тогда	
//			Если Объект.ДляВсехМагазинов тогда
//				ТекстСообщения = ПроверитьАкцииПоВсемМагазинам(Строка,ТипСкидкиНаценки);
//		Иначе
//				ТекстСообщения = ПроверитьАкцииПоМагазину(Строка,ТипСкидкиНаценки);
//			КонецЕсли;
//		КонецЕсли;
//	КонецЦикла;
//	Если НЕ ТекстСообщения =  "" тогда
//	//	Отказ = Истина;
//		Сообщить(ТекстСообщения);
//	КонецЕсли;	
//Исключение
//	КонецПопытки;
КонецПроцедуры

Функция ПроверитьАкцииПоВсемМагазинам(Строка,ТипСкидкиНаценки)
	
	ТекстСообщения = "";
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	НоменклатураСегмента.Номенклатура КАК Номенклатура
			|ПОМЕСТИТЬ ТабСегменты
			|ИЗ
			|	РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
			|ГДЕ
			|	НоменклатураСегмента.Сегмент = &Сегмент
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НоменклатураСегмента.Номенклатура КАК Номенклатура,
			|	НоменклатураСегмента.Сегмент,
			|	ДействиеСкидокНаценок.СкидкаНаценка
			|ПОМЕСТИТЬ ДействующиеСкидкиНаценки
			|ИЗ
			|	РегистрСведений.ДействиеСкидокНаценок КАК ДействиеСкидокНаценок
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
			|		ПО ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления = НоменклатураСегмента.Сегмент
			|ГДЕ
			|	ДействиеСкидокНаценок.Регистратор <> &Регистратор
			|	И (ДействиеСкидокНаценок.ДатаОкончания МЕЖДУ &ДатаНачала И &ДатаОкончания
			|			ИЛИ ДействиеСкидокНаценок.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
			|			ИЛИ ДействиеСкидокНаценок.ДатаОкончания >= &ДатаОкончания
			|				И ДействиеСкидокНаценок.Период <= &ДатаНачала)
			|	И ДействиеСкидокНаценок.СкидкаНаценка.ТипСкидкиНаценки = &ТипСкидкиНаценки
			|	И ДействиеСкидокНаценок.Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДействующиеСкидкиНаценки.Номенклатура,
			|	ДействующиеСкидкиНаценки.Сегмент,
			|	ДействующиеСкидкиНаценки.СкидкаНаценка,
			|	ДействующиеСкидкиНаценки.Номенклатура.IDN КАК IDN
			|ИЗ
			|	ТабСегменты КАК ТабСегменты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДействующиеСкидкиНаценки КАК ДействующиеСкидкиНаценки
			|		ПО ТабСегменты.Номенклатура = ДействующиеСкидкиНаценки.Номенклатура"
			);
			Запрос.УстановитьПараметр("ДатаНачала", Объект.ДатаНачалаДействия);
			Запрос.УстановитьПараметр("ДатаОкончания", Объект.ДатаОкончанияДействия);
			Запрос.УстановитьПараметр("Сегмент", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.СкидкаНаценка, "СегментНоменклатурыПредоставления"));
			Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);
			//Запрос.УстановитьПараметр("ТЧСкидки", Объект.СкидкиНаценки.Выгрузить());
			Запрос.УстановитьПараметр("ТипСкидкиНаценки", ТипСкидкиНаценки);
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

				ТекстСообщения = ТекстСообщения + "Номенклатура " + ВыборкаДетальныеЗаписи.Номенклатура + " IDN " + ВыборкаДетальныеЗаписи.IDN + " сегмент " + ВыборкаДетальныеЗаписи.Сегмент + " Акция " + ВыборкаДетальныеЗаписи.СкидкаНаценка;

			КонецЦикла;
			Возврат ТекстСообщения;	
КонецФункции

Функция ПроверитьАкцииПоМагазину(Строка,ТипСкидкиНаценки)
	
	ТекстСообщения = "";
	Для Каждого Строка из Объект.Магазины цикл
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	НоменклатураСегмента.Номенклатура КАК Номенклатура
			|ПОМЕСТИТЬ ТабСегменты
			|ИЗ
			|	РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
			|ГДЕ
			|	НоменклатураСегмента.Сегмент = &Сегмент
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НоменклатураСегмента.Номенклатура КАК Номенклатура,
			|	НоменклатураСегмента.Сегмент,
			|	ДействиеСкидокНаценок.СкидкаНаценка
			|ПОМЕСТИТЬ ДействующиеСкидкиНаценки
			|ИЗ
			|	РегистрСведений.ДействиеСкидокНаценок КАК ДействиеСкидокНаценок
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
			|		ПО ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления = НоменклатураСегмента.Сегмент
			|ГДЕ
			|	ДействиеСкидокНаценок.Регистратор <> &Регистратор
			|	И (ДействиеСкидокНаценок.ДатаОкончания МЕЖДУ &ДатаНачала И &ДатаОкончания
			|			ИЛИ ДействиеСкидокНаценок.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
			|			ИЛИ ДействиеСкидокНаценок.ДатаОкончания >= &ДатаОкончания
			|				И ДействиеСкидокНаценок.Период <= &ДатаНачала)
			|	И ДействиеСкидокНаценок.СкидкаНаценка.ТипСкидкиНаценки = &ТипСкидкиНаценки
			|	И ДействиеСкидокНаценок.Магазин = &Магазин)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДействующиеСкидкиНаценки.Номенклатура,
			|	ДействующиеСкидкиНаценки.Сегмент,
			|	ДействующиеСкидкиНаценки.СкидкаНаценка,
			|	ДействующиеСкидкиНаценки.Номенклатура.IDN КАК IDN
			|ИЗ
			|	ТабСегменты КАК ТабСегменты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДействующиеСкидкиНаценки КАК ДействующиеСкидкиНаценки
			|		ПО ТабСегменты.Номенклатура = ДействующиеСкидкиНаценки.Номенклатура"
			);
			Запрос.УстановитьПараметр("ДатаНачала", Объект.ДатаНачалаДействия);
			Запрос.УстановитьПараметр("ДатаОкончания", Объект.ДатаОкончанияДействия);
			Запрос.УстановитьПараметр("Сегмент", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.СкидкаНаценка, "СегментНоменклатурыПредоставления"));
			Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);
			Запрос.УстановитьПараметр("Магазин",Строка.Магазин);
			Запрос.УстановитьПараметр("ТипСкидкиНаценки", ТипСкидкиНаценки);
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

				ТекстСообщения = ТекстСообщения + "Номенклатура " + ВыборкаДетальныеЗаписи.Номенклатура + " IDN " + ВыборкаДетальныеЗаписи.IDN + " сегмент " + ВыборкаДетальныеЗаписи.Сегмент + " Акция " + ВыборкаДетальныеЗаписи.СкидкаНаценка;

			КонецЦикла;
		КонецЦикла;
		Возврат ТекстСообщения;	
КонецФункции



// -HVOYA. 10.02.2017 14:00:13, Львова Е.А.

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

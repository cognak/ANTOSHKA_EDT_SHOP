//	LNK 15.04.2019 10:25:54
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	СтатусЗапроса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "СтатусЗапроса");
	ТоварВМагазинеИсточнике =
		 (СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Новый)
		 Или (СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.ВРаботе)
		 Или (СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Согласован)
		 Или (СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Изменён)
		 Или (СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Сборка)
		 Или (СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.КОтправке);

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА &ТоварВМагазинеИсточнике
	|			ТОГДА ДанныеДокумента.МагазинОтправитель
	|		ИНАЧЕ ДанныеДокумента.МагазинПолучатель
	|	КОНЕЦ КАК МагазинРезерва,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СтатусЗапроса = ЗНАЧЕНИЕ(Перечисление.СтатусыЗапросовДоступностиТоваров.Отменён)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Резервировать
	|ИЗ
	|	Документ.ЗапросДоступностиТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И (ТИПЗНАЧЕНИЯ(ДанныеДокумента.МагазинОтправитель) = ТИП(Справочник.Магазины)
	|	И &ТоварВМагазинеИсточнике
	|	ИЛИ ТИПЗНАЧЕНИЯ(ДанныеДокумента.МагазинПолучатель) = ТИП(Справочник.Магазины)
	|	И НЕ &ТоварВМагазинеИсточнике)"
	);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ТоварВМагазинеИсточнике", ТоварВМагазинеИсточнике);
	
	РезультатЗапроса = Запрос.Выполнить();
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий();
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	&МагазинРезерва КАК Магазин,
	|	&Ссылка КАК Заказ,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ЗапросДоступностиТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &Резервировать = ИСТИНА
	|	И НЕ ТаблицаТовары.СтатусЗапроса = ЗНАЧЕНИЕ(Перечисление.СтатусыЗапросовДоступностиТоваров.Отменён)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Период КАК Период,
	|	Товары.Регистратор КАК Регистратор,
	|	Товары.Магазин КАК Магазин,
	|	Товары.Заказ КАК Заказ,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество КАК Количество,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	НЕ Товары.Количество = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Товары"
	;
	Результат = Запрос.ВыполнитьПакет();

	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыПокупателей", Результат[1].Выгрузить());

КонецПроцедуры

Процедура СозданиеИзменениеЗапросовДоступности(ДокументСсылкаЗаказКлиента) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДокЗаказа = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылкаЗаказКлиента,
		"СуммаДоставки,
		|Статус,
		|Ответственный,
		|Номер,
		|ЦенаВключаетНДС,
		|СтатусОплаты,
		|УчетнаяСистема" , Ложь);
	
	ДоставкаЗаНашСчет = (ДокЗаказа.СуммаДоставки = 0);
	СуммаДоставкаЗаказа = ДокЗаказа.СуммаДоставки;
	ДоставкаУчтена = Ложь;

	Если Не ДокЗаказа.УчетнаяСистема = Перечисления.УчетныеСистемыКомпании.Розница Тогда 
		
		Возврат;
		
	КонецЕсли;

	Если Не (ДокЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.Новый
		Или ДокЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.ВРаботе
		Или ДокЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.Отменён
		Или ДокЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.Закрыт) Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаказПокупателяТовары.Ссылка КАК Ссылка,
			|	ЗаказПокупателяТовары.НомерСтроки КАК НомерСтроки,
			|	ЗаказПокупателяТовары.АкционнаяЦена КАК АкционнаяЦена,
			|	ЗаказПокупателяТовары.БонусАкцияНачислен КАК БонусАкцияНачислен,
			|	ЗаказПокупателяТовары.БонусАкцияСписан КАК БонусАкцияСписан,
			|	ЗаказПокупателяТовары.БонусБазаНачислен КАК БонусБазаНачислен,
			|	ЗаказПокупателяТовары.БонусБазаСписан КАК БонусБазаСписан,
			|	ЗаказПокупателяТовары.КлючСвязи КАК КлючСвязи,
			|	ЗаказПокупателяТовары.КлючСвязиБонусныхБаллов КАК КлючСвязиБонусныхБаллов,
			|	ЗаказПокупателяТовары.КодСтроки КАК КодСтроки,
			|	ЗаказПокупателяТовары.Количество КАК Количество,
			|	ЗаказПокупателяТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ЗаказПокупателяТовары.Номенклатура КАК Номенклатура,
			|	ЗаказПокупателяТовары.Отменено КАК Отменено,
			|	ЗаказПокупателяТовары.ПричинаОтмены КАК ПричинаОтмены,
			|	ЗаказПокупателяТовары.Продавец КАК Продавец,
			|	ЗаказПокупателяТовары.ПродажаПодарка КАК ПродажаПодарка,
			|	ЗаказПокупателяТовары.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
			|	ЗаказПокупателяТовары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
			|	ЗаказПокупателяТовары.Резервировать КАК Резервировать,
			|	ЗаказПокупателяТовары.СтавкаНДС КАК СтавкаНДС,
			|	ЗаказПокупателяТовары.Сумма КАК Сумма,
			|	ЗаказПокупателяТовары.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
			|	ЗаказПокупателяТовары.СуммаБонусныхБалловНачислено КАК СуммаБонусныхБалловНачислено,
			|	ЗаказПокупателяТовары.СуммаБонусныхБалловСписано КАК СуммаБонусныхБалловСписано,
			|	ЗаказПокупателяТовары.СуммаНДС КАК СуммаНДС,
			|	ЗаказПокупателяТовары.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
			|	ЗаказПокупателяТовары.УникальныйИдентификатор КАК УникальныйИдентификатор,
			|	ЗаказПокупателяТовары.Упаковка КАК Упаковка,
			|	ЗаказПокупателяТовары.Характеристика КАК Характеристика,
			|	ЗаказПокупателяТовары.Цена КАК Цена,
			|	ЗаказПокупателяТовары.Склад КАК Склад,
			|	ЗаказПокупателяТовары.Ссылка.ТипДоставки КАК ТипДоставки,
			|	ВЫБОР
			|		КОГДА ЗаказПокупателяТовары.Самовывоз
			|			ТОГДА ЗаказПокупателяТовары.МагазинПолучатель
			|		ИНАЧЕ УчетнаяПолитикаСрезПоследних.ИнтернетМагазин
			|	КОНЕЦ КАК МагазинПолучатель,
			|	ЗаказПокупателяТовары.Самовывоз КАК Самовывоз,
			|	ВЫБОР
			|		КОГДА ЗаказПокупателяТовары.Ссылка.ТипДоставки = ЗНАЧЕНИЕ(Перечисление.ТипДоставкиЗаказПокупателя.Смешаный)
			|			ТОГДА ВЫБОР
			|				КОГДА ЗаказПокупателяТовары.Самовывоз
			|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ОператорыДоставки.ВнутренняяЛогистика)
			|				ИНАЧЕ ЗаказПокупателяТовары.Ссылка.ОператорДоставки
			|			КОНЕЦ
			|		ИНАЧЕ ЗаказПокупателяТовары.Ссылка.ОператорДоставки
			|	КОНЕЦ КАК ОператорДоставки,
			|	ЗаказПокупателяТовары.Ссылка.ДоставкаНаАдрес КАК ДоставкаНаАдрес,
			|	ВЫБОР
			|		КОГДА ЗаказПокупателяТовары.Склад.НазначениеСклада = ЗНАЧЕНИЕ(Перечисление.НазначенияСкладов.УправляющаяСистема)
			|			ТОГДА ЕСТЬNULL(ЗаказПокупателяТовары.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
			|		ИНАЧЕ ЕСТЬNULL(ЗаказПокупателяТовары.Склад.Магазин, ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка))
			|	КОНЕЦ КАК СкладМагазин,
			|	ЗаказПокупателяТовары.КлючСвязиЗапросаДоступности КАК КлючСвязиЗапросаДоступности,
			|	ЗаказПокупателяТовары.СуммаОкругления,
			|	ЗаказПокупателяТовары.Ссылка.ТипОплаты
			|ПОМЕСТИТЬ ТоварыЗП
			|ИЗ
			|	Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары,
			|	РегистрСведений.УчетнаяПолитика.СрезПоследних КАК УчетнаяПолитикаСрезПоследних
			|ГДЕ
			|	ЗаказПокупателяТовары.Ссылка = &Ссылка
			|	И Не ЗаказПокупателяТовары.Отменено
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗапросДоступностиТоваровТовары.Ссылка КАК Ссылка,
			|	ЗапросДоступностиТоваровТовары.НомерСтроки КАК НомерСтроки,
			|	ЗапросДоступностиТоваровТовары.Количество КАК Количество,
			|	ЗапросДоступностиТоваровТовары.КоличествоТребование КАК КоличествоТребование,
			|	ЗапросДоступностиТоваровТовары.Номенклатура КАК Номенклатура,
			|	ЗапросДоступностиТоваровТовары.СтатусЗапроса КАК СтатусЗапроса,
			|	ЗапросДоступностиТоваровТовары.УникальныйИдентификатор КАК УникальныйИдентификатор,
			|	ЗапросДоступностиТоваровТовары.Характеристика КАК Характеристика,
			|	ЗапросДоступностиТоваровТовары.КлючСвязи КАК КлючСвязи,
			|	ЗапросДоступностиТоваровТовары.Ссылка.ОператорДоставки КАК ОператорДоставки,
			|	ЗапросДоступностиТоваровТовары.Ссылка.МагазинОтправитель КАК МагазинОтправитель,
			|	ЗапросДоступностиТоваровТовары.Ссылка.МагазинПолучатель КАК МагазинПолучатель,
			|	ЗапросДоступностиТоваровТовары.Ссылка.ТипОплаты
			|ПОМЕСТИТЬ ТоварыЗД
			|ИЗ
			|	Документ.ЗапросДоступностиТоваров.Товары КАК ЗапросДоступностиТоваровТовары
			|ГДЕ
			|	ЗапросДоступностиТоваровТовары.Ссылка.ДокументОснование = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТоварыЗД.Ссылка КАК ТоварыЗДСсылка,
			|	ТоварыЗП.Склад КАК ТоварыЗПСклад,
			|	ТоварыЗП.ОператорДоставки КАК ТоварыЗПОператорДоставки,
			|	ТоварыЗП.МагазинПолучатель КАК ТоварыЗПМагазинПолучатель,
			|	ТоварыЗП.Ссылка КАК ТоварыЗПСсылка,
			|	ТоварыЗП.НомерСтроки КАК ТоварыЗПНомерСтроки,
			|	ТоварыЗП.АкционнаяЦена КАК ТоварыЗПАкционнаяЦена,
			|	ТоварыЗП.БонусАкцияНачислен КАК ТоварыЗПБонусАкцияНачислен,
			|	ТоварыЗП.БонусАкцияСписан КАК ТоварыЗПБонусАкцияСписан,
			|	ТоварыЗП.БонусБазаНачислен КАК ТоварыЗПБонусБазаНачислен,
			|	ТоварыЗП.БонусБазаСписан КАК ТоварыЗПБонусБазаСписан,
			|	ТоварыЗП.КлючСвязи КАК ТоварыЗПКлючСвязи,
			|	ТоварыЗП.КлючСвязиБонусныхБаллов КАК ТоварыЗПКлючСвязиБонусныхБаллов,
			|	ТоварыЗП.КодСтроки КАК ТоварыЗПКодСтроки,
			|	ТоварыЗП.Количество КАК ТоварыЗПКоличество,
			|	ТоварыЗП.КоличествоУпаковок КАК ТоварыЗПКоличествоУпаковок,
			|	ТоварыЗП.Номенклатура КАК ТоварыЗПНоменклатура,
			|	ТоварыЗП.Отменено КАК ТоварыЗПОтменено,
			|	ТоварыЗП.ПричинаОтмены КАК ТоварыЗППричинаОтмены,
			|	ТоварыЗП.Продавец КАК ТоварыЗППродавец,
			|	ТоварыЗП.ПродажаПодарка КАК ТоварыЗППродажаПодарка,
			|	ТоварыЗП.ПроцентАвтоматическойСкидки КАК ТоварыЗППроцентАвтоматическойСкидки,
			|	ТоварыЗП.ПроцентРучнойСкидки КАК ТоварыЗППроцентРучнойСкидки,
			|	ТоварыЗП.Резервировать КАК ТоварыЗПРезервировать,
			|	ТоварыЗП.СтавкаНДС КАК ТоварыЗПСтавкаНДС,
			|	ТоварыЗП.Сумма КАК ТоварыЗПСумма,
			|	ТоварыЗП.СуммаАвтоматическойСкидки КАК ТоварыЗПСуммаАвтоматическойСкидки,
			|	ТоварыЗП.СуммаБонусныхБалловНачислено КАК ТоварыЗПСуммаБонусныхБалловНачислено,
			|	ТоварыЗП.СуммаБонусныхБалловСписано КАК ТоварыЗПСуммаБонусныхБалловСписано,
			|	ТоварыЗП.СуммаНДС КАК ТоварыЗПСуммаНДС,
			|	ТоварыЗП.СуммаРучнойСкидки КАК ТоварыЗПСуммаРучнойСкидки,
			|	ТоварыЗП.УникальныйИдентификатор КАК ТоварыЗПУникальныйИдентификатор,
			|	ТоварыЗП.Упаковка КАК ТоварыЗПУпаковка,
			|	ТоварыЗП.Характеристика КАК ТоварыЗПХарактеристика,
			|	ТоварыЗП.Цена КАК ТоварыЗПЦена,
			|	ТоварыЗП.ТипДоставки КАК ТоварыЗПТипДоставки,
			|	ТоварыЗП.Самовывоз КАК ТоварыЗПСамовывоз,
			|	ТоварыЗП.ДоставкаНаАдрес КАК ТоварыЗПДоставкаНаАдрес,
			|	ТоварыЗД.ОператорДоставки КАК ТоварыЗДОператорДоставки,
			|	ТоварыЗП.КлючСвязиЗапросаДоступности КАК ТоварыЗПКлючСвязиЗапросаДоступности,
			|	ТоварыЗП.СуммаОкругления КАК ТоварыЗПСуммаОкругления,
			|	ТоварыЗП.ТипОплаты КАК ТоварыЗПТипОплаты,
			|	ВЫБОР
			|		КОГДА ТоварыЗД.ТипОплаты ЕСТЬ NULL
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ
			|		НЕ ТоварыЗД.ТипОплаты = ТоварыЗП.ТипОплаты
			|	КОНЕЦ КАК ИзменилсяТипОплаты
			|ИЗ
			|	ТоварыЗП КАК ТоварыЗП
			|		ПОЛНОЕ СОЕДИНЕНИЕ ТоварыЗД КАК ТоварыЗД
			|		ПО ТоварыЗП.Ссылка = ТоварыЗД.Ссылка.ДокументОснование
			|		И ТоварыЗП.ОператорДоставки = ТоварыЗД.ОператорДоставки
			|		И ТоварыЗП.МагазинПолучатель = ТоварыЗД.Ссылка.МагазинПолучатель
			|		И ТоварыЗП.СкладМагазин = ТоварыЗД.Ссылка.МагазинОтправитель
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТоварыЗДСсылка
			|ИТОГИ
			|ПО
			|	ТоварыЗДСсылка,
			|	ТоварыЗПСклад,
			|	ТоварыЗПОператорДоставки,
			|	ТоварыЗПМагазинПолучатель";
		
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылкаЗаказКлиента);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаТоварыЗДСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаТоварыЗДСсылка.Следующий() Цикл
			
			Если ВыборкаТоварыЗДСсылка.ТоварыЗДСсылка = Null Тогда
				НовыйЗД = Истина; 
			Иначе 
				НовыйЗД = Ложь;
			КонецЕсли;
			
			Если НовыйЗД И ДокЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.Отменён Тогда
				Продолжить;
			КонецЕсли;
			
			ВыборкаТоварыЗПСклад = ВыборкаТоварыЗДСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаТоварыЗПСклад.Следующий() Цикл 
				
				ВыборкаТоварыЗПОператорДоставки = ВыборкаТоварыЗПСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаТоварыЗПОператорДоставки.Следующий() Цикл 
					
					ВыборкаТоварыЗПМагазинПолучатель = ВыборкаТоварыЗПОператорДоставки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
					
					Пока ВыборкаТоварыЗПМагазинПолучатель.Следующий() Цикл 
						
						Выборка = ВыборкаТоварыЗПМагазинПолучатель.Выбрать();
						ДокументСоздан = Ложь;
						ДокументИзмененСтатус = Ложь;
						ДокументИзменен = Ложь;
						КомментарийЗаказа = "";
						ПервыйКомментарий = Истина;
						КомментарийСтроки = "";
						ВыгружаетсяВNavision = Ложь;
						
						Пока Выборка.Следующий() Цикл 
							
							Если Не ДокументСоздан Тогда 
								
								Если НовыйЗД Тогда  
									
									ДокументОбъект = СоздатьДокумент();
									ДокументОбъект.Дата = ТекущаяДатаСеанса();
									ДокументОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
									ДокументОбъект.ДокументОснование = ДокументСсылкаЗаказКлиента;
									Если Выборка.ТоварыЗПСклад.НазначениеСклада = Перечисления.НазначенияСкладов.УправляющаяСистема Тогда 
										ДокументОбъект.МагазинОтправитель = Выборка.ТоварыЗПСклад;
									Иначе
										ДокументОбъект.МагазинОтправитель = Выборка.ТоварыЗПСклад.Магазин;
									КонецЕсли;
									ДокументОбъект.МагазинПолучатель = Выборка.ТоварыЗПМагазинПолучатель;
									ДокументОбъект.Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(,ДокЗаказа.Ответственный);
									ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Новый;

									Если Выборка.ТоварыЗПСамовывоз Тогда
										ДокументОбъект.ОператорДоставки = Перечисления.ОператорыДоставки.ВнутренняяЛогистика;
									Иначе
										ДокументОбъект.ОператорДоставки = Выборка.ТоварыЗПОператорДоставки;
									КонецЕсли;
	
									ДокументОбъект.ТипДоставки = ВыборТипаДоставки(ДокументОбъект.ОператорДоставки, Выборка.ТоварыЗПДоставкаНаАдрес);  
									
									Запрос = Новый Запрос;
									Запрос.Текст = 
										"ВЫБРАТЬ ПЕРВЫЕ 1
										|	ЗапросДоступностиТоваров.Номер КАК Номер
										|ИЗ
										|	Документ.ЗапросДоступностиТоваров КАК ЗапросДоступностиТоваров
										|ГДЕ
										|	ЗапросДоступностиТоваров.ДокументОснование = &ДокументОснование
										|
										|УПОРЯДОЧИТЬ ПО
										|	Номер УБЫВ";
									
									Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаЗаказКлиента);
									
									РезультатЗапроса = Запрос.Выполнить();
									
									ВыборкаНомер = РезультатЗапроса.Выбрать();
									
									Суффикс = "001";
									
									Если ВыборкаНомер.Следующий() Тогда
										Если Не СтрНайти(ВыборкаНомер.Номер,СокрЛП(ДокЗаказа.Номер)) = 0 Тогда 
											Суффикс = Формат(Число(СтрЗаменить(ВыборкаНомер.Номер,СокрЛП(ДокЗаказа.Номер) + "-", "") )+ 1, "ЧЦ=3; ЧВН=");
										КонецЕсли;
									КонецЕсли;
									
									ДокументОбъект.Номер = СокрЛП(ДокЗаказа.Номер) + "-" + Суффикс;
									
									ДокументОбъект.IDN = "CWZ_" + СокрЛП(ДокЗаказа.Номер) + "-" + Суффикс;
									
								Иначе 
									
									ДокументОбъект = Выборка.ТоварыЗДСсылка.ПолучитьОбъект();
									
								КонецЕсли; 
								
								ДокументОбъект.ДокументОснованиеТекст = Строка(ДокументСсылкаЗаказКлиента);
								
								ДокументСоздан = Истина;
								ТЧТоварыЗД = ДокументОбъект.Товары.Выгрузить();
								ТЧТоварыЗД.Колонки.Добавить("Обработана");
								ТЧТоварыЗД.ЗаполнитьЗначения(Ложь, "Обработана");
								
							КонецЕсли;

							Если Не Выборка.ТоварыЗПТипОплаты = ДокументОбъект.ТипОплаты Тогда
								
								ДокументОбъект.ТипОплаты = Выборка.ТоварыЗПТипОплаты;
								ДокументИзменен = Истина;
								
							КонецЕсли;
									
							Запрос = Новый Запрос;
							Запрос.Текст = 
								"ВЫБРАТЬ ПЕРВЫЕ 1
								|	КомментарийПоСтрокам.Комментарий КАК Комментарий
								|ИЗ
								|	РегистрСведений.КомментарийПоСтрокам КАК КомментарийПоСтрокам
								|ГДЕ
								|	КомментарийПоСтрокам.Документ = &Документ
								|	И КомментарийПоСтрокам.КлючСвязи = &КлючСвязи";
							
							Запрос.УстановитьПараметр("Документ", ДокументСсылкаЗаказКлиента);
							Запрос.УстановитьПараметр("КлючСвязи", Выборка.ТоварыЗПКлючСвязиЗапросаДоступности);
							
							РезультатЗапроса = Запрос.Выполнить();
							
							ВыборкаКомментария = РезультатЗапроса.Выбрать();
							
							Если ВыборкаКомментария.Следующий() Тогда
								
								КомментарийЗаказа = КомментарийЗаказа
													+ ?(ПервыйКомментарий, "", ":")
													+ СокрЛП(Выборка.ТоварыЗПНоменклатура.Код)
													+ ":"
													+ СокрЛП(ВыборкаКомментария.Комментарий);
													
								ПервыйКомментарий = Ложь;
								
								КомментарийСтроки = СокрЛП(ВыборкаКомментария.Комментарий);
								
							Иначе
								
								КомментарийСтроки = "";
								
							КонецЕсли;
							
							Если НовыйЗД Тогда 
								
								ДобавлениеСтрокиЗД(Выборка, ТЧТоварыЗД);
								
							Иначе
								Если Не Выборка.ТоварыЗПКлючСвязиЗапросаДоступности = Null Тогда 
									
									НайденнаяСтрока = ТЧТоварыЗД.Найти(Выборка.ТоварыЗПКлючСвязиЗапросаДоступности, "КлючСвязи");
									
									Если НайденнаяСтрока = Неопределено Тогда
										
										ДобавлениеСтрокиЗД(Выборка, ТЧТоварыЗД);
										ДокументИзмененСтатус = Истина;
										ДокументИзменен = Истина;
										
									Иначе
										
										НайденнаяСтрока.Обработана = Истина;
										
										Если Не НайденнаяСтрока.ПродажаПодарка = Выборка.ТоварыЗППродажаПодарка Тогда 
											НайденнаяСтрока.ПродажаПодарка = Выборка.ТоварыЗППродажаПодарка;
											ДокументИзменен = Истина;
										КонецЕсли;
										
										Если Не НайденнаяСтрока.СтавкаНДС = Выборка.ТоварыЗПСтавкаНДС Тогда 
											НайденнаяСтрока.СтавкаНДС = Выборка.ТоварыЗПСтавкаНДС;
											ДокументИзменен = Истина;
										КонецЕсли;
										
										Если Не НайденнаяСтрока.Сумма = Выборка.ТоварыЗПСумма Тогда 
											НайденнаяСтрока.Сумма = Выборка.ТоварыЗПСумма;
											ДокументИзменен = Истина;
										КонецЕсли;
										
										Если Не НайденнаяСтрока.СуммаОкругления = Выборка.ТоварыЗПСуммаОкругления Тогда 
											НайденнаяСтрока.СуммаОкругления = Выборка.ТоварыЗПСуммаОкругления;
											ДокументИзменен = Истина;
										КонецЕсли;
										
										Если Не НайденнаяСтрока.СуммаНДС = Выборка.ТоварыЗПСуммаНДС Тогда 
											НайденнаяСтрока.СуммаНДС = Выборка.ТоварыЗПСуммаНДС;
											ДокументИзменен = Истина;
										КонецЕсли;

										Если НайденнаяСтрока.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Удалён
												Или НайденнаяСтрока.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Отменён Тогда 
											
											НайденнаяСтрока.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Подготовить;
											НайденнаяСтрока.Количество = 0;
											НайденнаяСтрока.Примечание = "";
											ДокументИзмененСтатус = Истина;
											ДокументИзменен = Истина;
											
										КонецЕсли;
										
										Если Выборка.ТоварыЗПОтменено И
												Не НайденнаяСтрока.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Отменён Тогда 
											
											НайденнаяСтрока.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Отменён;
											НайденнаяСтрока.Сумма = 0;
											НайденнаяСтрока.СуммаНДС = 0;
											НайденнаяСтрока.СуммаОкругления = 0;
											ДокументИзмененСтатус = Истина;
											ДокументИзменен = Истина;
											
										КонецЕсли;
										
										Если Не НайденнаяСтрока.КоличествоТребование = Выборка.ТоварыЗПКоличество Тогда
											
											НайденнаяСтрока.Примечание = НайденнаяСтрока.Примечание + Символы.ПС + "Изменено требуемое количество. Было - "
																			+ НайденнаяСтрока.КоличествоТребование + ". Стало - "
																			+ Выборка.ТоварыЗПКоличество + ".";
											//НайденнаяСтрока.Примечание = "";
											//НайденнаяСтрока.Количество = 0;
											НайденнаяСтрока.КоличествоТребование = Выборка.ТоварыЗПКоличество;
											НайденнаяСтрока.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Изменён; 
											ДокументИзмененСтатус = Истина;
											ДокументИзменен = Истина;
											
										КонецЕсли; 
									КонецЕсли; 
								КонецЕсли;
							КонецЕсли;
							
							Если Не (ДокументОбъект.ОператорДоставки = Перечисления.ОператорыДоставки.ВнутренняяЛогистика
								И ДокументОбъект.ТипОплаты = Перечисления.ТипОплатыЗаказПокупателя.Наличные) Тогда
									
									ВыгружаетсяВNavision = Истина;

							КонецЕсли;
							
//							Если Не ПустаяСтрока(КомментарийСтроки) Тогда
//								
//								НайденнаяСтрока = ТЧТоварыЗД.Найти(Выборка.ТоварыЗПКлючСвязиЗапросаДоступности, "КлючСвязи");	
//								Если ПустаяСтрока(НайденнаяСтрока.Примечание) Тогда
//									
//									СтруктураПримечания = Новый Структура("Комментарий_Заказа", КомментарийСтроки);
//									
//								Иначе
//									
//									ЧтениеJSON = Новый ЧтениеJSON;
//									ЧтениеJSON.УстановитьСтроку(НайденнаяСтрока.Примечание);
//									СтруктураПримечания = ПрочитатьJSON(ЧтениеJSON);
//									Если СтруктураПримечания.Свойство("МассивСообщений") Тогда
//										
//										СтруктураПримечанияПромежуточный = Новый Структура("Комментарий_Заказа", КомментарийСтроки);
//										СтруктураПримечанияПромежуточный.Вставить("МассивСообщений", СтруктураПримечания.МассивСообщений);
//									
//									Иначе
//										
//										СтруктураПримечанияПромежуточный = Новый Структура("Комментарий_Заказа", КомментарийСтроки);
//
//									КонецЕсли;
//									
//									СтруктураПримечания = СтруктураПримечанияПромежуточный;
//									
//								КонецЕсли;
//								
//								ЗаписьJSON = Новый ЗаписьJSON;
//								ЗаписьJSON.УстановитьСтроку();
//								ЗаписатьJSON(ЗаписьJSON,СтруктураПримечания);
//								НайденнаяСтрока.Примечание = ЗаписьJSON.Закрыть(); 
//	
//							КонецЕсли;
							
						КонецЦикла; 
						
						Для Каждого СтрокаТЧ Из ТЧТоварыЗД Цикл
							
							Если Не СтрокаТЧ.Обработана Тогда 
								
								Если Не СтрокаТЧ.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Удалён Тогда
									
									ДокументИзмененСтатус = Истина;
									ДокументИзменен = Истина;
									
								КонецЕсли;
								
								СтрокаТЧ.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Удалён;
								СтрокаТЧ.Сумма = 0;
								СтрокаТЧ.СуммаНДС = 0; 
								СтрокаТЧ.СуммаОкругления = 0; 
								
							КонецЕсли;   
							
						КонецЦикла;
						
						ДокументОбъект.Товары.Загрузить(ТЧТоварыЗД);
						
						ОтборУдаленныхСтрок = Новый Структура();
						ОтборУдаленныхСтрок.Вставить("СтатусЗапроса", Перечисления.СтатусыЗапросовДоступностиТоваров.Удалён);  
						ДокументОтменён = Ложь;
						Если ТЧТоварыЗД.Количество() = ТЧТоварыЗД.НайтиСтроки(ОтборУдаленныхСтрок).Количество() Тогда
							
							Если Не ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Отменён Тогда 
								
								ДокументИзмененСтатус = Истина;
								ДокументИзменен = Истина;
								ДокументОтменён = Истина;
								
							КонецЕсли; 
							
						КонецЕсли;
						
						Если ДокЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.Отменён
								И Не (ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.ПодтвердитьОтмену
									Или ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Отменён) Тогда
							
							ДокументИзмененСтатус = Истина;
							ДокументИзменен = Истина;
							ДокументОтменён = Истина;

						КонецЕсли;
						
						Если ДокЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.ЗапросДоступности
								Или ДокЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.Отменён Тогда

							Если ДокументИзмененСтатус Тогда
								Если ДокументОтменён Тогда
									Если ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Новый Тогда
										ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Отменён;
									Иначе
										ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.ПодтвердитьОтмену;
									КонецЕсли;
								Иначе
									ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Изменён;
								КонецЕсли;
							КонецЕсли;
							
						Иначе
	
							Если ДокументИзмененСтатус И ДокументОтменён Тогда
								
								ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Отменён;

							КонецЕсли;

						КонецЕсли;
															
						Если Не ДоставкаЗаНашСчет И Не ДоставкаУчтена Тогда
							Если Не ДокументОбъект.ТипДоставки = Перечисления.ТипДоставкиЗаказПокупателя.Самовывоз
									И Не ДокументОтменён Тогда
								ОплатаДоставки = СуммаДоставкаЗаказа;
								ДоставкаУчтена = Истина;
							Иначе
								ОплатаДоставки = 0;
							КонецЕсли;
						Иначе
							ОплатаДоставки = 0;
						КонецЕсли;

						Если Не ДокументОбъект.СуммаОплатыДоставки = ОплатаДоставки Тогда
							ДокументОбъект.СуммаОплатыДоставки = ОплатаДоставки;
							ДокументИзменен = Истина;
						КонецЕсли;

						Если Не ДокументОбъект.Комментарий = КомментарийЗаказа Тогда
							ДокументОбъект.Комментарий = КомментарийЗаказа;
							ДокументИзменен = Истина;
						КонецЕсли;

						Если Не ТЧТоварыЗД.Количество() = 0 И (ДокументИзменен Или НовыйЗД) Тогда 
							
							ОбработкаТабличнойЧастиТоварыКлиентСервер.ЗаполнитьСуммуВсегоВТаблице(ДокументОбъект.Товары, ДокЗаказа.ЦенаВключаетНДС); 
							ОбработкаТабличнойЧастиТоварыКлиентСервер.ОбновитьСуммыПодвала(ДокументОбъект.Товары, ДокЗаказа.ЦенаВключаетНДС, ДокументОбъект.СуммаДокумента);
							
						КонецЕсли;
						
						Если НовыйЗД Тогда
							
							ДокументОбъект.ДополнительныеСвойства.Вставить("ЗаписатьСтароеКоличество");
						
						КонецЕсли;
						
						Если ДокументИзменен Или НовыйЗД Тогда
							
							Если ВыгружаетсяВNavision Тогда

								ДокументОбъект.ДополнительныеСвойства.Вставить("ОтправлятьВNavision");
								
							КонецЕсли;

							ДокументОбъект.ДополнительныеСвойства.Вставить("НеЗаписыватьКлючевыеАтрибуты");
							ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);

						КонецЕсли;
						
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	

	Если ДокЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.Перемещение 
			Или ДокЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.Доставка 
			Или ДокЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.Продажа Тогда 
			
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗапросДоступностиТоваров.Ссылка КАК Ссылка,
			|	ЗапросДоступностиТоваров.ТипДоставки КАК ТипДоставки,
			|	ЗапросДоступностиТоваров.МагазинОтправитель КАК МагазинОтправитель,
			|	ЗапросДоступностиТоваров.МагазинПолучатель КАК МагазинПолучатель
			|ИЗ
			|	Документ.ЗапросДоступностиТоваров КАК ЗапросДоступностиТоваров
			|ГДЕ
			|	ЗапросДоступностиТоваров.ДокументОснование = &ДокументОснование
			|	И ЗапросДоступностиТоваров.СтатусЗапроса = ЗНАЧЕНИЕ(Перечисление.СтатусыЗапросовДоступностиТоваровШапка.Согласован)";
		
		Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаЗаказКлиента);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект(); 
			
			Если Выборка.МагазинОтправитель = Выборка.МагазинПолучатель Тогда
				
				Если ДокЗаказа.СтатусОплаты = Перечисления.СтатусОплаты.Оплачен Тогда
					
					ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.ПродажаБезнал;
					
				Иначе 
					
					ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.ПродажаНаКассе;   
					
				КонецЕсли; 
				
			Иначе 
				
				ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Сборка; 
				
			КонецЕсли;   
			
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);  
			
		КонецЦикла; 
		
	КонецЕсли;
		
	Если ДокЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.Отменён Тогда 
			
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗапросДоступностиТоваров.Ссылка КАК Ссылка,
			|	ЗапросДоступностиТоваров.СтатусЗапроса КАК СтатусЗапроса
			|ИЗ
			|	Документ.ЗапросДоступностиТоваров КАК ЗапросДоступностиТоваров
			|ГДЕ
			|	ЗапросДоступностиТоваров.ДокументОснование = &ДокументОснование";
		
		Запрос.УстановитьПараметр("ДокументОснование", ДокументСсылкаЗаказКлиента);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл 
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект(); 
			
			Если ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Новый Тогда
				
				ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Отменён;   

			Иначе 
				
				ДокументОбъект.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.ПодтвердитьОтмену; 
				
			КонецЕсли;

			ДокументОбъект.ДополнительныеСвойства.Вставить("ОтправлятьВNavision");
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);  
			
		КонецЦикла; 
		
	КонецЕсли;  

КонецПроцедуры     

Процедура ДобавлениеСтрокиЗД(ВыборкаДляСтроки, ТЧ)
	
	Если Не ВыборкаДляСтроки.ТоварыЗПОтменено Тогда 
		
		НоваяСтрока = ТЧ.Добавить();
		НоваяСтрока.КоличествоТребование = ВыборкаДляСтроки.ТоварыЗПКоличество; 
		НоваяСтрока.Номенклатура = ВыборкаДляСтроки.ТоварыЗПНоменклатура; 
		НоваяСтрока.Характеристика = ВыборкаДляСтроки.ТоварыЗПХарактеристика;
		НоваяСтрока.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Подготовить; 
		НоваяСтрока.КлючСвязи = ВыборкаДляСтроки.ТоварыЗПКлючСвязиЗапросаДоступности; 
		НоваяСтрока.Сумма = ВыборкаДляСтроки.ТоварыЗПСумма; 
		НоваяСтрока.СуммаНДС = ВыборкаДляСтроки.ТоварыЗПСуммаНДС; 
		НоваяСтрока.СтавкаНДС = ВыборкаДляСтроки.ТоварыЗПСтавкаНДС; 
		НоваяСтрока.ПродажаПодарка = ВыборкаДляСтроки.ТоварыЗППродажаПодарка; 
		НоваяСтрока.Обработана = Истина;

	КонецЕсли;
	
КонецПроцедуры

Функция ВыборТипаДоставки(ОператорДоставки, ДоставкаНаАдрес)
	
	Результат = Перечисления.ТипДоставкиЗаказПокупателя.ПустаяСсылка();
	
	Если ОператорДоставки = Перечисления.ОператорыДоставки.ВнутренняяЛогистика Тогда
		
		Результат = Перечисления.ТипДоставкиЗаказПокупателя.Самовывоз; 
		
	ИначеЕсли ОператорДоставки = Перечисления.ОператорыДоставки.НоваяПочта Тогда 
		
		Результат = ?(ДоставкаНаАдрес,
						Перечисления.ТипДоставкиЗаказПокупателя.НоваяПочтаДоставкаПоАдресу,
						Перечисления.ТипДоставкиЗаказПокупателя.НоваяПочтаДоставкаВОтделение);
						
	ИначеЕсли ОператорДоставки = Перечисления.ОператорыДоставки.MeestExpress Тогда 
		
		Результат = ?(ДоставкаНаАдрес,
						Перечисления.ТипДоставкиЗаказПокупателя.MeestExpressДоставкаПоАдресу,
						Перечисления.ТипДоставкиЗаказПокупателя.MeestExpressДоставкаВОтделение);
						
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЛистОтбора") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЛистОтбора", 
			"Лист отбора", 
			ПечатьЛистаОтбора(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,Истина);
		
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТоварнаяНакладная") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТоварнаяНакладная", 
			"Товарная накладная", 
			ПечатьТоварнаяНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,Истина);
		
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует печатную форму документа.
//
Функция ПечатьЛистаОтбора(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
		
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	ТабличныйДокумент  = Новый ТабличныйДокумент;
	СинонимДокумента   = НСтр("ru='Лист отбора';uk='Аркуш відбору'", КодЯзыкаПечать);
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЛистОтбора_ЛистОтбора"; 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(справочник.Упаковкиноменклатуры.Пустаяссылка) КАК Упаковка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(Штрихкоды.ДатаИзменения) КАК ДатаИзменения
	|ПОМЕСТИТЬ ТабШтрихкоды
	|ИЗ
	|	Документ.ЗапросДоступностиТоваров.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО Товары.Номенклатура = Штрихкоды.Владелец
	|		И Штрихкоды.Упаковка = ЗНАЧЕНИЕ(справочник.Упаковкиноменклатуры.Пустаяссылка)
	|		И Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	|ГДЕ
	|	Товары.Ссылка В (&МассивОбъектов)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	ЗНАЧЕНИЕ(справочник.Упаковкиноменклатуры.Пустаяссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Упаковка,
	|	ДатаИзменения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабШтрихкоды.Номенклатура КАК Номенклатура,
	|	ТабШтрихкоды.Упаковка КАК Упаковка,
	|	МАКСИМУМ(Штрихкоды.Штрихкод) КАК Штрихкод
	|ПОМЕСТИТЬ ТабШтрихкодыСрез
	|ИЗ
	|	ТабШтрихкоды КАК ТабШтрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ТабШтрихкоды.Упаковка = Штрихкоды.Упаковка
	|		И ТабШтрихкоды.Номенклатура = Штрихкоды.Владелец
	|		И ТабШтрихкоды.ДатаИзменения = Штрихкоды.ДатаИзменения
	|		И Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	|СГРУППИРОВАТЬ ПО
	|	ТабШтрихкоды.Номенклатура,
	|	ТабШтрихкоды.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапросДоступностиТоваров.Ссылка КАК Ссылка,
	|	ЗапросДоступностиТоваров.Номер КАК НомерЗапроса,
	|	ЗапросДоступностиТоваров.Дата КАК ДатаЗапроса,
	|	ЗапросДоступностиТоваров.ТипДоставки КАК ТипДоставки,
	|	ЗапросДоступностиТоваров.ДокументОснование.Номер КАК Номер,
	|	ЗапросДоступностиТоваров.ДокументОснование.Дата КАК Дата,
	|	ЗапросДоступностиТоваров.Комментарий КАК Комментарий,
	|	Штрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	Документ.ЗапросДоступностиТоваров КАК ЗапросДоступностиТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО Штрихкоды.Владелец = ЗапросДоступностиТоваров.Ссылка
	|ГДЕ
	|	ЗапросДоступностиТоваров.Ссылка В (&МассивОбъектов)
	|	И ЗапросДоступностиТоваров.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапросДоступностиТоваровТовары.НомерСтроки КАК НомерСтроки,
	|	ЗапросДоступностиТоваровТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НоменклатурнаяИнформация.Наименование ЕСТЬ NULL
	|			ТОГДА ЗапросДоступностиТоваровТовары.Номенклатура.Представление
	|		ИНАЧЕ НоменклатурнаяИнформация.Наименование
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	ЗапросДоступностиТоваровТовары.Количество КАК Количество,
	|	ЗапросДоступностиТоваровТовары.Ссылка КАК Ссылка,
	|	ЗапросДоступностиТоваровТовары.Номенклатура.Код КАК НоменклатураКод,
	|	ЗапросДоступностиТоваровТовары.Номенклатура.Артикул КАК НоменклатураАртикул,
	|	ЗапросДоступностиТоваровТовары.Номенклатура.Марка КАК НоменклатураМарка,
	|	ЗапросДоступностиТоваровТовары.КоличествоТребование КАК КоличествоТребование,
	|	ТабШтрихкодыСрез.Штрихкод КАК Штрихкод,
	|	0 КАК КоличествоНаСкладе,
	|	ЗапросДоступностиТоваровТовары.Характеристика КАК Характеристика
	|ИЗ
	|	Документ.ЗапросДоступностиТоваров.Товары КАК ЗапросДоступностиТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабШтрихкодыСрез КАК ТабШтрихкодыСрез
	|		ПО ЗапросДоступностиТоваровТовары.Номенклатура = ТабШтрихкодыСрез.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатурнаяИнформация КАК НоменклатурнаяИнформация
	|		ПО ЗапросДоступностиТоваровТовары.Номенклатура = НоменклатурнаяИнформация.Номенклатура
	|ГДЕ
	|	ЗапросДоступностиТоваровТовары.Ссылка В (&МассивОбъектов)
	|	И ЗапросДоступностиТоваровТовары.Ссылка.Проведен
	|	И НЕ (ЗапросДоступностиТоваровТовары.СтатусЗапроса = ЗНАЧЕНИЕ(Перечисление.СтатусыЗапросовДоступностиТоваров.Отменён)
	|	ИЛИ ЗапросДоступностиТоваровТовары.СтатусЗапроса = ЗНАЧЕНИЕ(Перечисление.СтатусыЗапросовДоступностиТоваров.Удалён))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабШтрихкоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабШтрихкодыСрез";


	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ЗапросДоступностиТоваров.ЛистОтбора", КодЯзыкаПечать);
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	
	ОбластьШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаТаблицы 	= Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьПодвалТаблицы 	= Макет.ПолучитьОбласть("ПодвалТаблицы");

	ВыборкаПоДокументам = Результаты[2].Выбрать();
	
	ВыборкаПоТабличнымЧастям = Результаты[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		МассивКомметариев = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ВыборкаПоДокументам.Комментарий, ":");
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		//ЗАГОЛОВОК    
		//ОбработкаФормированиеШтрихкодов = Обработки.ФормированиеШтрихкодов.Создать();
		Для каждого Рисунок Из ОбластьЗаголовок.Рисунки Цикл
			Эталон = Обработки.ПечатьЭтикетокИЦенников.ПолучитьМакет("Эталон");
			КоличествоМиллиметровВПикселе = Эталон.Рисунки.Квадрат100Пикселей.Высота / 100;
			ПараметрыШтрихкода = Новый Структура;
			ПараметрыШтрихкода.Вставить("Ширина",          Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселе));
			ПараметрыШтрихкода.Вставить("Высота",          Окр(Рисунок.Высота / КоличествоМиллиметровВПикселе));
			ПараметрыШтрихкода.Вставить("Штрихкод",        ВыборкаПоДокументам.Штрихкод);
			ПараметрыШтрихкода.Вставить("ТипКода",         3);
			ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
			ПараметрыШтрихкода.Вставить("РазмерШрифта",    10);
			//Если СтруктураШаблона.Свойство("УголПоворота") Тогда
			//	ПараметрыШтрихкода.Вставить("УголПоворота", СтруктураШаблона.УголПоворота);
			//КонецЕсли;
			//Если ТипЗнч(СтрокаТовары.Номенклатура) = Тип("СправочникСсылка.ФизическиеЛица") тогда
				Рисунок.Картинка = МенеджерОборудованияСервер.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
			//Иначе	
				//Если СтрДлина(ЗначениеШтрихкода) = 12 тогда 
				//	ТипШтрихкода =  "EAN13";
				//Иначе
				//	ТипШтрихкода =  "CODE39";
				//КонецЕсли;
				//Попытка
				//	Рисунок.Картинка = ОбработкаФормированиеШтрихкодов.ПолучитьКартинкуЛинейногоШК(ЗначениеШтрихкода,ТипШтрихкода,ФорматКартинки.WMF,Истина,,,Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселе),Окр(Рисунок.Высота / КоличествоМиллиметровВПикселе),1);
				//Исключение
				//	Сообщить("Неправильный штрихкод "+ЗначениеШтрихкода);
				//КонецПопытки;
			КонецЦикла;              	
		
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = НСтр("ru='Лист отбора';uk='Аркуш відбору'", КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		//ШАПКА  
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		//СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			НомерВМассиве = МассивКомметариев.Найти(СокрЛП(ВыборкаПоСтрокамТЧ.НоменклатураКод));
			
			Если Не НомерВМассиве = Неопределено Тогда
				
				ОбластьСтрокаТаблицы.Параметры.КомментарийПоСтроке = МассивКомметариев[НомерВМассиве + 1];
			
			Иначе
				
				ОбластьСтрокаТаблицы.Параметры.КомментарийПоСтроке = "";
			
			КонецЕсли;

			ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);

			Если ТипЗнч(ВыборкаПоДокументам.Ссылка.МагазинОтправитель) = Тип("СправочникСсылка.Магазины") Тогда
				
				СкладРозницы = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаПоДокументам.Ссылка.МагазинОтправитель, "СкладПродажи", Справочники.Склады.ПустаяСсылка(), Ложь);
		
				МоментВремени = Новый МоментВремени(ВыборкаПоДокументам.Ссылка.Дата, ВыборкаПоДокументам.Ссылка);

				Остатки  = РегистрыНакопления.ТоварыНаСкладах;
				Фильтр   = Новый Структура;
				Фильтр.Вставить("Номенклатура",ВыборкаПоСтрокамТЧ.Номенклатура);
				Фильтр.Вставить("Характеристика",ВыборкаПоСтрокамТЧ.Характеристика);
				Фильтр.Вставить("Склад", СкладРозницы);
				ТабОстатков = Остатки.Остатки(МоментВремени, Фильтр, "Номенклатура, Характеристика, Склад", "Количество");
				
				Если Не ТабОстатков.Количество() = 0 Тогда
					
					ОбластьСтрокаТаблицы.Параметры.КоличествоОстаток = ТабОстатков[0].Количество;
					
				КонецЕсли; 

			КонецЕсли;
			
			СтруктураКодаКартинки = Новый Структура("sku", ВыборкаПоСтрокамТЧ.Номенклатура.IDN);
			МассивКодов = Новый Массив;
			МассивКодов.Добавить(СтруктураКодаКартинки);
			СтруктураЗапросаКартинки = Новый Структура("Skus", МассивКодов);
			
			ЗаписьJSON = Новый ЗаписьJSON; 
			ЗаписьJSON.УстановитьСтроку(); 
			ЗаписатьJSON(ЗаписьJSON,СтруктураЗапросаКартинки);
			СтрокаJSON = ЗаписьJSON.Закрыть();

			Соединение = Новый HTTPСоединение("backoffice.antoshka.ua",,,,,, Новый ЗащищенноеСоединениеOpenSSL);
			Заголовки = Новый Соответствие;
			Заголовки.Вставить("Content-Type", "application/json");

			HTTPЗапрос = Новый HTTPЗапрос("/api/rest/images/1c?token=ff75a594-73c6-4edc-96ae-67531e01ca0b", Заголовки);

			HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаJSON, КодировкаТекста.UTF8);
			HTTPОтвет = Соединение.ОтправитьДляОбработки(HTTPЗапрос);

			Если HTTPОтвет.КодСостояния = 200 Или HTTPОтвет.КодСостояния = 201 Тогда

				ЧтениеJSON = Новый ЧтениеJSON;
				ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));  		
				ТелоОтвета =ПрочитатьJSON(ЧтениеJSON);
				Если ТелоОтвета.Свойство("images") Тогда
					
					СтруктураАдресаКартинки = ТелоОтвета.images[0];
					
					Если СтруктураАдресаКартинки.Свойство("image") Тогда
						
						СтруктураАдреса = ПолучениеФайловИзИнтернетаКлиентСервер.СтруктураURI(СтруктураАдресаКартинки.image);

						Если СтруктураАдреса.Схема = "https" Тогда
							
							Соединение = Новый HTTPСоединение(СтруктураАдреса.ИмяСервера,,,,,, Новый ЗащищенноеСоединениеOpenSSL);
		
						Иначе
							
							Соединение = Новый HTTPСоединение(СтруктураАдреса.ИмяСервера);
							
						КонецЕсли;

						Запрос = Новый HTTPЗапрос(СтруктураАдреса.ПутьНаСервере);
						Ответ = Соединение.Получить(Запрос);
						Если Ответ.КодСостояния = 200 Или Ответ.КодСостояния = 201 Тогда
						
							ДвоичныеДанныеКартинки = Ответ.ПолучитьТелоКакДвоичныеДанные();
							Картинка = Новый Картинка(ДвоичныеДанныеКартинки);
							ОбластьСтрокаТаблицы.Рисунки.D1.Картинка = Картинка;

						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);

		ТабличныйДокумент.НижнийКолонтитул.Выводить = Истина;
		ТабличныйДокумент.НижнийКолонтитул.ТекстВЦентре = "[&НомерСтраницы] из [&СтраницВсего], Запрос №" + ВыборкаПоДокументам.НомерЗапроса;
		ТабличныйДокумент.НижнийКолонтитул.Шрифт = Новый Шрифт(, 12, Истина, , , , );

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьТоварнаяНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	ТабличныйДокумент  = Новый ТабличныйДокумент;
	СинонимДокумента   = НСтр("ru='Товарная накладная';uk='Товарна накладна'", КодЯзыкаПечать);
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТоварнаяНакладная_ТоварнаяНакладная"; 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапросДоступностиТоваров.Ссылка КАК Ссылка,
	|	ЗапросДоступностиТоваров.Номер КАК НомерЗапроса,
	|	ЗапросДоступностиТоваров.Дата КАК ДатаЗапроса,
	|	ЗапросДоступностиТоваров.ТипДоставки КАК ТипДоставки,
	|	ЗапросДоступностиТоваров.ДокументОснование.Номер КАК Номер,
	|	ЗапросДоступностиТоваров.ДокументОснование.Дата КАК Дата,
	|	ЗапросДоступностиТоваров.ДокументОснование.Город КАК Город,
	|	ЗапросДоступностиТоваров.ДокументОснование.Улица КАК Улица,
	|	ЗапросДоступностиТоваров.ДокументОснование.Дом КАК Дом,
	|	ЗапросДоступностиТоваров.ДокументОснование.Квартира КАК Квартира,
	|	ЗапросДоступностиТоваров.ДокументОснование.Фамилия + "" "" + ЗапросДоступностиТоваров.ДокументОснование.Имя + "" "" +
	|		ЗапросДоступностиТоваров.ДокументОснование.Отчество КАК Получатель,
	|	ЕСТЬNULL(МагазиныАдрес.Представление, """") КАК АдресМагазина,
	|	ЗапросДоступностиТоваров.ДокументОснование.Контрагент КАК Клиент,
	|	ЗапросДоступностиТоваров.ДокументОснование.Телефон КАК Телефон,
	|	ЕСТЬNULL(КонтрагентыПочта.Представление, """") КАК ПочтаКлиента,
	|	ЕСТЬNULL(КонтрагентыТелефон.Представление, """") КАК ТелефонКлиента,
	|	0 КАК Доставка,
	|	ЭлектроннаяНакладная.Номер КАК НомерТТН,
	|	ЭлектроннаяНакладная.ОператорДоставки КАК Оператор,
	|	ЕСТЬNULL(ЭлектроннаяНакладная.ОтделениеПолучатель, """") КАК ОтделениеПолучатель
	|ИЗ
	|	Документ.ЗапросДоступностиТоваров КАК ЗапросДоступностиТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Магазины.КонтактнаяИнформация КАК МагазиныАдрес
	|		ПО ЗапросДоступностиТоваров.МагазинПолучатель = МагазиныАдрес.Ссылка
	|		И МагазиныАдрес.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыТелефон
	|		ПО ЗапросДоступностиТоваров.ДокументОснование.Контрагент = КонтрагентыТелефон.Ссылка
	|		И КонтрагентыТелефон.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыПочта
	|		ПО ЗапросДоступностиТоваров.ДокументОснование.Контрагент = КонтрагентыПочта.Ссылка
	|		И КонтрагентыПочта.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭлектроннаяНакладная КАК ЭлектроннаяНакладная
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЭН.СрезПоследних(,
	|			НЕ СтатусЭН.СтатусПосылки = ЗНАЧЕНИЕ(Перечисление.СтатусыПосылокСлужбыДоставки.Отменена)) КАК
	|				СтатусыЭНСрезПоследних
	|			ПО ЭлектроннаяНакладная.Ссылка = СтатусыЭНСрезПоследних.ДокументРегистратор
	|		ПО ЗапросДоступностиТоваров.Ссылка = ЭлектроннаяНакладная.ДокументОснование
	|ГДЕ
	|	ЗапросДоступностиТоваров.Ссылка В (&МассивОбъектов)
	|	И ЗапросДоступностиТоваров.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗапросДоступностиТоваровТовары.НомерСтроки КАК НомерСтроки,
	|	ЗапросДоступностиТоваровТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НоменклатурнаяИнформация.Наименование ЕСТЬ NULL
	|			ТОГДА ЗапросДоступностиТоваровТовары.Номенклатура.Представление
	|		ИНАЧЕ НоменклатурнаяИнформация.Наименование
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	ЗапросДоступностиТоваровТовары.Количество КАК Количество,
	|	ЗапросДоступностиТоваровТовары.Ссылка КАК Ссылка,
	|	ЗапросДоступностиТоваровТовары.Номенклатура.Код КАК НоменклатураКод,
	|	ЗапросДоступностиТоваровТовары.Номенклатура.Артикул КАК НоменклатураАртикул,
	|	ЗапросДоступностиТоваровТовары.Номенклатура.Марка КАК НоменклатураМарка,
	|	ЕСТЬNULL(ЗаказПокупателяТовары.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(ЗаказПокупателяТовары.Сумма, 0) КАК Сумма
	|ИЗ
	|	Документ.ЗапросДоступностиТоваров.Товары КАК ЗапросДоступностиТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	|		ПО ЗапросДоступностиТоваровТовары.Ссылка.ДокументОснование = ЗаказПокупателяТовары.Ссылка
	|		И ЗапросДоступностиТоваровТовары.КлючСвязи = ЗаказПокупателяТовары.КлючСвязиЗапросаДоступности
	|		И НЕ ЗаказПокупателяТовары.Отменено
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатурнаяИнформация КАК НоменклатурнаяИнформация
	|		ПО ЗапросДоступностиТоваровТовары.Номенклатура = НоменклатурнаяИнформация.Номенклатура
	|ГДЕ
	|	ЗапросДоступностиТоваровТовары.Ссылка В (&МассивОбъектов)
	|	И ЗапросДоступностиТоваровТовары.Ссылка.Проведен
	|	И НЕ (ЗапросДоступностиТоваровТовары.СтатусЗапроса = ЗНАЧЕНИЕ(Перечисление.СтатусыЗапросовДоступностиТоваров.Отменён)
	|	ИЛИ ЗапросДоступностиТоваровТовары.СтатусЗапроса = ЗНАЧЕНИЕ(Перечисление.СтатусыЗапросовДоступностиТоваров.Удалён))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|ПО
	|	Ссылка";


	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ЗапросДоступностиТоваров.ТоварнаяНакладная", КодЯзыкаПечать);
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	
	ОбластьШапкаТаблицы 	= Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаТаблицы 	= Макет.ПолучитьОбласть("СтрокаТаблицы");
	ОбластьПодвалТаблицы 	= Макет.ПолучитьОбласть("ПодвалТаблицы");
	
	ОбластьПодписей       = Макет.ПолучитьОбласть("Подписи");
	ОбластьИтого          = Макет.ПолучитьОбласть("Итого");
	ОбластьИтогоНДС       = Макет.ПолучитьОбласть("ИтогоНДС");
	ОбластьСуммаПрописью  = Макет.ПолучитьОбласть("СуммаПрописью");
	
	ОбластьШапкаВозврата 			= Макет.ПолучитьОбласть("ШапкаВозврата");

	ВыборкаПоДокументам = Результаты[0].Выбрать();
	
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		//ЗАГОЛОВОК
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		//ШАПКА
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);
		Если ВыборкаПоДокументам.ТипДоставки = Перечисления.ТипДоставкиЗаказПокупателя.Самовывоз Тогда 
			ОбластьШапка.Параметры.АдресДоставки = ВыборкаПоДокументам.АдресМагазина;
		Иначе 
			Если ПустаяСтрока(ВыборкаПоДокументам.ОтделениеПолучатель)
					Или ВыборкаПоДокументам.ОтделениеПолучатель.Пустая() Тогда
				
				ОбластьШапка.Параметры.АдресДоставки = Строка(ВыборкаПоДокументам.Город)
														+ ", " + Строка(ВыборкаПоДокументам.Улица)
														+ ", д. " + Строка(ВыборкаПоДокументам.Дом)
														+ ", кв. " + Строка(ВыборкаПоДокументам.Квартира);
														
			Иначе
				
				ОбластьШапка.Параметры.АдресДоставки = Строка(ВыборкаПоДокументам.Город)
														+ ", " + ВыборкаПоДокументам.ОтделениеПолучатель;
				
			КонецЕсли;
			
		КонецЕсли;
		ОбластьШапка.Параметры.НазваниеТоварнойНакладной = 
				НСтр("ru='Товарная накладная №" + СокрЛП(ВыборкаПоДокументам.Номер) + "(" + СокрЛП(ВыборкаПоДокументам.НомерЗапроса) + ") от " + Формат(ВыборкаПоДокументам.Дата,"Л=ru; ДЛФ=DD") 
					+ "';uk='Товарна накладна №" + СокрЛП(ВыборкаПоДокументам.Номер) + "(" + СокрЛП(ВыборкаПоДокументам.НомерЗапроса) + ") від " + Формат(ВыборкаПоДокументам.Дата,"Л=uk_UA; ДЛФ=DD") 
					+ "'", КодЯзыкаПечать);										
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
		
		Итого = 0;
		//СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			Итого = Итого + ВыборкаПоСтрокамТЧ.Сумма;
			
			
		КонецЦикла;
		
		//ИТОГО
		ОбластьИтого.Параметры.Итого = Итого;
		ОбластьИтого.Параметры.Доставка = ВыборкаПоДокументам.Доставка;
		ОбластьИтого.Параметры.Всего = Итого + ВыборкаПоДокументам.Доставка; 
		
		ТабличныйДокумент.Вывести(ОбластьИтого);

		//СУММА ПРОПИСЬЮ
		
		СуммаКПрописи = Итого + ВыборкаПоДокументам.Доставка;
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(СуммаКПрописи, , КодЯзыкаПечать);
			
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);  

		//ПОДПИСИ
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		//ШаблонДляВозврата
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		//ШапкаВозврата
		ОбластьШапкаВозврата.Параметры.ЗаголовокВозврата = 
				НСтр("ru='По заказу №" + СокрЛП(ВыборкаПоДокументам.Номер) 
					+ "';uk='За замовленням №" + СокрЛП(ВыборкаПоДокументам.Номер) 
					+ "'", КодЯзыкаПечать);										
		ТабличныйДокумент.Вывести(ОбластьШапкаВозврата);
		

		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

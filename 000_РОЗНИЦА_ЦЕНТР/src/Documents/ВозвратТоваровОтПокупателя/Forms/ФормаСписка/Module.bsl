
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьСклада();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)

	Магазин = Настройки.Получить("Магазин");
	Склад   = Настройки.Получить("Склад");

	УстановитьОтборДинамическихСписков();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтборСкладПриИзменении(Элемент)
	
	СкладОтборПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборМагазинПриИзменении(Элемент)
	
	СкладОтборПриИзмененииНаСервере();
	УстановитьДоступностьСклада();
	
КонецПроцедуры

&НаКлиенте	//	LNK 09.01.2020 11:33:44
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Отказ = Истина;
	ПоказатьОповещениеПользователя("В воздействии отказано!"
		,, "Создание нового документа возможно только на основании документа «Реализация товаров»"
		, БиблиотекаКартинок.Ошибка32);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура СкладОтборПриИзмененииНаСервере()
	
	УстановитьОтборДинамическихСписков();
		
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Прочее

// Функция возвращает массив динамических списков, для которых требуется установка отбора.
//
&НаСервере
Функция МассивДинамическихСписковНаСервере()

	МассивСписков = Новый Массив;
	МассивСписков.Добавить(Список);
	
	Возврат МассивСписков;

КонецФункции

// Процедура устанавливает отбор динамических списков формы.
//
&НаСервере
Процедура УстановитьОтборДинамическихСписков()
	
	Для Каждого ДинамическийСписок Из МассивДинамическихСписковНаСервере() Цикл
		
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ДинамическийСписок, "Магазин", Магазин , ЗначениеЗаполнено(Магазин), ВидСравненияКомпоновкиДанных.Равно);
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ДинамическийСписок, "Склад", Склад , ЗначениеЗаполнено(Склад), ВидСравненияКомпоновкиДанных.Равно);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьСклада()

	Элементы.ОтборСклад.ТолькоПросмотр = НЕ ЗначениеЗаполнено(Магазин);

КонецПроцедуры






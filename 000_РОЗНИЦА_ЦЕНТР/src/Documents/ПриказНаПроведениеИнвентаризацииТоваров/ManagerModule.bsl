#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает строковое описание правил отбора товаров, параметров и отбора СКД
//
// Параметры: 
//  ДокументСсылка - Документ.ПриказНаПроведениеИнвентаризацииТоваров
//
// Возвращаемое значение:
//  Строка
//
Функция ОписаниеПравилОтбораТоваров(ДокументСсылка) Экспорт
	
	ОписаниеПравил = "";
	
	ПравилаОтбораТоваровИнвентаризации = ДокументСсылка.ПравилаОтбораТоваровИнвентаризации;
	
	Если НЕ ЗначениеЗаполнено(ПравилаОтбораТоваровИнвентаризации) Тогда
		Возврат "<Произвольный список товаров>";
	ИначеЕсли ПравилаОтбораТоваровИнвентаризации = Справочники.ПравилаОтбораТоваров.ПолнаяИнвентаризация Тогда
		СхемаИНастройки = Справочники.ПравилаОтбораТоваров.ОписаниеИСхемаКомпоновкиДанныхПоИмениМакета(ПравилаОтбораТоваровИнвентаризации, "ПолнаяИнвентаризация");
	ИначеЕсли ПравилаОтбораТоваровИнвентаризации = Справочники.ПравилаОтбораТоваров.ИнвентаризацияЗапрещенныхКПродаже Тогда
		СхемаИНастройки = Справочники.ПравилаОтбораТоваров.ОписаниеИСхемаКомпоновкиДанныхПоИмениМакета(ПравилаОтбораТоваровИнвентаризации, "ИнвентаризацияЗапрещенныхКПродаже");
	Иначе
		СхемаИНастройки = Справочники.ПравилаОтбораТоваров.ОписаниеИСхемаКомпоновкиДанныхПоИмениМакета(ПравилаОтбораТоваровИнвентаризации, ПравилаОтбораТоваровИнвентаризации.СхемаКомпоновкиДанных);
	КонецЕсли;
	
	СхемаКомпоновкиДанных = СхемаИНастройки.СхемаКомпоновкиДанных;
	
	ОписаниеСхемыКомпоновки = СхемаИНастройки.Описание;
	
	НастройкиКомпоновкиДанных = ДокументСсылка.НастройкиКомпоновкиДанных.Получить();
	
	Если НЕ ЗначениеЗаполнено(НастройкиКомпоновкиДанных) Тогда
		Если Не ЗначениеЗаполнено(СхемаИНастройки.НастройкиКомпоновкиДанных) Тогда
			КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
			УстановитьПривилегированныйРежим(Истина);
			КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
			УстановитьПривилегированныйРежим(Ложь);
			КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
			
			НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
		Иначе
			НастройкиКомпоновкиДанных = СхемаИНастройки.НастройкиКомпоновкиДанных;
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеПравил = ПравилаОтбораТоваровИнвентаризации.Наименование;
	ОписаниеПравил = ОписаниеПравил + ?(ЗначениеЗаполнено(ПравилаОтбораТоваровИнвентаризации.СхемаКомпоновкиДанных), " (" + ОписаниеСхемыКомпоновки + ")", "");
	ОписаниеПараметровНастройки = ОбщегоНазначенияРТСервер.ОписаниеПараметровНастройки(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных);
	ОписаниеПравил = ОписаниеПравил + ?(ЗначениеЗаполнено(ОписаниеПараметровНастройки)," " + ОписаниеПараметровНастройки,"");
	
	Возврат ОписаниеПравил;
	
КонецФункции // ОписаниеПравилОтбораТоваров()


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаПриказа.Дата КАК Период,
	|	ТаблицаПриказа.Магазин КАК Магазин,
	|	ТаблицаПриказа.Склад КАК Склад,
	|	ТаблицаПриказа.Ссылка КАК ДокументОграничения,
	|	КОНЕЦПЕРИОДА(ТаблицаПриказа.ДатаОкончания, ДЕНЬ) КАК ГраницаЗапрета
	|ИЗ
	|	Документ.ПриказНаПроведениеИнвентаризацииТоваров КАК ТаблицаПриказа
	|ГДЕ
	|	ТаблицаПриказа.Ссылка = &Ссылка
	|	И НЕ ТаблицаПриказа.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПриказовНаПроведениеИнвентаризацийТоваров.Отложен)"
	);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Результат = Запрос.ВыполнитьПакет();

	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаОграниченияДвиженийПоИнвентаризации", Результат[0].Выгрузить());

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М21") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"М21",
			"Инветаризационная опись",
			СформироватьПечатнуюФормуМ21(МассивОбъектов, ОбъектыПечати, ПараметрыПечати["Пустографка"])
		);
		
	КонецЕсли;

КонецПроцедуры

Функция СформироватьПечатнуюФормуМ21(МассивОбъектов, ОбъектыПечати, Пустографка = Ложь)
	
	ТабДок = Новый ТабличныйДокумент;
	
	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                                       КАК Ссылка,
		|	Документ.Номер                                        КАК Номер,
		|	Документ.Дата                                         КАК Дата,
		|	Документ.Дата                                         КАК ДатаДокумента,
		|	Документ.Дата                                         КАК ОснованиеДата,
		|	Документ.Организация                                  КАК Организация,
		|	Документ.Организация.Префикс                          КАК Префикс,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Склад)                         КАК ПредставлениеСклада,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Организация)                   КАК ПредставлениеОрганизации,
		|	Документ.ПредседательКомиссии 						  КАК ПредседательКомиссии,
		|	Документ.ЧленКомиссии1 								  КАК ЧленКомиссии1,
		|	Документ.ЧленКомиссии2 								  КАК ЧленКомиссии2,
		|	Документ.ЧленКомиссии3 								  КАК ЧленКомиссии3,
		|	Документ.ДолжностьПредседателяКомиссии 				  КАК ДолжностьПредседателяКомиссии,
		|	Документ.ДолжностьЧленаКомиссии1 					  КАК ДолжностьЧленаКомиссии1,
		|	Документ.ДолжностьЧленаКомиссии2 					  КАК ДолжностьЧленаКомиссии2,
		|	Документ.ДолжностьЧленаКомиссии3 					  КАК ДолжностьЧленаКомиссии3
		|ИЗ
		|	Документ.ПриказНаПроведениеИнвентаризацииТоваров КАК Документ
		|
		|ГДЕ
		|	Документ.Ссылка В (&МассивДокументов)
		|	И Документ.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Номенклатура)                                КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Характеристика)                              КАК ХарактеристикаПредставление,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК ЕдиницаИзмеренияКод,
		|	ВЫБОР
		|			КОГДА &БезФактическихДанных ТОГДА 0
		|			ИНАЧЕ ВложенныйЗапрос.Количество
		|	КОНЕЦ                                                                      КАК КоличествоФактическое,
		|	ВЫБОР
		|			КОГДА &БезФактическихДанных ТОГДА 0
		|			ИНАЧЕ ВложенныйЗапрос.Сумма
		|	КОНЕЦ                                                                      КАК Сумма,
		|	ВложенныйЗапрос.КоличествоУчет                                             КАК КоличествоУчет,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.Цена                                                       КАК Цена,
		|	ВложенныйЗапрос.СуммаУчет                                                  КАК СуммаУчет,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки
		|ИЗ (
		|	ВЫБРАТЬ
		|		Документ.Ссылка.ДокументОснование                                      КАК Ссылка,
		|		Документ.Номенклатура                                                  КАК Номенклатура,
		|		ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Документ.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Документ.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ                                                                  КАК ЕдиницаИзмерения,
		|		Документ.Характеристика                                                КАК Характеристика,
		|		ВЫБОР
		|			КОГДА
		|				Документ.КоличествоУпаковок = 0
		|			ТОГДА
		|				Документ.Цена
		|			ИНАЧЕ
		|				Документ.Сумма / Документ.КоличествоУпаковок
		|		КОНЕЦ                                                                  КАК Цена,
		|		Документ.КоличествоФакт                                                КАК Количество,
		|		Документ.Количество                                                    КАК КоличествоУчет,
		|		Документ.СуммаФакт                                                     КАК Сумма,
		|		Документ.Сумма                                                         КАК СуммаУчет,
		|		Документ.НомерСтроки                                                   КАК НомерСтроки
		|	ИЗ
		|		Документ.ПересчетТоваров.Товары КАК Документ
		|	ГДЕ
		|		Документ.Ссылка.ДокументОснование В (&МассивДокументов)
		|		И Документ.Ссылка.Проведен
		|		И Документ.Ссылка.ДокументОснование.Проведен
		|		И Документ.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("БезФактическихДанных", Пустографка);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПересчетТоваров_М21";
	
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати      = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПриказНаПроведениеИнвентаризацииТоваров.ПФ_MXL_М21");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим общие реквизиты шапки
		ОбластьШапки        = Макет.ПолучитьОбласть("Шапка");     
		ОбластьШапкиТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");     
		ОбластьСтроки       = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвал       = Макет.ПолучитьОбласть("Подвал");
		
		СведенияОбОрганизации    = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация,      ДанныеПечати.ДатаДокумента);
		
		ОбластьШапки.Параметры.Заполнить(ДанныеПечати);
		
		ОбластьШапки.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		ОбластьШапки.Параметры.КодПоЕДРПОУ    = СведенияОбОрганизации.КодПоЕДРПОУ;
		ОбластьШапки.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
		ОбластьШапки.Параметры.ОснованиеНомер = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
	
		ТабличныйДокумент.Вывести(ОбластьШапки);
		
		ТабличныйДокумент.Вывести(ОбластьШапкиТаблицы);
		
		НомерСтроки = 0;
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		
		Пока СтрокаТовары.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтроки.Параметры.Заполнить(СтрокаТовары);
			
			ОбластьСтроки.Параметры.НомерСтроки = НомерСтроки;
			
			ТабличныйДокумент.Вывести(ОбластьСтроки);
			
		КонецЦикла;
		
		ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
		ОбластьПодвал.Параметры.КоличествоПорядковыхНомеровПрописью  = ЧислоПрописью(НомерСтроки, "Л=uk; НП=Ложь",",,,,,,,,0");
		
		ОбластьПодвал.Параметры.НачальныйНомерПоПорядку = 1;
		ОбластьПодвал.Параметры.КонечныйНомерПоПорядку	= НомерСтроки;
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецЕсли


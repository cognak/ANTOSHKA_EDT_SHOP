
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	Если НЕ ПодарочныеСертификатыСервер.ОбработкаПроведенияКонтроль("Списание", ЭтотОбъект, Отказ) Тогда

		Возврат;	//	LNK 05.03.2020 10:39:13

	КонецЕсли;
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	Документы.ОрдерНаПеремещениеТоваров.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСерийныхНомеров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);


КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
//	LNK 16.02.2017 14:33:05
	ЗаполнениеОбъектовСобытия.ОбщиеДействияПередЗаписью(ЭтотОбъект, Отказ);
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Справочники.СерийныеНомера.ОчиститьВДокументеНеиспользуемыеСерийныеНомера(Товары, СерийныеНомера);
	ОбщегоНазначенияРТСервер.УдалитьНеиспользуемыеСтрокиСерий(ЭтотОбъект, 
																Документы.ОрдерНаПеремещениеТоваров.ПараметрыУказанияСерий(ЭтотОбъект));
	
	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбщегоНазначенияРТ.УстановитьНовоеЗначениеРеквизита(
		ЭтотОбъект,
		ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСуммуДокумента(Товары, Истина),
		"СуммаДокумента");
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров")
	ИЛИ  ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров")
	ИЛИ	 ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеТоваров")
	ИЛИ  ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходныйОрдерНаТовары")
	ИЛИ	 ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда
		
		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);

		ЗаполнитьДокументПоОснованию(ДанныеЗаполнения);

	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	Если НЕ Товары.Количество() = 0 Тогда 

		ЗапасыСервер.ЗаполнитьЦеныПоРозничнымЦенам(ЭтотОбъект, "Товары", Магазин, Ложь);

	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Серии.Очистить();
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(СкладОтправитель)
		И ЗначениеЗаполнено(СкладПолучатель)
		И СкладОтправитель = СкладПолучатель Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Один склад не может быть как отправителем, так и получателем.
			|Измените один из складов'"),
			ЭтотОбъект,,,
			Отказ);

	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,Документы.ОрдерНаПеремещениеТоваров.ПараметрыУказанияСерий(ЭтотОбъект),Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
	МаркетинговыеАкцииСервер.ПроверитьЗаполнениеТабличнойЧастиСерийныеНомера(
		ЭтотОбъект,
		"Товары",
		"СерийныеНомера",
		Отказ
	);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Инициализирует документ
//
Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Ответственный = Пользователи.ТекущийПользователь();

	ОбщегоНазначенияКлиентСервер.УстановитьЗначениеЕслиНеЗаполнено("Магазин", ЗначениеНастроекПовтИсп.ПолучитьМагазинПоУмолчанию(Магазин), ЭтотОбъект);

	РеквизитыМагазина = Справочники.Магазины.РеквизитыМагазина(Магазин);

	ОбщегоНазначенияКлиентСервер.УстановитьЗначениеЕслиНеЗаполнено("Организация", РеквизитыМагазина.Организация, ЭтотОбъект);	
	ОбщегоНазначенияКлиентСервер.УстановитьЗначениеЕслиНеЗаполнено("СкладОтправитель", РеквизитыМагазина.СкладПродажи, ЭтотОбъект);
	ОбщегоНазначенияКлиентСервер.УстановитьЗначениеЕслиНеЗаполнено("СкладПолучатель" , РеквизитыМагазина.СкладХранения, ЭтотОбъект);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда

		Если ДанныеЗаполнения.Свойство("Магазин") И НЕ ЗначениеЗаполнено(Магазин) Тогда

			Магазин = ДанныеЗаполнения.Магазин;

			Организация      = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Магазин, "Организация");
			СкладОтправитель = ЗначениеНастроекПовтИсп.ПолучитьСкладПоступленияПоУмолчанию(ДанныеЗаполнения.Магазин,, СкладОтправитель, Ответственный);
			СкладПолучатель  = ЗначениеНастроекПовтИсп.ПолучитьСкладПродажиПоУмолчанию(ДанныеЗаполнения.Магазин,, СкладПолучатель, Ответственный);

		КонецЕсли;

	КонецЕсли;

	Если СкладОтправитель = СкладПолучатель Тогда
		СкладПолучатель = Справочники.Склады.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

//	LNK 08.11.2017 14:32:30
Функция ЗаполнитьДокументПоОснованию(ДанныеЗаполнения)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваров") Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Магазин КАК Магазин,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.Склад КАК СкладОтправитель,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
		|	ТаблицаДокумента.Магазин.СкладУправляющейСистемы КАК СкладУправляющейСистемы,
		|	ТаблицаДокумента.Товары.(
		|		НомерСтроки КАК НомерСтроки,
		|		КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
		|		Количество КАК Количество,
		|		КоличествоУпаковок КАК КоличествоУпаковок,
		|		Номенклатура КАК Номенклатура,
		|		СтатусУказанияСерий КАК СтатусУказанияСерий,
		|		Упаковка КАК Упаковка,
		|		Характеристика КАК Характеристика,
		|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
		|	) КАК Товары,
		|	ТаблицаДокумента.СерийныеНомера.(
		|		НомерСтроки КАК НомерСтроки,
		|		СерийныйНомер КАК СерийныйНомер,
		|		КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров
		|	) КАК СерийныеНомера,
		|	ТаблицаДокумента.Серии.(
		|		НомерСтроки КАК НомерСтроки,
		|		Серия КАК Серия,
		|		Количество КАК Количество,
		|		Номенклатура КАК Номенклатура,
		|		Характеристика КАК Характеристика
		|	) КАК Серии
		|ИЗ
		|	Документ.ПоступлениеТоваров КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &ДанныеЗаполнения"
		;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходныйОрдерНаТовары") Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Магазин КАК Магазин,
		|	ТаблицаДокумента.Магазин.Организация КАК Организация,
		|	ТаблицаДокумента.Склад КАК СкладОтправитель,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
		|	ТаблицаДокумента.Магазин.СкладУправляющейСистемы КАК СкладУправляющейСистемы,
		|	ТаблицаДокумента.Товары.(
		|		НомерСтроки КАК НомерСтроки,
		|		КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
		|		Количество КАК Количество,
		|		КоличествоУпаковок КАК КоличествоУпаковок,
		|		Номенклатура КАК Номенклатура,
		|		СтатусУказанияСерий КАК СтатусУказанияСерий,
		|		Упаковка КАК Упаковка,
		|		Характеристика КАК Характеристика,
		|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
		|	) КАК Товары,
		|	ТаблицаДокумента.СерийныеНомера.(
		|		НомерСтроки КАК НомерСтроки,
		|		СерийныйНомер КАК СерийныйНомер,
		|		КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров
		|	) КАК СерийныеНомера,
		|	ТаблицаДокумента.Серии.(
		|		НомерСтроки КАК НомерСтроки,
		|		Серия КАК Серия,
		|		Количество КАК Количество,
		|		Номенклатура КАК Номенклатура,
		|		Характеристика КАК Характеристика
		|	) КАК Серии
		|ИЗ
		|	Документ.ПриходныйОрдерНаТовары КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &ДанныеЗаполнения"
		;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.МагазинПолучатель КАК Магазин,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СкладПолучатель КАК СкладОтправитель,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
		|	ТаблицаДокумента.МагазинПолучатель.СкладУправляющейСистемы КАК СкладУправляющейСистемы,
		|	ТаблицаДокумента.Товары.(
		|		НомерСтроки КАК НомерСтроки,
		|		КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
		|		Количество КАК Количество,
		|		КоличествоУпаковок КАК КоличествоУпаковок,
		|		Номенклатура КАК Номенклатура,
		|		СтатусУказанияСерийПолучатель КАК СтатусУказанияСерий,
		|		Упаковка КАК Упаковка,
		|		Характеристика КАК Характеристика,
		|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
		|	) КАК Товары,
		|	ТаблицаДокумента.СерийныеНомера.(
		|		НомерСтроки КАК НомерСтроки,
		|		СерийныйНомер КАК СерийныйНомер,
		|		КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров
		|	) КАК СерийныеНомера,
		|	ТаблицаДокумента.Серии.(
		|		НомерСтроки КАК НомерСтроки,
		|		Серия КАК Серия,
		|		Количество КАК Количество,
		|		Номенклатура КАК Номенклатура,
		|		Характеристика КАК Характеристика
		|	) КАК Серии
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &ДанныеЗаполнения"
		;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Магазин КАК Магазин,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.Склад КАК СкладОтправитель,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
		|	ТаблицаДокумента.Магазин.СкладУправляющейСистемы КАК СкладУправляющейСистемы,
		|	ТаблицаДокумента.Товары.(
		|		НомерСтроки КАК НомерСтроки,
		|		КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
		|		Количество КАК Количество,
		|		КоличествоУпаковок КАК КоличествоУпаковок,
		|		Номенклатура КАК Номенклатура,
		|		СтатусУказанияСерий КАК СтатусУказанияСерий,
		|		Упаковка КАК Упаковка,
		|		Характеристика КАК Характеристика,
		|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
		|	) КАК Товары,
		|	ТаблицаДокумента.СерийныеНомера.(
		|		НомерСтроки КАК НомерСтроки,
		|		СерийныйНомер КАК СерийныйНомер,
		|		КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров
		|	) КАК СерийныеНомера,
		|	ТаблицаДокумента.Серии.(
		|		НомерСтроки КАК НомерСтроки,
		|		Серия КАК Серия,
		|		Количество КАК Количество,
		|		Номенклатура КАК Номенклатура,
		|		Характеристика КАК Характеристика
		|	) КАК Серии
		|ИЗ
		|	Документ.ОприходованиеТоваров КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &ДанныеЗаполнения"
		;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОрдерНаПеремещениеТоваров") Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Магазин КАК Магазин,
		|	ТаблицаДокумента.Организация КАК Организация,
		|	ТаблицаДокумента.СкладПолучатель КАК СкладОтправитель,
		|	ТаблицаДокумента.СкладОтправитель КАК СкладПолучатель,
		|	ТаблицаДокумента.Магазин.СкладУправляющейСистемы КАК СкладУправляющейСистемы,
		|	ТаблицаДокумента.Товары.(
		|		НомерСтроки КАК НомерСтроки,
		|		Количество КАК Количество,
		|		КоличествоУпаковок КАК КоличествоУпаковок,
		|		Номенклатура КАК Номенклатура,
		|		Упаковка КАК Упаковка,
		|		Характеристика КАК Характеристика,
		|		КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
		|		СтатусУказанияСерий КАК СтатусУказанияСерий,
		|		Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры
		|	) КАК Товары,
		|	ТаблицаДокумента.СерийныеНомера.(
		|		НомерСтроки КАК НомерСтроки,
		|		СерийныйНомер КАК СерийныйНомер,
		|		КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров
		|	) КАК СерийныеНомера,
		|	ТаблицаДокумента.Серии.(
		|		НомерСтроки КАК НомерСтроки,
		|		Серия КАК Серия,
		|		Количество КАК Количество,
		|		Номенклатура КАК Номенклатура,
		|		Характеристика КАК Характеристика
		|	) КАК Серии
		|ИЗ
		|	Документ.ОрдерНаПеремещениеТоваров КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &ДанныеЗаполнения"
		;
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДанныеЗаполнения", ДанныеЗаполнения);
	Результат     = Запрос.Выполнить();
	ВыборкаДанных = Результат.Выбрать();
	ВыборкаДанных.Следующий();

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаДанных);
	ДокументОснование = ДанныеЗаполнения;
		
	Если ВыборкаДанных.СкладУправляющейСистемы Тогда
		
		ТекстОшибки = НСтр("ru='Документ %1 оформлен на магазин %2, который является складом управляющей системы.
		|Ввод ордера на перемещение товаров на основании документа невозможен.'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументОснование, Магазин);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;

	Для каждого СтрокаТаблицы Из ВыборкаДанных.Товары.Выгрузить() Цикл

		Если СтрокаТаблицы.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга Тогда

			СтрокаТабличнойЧасти = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТаблицы);

		КонецЕсли;

	КонецЦикла;
	
	Если НЕ Результат.Колонки.Найти("Серии") = Неопределено Тогда

		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВыборкаДанных.Серии.Выгрузить(), Серии);

	КонецЕсли;
	
	Если НЕ Результат.Колонки.Найти("СерийныеНомера") = Неопределено Тогда

		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ВыборкаДанных.СерийныеНомера.Выгрузить(), СерийныеНомера);

	КонецЕсли;

КонецФункции // ЗаполнитьДокументПоОснованию()

///////////////////////////////////////////////////////////////////////////////
// Прочее

//Процедура формирует массив имен регистров для контроля проведения
//
Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;

	// При проведении выполняется контроль превышения остатков на складах
	Если НЕ ОбщегоНазначенияКлиентСервер.ЗначениеКлючаСтруктуры(ДополнительныеСвойства, "СлужебнаяЗапись", Ложь)
		И   ОбщегоНазначенияРТ.НужноЗаполнитьСписокРегистровДляКонтроля(ДополнительныеСвойства.РежимЗаписи, Дата) Тогда
		
		Массив.Добавить(Движения.ТоварыНаСкладах);
		Массив.Добавить(Движения.ДвиженияСерийныхНомеров);
		
	КонецЕсли;

	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//	Объект - ДокументОъъект или ДанныеФормыСтруктура - документ, для которого нужно сфомировать параметры проверки
//
// Возвращаемое значение:
//	Структура - Состав полей определяется требованиями фукнции ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект)Экспорт
	
	ПоляСвязи = Новый Массив;
	
	ПараметрыУказанияСерий = Новый Структура;
	ИспользованиеСерийСклад = Ложь;
	
	ИспользованиеСерийСклад = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыУказанияСерий.Вставить("ИспользоватьСерииНоменклатуры", ИспользованиеСерийСклад);
	ПараметрыУказанияСерий.Вставить("ПоляСвязи",ПоляСвязи);
	ПараметрыУказанияСерий.Вставить("ЭтоНакладная", Истина);
	
	СкладскиеОперации = Новый Массив;
	СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаОтПоставщика);
	
	ПараметрыУказанияСерий.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ТекстЗапросаТаблицаСерийныхНомеров()
	
	ТекстЗапроса = Символы.ПС +
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура,
	|	Товары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ТабТовары
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|		ПО Товары.Номенклатура = ТаблицаСправочник.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	И ТаблицаСправочник.ИспользоватьСерийныеНомера
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СерийныеНомера.СерийныйНомер КАК Справочник.СерийныеНомера) КАК СерийныйНомер,
	|	СерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТабСерийныеНомера
	|ИЗ
	|	Документ.ПоступлениеТоваров.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабСерийныеНомера.СерийныйНомер.Владелец КАК Номенклатура,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	СУММА(ТабСерийныеНомера.Количество) КАК Количество
	|ПОМЕСТИТЬ ТабСвернутыхСерийныхНомеров
	|ИЗ
	|	ТабСерийныеНомера КАК ТабСерийныеНомера
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабСерийныеНомера.СерийныйНомер.Владелец,
	|	ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ ТабОстатокНоменклатур
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСвернутыхСерийныхНомеров КАК ТабСвернутыхСерийныхНомеров
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров
	|ГДЕ
	|	НЕ ТабСвернутыхСерийныхНомеров.КлючСвязиСерийныхНомеров ЕСТЬ NULL
	|	И ТабТовары.Количество - ЕСТЬNULL(ТабСвернутыхСерийныхНомеров.Количество, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючСвязиСерийныхНомеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ТабСерийныеНомера.СерийныйНомер, ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка)) КАК СерийныйНомер,
	|	ВЫБОР
	|		КОГДА ТабСерийныеНомера.СерийныйНомер ЕСТЬ NULL
	|			ТОГДА ТабТовары.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ТабОбщая
	|ИЗ
	|	ТабТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабСерийныеНомера КАК ТабСерийныеНомера
	|		ПО ТабТовары.КлючСвязиСерийныхНомеров = ТабСерийныеНомера.КлючСвязиСерийныхНомеров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабОстатокНоменклатур.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.СерийныеНомера.ПустаяСсылка),
	|	ТабОстатокНоменклатур.Количество
	|ИЗ
	|	ТабОстатокНоменклатур КАК ТабОстатокНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийныеНомера.Номенклатура КАК Номенклатура,
	|	ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаСерийныеНомера.Количество КАК Количество,
	|	&Склад КАК Получатель,
	|	&Организация КАК Организация,
	|	&АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	&Период КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабОбщая.Номенклатура КАК Номенклатура,
	|		ТабОбщая.СерийныйНомер КАК СерийныйНомер,
	|		СУММА(ТабОбщая.Количество) КАК Количество
	|	ИЗ
	|		ТабОбщая КАК ТабОбщая
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабОбщая.Номенклатура,
	|		ТабОбщая.СерийныйНомер) КАК ТаблицаСерийныеНомера
	|ГДЕ
	|	НЕ &ПоступлениеПоОрдернойСхеме
	|	И &ФормироватьДвижения" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции


Процедура СформироватьТекстЗапросаАктРасхождений(ТекстЗапроса)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПоступлениеТоваров.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваров.Ссылка) КАК ОснованиеПредставление,
	|	ПоступлениеТоваров.Номер КАК Номер,
	|	ПоступлениеТоваров.Дата КАК ДатаДокумента,
	|	ПоступлениеТоваров.Дата КАК Дата,
	|	ПоступлениеТоваров.Магазин КАК Магазин,
	|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваров.Магазин) КАК МагазинПредставление,
	|	ПоступлениеТоваров.Склад КАК Склад,
	|	ПРЕДСТАВЛЕНИЕ(ПоступлениеТоваров.Склад) КАК СкладПредставление,
	|	ПоступлениеТоваров.Организация КАК Организация,
	|	НЕ ПоступлениеТоваров.ЕстьРасхождения КАК ОшибкаНетРасхождений,
	|	ПоступлениеТоваров.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ПоступлениеТоваров.Организация.Префикс КАК Префикс,
	|	ПоступлениеТоваров.Контрагент КАК Поставщик,
	|	ПоступлениеТоваров.УчитыватьНДС КАК УчитыватьНДС
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|ГДЕ
	|	ПоступлениеТоваров.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровТовары.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровТовары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПоступлениеТоваровТовары.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ПоступлениеТоваровТовары.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровТовары.Количество, 0)) КАК Количество,
	|	ЕСТЬNULL(ПоступлениеТоваровТовары.Цена, 0) КАК Цена,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровТовары.Сумма, 0)) КАК Сумма,
	|	ПоступлениеТоваровТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровТовары.СуммаНДС, 0)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ПоступлениеТоваровТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК НоменклатураНаименование,
	|	ПоступлениеТоваровТовары.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	ПоступлениеТоваровТовары.Номенклатура.Код КАК Код,
	|	ПоступлениеТоваровТовары.Номенклатура.Артикул КАК Артикул,
	|	ПоступлениеТоваровТовары.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ПоступлениеТоваровТовары.Ссылка.ЦенаВключаетНДС
	|				ТОГДА ЕСТЬNULL(ПоступлениеТоваровТовары.Сумма, 0)
	|			ИНАЧЕ ЕСТЬNULL(ПоступлениеТоваровТовары.Сумма, 0) + ЕСТЬNULL(ПоступлениеТоваровТовары.СуммаНДС, 0)
	|		КОНЕЦ) КАК СуммаСНДС,
	|	МИНИМУМ(ПоступлениеТоваровТовары.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ТоварыПоФакту
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|ГДЕ
	|	(ПоступлениеТоваровТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|			ИЛИ ПоступлениеТоваровТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|	И ПоступлениеТоваровТовары.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровТовары.Номенклатура,
	|	ПоступлениеТоваровТовары.Характеристика,
	|	ЕСТЬNULL(ПоступлениеТоваровТовары.Цена, 0),
	|	ПоступлениеТоваровТовары.СтавкаНДС,
	|	ВЫРАЗИТЬ(ПоступлениеТоваровТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)),
	|	ПоступлениеТоваровТовары.Характеристика.Наименование,
	|	ПоступлениеТоваровТовары.Ссылка.ЦенаВключаетНДС,
	|	ПоступлениеТоваровТовары.Номенклатура.Код,
	|	ПоступлениеТоваровТовары.Номенклатура.Артикул,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ПоступлениеТоваровТовары.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровТовары.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПоступлениеТоваровТовары.Упаковка
	|	КОНЕЦ,
	|	ПоступлениеТоваровТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровТоварыПоДаннымПоставщика.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПоступлениеТоваровТоварыПоДаннымПоставщика.Упаковка
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровТоварыПоДаннымПоставщика.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ПоступлениеТоваровТоварыПоДаннымПоставщика.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровТоварыПоДаннымПоставщика.Количество, 0)) КАК Количество,
	|	ЕСТЬNULL(ПоступлениеТоваровТоварыПоДаннымПоставщика.Цена, 0) КАК Цена,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровТоварыПоДаннымПоставщика.Сумма, 0)) КАК Сумма,
	|	ЕСТЬNULL(ПоступлениеТоваровТоварыПоДаннымПоставщика.СтавкаНДС, 0) КАК СтавкаНДС,
	|	СУММА(ЕСТЬNULL(ПоступлениеТоваровТоварыПоДаннымПоставщика.СуммаНДС, 0)) КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК НоменклатураНаименование,
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура.Код КАК Код,
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура.Артикул КАК Артикул,
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	СУММА(ВЫБОР
	|			КОГДА ПоступлениеТоваровТоварыПоДаннымПоставщика.Ссылка.ЦенаВключаетНДС
	|				ТОГДА ЕСТЬNULL(ПоступлениеТоваровТоварыПоДаннымПоставщика.Сумма, 0)
	|			ИНАЧЕ ЕСТЬNULL(ПоступлениеТоваровТоварыПоДаннымПоставщика.Сумма, 0) + ЕСТЬNULL(ПоступлениеТоваровТоварыПоДаннымПоставщика.СуммаНДС, 0)
	|		КОНЕЦ) КАК СуммаСНДС,
	|	МИНИМУМ(ЕСТЬNULL(ТоварыПоФакту.НомерСтроки, 1000)) КАК НомерСтроки
	|ПОМЕСТИТЬ ТоварыПоДокументам
	|ИЗ
	|	Документ.ПоступлениеТоваров.ТоварыПоДаннымПоставщика КАК ПоступлениеТоваровТоварыПоДаннымПоставщика
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТоварыПоФакту.Ссылка КАК Ссылка,
	|			ТоварыПоФакту.Номенклатура КАК Номенклатура,
	|			ТоварыПоФакту.Характеристика КАК Характеристика,
	|			МИНИМУМ(ТоварыПоФакту.НомерСтроки) КАК НомерСтроки
	|		ИЗ
	|			ТоварыПоФакту КАК ТоварыПоФакту
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТоварыПоФакту.Ссылка,
	|			ТоварыПоФакту.Номенклатура,
	|			ТоварыПоФакту.Характеристика) КАК ТоварыПоФакту
	|		ПО ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура = ТоварыПоФакту.Номенклатура
	|			И ПоступлениеТоваровТоварыПоДаннымПоставщика.Характеристика = ТоварыПоФакту.Характеристика
	|			И ПоступлениеТоваровТоварыПоДаннымПоставщика.Ссылка = ТоварыПоФакту.Ссылка
	|ГДЕ
	|	(ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|			ИЛИ ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат))
	|	И ПоступлениеТоваровТоварыПоДаннымПоставщика.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура,
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Характеристика,
	|	ЕСТЬNULL(ПоступлениеТоваровТоварыПоДаннымПоставщика.Цена, 0),
	|	ЕСТЬNULL(ПоступлениеТоваровТоварыПоДаннымПоставщика.СтавкаНДС, 0),
	|	ВЫРАЗИТЬ(ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)),
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Характеристика.Наименование,
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Ссылка.ЦенаВключаетНДС,
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура.Код,
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура.Артикул,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровТоварыПоДаннымПоставщика.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ПоступлениеТоваровТоварыПоДаннымПоставщика.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ПоступлениеТоваровТоварыПоДаннымПоставщика.Упаковка.ЕдиницаИзмерения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПоступлениеТоваровТоварыПоДаннымПоставщика.Упаковка.Коэффициент, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПоступлениеТоваровТоварыПоДаннымПоставщика.Упаковка
	|	КОНЕЦ,
	|	ПоступлениеТоваровТоварыПоДаннымПоставщика.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ТоварыПоДокументам.Ссылка, ТоварыПоФакту.Ссылка) КАК Ссылка,
	|	ЕСТЬNULL(ТоварыПоДокументам.Номенклатура, ТоварыПоФакту.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ТоварыПоДокументам.Характеристика, ТоварыПоФакту.Характеристика) КАК Характеристика,
	|	ЕСТЬNULL(ТоварыПоДокументам.Упаковка, ТоварыПоФакту.Упаковка) КАК Упаковка,
	|	ЕСТЬNULL(ТоварыПоДокументам.Количество, 0) КАК КоличествоПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.Цена, 0) КАК ЦенаПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0) КАК СуммаПоДокументам,
	|	ТоварыПоДокументам.СтавкаНДС КАК СтавкаНДСПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.СуммаНДС, 0) КАК СуммаНДСПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.СуммаСНДС, 0) КАК СуммаCНДСПоДокументам,
	|	ЕСТЬNULL(ТоварыПоФакту.Количество, 0) КАК КоличествоПоФакту,
	|	ЕСТЬNULL(ТоварыПоФакту.Цена, 0) КАК ЦенаПоФакту,
	|	ЕСТЬNULL(ТоварыПоФакту.Сумма, 0) КАК СуммаПоФакту,
	|	ТоварыПоФакту.СтавкаНДС КАК СтавкаНДСПоФакту,
	|	ЕСТЬNULL(ТоварыПоФакту.СуммаНДС, 0) КАК СуммаНДСПоФакту,
	|	ЕСТЬNULL(ТоварыПоФакту.СуммаСНДС, 0) КАК СуммаCНДСПоФакту,
	|	ЕСТЬNULL(ТоварыПоДокументам.Код, ТоварыПоФакту.Код) КАК Код,
	|	ЕСТЬNULL(ТоварыПоДокументам.Артикул, ТоварыПоФакту.Артикул) КАК Артикул,
	|	ЕСТЬNULL(ТоварыПоДокументам.Номенклатура.ЕдиницаИзмерения, ТоварыПоФакту.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоФакту.Количество, 0) - ЕСТЬNULL(ТоварыПоДокументам.Количество, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоФакту.Количество, 0) - ЕСТЬNULL(ТоварыПоДокументам.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоИзлишек,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоДокументам.Количество, 0) - ЕСТЬNULL(ТоварыПоФакту.Количество, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоДокументам.Количество, 0) - ЕСТЬNULL(ТоварыПоФакту.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоНедостача,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоФакту.СуммаСНДС, 0) - ЕСТЬNULL(ТоварыПоДокументам.СуммаСНДС, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоФакту.СуммаСНДС, 0) - ЕСТЬNULL(ТоварыПоДокументам.СуммаСНДС, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаИзлишек,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоДокументам.СуммаСНДС, 0) - ЕСТЬNULL(ТоварыПоФакту.СуммаСНДС, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоДокументам.СуммаСНДС, 0) - ЕСТЬNULL(ТоварыПоФакту.СуммаСНДС, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНедостача,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоФакту.СуммаНДС, 0) - ЕСТЬNULL(ТоварыПоДокументам.СуммаНДС, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоФакту.СуммаНДС, 0) - ЕСТЬNULL(ТоварыПоДокументам.СуммаНДС, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДСИзлишек,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыПоДокументам.СуммаНДС, 0) - ЕСТЬNULL(ТоварыПоФакту.СуммаНДС, 0) > 0
	|			ТОГДА ЕСТЬNULL(ТоварыПоДокументам.СуммаНДС, 0) - ЕСТЬNULL(ТоварыПоФакту.СуммаНДС, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДСНедостача,
	|	ЕСТЬNULL(ТоварыПоДокументам.НоменклатураНаименование, ТоварыПоФакту.НоменклатураНаименование) КАК НоменклатураНаименование,
	|	ЕСТЬNULL(ТоварыПоДокументам.ХарактеристикаНаименование, ТоварыПоФакту.ХарактеристикаНаименование) КАК ХарактеристикаНаименование,
	|	ЕСТЬNULL(ТоварыПоФакту.ЦенаВключаетНДС, ЛОЖЬ) КАК ЦенаВключаетНДСПоФакту,
	|	ЕСТЬNULL(ТоварыПоДокументам.ЦенаВключаетНДС, ЛОЖЬ) КАК ЦенаВключаетНДСПоДокументам,
	|	ЕСТЬNULL(ТоварыПоДокументам.НомерСтроки, ТоварыПоФакту.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	ТоварыПоДокументам КАК ТоварыПоДокументам
	|		ПОЛНОЕ СОЕДИНЕНИЕ ТоварыПоФакту КАК ТоварыПоФакту
	|		ПО ТоварыПоДокументам.Ссылка = ТоварыПоФакту.Ссылка
	|			И ТоварыПоДокументам.Номенклатура = ТоварыПоФакту.Номенклатура
	|			И ТоварыПоДокументам.Характеристика = ТоварыПоФакту.Характеристика
	|			И ТоварыПоДокументам.Цена = ТоварыПоФакту.Цена
	|			И ТоварыПоДокументам.СтавкаНДС = ТоварыПоФакту.СтавкаНДС
	|ГДЕ
	|	(ЕСТЬNULL(ТоварыПоФакту.Сумма, 0) <> ЕСТЬNULL(ТоварыПоДокументам.Сумма, 0)
	|			ИЛИ ЕСТЬNULL(ТоварыПоФакту.СуммаНДС, 0) <> ЕСТЬNULL(ТоварыПоДокументам.СуммаНДС, 0)
	|			ИЛИ ЕСТЬNULL(ТоварыПоФакту.Количество, 0) <> ЕСТЬNULL(ТоварыПоДокументам.Количество, 0))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Проведение

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.Магазин КАК Магазин,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.МагазинУправляющейСистемы КАК МагазинУправляющейСистемы,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПоступлениеТоваров) КАК АналитикаХозяйственнойОперации,
	|	ДанныеДокумента.Ссылка КАК Основание,
	|	ДанныеДокумента.Магазин.ИспользоватьОрдернуюСхемуПриПоступлении КАК ПоступлениеПоОрдернойСхеме,
	|	ДанныеДокумента.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ДанныеДокумента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.УчитыватьНДС КАК УчитыватьНДС,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	НЕ ДанныеДокумента.Магазин.СкладУправляющейСистемы КАК ФормироватьДвижения,
	|	ЛОЖЬ КАК ИспользоватьРасчетыСПоставщиками
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	РезультатЗапроса = Запрос.Выполнить();

	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 

	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	Запрос.УстановитьПараметр("ПоступлениеПоЗаказу"          , ЗначениеЗаполнено(Реквизиты.ЗаказПоставщику));
	Запрос.УстановитьПараметр("СхемаПрямойЗакупки"           , ЗначениеЗаполнено(Реквизиты.МагазинУправляющейСистемы));
	Запрос.УстановитьПараметр("СебестоимостьВключаетНДС"     , Константы.СебестоимостьВключаетНДС.Получить());
	Запрос.УстановитьПараметр("СпособУчетаСебестоимости"     , Константы.СпособУчетаСебестоимости.Получить());
	Запрос.УстановитьПараметр("ИспользоватьУчетСебестоимости", Константы.ИспользоватьУчетСебестоимости.Получить());
	
	Запрос.Текст =
	"//0 ВтТаблицаТовары
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                       КАК Ссылка,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	&Склад КАК Склад,
	|   &АналитикаХозяйственнойОперации            КАК АналитикаХозяйственнойОперации,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     КАК КлючСвязиСерийныхНомеров,
	|   &Основание                                 КАК Основание,
	|   &Контрагент                                КАК Контрагент,
	|   &Магазин                                   КАК Магазин,
	|   ТаблицаТовары.Цена                         КАК Цена,
	|   ТаблицаТовары.Упаковка                     КАК Упаковка,
	|	ВЫБОР
	|		КОГДА &СебестоимостьВключаетНДС = &ЦенаВключаетНДС
	|           ИЛИ (НЕ &ИспользоватьУчетСебестоимости И &ЦенаВключаетНДС)
	|           ИЛИ (НЕ &УчитыватьНДС)
	|			ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ЦенаВключаетНДС
	|					ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС
	|				ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|			КОНЕЦ
	|	КОНЕЦ                                      КАК Сумма,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетСебестоимости ТОГДА
	|			0
	|		КОГДА &СебестоимостьВключаетНДС = &ЦенаВключаетНДС
	|           ИЛИ (НЕ &УчитыватьНДС)
	|			ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ЦенаВключаетНДС
	|					ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС
	|				ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|			КОНЕЦ
	|	КОНЕЦ                                      КАК Себестоимость
    |ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары         КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//1 ТаблицаТоварыНаСкладах
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаТовары                        КАК ТаблицаТовары
	|ГДЕ 
	|   НЕ &ПоступлениеПоОрдернойСхеме
	|   И &ФормироватьДвижения
	|   И НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//2 ТаблицаТоварыКПоступлению
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ВЫБОР
	|		КОГДА
	|			&ПоступлениеПоЗаказу
	|		ТОГДА
	|			&ЗаказПоставщику
	|		ИНАЧЕ
	|			ТаблицаТовары.Ссылка
	|	КОНЕЦ                                  КАК ДокументОснование
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ПоступлениеПоОрдернойСхеме
	|   И &ФормироватьДвижения
	|   И НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//3 ТаблицаСебестоимостьНоменклатуры
	|ВЫБРАТЬ
	|   &Период                               КАК Период,
	|	ТаблицаТовары.Номенклатура            КАК Номенклатура,
	|	ТаблицаТовары.Характеристика          КАК Характеристика,
	|	ТаблицаТовары.Магазин                 КАК Магазин,
	|	СУММА(ТаблицаТовары.Себестоимость) / ВЫБОР
	|		КОГДА СУММА(ТаблицаТовары.Количество) = 0
	|			ТОГДА 1
	|		ИНАЧЕ СУММА(ТаблицаТовары.Количество)
	|	КОНЕЦ                                 КАК Цена
	|ИЗ
	|	ВтТаблицаТовары                       КАК ТаблицаТовары
	|ГДЕ 
	|    &ИспользоватьУчетСебестоимости
	|    И &СпособУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыУчетаСебестоимости.АвтономныйУчет)
	|    И &ФормироватьДвижения
	|    И НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Магазин
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура, Характеристика
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//4 ТаблицаНоменклатураПоставщиков
	|ВЫБРАТЬ
	|	&Период КАК ДатаПоследнегоПоступления,
	|	ТаблицаТовары.Магазин КАК Магазин,
	|	ТаблицаТовары.Контрагент КАК Поставщик,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(СПРАВОЧНИК.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Цена
	|		ИНАЧЕ ТаблицаТовары.Цена / ТаблицаТовары.Упаковка.Коэффициент
	|	КОНЕЦ КАК Цена
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураПоставщиков КАК НоменклатураПоставщиков
	|		ПО (НоменклатураПоставщиков.Поставщик = ТаблицаТовары.Контрагент)
	|			И (НоменклатураПоставщиков.Магазин = ТаблицаТовары.Магазин)
	|			И (НоменклатураПоставщиков.Номенклатура = ТаблицаТовары.Номенклатура)
	|			И (НоменклатураПоставщиков.Характеристика = ТаблицаТовары.Характеристика)
	|ГДЕ
	|	(НоменклатураПоставщиков.Поставщик ЕСТЬ NULL ИЛИ НоменклатураПоставщиков.ДатаПоследнегоПоступления < &Период) 
	|	И &ФормироватьДвижения	
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Магазин,
	|	ТаблицаТовары.Контрагент,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(СПРАВОЧНИК.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Цена
	|		ИНАЧЕ ТаблицаТовары.Цена / ТаблицаТовары.Упаковка.Коэффициент
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//5 ТаблицаТоварыОрганизаций
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Организация                           КАК Организация,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество
	|ИЗ
	|	ВтТаблицаТовары                        КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И &ФормироватьДвижения
	|   И НЕ ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	//6 ТаблицаЗаказыТоваров
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&ЗаказПоставщику                       КАК Заказ,
	|	ТаблицаТовары.Магазин                  КАК Магазин,
	|	ТаблицаТовары.Контрагент               КАК Поставщик,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|   &ФормироватьДвижения
	|   И &ПоступлениеПоЗаказу
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////
	//7 ТаблицаЗакупкиТоваров
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Магазин                  КАК Магазин,
	|	ТаблицаТовары.Контрагент               КАК Поставщик,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.Сумма                    КАК Сумма,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации
	|ИЗ
	|ВтТаблицаТовары КАК ТаблицаТовары
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 8 ТаблицаДвиженияСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Магазин КАК Магазин,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаОтПоставщика) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ПоступлениеТоваров.Серии КАК ТаблицаСерии
	|
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	// 9 ТаблицаРасчетыСПоставщиками
	|	ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Магазин                               КАК Магазин,
	|	&Контрагент                            КАК Поставщик,
	|	ВЫБОР КОГДА &ПоступлениеПоЗаказу ТОГДА
	|			&ЗаказПоставщику 
	|		  ИНАЧЕ &Ссылка КОНЕЦ              КАК ДокументРасчета,
	|	&СуммаДокумента                        КАК Сумма,
	|	&СуммаДокумента                        КАК КОплате,
	|	0                                      КАК КПоступлению,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка) КАК ФормаОплаты,
	|	Ложь                                   КАК Взаимозачет
	|ГДЕ
	|	&ФормироватьДвижения
	|	И &ИспользоватьРасчетыСПоставщиками
		
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Магазин                               КАК Магазин,
	|	&Контрагент                            КАК Поставщик,
	|	&Ссылка                                КАК ДокументРасчета,
	|	ЭтапыОплат.Сумма                       КАК Сумма,
	|	ЭтапыОплат.Сумма                       КАК КОплате,
	|	0                                      КАК КПоступлению,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Взаимозачет) КАК ФормаОплаты,
	|	Ложь                                   КАК Взаимозачет
	|ИЗ
	|	Документ.ПоступлениеТоваров.ЭтапыОплат КАК ЭтапыОплат
	|ГДЕ
	|	ЭтапыОплат.Ссылка = &Ссылка
	|	И ЭтапыОплат.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Взаимозачет)
	|	И &ФормироватьДвижения
	|	И &ИспользоватьРасчетыСПоставщиками
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Магазин                               КАК Магазин,
	|	&Контрагент                            КАК Поставщик,
	|	ЭтапыОплат.ДокументВзаимозачета        КАК ДокументРасчета,
	|	ЭтапыОплат.Сумма                       КАК Сумма,
	|	ЭтапыОплат.Сумма                       КАК КОплате,
	|	0                                      КАК КПоступлению,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка) КАК ФормаОплаты,
	|	ИСТИНА                                 КАК Взаимозачет
	|ИЗ
	|	Документ.ПоступлениеТоваров.ЭтапыОплат КАК ЭтапыОплат
	|ГДЕ
	|	ЭтапыОплат.Ссылка = &Ссылка
	|	И ЭтапыОплат.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Взаимозачет)
	|	И &ФормироватьДвижения
	|	И &ИспользоватьРасчетыСПоставщиками" + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.Текст = Запрос.Текст + ТекстЗапросаТаблицаСерийныхНомеров();
	Результат    = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"          , Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаМагазинах"		  , Результат[1].Выгрузить());	//	LNK 31.08.2021 13:07:46
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыКПоступлению"       , Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСебестоимостьНоменклатуры", Результат[3].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаНоменклатураПоставщиков"  , Результат[4].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"        , Результат[5].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЗаказыТоваров"            , Результат[6].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаЗакупкиТоваров"           , Результат[7].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров"     , Результат[8].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаРасчетыСПоставщиками"     , Результат[9].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаСерийныхНомеров"          , Результат[16].Выгрузить());

	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.Колонки.Удалить("Склад");	//	LNK 31.08.2021 13:07:46
	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.Колонки.Вставить(0, "Магазин", Новый ОписаниеТипов("СправочникСсылка.Магазины"));
	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.ЗаполнитьЗначения(Запрос.Параметры.Магазин, "Магазин");
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", 
			"Приходная накладная" + ?(ПараметрыПечати["ВыводитьЦены"], " (с розничными ценами)", ""), 
			ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыПечати["ВыводитьЦены"], ПараметрыПечати.Свойство("ТолькоРозничныеЦены"), ПараметрыВывода),,,Истина);

	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,"М4",
			"М-4 (Приходный ордер)",
			ПечатьМ4(МассивОбъектов, ОбъектыПечати));

	КонецЕсли;
	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктРасхождений") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктРасхождений",
			"Акт расхождений",
			ПечатьАктРасхождений(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,Истина);

	КонецЕсли;

КонецПроцедуры

Функция ПечатьНакладная(МассивОбъектов, ОбъектыПечати, ВыводитьЦены = Ложь, ТолькоПоРозничнымЦенам = Ложь, ПараметрыВывода)
		
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = НЕ ПустаяСтрока(КолонкаКодов);
	ВыводитьУпаковки   = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Поступление товаров';uk='Надходження товарів'", КодЯзыкаПечать);

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваров_ПоступлениеТоваров";
	
	Если ВыводитьЦены Тогда
		ИндексРезультатаТовары=2;
	Иначе
		ИндексРезультатаТовары=1;
	КонецЕсли;
	
	ИспользоватьАссортимент = АссортиментСервер.ПолучитьФункциональнуюОпциюИспользованияАссортимента();
	
	Если ИспользоватьАссортимент Тогда
		Если ВыводитьЦены Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Документ.Ссылка                               КАК Ссылка,
			|	Документ.Номер                                КАК Номер,
			|	Документ.Дата                                 КАК Дата,
			|	Документ.Организация                          КАК Покупатель,
			|	Документ.Контрагент                           КАК Поставщик,
			|	Документ.Ответственный.ФизЛицо                КАК Получил,
			|	Документ.Организация.Префикс                  КАК Префикс,
			|	Документ.УчитыватьНДС                         КАК УчитыватьНДС,
			|	Документ.ЦенаВключаетНДС                      КАК ЦенаВключаетНДС,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент)            КАК ПоставщикПредставление,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Организация)           КАК ПокупательПредставление,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Ответственный.ФизЛицо) КАК ПолучилПредставление
			|ИЗ
			|	Документ.ПоступлениеТоваров КАК Документ
			|ГДЕ
			|	Документ.Ссылка В(&МассивОбъектов)
			|	И Документ.Проведен
			|УПОРЯДОЧИТЬ ПО
			|	Дата, Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
			|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
			|	ТаблицаТовары.Номенклатура.ЦеноваяГруппа КАК ЦеноваяГруппа,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ТаблицаТовары.Упаковка.ЕдиницаИзмерения
			|		ИНАЧЕ ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
			|	КОНЕЦ КАК ЕдиницаИзмеренияУпаковки,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Цена КАК Цена,
			|	ТаблицаТовары.Сумма КАК Сумма,
			|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Ссылка.Дата КАК Дата,
			|	ТаблицаТовары.Ссылка.Магазин КАК Магазин,
			|	ТаблицаТовары.Ссылка.Магазин.ФорматМагазина КАК ФорматМагазина
			|ПОМЕСТИТЬ ТаблицаТовары
			|ИЗ
			|	Документ.ПоступлениеТоваров.Товары КАК ТаблицаТовары
			|ГДЕ
			|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
			|	И ТаблицаТовары.Ссылка.Проведен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Магазины.Ссылка КАК Магазин
			|ПОМЕСТИТЬ втМагазиныСПрименениемЦен
			|ИЗ
			|	Справочник.Магазины КАК Магазины
			|ГДЕ
			|	&ИспользоватьПрименениеЦен
			|	И Магазины.ИспользоватьПрименениеЦен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Магазины.Ссылка КАК Магазин,
			|	Магазины.ФорматМагазина КАК ФорматМагазина
			|ПОМЕСТИТЬ втМагазиныСАссортиментом
			|ИЗ
			|	Справочник.Магазины КАК Магазины
			|ГДЕ
			|	Магазины.КонтролироватьАссортимент
			|	И НЕ(&ИспользоватьПрименениеЦен
			|				И Магазины.ИспользоватьПрименениеЦен)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Магазины.Ссылка КАК Магазин,
			|	Магазины.ПравилоЦенообразования КАК ПравилоЦенообразования,
			|	Магазины.ПравилоЦенообразования.ВидЦен КАК ВидЦены
			|ПОМЕСТИТЬ втМагазиныОбычные
			|ИЗ
			|	Справочник.Магазины КАК Магазины
			|ГДЕ
			|	НЕ(Магазины.КонтролироватьАссортимент)
			|	И НЕ(&ИспользоватьПрименениеЦен
			|				И Магазины.ИспользоватьПрименениеЦен)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МагазиныОбычные.Магазин КАК Магазин,
			|	ПравилаЦенообразованияЦеновыеГруппы.ЦеноваяГруппа КАК ЦеноваяГруппа,
			|	ПравилаЦенообразованияЦеновыеГруппы.ВидЦен КАК ВидЦены
			|ПОМЕСТИТЬ втПравилаОбычныхМагазинов
			|ИЗ
			|	Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ПравилаЦенообразованияЦеновыеГруппы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныОбычные КАК МагазиныОбычные
			|		ПО (МагазиныОбычные.ПравилоЦенообразования = ПравилаЦенообразованияЦеновыеГруппы.Ссылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Магазин КАК Магазин,
			|	МАКСИМУМ(ДействующиеЦены.Период) КАК ДатаЦены,
			|	ТаблицаТовары.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ втТоварыСПериодамиДействующихЦен
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныСПрименениемЦен КАК МагазиныСПрименениемЦен
			|		ПО (МагазиныСПрименениемЦен.Магазин = ТаблицаТовары.Магазин)
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦены
			|		ПО (ДействующиеЦены.ОбъектЦенообразования = ТаблицаТовары.Магазин)
			|			И (ДействующиеЦены.Период <= ТаблицаТовары.Дата)
			|			И (ДействующиеЦены.Номенклатура = ТаблицаТовары.Номенклатура)
			|			И (ДействующиеЦены.Характеристика = ТаблицаТовары.Характеристика)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.Магазин,
			|	ТаблицаТовары.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыСПериодамиДействующихЦен.Номенклатура КАК Номенклатура,
			|	ТоварыСПериодамиДействующихЦен.Характеристика КАК Характеристика,
			|	ТоварыСПериодамиДействующихЦен.Ссылка КАК Ссылка,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ДействующиеЦены.Упаковка.Коэффициент, 0) = 0
			|			ТОГДА ДействующиеЦены.Цена
			|		ИНАЧЕ ВЫРАЗИТЬ(ДействующиеЦены.Цена / ДействующиеЦены.Упаковка.Коэффициент КАК ЧИСЛО(15, 2))
			|	КОНЕЦ КАК Цена
			|ПОМЕСТИТЬ втЦеныДействующиеПоДокументам
			|ИЗ
			|	втТоварыСПериодамиДействующихЦен КАК ТоварыСПериодамиДействующихЦен
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦены
			|		ПО (ДействующиеЦены.ОбъектЦенообразования = ТоварыСПериодамиДействующихЦен.Магазин)
			|			И (ДействующиеЦены.Период = ТоварыСПериодамиДействующихЦен.ДатаЦены)
			|			И (ДействующиеЦены.Номенклатура = ТоварыСПериодамиДействующихЦен.Номенклатура)
			|			И (ДействующиеЦены.Характеристика = ТоварыСПериодамиДействующихЦен.Характеристика)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.ФорматМагазина КАК ФорматМагазина,
			|	ТаблицаТовары.Магазин КАК Магазин,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Дата КАК Дата,
			|	МАКСИМУМ(Ассортимент.Период) КАК ДатаАссортимента
			|ПОМЕСТИТЬ втТоварыСПериодамиАссортимента
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныСАссортиментом КАК МагазиныСАссортиментом
			|		ПО (МагазиныСАссортиментом.Магазин = ТаблицаТовары.Магазин)
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ассортимент КАК Ассортимент
			|		ПО (Ассортимент.ОбъектПланирования = ТаблицаТовары.ФорматМагазина)
			|			И (Ассортимент.Период <= КОНЕЦПЕРИОДА(ТаблицаТовары.Дата, ДЕНЬ))
			|			И (Ассортимент.Номенклатура = ТаблицаТовары.Номенклатура)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.ФорматМагазина,
			|	ТаблицаТовары.Магазин,
			|	ТаблицаТовары.Ссылка,
			|	ТаблицаТовары.Дата
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыСПериодамиАссортимента.Номенклатура КАК Номенклатура,
			|	ТоварыСПериодамиАссортимента.Характеристика КАК Характеристика,
			|	ТоварыСПериодамиАссортимента.Ссылка КАК Ссылка,
			|	ТоварыСПериодамиАссортимента.ФорматМагазина КАК ФорматМагазина,
			|	ТоварыСПериодамиАссортимента.Магазин КАК Магазин,
			|	ТоварыСПериодамиАссортимента.Дата КАК Дата,
			|	Ассортимент.ВидЦен КАК ВидЦен
			|ПОМЕСТИТЬ втВидыЦенАссортиментаПоДокументам
			|ИЗ
			|	втТоварыСПериодамиАссортимента КАК ТоварыСПериодамиАссортимента
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Ассортимент КАК Ассортимент
			|		ПО (Ассортимент.ОбъектПланирования = ТоварыСПериодамиАссортимента.ФорматМагазина)
			|			И (Ассортимент.Период = ТоварыСПериодамиАссортимента.ДатаАссортимента)
			|			И (Ассортимент.Номенклатура = ТоварыСПериодамиАссортимента.Номенклатура)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВидыЦенАссортиментаПоДокументам.Номенклатура КАК Номенклатура,
			|	ВидыЦенАссортиментаПоДокументам.Характеристика КАК Характеристика,
			|	ВидыЦенАссортиментаПоДокументам.Ссылка КАК Ссылка,
			|	ВидыЦенАссортиментаПоДокументам.Магазин КАК Магазин,
			|	ВидыЦенАссортиментаПоДокументам.ВидЦен КАК ВидЦен,
			|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК ДатаЦены
			|ПОМЕСТИТЬ втПериодыЦенПоАссортименту
			|ИЗ
			|	втВидыЦенАссортиментаПоДокументам КАК ВидыЦенАссортиментаПоДокументам
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО (ЦеныНоменклатуры.Период <= ВидыЦенАссортиментаПоДокументам.Дата)
			|			И (ЦеныНоменклатуры.ВидЦены = ВидыЦенАссортиментаПоДокументам.ВидЦен)
			|			И (ЦеныНоменклатуры.Номенклатура = ВидыЦенАссортиментаПоДокументам.Номенклатура)
			|			И (ЦеныНоменклатуры.Характеристика = ВидыЦенАссортиментаПоДокументам.Характеристика)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВидыЦенАссортиментаПоДокументам.Номенклатура,
			|	ВидыЦенАссортиментаПоДокументам.Характеристика,
			|	ВидыЦенАссортиментаПоДокументам.Ссылка,
			|	ВидыЦенАссортиментаПоДокументам.Магазин,
			|	ВидыЦенАссортиментаПоДокументам.ВидЦен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПериодыЦенПоАссортименту.Номенклатура КАК Номенклатура,
			|	ПериодыЦенПоАссортименту.Характеристика КАК Характеристика,
			|	ПериодыЦенПоАссортименту.Ссылка КАК Ссылка,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЦеныНоменклатуры.Упаковка.Коэффициент, 0) = 0
			|			ТОГДА ЦеныНоменклатуры.Цена
			|		ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатуры.Цена / ЦеныНоменклатуры.Упаковка.Коэффициент КАК ЧИСЛО(15, 2))
			|	КОНЕЦ КАК Цена
			|ПОМЕСТИТЬ втЦеныАссортиментныеПоДокументам
			|ИЗ
			|	втПериодыЦенПоАссортименту КАК ПериодыЦенПоАссортименту
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО (ЦеныНоменклатуры.Период = ПериодыЦенПоАссортименту.ДатаЦены)
			|			И (ЦеныНоменклатуры.ВидЦены = ПериодыЦенПоАссортименту.ВидЦен)
			|			И (ЦеныНоменклатуры.Номенклатура = ПериодыЦенПоАссортименту.Номенклатура)
			|			И (ЦеныНоменклатуры.Характеристика = ПериодыЦенПоАссортименту.Характеристика)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Магазин КАК Магазин,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Дата КАК Дата,
			|	ЕСТЬNULL(ПравилаОбычныхМагазинов.ВидЦены, МагазиныОбычные.ВидЦены) КАК ВидЦены
			|ПОМЕСТИТЬ втВидыЦенПоПравилам
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныОбычные КАК МагазиныОбычные
			|		ПО (МагазиныОбычные.Магазин = ТаблицаТовары.Магазин)
			|		ЛЕВОЕ СОЕДИНЕНИЕ втПравилаОбычныхМагазинов КАК ПравилаОбычныхМагазинов
			|		ПО (ПравилаОбычныхМагазинов.Магазин = ТаблицаТовары.Магазин)
			|			И (ПравилаОбычныхМагазинов.ЦеноваяГруппа = ТаблицаТовары.ЦеноваяГруппа)
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	ТаблицаТовары.Магазин,
			|	ТаблицаТовары.Ссылка,
			|	ТаблицаТовары.Дата,
			|	ЕСТЬNULL(ПравилаОбычныхМагазинов.ВидЦены, МагазиныОбычные.ВидЦены)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВидыЦенПоПравилам.Номенклатура КАК Номенклатура,
			|	ВидыЦенПоПравилам.Характеристика КАК Характеристика,
			|	ВидыЦенПоПравилам.Ссылка КАК Ссылка,
			|	ВидыЦенПоПравилам.Магазин КАК Магазин,
			|	ВидыЦенПоПравилам.ВидЦены КАК ВидЦены,
			|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК ДатаЦены
			|ПОМЕСТИТЬ втПериодыЦенПоПравилам
			|ИЗ
			|	втВидыЦенПоПравилам КАК ВидыЦенПоПравилам
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО (ЦеныНоменклатуры.Период <= ВидыЦенПоПравилам.Дата)
			|			И (ЦеныНоменклатуры.ВидЦены = ВидыЦенПоПравилам.ВидЦены)
			|			И (ЦеныНоменклатуры.Номенклатура = ВидыЦенПоПравилам.Номенклатура)
			|			И (ЦеныНоменклатуры.Характеристика = ВидыЦенПоПравилам.Характеристика)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВидыЦенПоПравилам.Номенклатура,
			|	ВидыЦенПоПравилам.Характеристика,
			|	ВидыЦенПоПравилам.Ссылка,
			|	ВидыЦенПоПравилам.Магазин,
			|	ВидыЦенПоПравилам.ВидЦены
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПериодыЦенПоПравилам.Номенклатура КАК Номенклатура,
			|	ПериодыЦенПоПравилам.Характеристика КАК Характеристика,
			|	ПериодыЦенПоПравилам.Ссылка КАК Ссылка,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ЦеныНоменклатуры.Упаковка.Коэффициент, 0) = 0
			|			ТОГДА ЦеныНоменклатуры.Цена
			|		ИНАЧЕ ВЫРАЗИТЬ(ЦеныНоменклатуры.Цена / ЦеныНоменклатуры.Упаковка.Коэффициент КАК ЧИСЛО(15, 2))
			|	КОНЕЦ КАК Цена
			|ПОМЕСТИТЬ втЦеныПравильныеПоДокументам
			|ИЗ
			|	втПериодыЦенПоПравилам КАК ПериодыЦенПоПравилам
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			|		ПО (ЦеныНоменклатуры.Период = ПериодыЦенПоПравилам.ДатаЦены)
			|			И (ЦеныНоменклатуры.ВидЦены = ПериодыЦенПоПравилам.ВидЦены)
			|			И (ЦеныНоменклатуры.Номенклатура = ПериодыЦенПоПравилам.Номенклатура)
			|			И (ЦеныНоменклатуры.Характеристика = ПериодыЦенПоПравилам.Характеристика)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.НоменклатураПредставление КАК НоменклатураПредставление,
			|	" + ?(ВыводитьКоды, "ТаблицаТовары.КолонкаКодов КАК КолонкаКодов,", "") + "
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.БазоваяЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.ЕдиницаИзмеренияУпаковки) КАК ПредставлениеЕдиницыИзмеренияУпаковки,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Цена КАК Цена,
			|	ТаблицаТовары.Сумма КАК Сумма,
			|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
			|	ВЫБОР
			|		КОГДА НЕ ЦеныДействующиеПоДокументам.Цена ЕСТЬ NULL 
			|			ТОГДА ЦеныДействующиеПоДокументам.Цена
			|		КОГДА НЕ ЦеныАссортиментныеПоДокументам.Цена ЕСТЬ NULL 
			|			ТОГДА ЦеныАссортиментныеПоДокументам.Цена
			|		ИНАЧЕ ЕСТЬNULL(ЦеныПравильныеПоДокументам.Цена, 0)
			|	КОНЕЦ КАК ЦенаРозничная,
			|	ВЫБОР
			|		КОГДА НЕ ЦеныДействующиеПоДокументам.Цена ЕСТЬ NULL 
			|			ТОГДА ЦеныДействующиеПоДокументам.Цена * ТаблицаТовары.Количество
			|		КОГДА НЕ ЦеныАссортиментныеПоДокументам.Цена ЕСТЬ NULL 
			|			ТОГДА ЦеныАссортиментныеПоДокументам.Цена * ТаблицаТовары.Количество
			|		ИНАЧЕ ЕСТЬNULL(ЦеныПравильныеПоДокументам.Цена, 0) * ТаблицаТовары.Количество
			|	КОНЕЦ КАК СуммаРозничная,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Дата КАК Дата
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныДействующиеПоДокументам КАК ЦеныДействующиеПоДокументам
			|		ПО (ЦеныДействующиеПоДокументам.Номенклатура = ТаблицаТовары.Номенклатура)
			|			И (ЦеныДействующиеПоДокументам.Характеристика = ТаблицаТовары.Характеристика)
			|			И (ЦеныДействующиеПоДокументам.Ссылка = ТаблицаТовары.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныАссортиментныеПоДокументам КАК ЦеныАссортиментныеПоДокументам
			|		ПО (ЦеныАссортиментныеПоДокументам.Номенклатура = ТаблицаТовары.Номенклатура)
			|			И (ЦеныАссортиментныеПоДокументам.Характеристика = ТаблицаТовары.Характеристика)
			|			И (ЦеныАссортиментныеПоДокументам.Ссылка = ТаблицаТовары.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныПравильныеПоДокументам КАК ЦеныПравильныеПоДокументам
			|		ПО (ЦеныПравильныеПоДокументам.Номенклатура = ТаблицаТовары.Номенклатура)
			|			И (ЦеныПравильныеПоДокументам.Характеристика = ТаблицаТовары.Характеристика)
			|			И (ЦеныПравильныеПоДокументам.Ссылка = ТаблицаТовары.Ссылка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата,
			|	Ссылка,
			|	НомерСтроки
			|ИТОГИ
			|	МАКСИМУМ(Дата)
			|ПО
			|	Ссылка");
			ИндексРезультатаТовары = 15;
			Запрос.УстановитьПараметр("ИспользоватьПрименениеЦен", ПолучитьФункциональнуюОпцию("ИспользоватьПрименениеЦен"));
		Иначе
			Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Документ.Ссылка                               КАК Ссылка,
			|	Документ.Номер                                КАК Номер,
			|	Документ.Дата                                 КАК Дата,
			|	Документ.Организация                          КАК Покупатель,
			|	Документ.Контрагент                           КАК Поставщик,
			|	Документ.Ответственный.ФизЛицо                КАК Получил,
			|	Документ.Организация.Префикс                  КАК Префикс,
			|	Документ.УчитыватьНДС                         КАК УчитыватьНДС,
			|	Документ.ЦенаВключаетНДС                      КАК ЦенаВключаетНДС,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент)            КАК ПоставщикПредставление,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Организация)           КАК ПокупательПредставление,
			|	ПРЕДСТАВЛЕНИЕ(Документ.Ответственный.ФизЛицо) КАК ПолучилПредставление
			|ИЗ
			|	Документ.ПоступлениеТоваров КАК Документ
			|ГДЕ
			|	Документ.Ссылка В(&МассивОбъектов)
			|	И Документ.Проведен
			|УПОРЯДОЧИТЬ ПО
			|	Дата, Ссылка
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
			|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
			|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
			|	КОНЕЦ КАК ПредставлениеЕдиницыИзмеренияУпаковки,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Цена КАК Цена,
			|	ТаблицаТовары.Сумма КАК Сумма,
			|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Ссылка.Дата КАК Дата
			|ИЗ
			|	Документ.ПоступлениеТоваров.Товары КАК ТаблицаТовары
			|
			|ГДЕ
			|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
			|	И ТаблицаТовары.Ссылка.Проведен
			|
			|УПОРЯДОЧИТЬ ПО
			|	Дата,
			|	Ссылка,
			|	НомерСтроки
			|ИТОГИ МАКСИМУМ(Дата) ПО
			|	Ссылка");
		КонецЕсли;
	Иначе //НЕ ИспользоватьАссортимент
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                               КАК Ссылка,
		|	Документ.Номер                                КАК Номер,
		|	Документ.Дата                                 КАК Дата,
		|	Документ.Организация                          КАК Покупатель,
		|	Документ.Контрагент                           КАК Поставщик,
		|	Документ.Ответственный.ФизЛицо                КАК Получил,
		|	Документ.Организация.Префикс                  КАК Префикс,
		|	Документ.УчитыватьНДС                         КАК УчитыватьНДС,
		|	Документ.ЦенаВключаетНДС                      КАК ЦенаВключаетНДС,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Контрагент)            КАК ПоставщикПредставление,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Организация)           КАК ПокупательПредставление,
		|	ПРЕДСТАВЛЕНИЕ(Документ.Ответственный.ФизЛицо) КАК ПолучилПредставление
		|ИЗ
		|	Документ.ПоступлениеТоваров КАК Документ
		|ГДЕ
		|	Документ.Ссылка В(&МассивОбъектов)
		|	И Документ.Проведен
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|" + ?(ВыводитьЦены, "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.Ссылка КАК СсылкаДокумента,
		|	ТаблицаТовары.Ссылка.Дата КАК Период,
		|	ТаблицаТовары.Ссылка.Магазин КАК Магазин,
		|	ТаблицаТовары.Характеристика КАК Характеристика,
		|   Магазины.ИспользоватьПрименениеЦен КАК ИспользоватьПрименениеЦен,
		|   Магазины.ПравилоЦенообразования КАК ПравилоЦенообразования,
		|   СправочникНоменклатура.ЦеноваяГруппа КАК ЦеноваяГруппа
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары КАК ТаблицаТовары
	    |ЛЕВОЕ СОЕДИНЕНИЕ 
		|   Справочник.Магазины КАК Магазины
		|   ПО ТаблицаТовары.Ссылка.Магазин = Магазины.Ссылка
		|ЛЕВОЕ СОЕДИНЕНИЕ 
		|   Справочник.Номенклатура КАК СправочникНоменклатура
		|   ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
		|	И ТаблицаТовары.Ссылка.Проведен
		|;
		|
		|","") + "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
		|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика) КАК ХарактеристикаПредставление,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка.ЕдиницаИзмерения)
		|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
		|	КОНЕЦ КАК ПредставлениеЕдиницыИзмеренияУпаковки,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТаблицаТовары.Цена КАК Цена,
		|	ТаблицаТовары.Сумма КАК Сумма,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|	ТаблицаТовары.Ссылка КАК Ссылка " + ?(ВыводитьЦены, ",
		|   ЕСТЬNULL(РозничныеЦены.Цена, 0) КАК ЦенаРозничная,
		|	ТаблицаТовары.Количество * ЕСТЬNULL(РозничныеЦены.Цена, 0) КАК СуммаРозничная
		|","") + "
		|ИЗ
		|	Документ.ПоступлениеТоваров.Товары КАК ТаблицаТовары
		|" + ?(ВыводитьЦены, "
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|	ПодЗапрос.Период,
		|	ПодЗапрос.Номенклатура,
		|	ПодЗапрос.Характеристика,
		|	ПодЗапрос.Магазин,
		|	ПодЗапрос.Цена
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыПериодыЦен.Период КАК Период,
		|		ТоварыПериодыЦен.Номенклатура КАК Номенклатура,
		|		ТоварыПериодыЦен.Характеристика КАК Характеристика,
		|		ТоварыПериодыЦен.Магазин КАК Магазин,
		|		ТоварыПериодыЦен.ИспользоватьПрименениеЦен КАК ИспользоватьПрименениеЦен,
		|		ТоварыПериодыЦен.ПериодЦены КАК ПериодЦены,
		|       ВЫБОР
		|			КОГДА ТоварыПериодыЦен.ИспользоватьПрименениеЦен
		|				ТОГДА ЕСТЬNULL(ДействующиеЦены.Цена, 0) / ЕСТЬNULL(ДействующиеЦены.Упаковка.Коэффициент, 1)
		|			ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / ЕСТЬNULL(ЦеныНоменклатуры.Упаковка.Коэффициент, 1)

		|		КОНЕЦ КАК Цена
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Товары.Период КАК Период,
		|			Товары.Номенклатура КАК Номенклатура,
		|			Товары.Характеристика КАК Характеристика,
		|			Товары.Магазин КАК Магазин,
		|			Товары.ИспользоватьПрименениеЦен КАК ИспользоватьПрименениеЦен,
		|			МАКСИМУМ(ВЫБОР
		|					КОГДА Товары.ИспользоватьПрименениеЦен = ИСТИНА
		|						ТОГДА ДействующиеЦены.Период
		|					ИНАЧЕ ЦеныНоменклатуры.Период
		|				КОНЕЦ) КАК ПериодЦены,
		|			Товары.ПравилоЦенообразования КАК ПравилоЦенообразования,
		|			Товары.ЦеноваяГруппа КАК ЦеноваяГруппа
		|		ИЗ
		|			ВТТовары КАК Товары
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования КАК ПравилоЦенообразованияШапка
		|				ПО (ПравилоЦенообразованияШапка.Ссылка = Товары.ПравилоЦенообразования)
		|					И ((НЕ Товары.ИспользоватьПрименениеЦен))
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ПравилоЦенообразованияЦеновыеГруппы
		|				ПО Товары.ПравилоЦенообразования = ПравилоЦенообразованияЦеновыеГруппы.Ссылка
		|					И Товары.ЦеноваяГруппа = ПравилоЦенообразованияЦеновыеГруппы.ЦеноваяГруппа
		|					И ((НЕ Товары.ИспользоватьПрименениеЦен))
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦены
		|				ПО Товары.Номенклатура = ДействующиеЦены.Номенклатура
		|					И Товары.Характеристика = ДействующиеЦены.Характеристика
		|					И Товары.Магазин = ДействующиеЦены.ОбъектЦенообразования
		|					И (Товары.ИспользоватьПрименениеЦен)
		|					И (ДействующиеЦены.Период <= Товары.Период)
		|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|				ПО Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|					И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
		|					И (ЦеныНоменклатуры.Период <= Товары.Период)
		|					И ((НЕ Товары.ИспользоватьПрименениеЦен))
		|					И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|						КОГДА ПравилоЦенообразованияЦеновыеГруппы.ВидЦен ЕСТЬ НЕ NULL 
		|								И ПравилоЦенообразованияЦеновыеГруппы.ВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА ПравилоЦенообразованияЦеновыеГруппы.ВидЦен
		|						КОГДА (ПравилоЦенообразованияЦеновыеГруппы.ВидЦен ЕСТЬ NULL 
		|								ИЛИ ПравилоЦенообразованияЦеновыеГруппы.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|								И ПравилоЦенообразованияШапка.ВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|							ТОГДА ПравилоЦенообразованияШапка.ВидЦен
		|					КОНЕЦ)
		|		
		|		СГРУППИРОВАТЬ ПО
		|			Товары.Период,
		|			Товары.Номенклатура,
		|			Товары.Характеристика,
		|			Товары.Магазин,
		|			Товары.ИспользоватьПрименениеЦен,
		|			Товары.ПравилоЦенообразования,
		|			Товары.ЦеноваяГруппа) КАК ТоварыПериодыЦен
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования КАК ПравилоЦенообразованияШапка
		|			ПО (ПравилоЦенообразованияШапка.Ссылка = ТоварыПериодыЦен.ПравилоЦенообразования)
		|				И ((НЕ ТоварыПериодыЦен.ИспользоватьПрименениеЦен))
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ПравилоЦенообразованияЦеновыеГруппы
		|			ПО ТоварыПериодыЦен.ПравилоЦенообразования = ПравилоЦенообразованияЦеновыеГруппы.Ссылка
		|				И ТоварыПериодыЦен.ЦеноваяГруппа = ПравилоЦенообразованияЦеновыеГруппы.ЦеноваяГруппа
		|				И ((НЕ ТоварыПериодыЦен.ИспользоватьПрименениеЦен))
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ДействующиеЦены
		|			ПО ТоварыПериодыЦен.Номенклатура = ДействующиеЦены.Номенклатура
		|				И ТоварыПериодыЦен.Характеристика = ДействующиеЦены.Характеристика
		|				И ТоварыПериодыЦен.Магазин = ДействующиеЦены.ОбъектЦенообразования
		|				И (ТоварыПериодыЦен.ИспользоватьПрименениеЦен)
		|				И (ДействующиеЦены.Период = ТоварыПериодыЦен.ПериодЦены)
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
		|			ПО ТоварыПериодыЦен.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|				И ТоварыПериодыЦен.Характеристика = ЦеныНоменклатуры.Характеристика
		|				И (ЦеныНоменклатуры.Период = ТоварыПериодыЦен.ПериодЦены)
		|				И ((НЕ ТоварыПериодыЦен.ИспользоватьПрименениеЦен))
		|				И (ЦеныНоменклатуры.ВидЦены = ВЫБОР
		|					КОГДА ПравилоЦенообразованияЦеновыеГруппы.ВидЦен ЕСТЬ НЕ NULL 
		|							И ПравилоЦенообразованияЦеновыеГруппы.ВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|						ТОГДА ПравилоЦенообразованияЦеновыеГруппы.ВидЦен
		|					КОГДА (ПравилоЦенообразованияЦеновыеГруппы.ВидЦен ЕСТЬ NULL 
		|							ИЛИ ПравилоЦенообразованияЦеновыеГруппы.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))
		|							И ПравилоЦенообразованияШапка.ВидЦен <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
		|						ТОГДА ПравилоЦенообразованияШапка.ВидЦен
		|				КОНЕЦ)) КАК ПодЗапрос) КАК РозничныеЦены
		|		ПО (РозничныеЦены.Магазин = ТаблицаТовары.Ссылка.Магазин)
		|			И (РозничныеЦены.Характеристика = ТаблицаТовары.Характеристика)
		|			И (РозничныеЦены.Номенклатура = ТаблицаТовары.Номенклатура)
		|            И (РозничныеЦены.Период = ТаблицаТовары.Ссылка.Дата)
		|","") + "
		|ГДЕ
		|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
		|	И ТаблицаТовары.Ссылка.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|ИТОГИ ПО
		|	Ссылка");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПоступлениеТоваров.ПФ_MXL_ПоступлениеТоваров", КодЯзыкаПечать);

	ОкончаниеИмениОбласти = ?(ВыводитьЦены И НЕ ТолькоПоРозничнымЦенам,"РозничныеЦены","");
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок|Основная" + ОкончаниеИмениОбласти);
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка|Основная" + ОкончаниеИмениОбласти);
	
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
	
	ОбластьШапкаТаблицыКолонкаУпаковок 		= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
	ОбластьСтрокаТаблицыКолонкаУпаковок 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
	ОбластьПодвалТаблицыКолонкаУпаковок		= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");
	
	ОбластьШапкаТаблицыКолонкаКоличество 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКоличество");
	ОбластьСтрокаТаблицыКолонкаКоличество 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКоличество");
	ОбластьПодвалТаблицыКолонкаКоличество	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКоличество");
	
	ОбластьШапкаТаблицыЦеныПоступления  = Макет.ПолучитьОбласть("ШапкаТаблицы|ЦеныПоступления");
	ОбластьСтрокаТаблицыЦеныПоступления = Макет.ПолучитьОбласть("СтрокаТаблицы|ЦеныПоступления");
	ОбластьПодвалТаблицыЦеныПоступления = Макет.ПолучитьОбласть("ПодвалТаблицы|ЦеныПоступления");
	
	ОбластьШапкаТаблицыРозничныеЦены  = Макет.ПолучитьОбласть("ШапкаТаблицы|РозничныеЦены");
	ОбластьСтрокаТаблицыРозничныеЦены = Макет.ПолучитьОбласть("СтрокаТаблицы|РозничныеЦены");
	ОбластьПодвалТаблицыРозничныеЦены = Макет.ПолучитьОбласть("ПодвалТаблицы|РозничныеЦены");
	
	
	
	ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
	
	Если НЕ ВыводитьКоды Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		
	КонецЕсли;
	
	Если НЕ ВыводитьУпаковки Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
		+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки;
		
	КонецЕсли;
	
	ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
	ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	
	ОбластьПодписей       = Макет.ПолучитьОбласть("Подписи|Основная" + ОкончаниеИмениОбласти);
	ОбластьИтого          = Макет.ПолучитьОбласть("Итого|Основная" + ОкончаниеИмениОбласти);
	ОбластьИтогоНДС       = Макет.ПолучитьОбласть("ИтогоНДС|Основная" + ОкончаниеИмениОбласти);
	ОбластьСуммаПрописью  = Макет.ПолучитьОбласть("СуммаПрописью|Основная" + ОкончаниеИмениОбласти);
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	
	ВыборкаПоТабличнымЧастям = Результаты[ИндексРезультатаТовары].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		//ЗАГОЛОВОК
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		//ШАПКА
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаУпаковок);
			
		КонецЕсли;
		
		ПараметрыШапкаКолонкаКоличество = Новый Структура;
		Если ВыводитьУпаковки Тогда
			ПараметрыШапкаКолонкаКоличество.Вставить("ЕдИзмКолво", НСтр("ru = '(Ед. изм.)';uk='(Од. вим.)'", КодЯзыкаПечать));
		Иначе
			ПараметрыШапкаКолонкаКоличество.Вставить("ЕдИзмКолво", "");
		КонецЕсли;
		ОбластьШапкаТаблицыКолонкаКоличество.Параметры.Заполнить(ПараметрыШапкаКолонкаКоличество);
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКоличество);
		
		Если НЕ ВыводитьУпаковки Тогда
			ТабличныйДокумент.Область("ОбластьЕдИзмКолво").Объединить();
			ТабличныйДокумент.Область("ОбластьЕдИзмКолво").ВертикальноеПоложение = ВертикальноеПоложение.Центр;
		КонецЕсли;
		
		Если НЕ ТолькоПоРозничнымЦенам Тогда 
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыЦеныПоступления);
		КонецЕсли;
		
		Если ВыводитьЦены Тогда
			
			ПараметрыШапкаРозничныеЦены = Новый Структура;
			Если ВыводитьУпаковки Тогда
				ПараметрыШапкаРозничныеЦены.Вставить("РознЦенаЕдИзм", НСтр("ru = '(Ед. изм.)';uk='(Од. вим.)'", КодЯзыкаПечать));
			Иначе
				ПараметрыШапкаРозничныеЦены.Вставить("РознЦенаЕдИзм", "");
			КонецЕсли;
			ОбластьШапкаТаблицыРозничныеЦены.Параметры.Заполнить(ПараметрыШапкаРозничныеЦены);
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыРозничныеЦены);
			
			Если НЕ ВыводитьУпаковки Тогда
				ТабличныйДокумент.Область("РознЦенаЕдИзм").Объединить();
				ТабличныйДокумент.Область("РознЦенаЕдИзм").ВертикальноеПоложение = ВертикальноеПоложение.Центр;
			КонецЕсли;
			
		КонецЕсли;
		
		ВсегоНаименований  = 0;
		Итого              = 0;
		ИтогоНДС           = 0;
		ИтогоРозничныеЦены = 0;
		
		//СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
			
			Если ВыводитьУпаковки Тогда
				
				ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаУпаковок);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКолонкаКоличество.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКоличество);
			
			Если НЕ ТолькоПоРозничнымЦенам Тогда
				ОбластьСтрокаТаблицыЦеныПоступления.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыЦеныПоступления);
				
			КонецЕсли;
			
			Если ВыводитьЦены Тогда
				ОбластьСтрокаТаблицыРозничныеЦены.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыРозничныеЦены);
			КонецЕсли;
			
			
			ВсегоНаименований = ВсегоНаименований + 1;
			Итого             = Итого + ВыборкаПоСтрокамТЧ.Сумма;
			ИтогоНДС          = ИтогоНДС + ВыборкаПоСтрокамТЧ.СуммаНДС;
			
			Если ВыводитьЦены Тогда
				
				ИтогоРозничныеЦены = ИтогоРозничныеЦены  +ВыборкаПоСтрокамТЧ.СуммаРозничная;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
		
		Если ВыводитьУпаковки Тогда
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаУпаковок);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКоличество);
		
		Если НЕ ТолькоПоРозничнымЦенам Тогда
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыЦеныПоступления);
		КонецЕсли;
		
		Если ВыводитьЦены Тогда
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыРозничныеЦены);
		КонецЕсли;
		
		//ИТОГО
		
		
		Если ТолькоПоРозничнымЦенам Тогда
			
			ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
			ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%",ФормированиеПечатныхФормСервер.ФорматСумм(ИтогоРозничныеЦены));
			ОбластьИтого.Параметры.Итого = ТекстИтоговойСтроки;
			
		Иначе
			
			ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
			ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%",ФормированиеПечатныхФормСервер.ФорматСумм(Итого));
			ОбластьИтого.Параметры.Итого = ТекстИтоговойСтроки;
			
		КонецЕсли;
		
		
		
		Если ВыводитьЦены И НЕ ТолькоПоРозничнымЦенам Тогда
			ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
			ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%",ФормированиеПечатныхФормСервер.ФорматСумм(ИтогоРозничныеЦены));
			ОбластьИтого.Параметры.ИтогоРозничныеЦены = ТекстИтоговойСтроки;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		Если НЕ ТолькоПоРозничнымЦенам Тогда
			ТекстИтоговойСтроки = НСтр("ru = '%Итого%'");
			ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%",ФормированиеПечатныхФормСервер.ФорматСумм(ИтогоНДС));
			
			Если НЕ ВыборкаПоДокументам.УчитыватьНДС Тогда
				ТекстИтоговойСтроки = "Без НДС";
			КонецЕсли;
			
			ОбластьИтогоНДС.Параметры.ИтогоНДС = ТекстИтоговойСтроки;
			
			ОбластьИтогоНДС.Параметры.НДС = ?(ВыборкаПоДокументам.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:';uk='У тому числі ПДВ:'", КодЯзыкаПечать), НСтр("ru='Сумма НДС:';uk='Сума ПДВ:'", КодЯзыкаПечать));
			
			ТабличныйДокумент.Вывести(ОбластьИтогоНДС);
		КонецЕсли;
		
		
		//СУММА ПРОПИСЬЮ
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%, на сумму %Итого%';uk='Усього найменувань %ВсегоНаименований%, на суму %Итого%'", КодЯзыкаПечать);
		Если ТолькоПоРозничнымЦенам Тогда
			СуммаКПрописи = ИтогоРозничныеЦены;
		Иначе
			СуммаКПрописи = Итого + ?(ВыборкаПоДокументам.ЦенаВключаетНДС, 0, ИтогоНДС);
		КонецЕсли;
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%Итого%", ФормированиеПечатныхФормСервер.ФорматСумм(СуммаКПрописи));
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
			ОбластьСуммаПрописью.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(СуммаКПрописи, , КодЯзыкаПечать);
		
		ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
		
		//ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.Получил = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Получил);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции


Функция ПечатьМ4(МассивОбъектов, ОбъектыПечати)

	КолонкаКодов = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	
	Если ПустаяСтрока(КолонкаКодов) Тогда
		
		КолонкаКодов = "Код";
		
	КонецЕсли;

	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Документ.Ссылка                                  КАК Ссылка,
		|	Документ.Номер                                   КАК Номер,
		|	Документ.Дата                                    КАК Дата,
		|	Документ.Дата                                    КАК ДатаСоставления,
		|	Документ.НомерВходящегоДокумента                 КАК НомерСопроводительногоДокумента,
		|	Документ.Контрагент                              КАК Поставщик,
		|   Документ.Контрагент.Код                          КАК ПоставщикКод,
		|	Документ.Организация                             КАК Организация,
		|	Документ.Организация                             КАК ЮрФизЛицо,
		|	Документ.Организация.Префикс                     КАК Префикс,
		|	Документ.Склад.Наименование                      КАК СкладНаименование,
		|	Документ.Склад                                   КАК МестоПриемки,
		|	Документ.БанковскийСчетОрганизации               КАК БанковскийСчетОрганизации,
		|	Документ.Ответственный.Физлицо                   КАК Получил,
        |	Документ.ЦенаВключаетНДС                         КАК ЦенаВключаетНДС
		|ИЗ
		|	Документ.ПоступлениеТоваров КАК Документ
		|
		|ГДЕ
		|	Документ.Ссылка В (&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|;
		|
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
		|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
		|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК ТоварНаименование,
		|	ВложенныйЗапрос.Номенклатура." + КолонкаКодов + "                          КАК ТоварКод,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                             КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Код                                       КАК ЕдиницаИзмеренияКод,
		|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
		|	ВложенныйЗапрос.Количество                                                 КАК Количество,
		|	ВложенныйЗапрос.Количество                                                 КАК КоличествоПринято,
		|	ВложенныйЗапрос.Цена                                                       КАК Цена,
		|	ВложенныйЗапрос.Сумма                                                      КАК Сумма,
		|	ВложенныйЗапрос.СуммаНДС                                                   КАК СуммаНДС,
		|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки
		|ИЗ (
		|	ВЫБРАТЬ
		|		Документ.Ссылка             КАК Ссылка,
		|		Документ.Номенклатура       КАК Номенклатура,
		|		ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
		|			Документ.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ
		|			Документ.Упаковка.ЕдиницаИзмерения
		|		КОНЕЦ                       КАК ЕдиницаИзмерения,
		|		Документ.Характеристика     КАК Характеристика,
		|		ВЫБОР
		|			КОГДА Документ.КоличествоУпаковок = 0
		|			ТОГДА
		|				Документ.Цена
		|			ИНАЧЕ
		|				Документ.Сумма / Документ.КоличествоУпаковок
		|		КОНЕЦ КАК Цена,
		|		Документ.КоличествоУпаковок КАК Количество,
		|		Документ.Сумма              КАК Сумма,
		|		Документ.СуммаНДС           КАК СуммаНДС,
		|		Документ.НомерСтроки        КАК НомерСтроки
		|	ИЗ
		|		Документ.ПоступлениеТоваров.Товары КАК Документ
		|	ГДЕ
		|		Документ.Ссылка В (&МассивДокументов)
		|		И Документ.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		|
		|ИТОГИ ПО
		|	Ссылка
		|");
		
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваров_М4";
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеПечати      = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.ПолучитьМакет("ОбщийМакет.ПФ_MXL_М4");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
		// Выводим общие реквизиты шапки
		СведенияОПокупателе = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаСоставления, , ДанныеПечати.БанковскийСчетОрганизации);
		
		НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,");
		ОбластьМакета.Параметры.КодПоЕДРПОУ              = СведенияОПокупателе.КодПоЕДРПОУ;
		ОбластьМакета.Параметры.НомерДокумента           = НомерДокумента;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок докмента
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.ДатаСоставления = ДанныеПечати.ДатаСоставления;
		ОбластьМакета.Параметры.НомерДокумента = НомерДокумента;
		
		СведенияОПоставщике     = ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.ДатаСоставления);
		ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеПоставщика;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
			
		// Выводим заголовок таблицы
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

		НомерСтраницы = 1;
				
	
		ДанныеСтроки = Новый Структура;
		
		ДанныеСтроки.Вставить("Номер", 0);
		ДанныеСтроки.Вставить("СуммаСНДС", 0);
		ДанныеСтроки.Вставить("СуммаНДС", 0);
		ДанныеСтроки.Вставить("СуммаБезНДС", 0);
		ДанныеСтроки.Вставить("Цена", 0);
		ДанныеСтроки.Вставить("Количество", 0);
			
		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;
		
		// Выводим многострочную часть докмента
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьШапкаСтрок       = Макет.ПолучитьОбласть("ШапкаСтрок");
		ОбластьПодвалСтрок      = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		КоличествоСтрок = ВыборкаПоДокументам.Количество();
		
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		
		Пока СтрокаТовары.Следующий() Цикл
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			
			ДанныеСтроки.Номер       = ДанныеСтроки.Номер + 1;
			ДанныеСтроки.Количество  = СтрокаТовары.Количество;
			ДанныеСтроки.СуммаСНДС   = Окр(СтрокаТовары.Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СтрокаТовары.СуммаНДС), 2);
			ДанныеСтроки.СуммаНДС    = Окр(СтрокаТовары.СуммаНДС, 2);
			ДанныеСтроки.СуммаБезНДС = ДанныеСтроки.СуммаСНДС - ДанныеСтроки.СуммаНДС;
				
			Если ДанныеПечати.ЦенаВключаетНДС Тогда
				ДанныеСтроки.Цена = ?(ДанныеСтроки.Количество = 0, 0, ДанныеСтроки.СуммаБезНДС / ДанныеСтроки.Количество);
			Иначе
				ДанныеСтроки.Цена = СтрокаТовары.Цена;
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеСтроки);
			
			ОбластьМакета.Параметры.ТоварНаименование = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				СтрокаТовары.ТоварНаименование,
				СтрокаТовары.Характеристика);
						
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьПодвалСтрок);
			
			Если ДанныеСтроки.Номер = КоличествоСтрок И НомерСтраницы > 1 Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;

			Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабличныйДокумент.Вывести(ПодвалСтрок);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапкаСтрок);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалСтрок);
				
		Если НомерСтраницы = 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();				
		КонецЕсли;
		
		// Выводим подвал документа
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		СтруктураФИО = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(ДанныеПечати.Получил, ДанныеПечати.Дата);
		ОбластьМакета.Параметры.КладовщикПринявшийТоварДолжностьФИО = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(Неопределено,СтруктураФИО.Фамилия,СтруктураФИО.Имя,СтруктураФИО.Отчество);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
	
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
			
	Возврат ТабличныйДокумент;
	
КонецФункции


Функция ПечатьАктРасхождений(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
		
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов 		= ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды		= ЗначениеЗаполнено(КолонкаКодов);
	СинонимДокумента 	= НСтр("ru='Акт расхождений по поступлению';uk='Акт розбіжностей по надходженню'", КодЯзыкаПечать);
	РеквизитыДокумента 	= Новый Структура("Номер, Дата, Префикс");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	СформироватьТекстЗапросаАктРасхождений(Запрос.Текст);
	
	ПакетРезультатов 			= Запрос.ВыполнитьПакет();
	ДанныеПечати 				= ПакетРезультатов[0].Выбрать();
	ТаблицаТоваровПоДокументам	= ПакетРезультатов[3].Выгрузить();
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеТоваров_АктРасхождений";
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПоступлениеТоваров.ПФ_MXL_АктРасхождений", КодЯзыкаПечать);
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если ДанныеПечати.ОшибкаНетРасхождений Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В документе %1 нет расхождений. Печать акта расхождении не требуется.';uk='У документі %1 немає розбіжностей. Друк акту розбіжностей не потрібний.'", КодЯзыкаПечать),
			ДанныеПечати.Ссылка
			);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ДанныеПечати.Ссылка
			);
			Продолжить;
		КонецЕсли;
		
		
		УчетНДС = ?(ДанныеПечати.УчитыватьНДС, "", "БезНДС");
		
		ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы"+УчетНДС+"|НачалоСтроки"+УчетНДС);
		ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы"+УчетНДС+"|НачалоСтроки"+УчетНДС);
		ОбластьСтрокаИтогоНачало 	= Макет.ПолучитьОбласть("СтрокаИтого"+УчетНДС+"|НачалоСтроки"+УчетНДС);
		
		ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы"+УчетНДС+"|КолонкаКодов"+УчетНДС);
		ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы"+УчетНДС+"|КолонкаКодов"+УчетНДС);
		ОбластьСтрокаИтогоКолонкаКодов 		= Макет.ПолучитьОбласть("СтрокаИтого"+УчетНДС+"|КолонкаКодов"+УчетНДС);
		
		ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		
		ОбластьКолонкаТовары = Макет.Область("КолонкаТовары"+УчетНДС);
		
		Если НЕ ВыводитьКоды Тогда
			ОбластьКолонкаТовары.ШиринаКолонки = ОбластьКолонкаТовары.ШиринаКолонки + Макет.Область("КолонкаКодов"+УчетНДС).ШиринаКолонки;
		КонецЕсли;
		
		ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы"+УчетНДС+"|КонецСтроки"+УчетНДС);
		ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы"+УчетНДС+"|КонецСтроки"+УчетНДС);
		ОбластьСтрокаИтогоКонец 	= Макет.ПолучитьОбласть("СтрокаИтого"+УчетНДС+"|КонецСтроки"+УчетНДС);
		
		
		СтрокиТЧ = ТаблицаТоваровПоДокументам.НайтиСтроки(Новый Структура("Ссылка",ДанныеПечати.Ссылка));
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если ДанныеПечати.УчитыватьНДС Тогда
			ТекстНДСВШапкеТаблицы = ?(ДанныеПечати.ЦенаВключаетНДС, "", " " + НСтр("ru='(Без НДС)';uk='(Без ПДВ)'", КодЯзыкаПечать));
			ОбластьШапкаТаблицыКонец.Параметры.НДС = ТекстНДСВШапкеТаблицы;
		КонецЕсли;
		
		//Заголовок
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ДанныеПечати);
		Область = Макет.ПолучитьОбласть("Заголовок");
		Область.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(ДанныеПечати, СинонимДокумента, КодЯзыкаПечать);

		ТабличныйДокумент.Вывести(Область);
				
		//Шапка
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(ДанныеПечати);
		Область.Параметры.ПоставщикПредставление = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.ДатаДокумента), "ПолноеНаименование,ЮридическийАдрес,Телефоны,");
		Область.Параметры.ПокупательПредставление = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(ФормированиеПечатныхФормСервер.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаДокумента), "ПолноеНаименование,ЮридическийАдрес,Телефоны,");
		ТабличныйДокумент.Вывести(Область);
		
		//Таблица
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
		
		КоличествоИзлишекИтого		= 0;
		СуммаИзлишекИтого			= 0;
		КоличествоНедостачаИтого	= 0;
		СуммаНедостачаИтого			= 0;
		СуммаНДСИзлишекИтого		= 0;
		СуммаНДСНедостачаИтого		= 0;
		НомерСтроки = 1;
		
		Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
			
			ОбластьСтрокаТаблицыНачало.Параметры.НомерСтроки = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = СтрокаТЧ[КолонкаКодов];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(СтрокаТЧ);
			ОбластьСтрокаТаблицыКонец.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТЧ.Номенклатура, СтрокаТЧ.Характеристика);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);
			
			КоличествоИзлишекИтого		= КоличествоИзлишекИтого + СтрокаТЧ.КоличествоИзлишек;
			СуммаИзлишекИтого			= СуммаИзлишекИтого + СтрокаТЧ.СуммаИзлишек;
			КоличествоНедостачаИтого	= КоличествоНедостачаИтого + СтрокаТЧ.КоличествоНедостача;
			СуммаНедостачаИтого			= СуммаНедостачаИтого + СтрокаТЧ.СуммаНедостача;
			СуммаНДСИзлишекИтого		= СуммаНДСИзлишекИтого + СтрокаТЧ.СуммаНДСИзлишек;
			СуммаНДСНедостачаИтого		= СуммаНДСНедостачаИтого + СтрокаТЧ.СуммаНДСНедостача;
			НомерСтроки 				= НомерСтроки + 1;
			
		КонецЦикла;
		
		//Итого
		ОбластьСтрокаИтогоКонец.Параметры.КоличествоИзлишекИтого	= КоличествоИзлишекИтого;
		ОбластьСтрокаИтогоКонец.Параметры.СуммаИзлишекИтого			= СуммаИзлишекИтого;
		ОбластьСтрокаИтогоКонец.Параметры.КоличествоНедостачаИтого	= КоличествоНедостачаИтого;
		ОбластьСтрокаИтогоКонец.Параметры.СуммаНедостачаИтого		= СуммаНедостачаИтого;
		Если ДанныеПечати.УчитыватьНДС Тогда
			ОбластьСтрокаИтогоКонец.Параметры.СуммаНДСИзлишекИтого		= СуммаНДСИзлишекИтого;
			ОбластьСтрокаИтогоКонец.Параметры.СуммаНДСНедостачаИтого	= СуммаНДСНедостачаИтого;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьСтрокаИтогоНачало);
		
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьСтрокаИтогоКолонкаКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьСтрокаИтогоКонец);
		
		//Подписи
		Область = Макет.ПолучитьОбласть("Подписи");
		ТабличныйДокумент.Вывести(Область);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
	
КонецФункции

Функция ПолучитьПоступлениеТоваровПоЗаказуПоставщику(ЗаказПоставщику)Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваров.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|ГДЕ
	|	ПоступлениеТоваров.ЗаказПоставщику = &ЗаказПоставщику
	|	И ПоступлениеТоваров.Проведен";
	
	Запрос.УстановитьПараметр("ЗаказПоставщику", ЗаказПоставщику);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецЕсли

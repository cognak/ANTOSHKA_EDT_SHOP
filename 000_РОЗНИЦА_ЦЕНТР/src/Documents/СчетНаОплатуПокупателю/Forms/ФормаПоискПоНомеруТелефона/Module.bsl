#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Параметры.Свойство("Магазин", Магазин);

	КлючиПолитики = ОбменMicrosoftDynamicsПовтИсп.УчетнаяПолитика(Магазин);

	НаборНастроек = Новый Структура(
		"ПродажиАктивированы, РесурсMicrosoftDynamicsДоступен, РесурсWebRetailДоступен"
		, КлючиПолитики.ПродажиАктивированы
		, РозничныеПродажиСлужебный.РесурсMicrosoftDynamicsДоступен()
		, РозничныеПродажиСлужебный.РесурсWebRetailДоступен()
	);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПрименитьВДокументе(Команда)

	Если НЕ Контрагент.Пустая() Тогда

		ПараметрыЗакрытия = Новый Структура(
			"Контрагент, ДисконтнаяКарта"
			, Контрагент
			, ДисконтнаяКарта
		);

		Закрыть(ПараметрыЗакрытия);

	Иначе

		ПоказатьОповещениеПользователя("Отказано в применении!"
			,
			, "Контрагент (покупатель) не указан!"
			, БиблиотекаКартинок.Информация32
		);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОформлениеЭлементов()

	Заголовок = "Поиск по номеру телефона (" + СокрЛП(Магазин) + ")";

	Элементы.ФормаПрименитьВДокументе.Доступность = НЕ Контрагент.Пустая();

КонецПроцедуры

#Область ФункционалПоискаПоНомеруТелефона

&НаКлиенте
Процедура КомандаВыполнитьПоиск(Команда)

	Перем ДанныеКонтрагента;

	ТекстСообщения = "";

	Если НаборНастроек.ПродажиАктивированы И НаборНастроек.РесурсMicrosoftDynamicsДоступен Тогда

			СоставДанных = ПоискПоНомеруТелефона_MSCRM(НомерТелефона, Контрагент, ДанныеКонтрагента, ТекстСообщения);

	Иначе	СоставДанных = ПоискПоНомеруТелефона_1СРозница(НомерТелефона, Контрагент, ДанныеКонтрагента, ТекстСообщения);

	КонецЕсли;

	Если НЕ ПустаяСтрока(ТекстСообщения) Тогда

		ПоказатьОповещениеПользователя(
			?(Контрагент.Пустая(), "Не найдено соответствий!", "Покупатель идентифицирован")
			,
			, ТекстСообщения
			, ?(Контрагент.Пустая(), БиблиотекаКартинок.Ошибка32, БиблиотекаКартинок.Информация32)
		);

	КонецЕсли;

	Если Контрагент.Пустая() И СоставДанных.ПоискВыполнен = Истина Тогда

	//	LNK 17.09.2020 11:41:22 - Допускается ввести нового контрагента..

		ОписаниеОповещения = Новый ОписаниеОповещения("ПроцедураСозданияКонтрагента", ЭтотОбъект, ДанныеКонтрагента);

		ПоказатьВопрос(ОписаниеОповещения
			, "Вы можете создать нового клиента по номеру телефона «" + ДанныеКонтрагента.НомерТелефона + "»"
			, РежимДиалогаВопрос.ДаНет
			, 60
			, КодВозвратаДиалога.Да
			, ДанныеКонтрагента.НомерТелефона
			, КодВозвратаДиалога.Нет
		);

	КонецЕсли;

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоискПоНомеруТелефона_1СРозница(Знач НомерТелефона, Контрагент, ДанныеКонтрагента, ТекстСообщения)

//	Приведение номера к стандарту поиска.
	НомерТелефона = ОтправкаSMS.ПодготовитьНомерТелефона(НомерТелефона);
	Контрагент    = Неопределено;	//	сбрасываем значение, возможно, ранее установленное

	ТекстСообщения = "Покупатель по номеру телефона «" + НомерТелефона + "» НЕ ОБНАРУЖЕН!";

	ПараметрыИдентификации = Новый Структура(
		"НазначениеДанных, РазрешеноСозданиеНового"
		, Перечисления.НазначениеКонтрагентовОтложенных.ПроверкаВРознице
		, Ложь
	);

	СоставДанных = ОбменMicrosoftDynamicsСлужебный.ИдентифицироватьКлиентаПоДаннымCRM(
		  Неопределено
		, ДанныеКонтрагента
		, ""
		, НомерТелефона
		, Неопределено
		, ПараметрыИдентификации
	);

	Если СоставДанных.Контрагент = Неопределено ИЛИ СоставДанных.Ошибка = Истина Тогда

		ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(СоставДанных.ОписаниеОшибки), "", Символы.ПС + СоставДанных.ОписаниеОшибки);

	Иначе

		Контрагент = СоставДанных.Контрагент;
		ТекстСообщения = "Идентифицирован покупатель «" + Контрагент + "»!";

	КонецЕсли;

	Возврат СоставДанных;

КонецФункции

&НаСервереБезКонтекста
Функция ПоискПоНомеруТелефона_MSCRM(Знач НомерТелефона, Контрагент, ДанныеКонтрагента, ТекстСообщения)

	ТекстСообщения    = "";
	Контрагент		  = Неопределено;	//	сбрасываем значение, возможно, ранее установленное
	СоставДанных	  = ОбменMicrosoftDynamicsСервер.ИнициализироватьСоставДанных();
	ДанныеКонтрагента = ОбменMicrosoftDynamicsСервер.ИнициализацияДанныхКонтрагента(, ОтправкаSMS.ПодготовитьНомерТелефона(НомерТелефона));

	Попытка

		ДанныеОтвета = ОбменMicrosoftDynamicsСлужебный.АутентификацияПокупателя(
			Новый Структура(
				"НомерТелефона, КодКарты"
				, ДанныеКонтрагента.НомерТелефона, "")
			, ТекстСообщения
		);
		ПоискВыполнен = Истина;

	Исключение

		ПоискВыполнен  = Ложь;
		ТекстСообщения = ОписаниеОшибки();

		ЖурналСобытий.Регистрация("CRM.Контрагент.Аутентификация", УровеньЖурналаРегистрации.Ошибка
			, Метаданные.ПланыОбмена.ОбменMicrosoftDynamics
			,
			,
			, "Ошибка передачи:" + Символы.ПС + ТекстСообщения
			,
			,
			Ложь
		);

	КонецПопытки;

	Если ПустаяСтрока(ТекстСообщения) Тогда

		Если ТипЗнч(ДанныеОтвета) = Тип("Структура") Тогда

			Если НЕ (ПустаяСтрока(ДанныеОтвета.IDD_client) И ПустаяСтрока(ДанныеОтвета.IDC_Client))	Тогда

				ПараметрыИдентификации = Новый Структура(
					"НазначениеДанных, РазрешеноСозданиеНового"
					, Перечисления.НазначениеКонтрагентовОтложенных.ПроверкаВРознице
					, Ложь
				);

				СоставДанных = ОбменMicrosoftDynamicsСлужебный.ИдентифицироватьКлиентаПоДаннымCRM(
					  Неопределено
					, ДанныеКонтрагента
					, ""
					, ДанныеКонтрагента.НомерТелефона
					, ДанныеОтвета
					, ПараметрыИдентификации
				);

				Если НЕ СоставДанных.Ошибка Тогда

					Контрагент = СоставДанных.Контрагент;

				Иначе

					ТекстСообщения = СоставДанных.ОписаниеОшибки;

				КонецЕсли;

			Иначе

				ТекстСообщения =  "Идентификация покупателя не выполнена!" + Символы.ПС
								+ "Внешняя система не содержит требуемых данных.";

			КонецЕсли;

		Иначе

			ТекстСообщения = "Получены неожиданные данные от внешней системы!";

		КонецЕсли;

	КонецЕсли;

	СоставДанных.ПоискВыполнен = ПоискВыполнен;	//	нас интересует результат запроса в CRM

	Возврат СоставДанных;

КонецФункции

&НаКлиенте
Процедура ПроцедураСозданияКонтрагента(Результат, ДополнительныеПараметры)	Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда

		ПараметрыОткрытия = Новый Структура(
			"ДанныеКонтрагента, ДокументПродажи, НазначениеДанных"
			, ДополнительныеПараметры, Неопределено
			, ПредопределенноеЗначение("Перечисление.НазначениеКонтрагентовОтложенных.ПроверкаВРознице")
		);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПроцедураСозданияКонтрагентаЗавершение", ЭтотОбъект);

		ОткрытьФорму("Обработка.ДанныеПокупателя.Форма.ВводДанныхКонтрагента", ПараметрыОткрытия, ЭтотОбъект, УникальныйИдентификатор,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроцедураСозданияКонтрагентаЗавершение(СоставДанных, ДополнительныеПараметры)	Экспорт

	Если ТипЗнч(СоставДанных) = Тип("Структура") Тогда

		Если НЕ СоставДанных.Ошибка Тогда

			Контрагент		= СоставДанных.Контрагент;
			ДисконтнаяКарта	= СоставДанных.ДисконтнаяКарта;

			ПоказатьОповещениеПользователя("Покупатель идентифицирован"
				,, "Идентифицирован покупатель «" + Контрагент + "»!"
				, БиблиотекаКартинок.Информация32
			);

		Иначе

			ПоказатьОповещениеПользователя("Ошибка создания контрагента"
				,, СоставДанных.ОписаниеОшибки
				, БиблиотекаКартинок.Ошибка32
			);

		КонецЕсли;

	КонецЕсли;

	УстановитьОформлениеЭлементов();

КонецПроцедуры

#КонецОбласти




















&НаКлиенте
Перем ЗакрытиеСанкционировано;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

//	Этот реквизит формы используем, как отладочный, снимающий "фатальные" ограничения.
	ОтладочныйРежим = ТехническаяПоддержкаВызовСервера.ОтладочныйРежимРаботы();

	НомерТелефона = Параметры.НомерТелефона;

	Если НЕ Лев(НомерТелефона, 1) = "+" И НЕ ПустаяСтрока(НомерТелефона) Тогда

		НомерТелефона = "+" + НомерТелефона;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ЗакрытиеСанкционировано = Ложь;

	Если ПустаяСтрока(НомерТелефона) Тогда

		Отказ = Истина;
		ПоказатьПредупреждение(, "Отказано! Не указан номер телефона.", 10, "Данные покупателя");

	Иначе

		УстановитьДоступностьЭлементовФормы();

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если НЕ ЗакрытиеСанкционировано = Истина Тогда

		Отказ = Истина;

	КонецЕсли;

КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьБезСохранения(Команда)

	Если Модифицированность Тогда

		ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытьБезСохраненияЗавершение", ЭтотОбъект);

		ПоказатьВопрос(ОписаниеОповещения
		, "Подтвердите закрытие без применения введенных данных"
		, РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Да
		, "Введенные данные будут потеряны", КодВозвратаДиалога.Нет
		);

	Иначе

		ЗакрытьБезСохраненияЗавершение(КодВозвратаДиалога.Да,);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьБезСохраненияЗавершение(КодВозврата, ДополнительныеПараметры)	Экспорт

	Если КодВозврата = КодВозвратаДиалога.Да Тогда

		ЗакрытиеСанкционировано = Истина;
		Закрыть();

	КонецЕсли;

КонецПроцедуры
	
#КонецОбласти

#Область ОтправкаСообщенияSMS

&НаКлиенте
Процедура ОтправитьКодПодтвержденияSMS(Команда)

	Если ПроверитьЗаполнение() Тогда

		ПоказатьВопрос(Новый ОписаниеОповещения("ОтправитьКодПодтвержденияSMSЗавершение", ЭтотОбъект)
			, "Будет отправлено SMS по указанному номеру. Подтвердите своё решение:", РежимДиалогаВопрос.ОКОтмена
			, 60, КодВозвратаДиалога.ОК, "ИДЕНТИФИКАЦИЯ", КодВозвратаДиалога.Отмена);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьКодПодтвержденияSMSЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда

		Если ОтладочныйРежим ИЛИ ОтправитьКодПодтвержденияSMSНаСервере(НомерТелефона, ИмяКомпьютера(), ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка")) Тогда

			ПодтверждениеОтправлено = Истина;
			ПоказатьОповещениеПользователя("Код успешно отправлен на телефон" + Символы.ПС + "«" + НомерТелефона + "»");

		КонецЕсли;

		УстановитьДоступностьЭлементовФормы();

		ТекущийЭлемент = Элементы.КодПодтверждения;

	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтправитьКодПодтвержденияSMSНаСервере(НомерТелефона, ИмяКлиентскогоКомпьютера, Контрагент)

	ДополнительныеПараметры = Новый Структура(
		"ИмяКомпьютера, Контрагент", ИмяКлиентскогоКомпьютера, Контрагент);

	Возврат ВерификацияКлиентовСервер.ОтправитьКодПодтверждения(ОтправкаSMS.ПодготовитьНомерТелефона(НомерТелефона), ДополнительныеПараметры, Истина);

КонецФункции

#КонецОбласти

#Область ПолучениеКодаПодтверждения

&НаКлиенте
Процедура КодПодтвержденияПриИзменении(Элемент)

	ПоказатьОповещениеПользователя("Проверка номера телефона"
	,, "Отправлен запрос на получение последнего кода подтверждения ..."
	, БиблиотекаКартинок.Вопрос32, СтатусОповещенияПользователя.Информация);

	ПодтверждениеПолучено = Ложь;	//	сбросим возможное подтверждение

	Если ОтладочныйРежим Тогда

		ДанныеКлиента = Новый Структура(
			"Указан, КодКлиента"
			, Истина
			, КодПодтверждения
		);

	Иначе

		ДанныеКлиента = КодПодтвержденияПриИзмененииНаСервере(НомерТелефона);

	КонецЕсли;

	Если ДанныеКлиента.Указан Тогда

		Если СокрЛП(ДанныеКлиента.КодКлиента) = СокрЛП(КодПодтверждения) Тогда

			ПодтверждениеПолучено = Истина;

			ПоказатьОповещениеПользователя("Проверка номера телефона"
			,, "Поздравляем! Код подтверждения соответствует"
			, БиблиотекаКартинок.Информация32, СтатусОповещенияПользователя.Информация);

			ЗакрытиеСанкционировано = Истина;
			Закрыть(Истина);

		Иначе

			ПоказатьОповещениеПользователя("Проверка номера телефона"
			,, "Код подтверждения не совпадает с отправленным на номер телефона «" + НомерТелефона + "»"
			, БиблиотекаКартинок.Ошибка32, СтатусОповещенияПользователя.Важное);

			ТекущийЭлемент = Элементы.КодПодтверждения;

		КонецЕсли;

	Иначе

		ПоказатьОповещениеПользователя("Проверка номера телефона"
		,, "Код подтверждения не получен. Возможно, не соответствует номер телефона «" + НомерТелефона + "»"
		, БиблиотекаКартинок.Ошибка32, СтатусОповещенияПользователя.Важное);

		ТекущийЭлемент = Элементы.КодПодтверждения;
	
	КонецЕсли;

	УстановитьДоступностьЭлементовФормы();

КонецПроцедуры

&НаСервереБезКонтекста
Функция КодПодтвержденияПриИзмененииНаСервере(НомерТелефона)

	Возврат ВерификацияКлиентовСервер.ПолучитьКодПодтверждения(ОтправкаSMS.ПодготовитьНомерТелефона(НомерТелефона), Истина);

КонецФункции // КодПодтвержденияПриИзмененииНаСервере()
	
#КонецОбласти

#Область ПоддержкаОбщегоФункционалаФормы

&НаКлиенте
Процедура УстановитьДоступностьЭлементовФормы()

	Элементы.ОтправитьКодПодтвержденияSMS.Доступность = НЕ ПодтверждениеОтправлено И НЕ ПустаяСтрока(НомерТелефона);
	Элементы.КодПодтверждения.ТолькоПросмотр          = НЕ ПодтверждениеОтправлено;

КонецПроцедуры

#КонецОбласти













&НаСервере
Функция ПолучитьКонтактОтветственногоЛица(Магазин)
	Если Объект.Сотрудники[0].ВидКорректировки = 0 Тогда
		Возврат "vitalii.borschevskyi@antoshka.ua";	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФизическиеЛицаКонтактнаяИнформация.АдресЭП КАК АдресЭП
	               |ИЗ
	               |	РегистрСведений.РуководителиМагазинов КАК РуководителиМагазинов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаКонтактнаяИнформация
	               |		ПО (РуководителиМагазинов.Сотрудник = ФизическиеЛицаКонтактнаяИнформация.Ссылка
	               |				И ФизическиеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	               |ГДЕ
	               |	РуководителиМагазинов.Магазин = &Магазин";
	Запрос.УстановитьПараметр("Магазин",Магазин);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Возврат Результат.АдресЭП;	
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ПроверитьВозможностьОтправкиПисьма()
	Если Объект.Сообщения.Количество() > 0 Тогда
		вТЗ = Объект.Сообщения.Выгрузить();
		вТЗ.Сортировать("Дата Убыв");
		ПоследнееПисьмо = вТЗ[0].Дата;
		Разница = ТекущаяДата() - ПоследнееПисьмо;
		Если Разница < 600 Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура КомандаОтправитьКодПодтверждения(Команда)
	Если Не ПроверитьВозможностьОтправкиПисьма() Тогда
		Сообщить("Вы уже отправили письмо, вам нужно подождать 5 минут чтобы иметь возможность отправить его повторно");
		Возврат;
	КонецЕсли;
	
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	
	Строка_ = Объект.Сотрудники[0];
	Строка_.КодПодтверждения = ГСЧ.СлучайноеЧисло(100134,999982);
	Адрес = ПолучитьКонтактОтветственногоЛица(Объект.Магазин);
	Если Не ЗначениеЗаполнено(Адрес) Тогда
		Сообщить("Не заполнен адрес электронной почты ответственного лица для магазина "+Объект.Магазин+"! Обратитесь пожалуйста в тех.поддержку!");
		Возврат;	
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Адрес",Адрес);
	СтруктураПараметров.Вставить("Магазин",Объект.Магазин);
	СтруктураПараметров.Вставить("Номер",Объект.Номер);
	СтруктураПараметров.Вставить("Дата",Формат(Объект.Дата,"ДФ=dd.MM.yyyy"));
	СтруктураПараметров.Вставить("Сотрудник",Строка_.Сотрудник);
	СтруктураПараметров.Вставить("КорректируемаяДата",Формат(Строка_.ДатаК,"ДФ=dd.MM.yyyy"));
	СтруктураПараметров.Вставить("ЧасовФакт",Формат(Строка_.ЧасовФакт,"ДФ=мм:сс"));
	СтруктураПараметров.Вставить("ЧасовКорр",Формат(Строка_.ЧасовКорр,"ДФ=мм:сс"));
	СтруктураПараметров.Вставить("Причина",Строка_.Комментарий);
	СтруктураПараметров.Вставить("КодПодтверждения",Строка_.КодПодтверждения);
	СтруктураПараметров.Вставить("Сотрудник",Строка_.Сотрудник);
	ОтправитьКорректировкуНаСогласование(СтруктураПараметров);
	Строка_.Статус = ПредопределенноеЗначение("Перечисление.СтатусыКорректировокТабеляУчетаРабочегоВремени.НаСогласовании");
	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВвестиКодПодтверждения(Команда)
	
	Строка_ = Объект.Сотрудники[0];
	СтруктураПараметров = Новый Структура("КодПодтверждения",Строка_.КодПодтверждения);
	
	ОткрытьФорму("Документ.ТабельУчетаРабочегоВремениКорректировка.Форма.ФормаВводаКода",СтруктураПараметров,ЭтаФорма,,,,Новый ОписаниеОповещения("КодПодтвержденияЗавершение",ЭтаФорма,Новый Структура),РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
	
КонецПроцедуры
&НаКлиенте
Процедура КодПодтвержденияЗавершение(СтруктураПараметров,ДопПараметры) Экспорт
	Если ТипЗнч(СтруктураПараметров) = Тип("Структура") И СтруктураПараметров.Свойство("Успешно") И СтруктураПараметров.Успешно = Истина Тогда
		ПровестиКорректировкуТабеля();	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПровестиКорректировкуТабеля()
	ДокОбъект = Объект.ДокументОснование.ПолучитьОбъект();
	Если ДокОбъект.Заблокирован() Тогда
		Сообщение_ = Новый СообщениеПользователю;
		Сообщение_.Текст = "Табель "+Объект.ДокументОснование + " Заблокирован и не доступен для обработки. Повторите попытку позже.";
		Сообщение_.Сообщить();
		Возврат;
	КонецЕсли;
	
	ТекСтрока = Объект.Сотрудники[0];
	ТекСтрока.Статус = Перечисления.СтатусыКорректировокТабеляУчетаРабочегоВремени.Утверждена;
	МассивСтрок = ДокОбъект.ДанныеОВремени.НайтиСтроки(Новый Структура("Сотрудник,Должность",ТекСтрока.Сотрудник,ТекСтрока.Должность));
	Для Каждого Строка_ Из МассивСтрок Цикл
		Строка_["ЧасовФакт"+Формат(ТекСтрока.ДатаК,"ДФ=д")] = ТекСтрока.ЧасовФакт;
		Строка_["Комментарий"+Формат(ТекСтрока.ДатаК,"ДФ=д")] = ТекСтрока.Комментарий;
	КонецЦикла;
	Попытка
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Сообщение_ = Новый СообщениеПользователю;
		Сообщение_.Текст = "Ошибка при проведении табеля "+Объект.ДокументОснование + ": "+ОписаниеОшибки();
		Сообщение_.Сообщить();
	КонецПопытки;
	
	Попытка
		ЭтотОбъект.Записать();
	Исключение
		Сообщение_ = Новый СообщениеПользователю;
		Сообщение_.Текст = "Ошибка при проведении корректировки "+Объект.Ссылка+ ": "+ОписаниеОшибки();
		Сообщение_.Сообщить();
	КонецПопытки;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Дата = ТекущаяДата();
		ЗаполнитьЗначенияСвойств(Объект,Параметры);
		Строка_ = Объект.Сотрудники.Добавить();
		ЗаполнитьЗначенияСвойств(Строка_,Параметры);
		Строка_.ДатаК = Параметры.ДатаК;
		КорректирумаяДатаПриИзмененииНаСервере();
	КонецЕсли;
	
	Элементы.Сообщения.Видимость = РольДоступна("АдминистраторСистемы");
	Если Объект.Сотрудники.Количество() > 0 Тогда
		Строка_ = Объект.Сотрудники[0];
		Если ЗначениеЗаполнено(Строка_.КодПодтверждения) Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;	
			Элементы.КомандаВвестиКодПодтверждения.Видимость = Истина;
		Иначе
			Элементы.КомандаВвестиКодПодтверждения.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Элементы.КомандаВвестиКодПодтверждения.Видимость = Ложь;
	КонецЕсли;

	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПреобразоватьЧасыВвремя(Часов)
	Возврат Дата("00010101") + Часов * 3600;	
КонецФункции
&НаСервереБезКонтекста
Функция ПреобразоватьВремяВЧасы(Время)
	Возврат (Час(Время)*60 + Минута(Время))/60;	
КонецФункции


&НаСервере
Процедура ОтправитьКорректировкуНаСогласование(СтруктураПараметров)
	УчетныеДанныеОтправителя = РаботаСПочтовымиСообщениями.ПолучитьСистемнуюУчетнуюЗапись();
	
	Если УчетныеДанныеОтправителя.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда

		ПараметрыПисьма = Новый Структура;
		ПараметрыПисьма.Вставить("Кому", СтруктураПараметров.Адрес);
		ПараметрыПисьма.Вставить("Тема", "Магазин: "+СтруктураПараметров.Магазин+" Корректировка табеля №"+СтруктураПараметров.Номер+" от "+СтруктураПараметров.Дата);
		ТелоПисьма = "Шановний панове!"+Символы.ПС+"Це автоматичний лист. Прохання не відповідати на нього."+Символы.ПС
			+"Вам надійшов запит на коригування табеля обліку робочого часу. Всю необхідну інформацію про коригування ви знайдете в листі нижче."
			+Символы.ПС+Символы.ПС
			+Символы.ПС+"Магазин просить виправити відпрацьований час працівнику "+СтруктураПараметров.Сотрудник+" за "+СтруктураПараметров.КорректируемаяДата+" число на "+СтруктураПараметров.ЧасовФакт+" г. Попередне значення було: ("+СтруктураПараметров.ЧасовКорр+" г.) через таки обставини: "
			+Символы.ПС+СтруктураПараметров.Причина +""
			+Символы.ПС+"Якщо ви згодні підтвердити коригування, то повідомте код підтвердження "+СтруктураПараметров.КодПодтверждения+" директору магазину.";
		ПараметрыПисьма.Вставить("Тело", ТелоПисьма);

		ЭлектроннаяПочта.ОтправитьПочтовоеСообщение(УчетныеДанныеОтправителя, ПараметрыПисьма);
		
		СтрокаСообщения = Объект.Сообщения.Добавить();
		СтрокаСообщения.Дата = ТекущаяДата();
		СтрокаСообщения.Адресат = СтруктураПараметров.Адрес;
		СтрокаСообщения.ТекстСообщения = ТелоПисьма;
		ЭтотОбъект.Записать();
		ЭтаФорма.ТолькоПросмотр = Истина;
		Элементы.КомандаВвестиКодПодтверждения.Видимость = Истина;
		
	КонецЕсли;

	
КонецПроцедуры

&НаСервере
Процедура КорректирумаяДатаПриИзмененииНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабельУчетаРабочегоВремениДанныеОВремени.Сотрудник КАК Сотрудник,
	               |	ТабельУчетаРабочегоВремениДанныеОВремени.Должность КАК Должность,
	               |	ТабельУчетаРабочегоВремениДанныеОВремени.ЧасовФактАвто1 КАК ЧасовКорр
	               |ИЗ
	               |	Документ.ТабельУчетаРабочегоВремени.ДанныеОВремени КАК ТабельУчетаРабочегоВремениДанныеОВремени
	               |ГДЕ
	               |	ТабельУчетаРабочегоВремениДанныеОВремени.Ссылка = &ДокОснование
	               |	И ТабельУчетаРабочегоВремениДанныеОВремени.Сотрудник = &Сотрудник
	               |	И ТабельУчетаРабочегоВремениДанныеОВремени.Должность = &Должность";
	ТекСтрока = Объект.Сотрудники[0];
	Запрос.УстановитьПараметр("ДокОснование",Объект.ДокументОснование);
	Запрос.УстановитьПараметр("Сотрудник",ТекСтрока.Сотрудник);
	Запрос.УстановитьПараметр("Должность",ТекСтрока.Должность);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, ".ЧасовФактАвто1",".ЧасовФактАвто"+Формат(ТекСтрока.ДатаК,"ДФ=d"));
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		ТекСтрока.ЧасовКорр = Результат.ЧасовКорр;
		КорректируемоеВремя = ПреобразоватьЧасыВвремя(ТекСтрока.ЧасовКорр);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КорректирумаяДатаПриИзменении(Элемент)
	КорректирумаяДатаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ФактВремяПриИзменении(Элемент)
	Объект.Сотрудники[0].ЧасовФакт = ПреобразоватьВремяВЧасы(ФактВремя);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(Объект, КартинкаСостоянияДокумента, СостояниеДокумента, РазрешеноПроведение);
	
	ЗаполнитьИнформациюТабличнойЧасти();	//	LNK 02.03.2017 14:37:51

	НастроитьФормуПоДополнительнымПравам();

	УправлениеДоступомРТ.ПриСозданииФормыНаСервере(ЭтотОбъект);	//	LNK 17.10.2019 14:30:01
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	ОповеститьОбИзменении(Тип("СправочникСсылка.Контрагенты"));
	ОповеститьОбИзменении(Тип("СправочникСсылка.ИнформационныеКарты"));

	Элементы.КартыПокупателей.Обновить();
	
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	ЗаполнитьИнформациюТабличнойЧасти();	//	LNK 13.02.2019 11:54:03
	НастроитьФормуПоДополнительнымПравам();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ОткрытьФормуРедактированияМногострочногоТекста(Элемент.ТекстРедактирования , Объект.Комментарий, Модифицированность, "Комментарий:");
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ ФОРМЫ

//	LNK 02.03.2017 14:37:57
&НаКлиенте
Процедура КартыПокупателейКартаИсточникПриИзменении(Элемент)

	ТекущиеДанные   = Элементы.КартыПокупателей.ТекущиеДанные;
	КоллекцияДанных = Новый Структура(
		"КартаИсточник, КартаПриемник, Идентификатор"
		, ТекущиеДанные.КартаИсточник, ТекущиеДанные.КартаПриемник, ТекущиеДанные.ПолучитьИдентификатор());

	ЗаполнитьИнформациюТабличнойЧасти(КоллекцияДанных);

КонецПроцедуры

//	LNK 02.03.2017 14:37:57
&НаКлиенте
Процедура КартыПокупателейКартаПриемникПриИзменении(Элемент)

	ТекущиеДанные   = Элементы.КартыПокупателей.ТекущиеДанные;
	КоллекцияДанных = Новый Структура(
		"КартаИсточник, КартаПриемник, Идентификатор"
		, ТекущиеДанные.КартаИсточник, ТекущиеДанные.КартаПриемник, ТекущиеДанные.ПолучитьИдентификатор());

	ЗаполнитьИнформациюТабличнойЧасти(КоллекцияДанных);

КонецПроцедуры

&НаКлиенте	//	LNK 14.02.2019 10:37:46
Процедура КартыПокупателейКартаИсточникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	ТекстСообщения = "";

	Если НЕ ПроверитьДопустимостьКарты(ВыбранноеЗначение, "Источник", Объект.Ссылка, ТекстСообщения) Тогда

		СтандартнаяОбработка = Ложь;
		ПоказатьОповещениеПользователя("Отказано! Карта для выбора недоступна.",, ТекстСообщения, БиблиотекаКартинок.Ошибка32);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте	//	LNK 14.02.2019 10:37:50
Процедура КартыПокупателейКартаПриемникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	ТекстСообщения = "";

	Если НЕ ПроверитьДопустимостьКарты(ВыбранноеЗначение, "Приемник", Объект.Ссылка, ТекстСообщения) Тогда

		СтандартнаяОбработка = Ложь;
		ПоказатьОповещениеПользователя("Отказано! Карта для выбора недоступна.",, ТекстСообщения, БиблиотекаКартинок.Ошибка32);

	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура НастроитьФормуПоДополнительнымПравам()

	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Дата.ТолькоПросмотр, 
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьДату);
//	LNK 04.01.2017 13:54:53
	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Номер.ТолькоПросмотр,
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьНомерДокумента);

	Если Объект.Проведен Тогда

		ТолькоПросмотр = Истина;

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

//	LNK 02.03.2017 14:37:57
&НаСервере
Процедура ЗаполнитьИнформациюТабличнойЧасти(ТекущиеДанные = Неопределено)

	Если ТекущиеДанные = Неопределено Тогда

			КоллекцияСтрок = Объект.КартыПокупателей;

	Иначе	КоллекцияСтрок = Новый Массив;
			КоллекцияСтрок.Добавить(ТекущиеДанные);

	КонецЕсли;

	ТаблицаИсточник = Новый ТаблицаЗначений;
	ТаблицаИсточник.Колонки.Добавить("КартаИсточник", Новый ОписаниеТипов("СправочникСсылка.ИнформационныеКарты"));
	ТаблицаИсточник.Колонки.Добавить("КартаПриемник", Новый ОписаниеТипов("СправочникСсылка.ИнформационныеКарты"));
	ТаблицаИсточник.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Число"));

	Для каждого СтрокаКоллекции Из КоллекцияСтрок Цикл

		СтрокаИсточник = ТаблицаИсточник.Добавить();
		СтрокаИсточник.КартаИсточник = СтрокаКоллекции.КартаИсточник;
		СтрокаИсточник.КартаПриемник = СтрокаКоллекции.КартаПриемник;
		СтрокаИсточник.Идентификатор = ?(ТипЗнч(СтрокаКоллекции) = Тип("Структура"), СтрокаКоллекции.Идентификатор, СтрокаКоллекции.ПолучитьИдентификатор());

	КонецЦикла;

	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Таблица.КартаИсточник КАК Справочник.ИнформационныеКарты) КАК КартаИсточник,
	|	ВЫРАЗИТЬ(Таблица.КартаПриемник КАК Справочник.ИнформационныеКарты) КАК КартаПриемник,
	|	Таблица.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ Источник
	|ИЗ
	|	&ТаблицаИсточник КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанных.Идентификатор КАК Идентификатор,
	|	СУММА(ТаблицаДанных.СуммаКартыИсточник) КАК СуммаКартыИсточник,
	|	СУММА(ТаблицаДанных.СуммаКартыПриемник) КАК СуммаКартыПриемник,
	|	СУММА(ТаблицаДанных.СуммаВладельцаИсточник) КАК СуммаВладельцаИсточник,
	|	СУММА(ТаблицаДанных.СуммаВладельцаПриемник) КАК СуммаВладельцаПриемник
	|ИЗ
	|	(ВЫБРАТЬ
	|		Источник.Идентификатор КАК Идентификатор,
	|		ПродажиПоКартам.СуммаОстаток КАК СуммаКартыИсточник,
	|		0 КАК СуммаКартыПриемник,
	|		0 КАК СуммаВладельцаИсточник,
	|		0 КАК СуммаВладельцаПриемник
	|	ИЗ
	|		Источник КАК Источник
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиПоДисконтнымКартам.Остатки(
	|					,
	|					ДисконтнаяКарта В
	|						(ВЫБРАТЬ
	|							Источник.КартаИсточник
	|						ИЗ
	|							Источник)) КАК ПродажиПоКартам
	|			ПО Источник.КартаИсточник = ПродажиПоКартам.ДисконтнаяКарта
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Источник.Идентификатор,
	|		0,
	|		ПродажиПоКартам.СуммаОстаток,
	|		0,
	|		0
	|	ИЗ
	|		Источник КАК Источник
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиПоДисконтнымКартам.Остатки(
	|					,
	|					ДисконтнаяКарта В
	|						(ВЫБРАТЬ
	|							Источник.КартаПриемник
	|						ИЗ
	|							Источник)) КАК ПродажиПоКартам
	|			ПО Источник.КартаПриемник = ПродажиПоКартам.ДисконтнаяКарта
	|				И (НЕ Источник.КартаПриемник.ВидДисконтнойКарты = ЗНАЧЕНИЕ(Справочник.ВидыДисконтныхКарт.ПредварительныеКартыЛояльности))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Источник.Идентификатор,
	|		0,
	|		0,
	|		ПродажиПоКартам.СуммаОстаток,
	|		0
	|	ИЗ
	|		Источник КАК Источник
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиПоДисконтнымКартам.Остатки(
	|					,
	|					ВладелецДисконтнойКарты В
	|						(ВЫБРАТЬ
	|							Источник.КартаИсточник.ВладелецКарты
	|						ИЗ
	|							Источник)) КАК ПродажиПоКартам
	|			ПО (Источник.КартаИсточник.ВладелецКарты = ПродажиПоКартам.ВладелецДисконтнойКарты
	|					И НЕ Источник.КартаИсточник.ВладелецКарты В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Источник.Идентификатор,
	|		0,
	|		0,
	|		0,
	|		ПродажиПоКартам.СуммаОстаток
	|	ИЗ
	|		Источник КАК Источник
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиПоДисконтнымКартам.Остатки(
	|					,
	|					ВладелецДисконтнойКарты В
	|						(ВЫБРАТЬ
	|							Источник.КартаПриемник.ВладелецКарты
	|						ИЗ
	|							Источник)) КАК ПродажиПоКартам
	|			ПО (Источник.КартаПриемник.ВладелецКарты = ПродажиПоКартам.ВладелецДисконтнойКарты
	|					И НЕ Источник.КартаПриемник.ВладелецКарты В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)))
	|				И (НЕ Источник.КартаПриемник.ВидДисконтнойКарты = ЗНАЧЕНИЕ(Справочник.ВидыДисконтныхКарт.ПредварительныеКартыЛояльности))) КАК ТаблицаДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.Идентификатор"
	);
	Запрос.УстановитьПараметр("ТаблицаИсточник", ТаблицаИсточник);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл

		ДанныеСтроки = Объект.КартыПокупателей.НайтиПоИдентификатору(Выборка.Идентификатор);

		Если НЕ ДанныеСтроки = Неопределено Тогда

			ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьДопустимостьКарты(КартаДисконта, Назначение, ТекущийДокумент, ТекстСообщения)

	Возврат Документы.ЗаменаДисконтныхКарт.ПроверитьДопустимостьКарты(КартаДисконта, Назначение, ТекущийДокумент, ТекстСообщения);

КонецФункции // ПроверитьДопустимостьКарты()











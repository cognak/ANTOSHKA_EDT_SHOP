#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Возвращает параметры указания серий для товаров, указанных в документе
//Параметры
//			Объект - ДокументОъъект или ДанныеФормыСтруктура - документ, для которого нужно сфомировать параметры проверки
//Возвращаемое значение
//			Тип Структура
//				Состав полей определяется требованиями фукнции ОбработкаТабличнойЧастиСервер.ЗаполнитьСтатусыУказанияСерий
Функция ПараметрыУказанияСерий(Объект)Экспорт
	
	ИспользоватьСерии                   = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПоляСвязи = Новый Массив;
	
	Шапка = Новый Структура;
		
	Шапка.Вставить("ПоляСвязи",ПоляСвязи);
	
	Шапка.Вставить("ЭтоНакладная", Истина);
	Шапка.Вставить("ЭтоОрдер"    , Истина);
	Шапка.Вставить("ТоварВШапке" , Истина);
	
	СкладскиеОперации = Новый Массив;
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Комплектация Тогда
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаСобранныхКомплектов);
	Иначе
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки);
	КонецЕсли;
	
	Шапка.Вставить("ИспользоватьСерииНоменклатуры",ИспользоватьСерии);
		
	Шапка.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	ПоляСвязи = Новый Массив;
	
	ТЧ = Новый Структура;
	
	ТЧ.Вставить("ПоляСвязи",ПоляСвязи);
	
	ТЧ.Вставить("ЭтоНакладная", Истина);
	ТЧ.Вставить("ЭтоОрдер"    , Истина);
	ТЧ.Вставить("ТоварВШапке" , Ложь);
	
	СкладскиеОперации = Новый Массив;
	Если Объект.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Комплектация Тогда
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки);
	Иначе
		СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаКомплектующихПослеРазборки);
	КонецЕсли;

	ТЧ.Вставить("ИспользоватьСерииНоменклатуры", ИспользоватьСерии);
	
	ТЧ.Вставить("СкладскиеОперации", СкладскиеОперации);
	
	ПараметрыУказанияСерий = Новый Структура;
	
	ПараметрыУказанияСерий.Вставить("Шапка",Шапка);
	ПараметрыУказанияСерий.Вставить("ТЧ",ТЧ);	
	
	Возврат ПараметрыУказанияСерий;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Проведение

// Инициализирует таблицы значений, содержащие данные документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.Магазин КАК Магазин,
	|	ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.КомплектацияНоменклатуры) КАК АналитикаХозяйственнойОперации,
	|	ДанныеДокумента.ВидОперации КАК ВидОперации,
	|	ДанныеДокумента.Организация КАК Организация,
	|	НЕ ДанныеДокумента.Магазин.СкладУправляющейСистемы КАК ФормироватьДвижения,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СборкаКомплектующих
	|ИЗ
	|	Документ.СборкаТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Реквизиты = РезультатЗапроса.Выбрать();
	Реквизиты.Следующий(); 
	
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВПараметрыЗапроса(РезультатЗапроса, Реквизиты, Запрос);
	
	Запрос.Текст = 
	"//0 ВтТаблицаКомплекты
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&Склад КАК Склад,
	|   &АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|   &Магазин КАК Магазин	
	|ПОМЕСТИТЬ ВтТаблицаКомплекты
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|   И &ФормироватьДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//1 ТаблицаТоварыНаСкладах
	//Шапка
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	1                                      КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаКомплекты.Номенклатура          КАК Номенклатура,
	|	ТаблицаКомплекты.Характеристика        КАК Характеристика,
	|	ТаблицаКомплекты.Количество            КАК Количество,
	|   &АналитикаХозяйственнойОперации        КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаКомплекты
	|ГДЕ
	|	ТаблицаКомплекты.Ссылка = &Ссылка
	|	И &СборкаКомплектующих 
	|   И ТаблицаКомплекты.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|   И &ФормироватьДвижения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	1                                      КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаКомплекты.Номенклатура          КАК Номенклатура,
	|	ТаблицаКомплекты.Характеристика        КАК Характеристика,
	|	ТаблицаКомплекты.Количество            КАК Количество,
	|   &АналитикаХозяйственнойОперации        КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаКомплекты
	|ГДЕ
	|	ТаблицаКомплекты.Ссылка = &Ссылка
	|	И НЕ &СборкаКомплектующих
	|   И ТаблицаКомплекты.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|   И &ФормироватьДвижения
	|
	//ТЧ Товары
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ТаблицаКомплектующие.НомерСтроки            КАК НомерСтроки,
	|	&Период                                     КАК Период,
	|	ТаблицаКомплектующие.Склад                  КАК Склад,
	|	ТаблицаКомплектующие.Номенклатура           КАК Номенклатура,
	|	ТаблицаКомплектующие.Характеристика         КАК Характеристика,
	|	ТаблицаКомплектующие.Количество             КАК Количество,
	|   ТаблицаКомплектующие.АналитикаХозяйственнойОперации  КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаКомплекты КАК ТаблицаКомплектующие
	|ГДЕ
	|	НЕ &СборкаКомплектующих 
	|   И ТаблицаКомплектующие.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|   И &ФормироватьДвижения
	|
	|ОБЪЕДИНИТЬ ВСЕ
    |ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаКомплектующие.НомерСтроки       КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ТаблицаКомплектующие.Склад             КАК Склад,
	|	ТаблицаКомплектующие.Номенклатура      КАК Номенклатура,
	|	ТаблицаКомплектующие.Характеристика    КАК Характеристика,
	|	ТаблицаКомплектующие.Количество        КАК Количество,
	|   ТаблицаКомплектующие.АналитикаХозяйственнойОперации  КАК АналитикаХозяйственнойОперации
	|ИЗ
	|	ВтТаблицаКомплекты КАК ТаблицаКомплектующие
	|ГДЕ
	|	&СборкаКомплектующих
	|   И ТаблицаКомплектующие.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|   И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
    |////////////////////////////////////////////////////////////////////////////////
	//1 ТаблицаТоварыОрганизаций
	//Шапка
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	1                                      КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаКомплекты.Номенклатура          КАК Номенклатура,
	|	ТаблицаКомплекты.Характеристика        КАК Характеристика,
	|	ТаблицаКомплекты.Количество            КАК Количество,
	|   &Организация                           КАК Организация,
	|   &Организация                           КАК ОрганизацияОтгрузки
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаКомплекты
	|ГДЕ
	|	ТаблицаКомплекты.Ссылка = &Ссылка
	|	И &СборкаКомплектующих 
	|   И ТаблицаКомплекты.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|   И &ФормироватьДвижения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	1                                      КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаКомплекты.Номенклатура          КАК Номенклатура,
	|	ТаблицаКомплекты.Характеристика        КАК Характеристика,
	|	ТаблицаКомплекты.Количество            КАК Количество,
	|   &Организация                           КАК Организация,
	|   &Организация                           КАК ОрганизацияОтгрузки
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаКомплекты
	|ГДЕ
	|	ТаблицаКомплекты.Ссылка = &Ссылка
	|	И НЕ &СборкаКомплектующих
	|   И ТаблицаКомплекты.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|   И &ФормироватьДвижения
	//ТЧ Товары
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ТаблицаКомплектующие.НомерСтроки            КАК НомерСтроки,
	|	&Период                                     КАК Период,
	|	ТаблицаКомплектующие.Склад                  КАК Склад,
	|	ТаблицаКомплектующие.Номенклатура           КАК Номенклатура,
	|	ТаблицаКомплектующие.Характеристика         КАК Характеристика,
	|	ТаблицаКомплектующие.Количество             КАК Количество,
	|   &Организация                                КАК Организация,
	|   &Организация                                КАК ОрганизацияОтгрузки
    |ИЗ
	|	ВтТаблицаКомплекты КАК ТаблицаКомплектующие
	|ГДЕ
	|	НЕ &СборкаКомплектующих 
	|   И ТаблицаКомплектующие.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|   И &ФормироватьДвижения
	|
	|ОБЪЕДИНИТЬ ВСЕ
    |ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаКомплектующие.НомерСтроки       КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ТаблицаКомплектующие.Склад             КАК Склад,
	|	ТаблицаКомплектующие.Номенклатура      КАК Номенклатура,
	|	ТаблицаКомплектующие.Характеристика    КАК Характеристика,
	|	ТаблицаКомплектующие.Количество        КАК Количество,
	|   &Организация                           КАК Организация,
	|   &Организация                           КАК ОрганизацияОтгрузки
    |ИЗ
	|	ВтТаблицаКомплекты КАК ТаблицаКомплектующие
	|ГДЕ
	|	&СборкаКомплектующих
	|   И ТаблицаКомплектующие.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|   И &ФормироватьДвижения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// 3 ТаблицаДвиженияСерийТоваров
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Магазин КАК Магазин,
	|	ВЫБОР
	|		КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаСобранныхКомплектов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки)
	|	КОНЕЦ КАК СкладскаяОперация,
	|	ТаблицаСерии.Ссылка КАК Документ,
	|	&Период КАК Период,
	|	ТаблицаСерии.Ссылка КАК Регистратор,
	|	ТаблицаСерии.НомерСтроки КАК НомерСтроки,
	|	0 КАК Порядок
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК СборкаТоваров
	|		ПО ТаблицаСерии.Ссылка = СборкаТоваров.Ссылка
	|			И ТаблицаСерии.Номенклатура = СборкаТоваров.Номенклатура
	|			И ТаблицаСерии.Характеристика = СборкаТоваров.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	&Магазин,
	|	ВЫБОР
	|		КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКомплектацияНоменклатуры.Комплектация)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаКомплектующихПослеРазборки)
	|	КОНЕЦ,
	|	ТаблицаСерии.Ссылка,
	|	&Период,
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.НомерСтроки,
	|	1
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК СборкаТоваров
	|		ПО ТаблицаСерии.Ссылка = СборкаТоваров.Ссылка
	|			И ТаблицаСерии.Номенклатура = СборкаТоваров.Номенклатура
	|			И ТаблицаСерии.Характеристика = СборкаТоваров.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|;";
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;

	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаСкладах"     , Результат[1].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыНаМагазинах"	 , Результат[1].Выгрузить());	//	LNK 31.08.2021 13:07:46
	ТаблицыДляДвижений.Вставить("ТаблицаТоварыОрганизаций"   , Результат[2].Выгрузить());
	ТаблицыДляДвижений.Вставить("ТаблицаДвиженияСерийТоваров", Результат[3].Выгрузить());

	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.Колонки.Удалить("Склад");	//	LNK 31.08.2021 13:07:46
	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.Колонки.Вставить(0, "Магазин", Новый ОписаниеТипов("СправочникСсылка.Магазины"));
	ТаблицыДляДвижений.ТаблицаТоварыНаМагазинах.ЗаполнитьЗначения(Запрос.Параметры.Магазин, "Магазин");
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СборкаТоваров") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СборкаТоваров",
				"Сборка товаров",
				ПечатьСборкаТоваров(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьСборкаТоваров(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
		
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	КолонкаКодов       = ФормированиеПечатныхФормСервер.ИмяДополнительнойКолонки();
	ВыводитьКоды       = НЕ ПустаяСтрока(КолонкаКодов);
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Сборка товаров';uk='Складання товарів'", КодЯзыкаПечать);
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СборкаТоваров_СборкаТоваров";
		
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Ссылка                               КАК Ссылка,
	|	Документ.Номер                                КАК Номер,
	|	Документ.Дата                                 КАК Дата,
	|	Документ.Организация                          КАК Организация,
	|	Документ.Склад                                КАК Склад,
	|	Документ.Ответственный.ФизЛицо                КАК Ответственный,
	|	Документ.Организация.Префикс                  КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад)                 КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация)           КАК ОрганизацияПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Ответственный.ФизЛицо) КАК ОтветственныйПредставление,
	|	Документ.Номенклатура                         КАК Номенклатура,
	|   Документ.Характеристика                       КАК Характеристика,
	|	Документ.Номенклатура.НаименованиеПолное      КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Характеристика)        КАК ХарактеристикаПредставление,
    |	ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			ПРЕДСТАВЛЕНИЕ(Документ.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ
	|			ПРЕДСТАВЛЕНИЕ(Документ.Упаковка)
	|	КОНЕЦ                                          КАК Упаковка,
	|	ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			Документ.Количество
	|		ИНАЧЕ
	|			Документ.КоличествоУпаковок
	|	КОНЕЦ                                          КАК Количество,
	|   Документ.ВидОперации                           КАК ВидОперации
    |
	|ИЗ
	|	Документ.СборкаТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	" + ?(ВыводитьКоды, "ТаблицаТовары.Номенклатура." + КолонкаКодов +" КАК КолонкаКодов,", "") + "
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Характеристика)   КАК ХарактеристикаПредставление,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА
	|			ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ
	|			ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
	|	КОНЕЦ                                         КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) ТОГДА 
	|			ТаблицаТовары.Количество
	|		ИНАЧЕ
	|			ТаблицаТовары.КоличествоУпаковок
	|	КОНЕЦ                                         КАК Количество
    |ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
    	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.СборкаТоваров.ПФ_MXL_СборкаТоваров", КодЯзыкаПечать);
	
	ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
	
	ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
	ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
	ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
	
	ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
	ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
	ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
	
	ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
		
	ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
	
	Если НЕ ВыводитьКоды Тогда
		
		ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
		
	КонецЕсли;
			
	ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
	ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
	ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
	 	
	ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
	ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
	ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
	
	ОбластьПодписей       = Макет.ПолучитьОбласть("Подписи");
	
	ВыборкаПоДокументам = Результаты[0].Выбрать();
	
	ВыборкаПоТабличнымЧастям = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
		
	ПервыйДокумент = Истина;
	
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если НЕ ПервыйДокумент Тогда
			
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		//ЗАГОЛОВОК
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, Локализация.ПолучитьЛокализованноеПредставление(ВыборкаПоДокументам.ВидОперации, КодЯзыкаПечать), КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьЗаголовок);
		
		//ШАПКА
		ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);	
		ОбластьШапка.Параметры.Комплект = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(
				ВыборкаПоДокументам.НоменклатураПредставление,
				ВыборкаПоДокументам.ХарактеристикаПредставление);
		ОбластьШапка.Параметры.Количество = Строка(ВыборкаПоДокументам.Количество) + " " + ВыборкаПоДокументам.Упаковка;
        		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКолонкаТоваров);
						
		ТабличныйДокумент.Присоединить(ОбластьШапкаТаблицыКонец);
		
		//СТРОКИ ТЧ
		Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
			
			ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыНачало);
			
			Если ВыводитьКоды Тогда
				
				ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ["КолонкаКодов"];
				ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаКодов);
				
			КонецЕсли;
			
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(ВыборкаПоСтрокамТЧ.НоменклатураПредставление,ВыборкаПоСтрокамТЧ.ХарактеристикаПредставление);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКолонкаТоваров);
									
			ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
			ТабличныйДокумент.Присоединить(ОбластьСтрокаТаблицыКонец);	
			
											
		КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыНачало);
		
		Если ВыводитьКоды Тогда
			
			ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаКодов);
			
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКолонкаТоваров);
						
		ТабличныйДокумент.Присоединить(ОбластьПодвалТаблицыКонец);
					
		//ПОДПИСИ
		ОбластьПодписей.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписей.Параметры.ОтветственныйПредставление = ФормированиеПечатныхФормСервер.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный);
		ТабличныйДокумент.Вывести(ОбластьПодписей);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
    	
КонецФункции

#КонецЕсли

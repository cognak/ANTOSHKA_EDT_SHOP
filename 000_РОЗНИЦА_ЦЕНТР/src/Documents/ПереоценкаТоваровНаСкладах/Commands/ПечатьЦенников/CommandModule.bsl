// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ПодготовитьСтруктуруДанных(МассивДокументов, МассивНепроведенныхДокументов)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.ЦенаНовая КАК Цена,
	|	Товары.Цена КАК СтараяЦена,
	|	Товары.ТипСкидкиНаценки КАК ТипСкидкиНаценки,
	|	Товары.СкидкаНаценка КАК СкидкаНаценка,
	|	МАКСИМУМ(Товары.ЗначениеСкидкиНаценки) КАК ЗначениеСкидкиНаценки,
	|	Товары.ТипПереоценки КАК ТипПереоценки,
	|	Товары.БонусАкцияСписан КАК БонусАкцияСписан,
	|	Товары.БонусБазаНачислен КАК БонусБазаНачислен
	|ИЗ
	|	Документ.ПереоценкаТоваровНаСкладах.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И НЕ Товары.Ссылка В (&МассивНепроведенныхДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Упаковка,
	|	Товары.ЦенаНовая,
	|	Товары.Цена,
	|	Товары.ТипСкидкиНаценки,
	|	Товары.СкидкаНаценка,
	|	Товары.ТипПереоценки,
	|	Товары.БонусАкцияСписан,
	|	Товары.БонусБазаНачислен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Шапка.Магазин.СкладПродажи КАК Склад,
	|	Шапка.Магазин.ПравилоЦенообразования КАК ПравилоЦенообразования,
	|	Шапка.Магазин КАК Магазин,
	|	МАКСИМУМ(Шапка.ДатаНовыхЦен) КАК ДатаНовыхЦен
	|ИЗ
	|	Документ.ПереоценкаТоваровНаСкладах КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка В(&МассивДокументов)
	|	И НЕ Шапка.Ссылка В (&МассивНепроведенныхДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Шапка.Магазин.СкладПродажи,
	|	Шапка.Магазин.ПравилоЦенообразования,
	|	Шапка.Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПереоценкаТоваровНаСкладах КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В(&МассивДокументов)
	|	И НЕ ТаблицаДокумента.Ссылка В (&МассивНепроведенныхДокументов)"
	);
	Запрос.УстановитьПараметр("МассивНепроведенныхДокументов", МассивНепроведенныхДокументов);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	МассивПроведенныхДокументов = МассивРезультатов[2].Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивСкладов     = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Склад").ВыгрузитьКолонку(0);
	МассивПравилЦенообразования    = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "ПравилоЦенообразования").ВыгрузитьКолонку(0);
	МассивМагазинов = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Магазин").ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьМагазин", ?(МассивМагазинов.Количество() = 1,МассивМагазинов[0], Неопределено));
	СтруктураДействий.Вставить("ЗаполнитьСклад", ?(МассивСкладов.Количество() = 1,МассивСкладов[0], МассивСкладов));
	СтруктураДействий.Вставить("ЗаполнитьПравилоЦенообразования", ?(МассивПравилЦенообразования.Количество() = 1,МассивПравилЦенообразования[0], Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Истина);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЦенников");

//	LNK 01.11.2016 17:00:25
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЭтикетокПоДокументу", Истина);
	СтруктураДействий.Вставить("УстановитьДатуПолученияЦен", ?(ТаблицаРеквизитыДокументов.Количество() = 0, '00010101', ТаблицаРеквизитыДокументов[0].ДатаНовыхЦен));
	СтруктураДействий.Вставить("УстановитьЦеныИзИсточника" , Истина);

	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	СтруктураРезультат.Вставить("МассивДокументов", МассивПроведенныхДокументов);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции // ПодготовитьДанные()

// Процедура обработки команды "ПечатьЦенников".
//
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	МассивНепроведенныхДокументов = ФормированиеПечатныхФормСервер.ПолучитьМассивПомеченныхНаУдалениеДокументов(ПараметрКоманды);
	
	Если МассивНепроведенныхДокументов.Количество() > 0 Тогда
		
		Если МассивНепроведенныхДокументов.Количество() = 1 Тогда
			ТекстСообщения = НСтр("ru = 'Документ помечен к удалению! Печать ценников невозможна.'")
		Иначе
			ТекстСообщения = НСтр("ru = 'Документы помечены к удалению! Печать ценников невозможна.'")
		КонецЕсли;
		
		ПоказатьОповещениеПользователя("В печати ценников отказано",, ТекстСообщения, БиблиотекаКартинок.Предупреждение32);
		Возврат;

	КонецЕсли;
    	
	Если ПараметрКоманды.Количество() - МассивНепроведенныхДокументов.Количество() > 0 Тогда
		
		Попытка 
			Если ЗначениеЗаполнено(ПараметрыВыполненияКоманды.Источник.ТипПереоценки) тогда
				АдресВХранилище = ПодготовитьСтруктуруДанныхСОтбором(ПараметрКоманды, МассивНепроведенныхДокументов,ПараметрыВыполненияКоманды.Источник.ТипПереоценки);
			Иначе
				АдресВХранилище = ПодготовитьСтруктуруДанных(ПараметрКоманды, МассивНепроведенныхДокументов);						
			КонецЕсли;
		Исключение
			АдресВХранилище = ПодготовитьСтруктуруДанных(ПараметрКоманды, МассивНепроведенныхДокументов);
		КонецПопытки;
		
		СтруктураПараметры = Новый Структура("АдресВХранилище", АдресВХранилище);
		
		ОткрытьФорму(
			"Обработка.ПечатьЭтикетокИЦенников.Форма.Форма",
			СтруктураПараметры,            // Параметры
			,                              // Владелец
			Новый УникальныйИдентификатор  // Уникальность
		);
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаКоманды()

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ПодготовитьСтруктуруДанныхСОтбором(МассивДокументов, МассивНепроведенныхДокументов,ОтборТипПереоценки)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.ЦенаНовая КАК Цена,
	|	Товары.Цена КАК СтараяЦена,
	|	Товары.ТипСкидкиНаценки КАК ТипСкидкиНаценки,
	|	Товары.СкидкаНаценка КАК СкидкаНаценка,
	|	МАКСИМУМ(Товары.ЗначениеСкидкиНаценки) КАК ЗначениеСкидкиНаценки,
	|	Товары.ТипПереоценки КАК ТипПереоценки
	|ИЗ
	|	Документ.ПереоценкаТоваровНаСкладах.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И НЕ Товары.Ссылка В (&МассивНепроведенныхДокументов)
	|	И Товары.ТипПереоценки В(&ТипПереоценки)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Упаковка,
	|	Товары.ЦенаНовая,
	|	Товары.Цена,
	|	Товары.ТипСкидкиНаценки,
	|	Товары.СкидкаНаценка,
	|	Товары.ТипПереоценки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Шапка.Магазин.СкладПродажи КАК Склад,
	|	Шапка.Магазин.ПравилоЦенообразования КАК ПравилоЦенообразования,
	|	Шапка.Магазин КАК Магазин,
	|	МАКСИМУМ(Шапка.ДатаНовыхЦен) КАК ДатаНовыхЦен
	|ИЗ
	|	Документ.ПереоценкаТоваровНаСкладах КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка В(&МассивДокументов)
	|	И НЕ Шапка.Ссылка В (&МассивНепроведенныхДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Шапка.Магазин.СкладПродажи,
	|	Шапка.Магазин.ПравилоЦенообразования,
	|	Шапка.Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПереоценкаТоваровНаСкладах КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В(&МассивДокументов)
	|	И НЕ ТаблицаДокумента.Ссылка В (&МассивНепроведенныхДокументов)"
	);
	Запрос.УстановитьПараметр("МассивНепроведенныхДокументов", МассивНепроведенныхДокументов);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Если ОтборТипПереоценки = Перечисления.ТипыПереоценок.Переоценка тогда
		ТипыПереценок = Новый Массив;
		ТипыПереценок.Добавить(Перечисления.ТипыПереоценок.Переоценка);
		ТипыПереценок.Добавить(Перечисления.ТипыПереоценок.ПустаяСсылка());
	ИначеЕсли ОтборТипПереоценки = Перечисления.ТипыПереоценок.ОпорнаяЦена тогда
		ТипыПереценок = Новый Массив;
		ТипыПереценок.Добавить(Перечисления.ТипыПереоценок.ОпорнаяЦена);
	ИначеЕсли ОтборТипПереоценки = Перечисления.ТипыПереоценок.ПромоЗавершение ИЛИ ОтборТипПереоценки = Перечисления.ТипыПереоценок.ПромоНачало тогда
		ТипыПереценок = Новый Массив;
		ТипыПереценок.Добавить(ОтборТипПереоценки);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТипПереоценки", ТипыПереценок);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	МассивПроведенныхДокументов = МассивРезультатов[2].Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивСкладов     = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Склад").ВыгрузитьКолонку(0);
	МассивПравилЦенообразования    = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "ПравилоЦенообразования").ВыгрузитьКолонку(0);
	МассивМагазинов = Обработки.ПечатьЭтикетокИЦенников.СвернутьТаблицуЗначенийПоРеквизиту(ТаблицаРеквизитыДокументов, "Магазин").ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьМагазин", ?(МассивМагазинов.Количество() = 1,МассивМагазинов[0], Неопределено));
	СтруктураДействий.Вставить("ЗаполнитьСклад", ?(МассивСкладов.Количество() = 1,МассивСкладов[0], МассивСкладов));
	СтруктураДействий.Вставить("ЗаполнитьПравилоЦенообразования", ?(МассивПравилЦенообразования.Количество() = 1,МассивПравилЦенообразования[0], Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Истина);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЦенников");

//	LNK 01.11.2016 17:00:25
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЭтикетокПоДокументу", Истина);
	СтруктураДействий.Вставить("УстановитьДатуПолученияЦен", ?(ТаблицаРеквизитыДокументов.Количество() = 0, '00010101', ТаблицаРеквизитыДокументов[0].ДатаНовыхЦен));
	СтруктураДействий.Вставить("УстановитьЦеныИзИсточника" , Истина);

	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	СтруктураРезультат.Вставить("МассивДокументов", МассивПроведенныхДокументов);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции // ПодготовитьДанные()


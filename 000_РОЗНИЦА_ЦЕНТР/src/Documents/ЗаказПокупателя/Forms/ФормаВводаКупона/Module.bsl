&НаКлиенте
Перем ЭтоПогашениеКупона;	// -HVOYA. 07.10.2016 22:14:57, Львова Е.А.




&НаКлиенте
Процедура ПоискШКПриИзменении(Элемент)
		БуфферПоляВвода = СокрЛП(ПоискШК);	//	LNK 21.09.2017 10:03:47
       				СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(КодЗначение,, КоличествоПринято);
				ЭтоПогашениеКупона = Истина;	//	HVOYA. 07.10.2016 22:46:23, Львова Е.А.

				ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента, КодЗначение, КоличествоПринято);


			УстановитьТекущийЭлемент();	//	LNK 13.09.2017 08:17:04

КонецПроцедуры



&НаКлиенте
Процедура УстановитьТекущийЭлемент(ОчиститьПолеВвода = Ложь)

	Если ОчиститьПолеВвода = Истина Тогда

		ПоискШК = "";

	КонецЕсли;

	ПодключитьОбработчикОжидания("УстановитьТекущийЭлементЗавершение", 0.1, Истина);

КонецПроцедуры
            
&НаКлиенте
Процедура УстановитьТекущийЭлементЗавершение()

	ТекущийЭлемент = Элементы.ПоискШК;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента, ТекКод, КолВСтроке = 1,НеВыдавать = Ложь)
	
	Если СтруктураПараметровКлиента.Свойство("НеизвестныеДанныеПО") 
		И СтруктураПараметровКлиента.НеизвестныеДанныеПО И НЕ НеВыдавать Тогда
		
		СтрокаСообщения = НСтр("ru = 'Данные по коду не найдены: %1%'");
		СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%1%", ТекКод);
		
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(СтрокаСообщения);

	ИначеЕсли СтруктураПараметровКлиента.Свойство("ТекстПредупреждения") Тогда
		
		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(СтруктураПараметровКлиента.ТекстПредупреждения);
		
		
		
		

		
	//ИначеЕсли СтруктураПараметровКлиента.Свойство("ДобавитьПодарочныйСертификатПродажа") Тогда
	//	
	//	Если ТоварыРазрешитьДобавитьПодарочныйСертификат(СтруктураПараметровКлиента.ДобавитьПодарочныйСертификатПродажа) Тогда

	//		ДобавитьВТоварыПодарочныйСертификатПродажа(СтруктураПараметровКлиента.ДобавитьПодарочныйСертификатПродажа);

	//	КонецЕсли;
		
	ИначеЕсли СтруктураПараметровКлиента.Свойство("ДобавитьСерийныеНомера") Тогда
		
		Если ТоварыРазрешитьДобавить() Тогда

			ВыбранноеЗначение = СтруктураПараметровКлиента.ДобавитьСерийныеНомера;
			ДобавитьНайденныеСерийныеНомера(ВыбранноеЗначение);

		КонецЕсли;

		БуфферПоляВвода = "";

	ИначеЕсли СтруктураПараметровКлиента.Свойство("ДобавитьСерийныеНомераCRM") Тогда	//	LNK 25.09.2019 13:12:09

		Если ТипЗнч(СтруктураПараметровКлиента.ДобавитьСерийныеНомераCRM) = Тип("Структура") Тогда

			ДобавитьНайденныеСерийныеНомера(СтруктураПараметровКлиента.ДобавитьСерийныеНомераCRM);

		ИначеЕсли НЕ ПустаяСтрока(СтруктураПараметровКлиента.ТекстСообщения) Тогда

	       	ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК("Ответ внешней системы", СтруктураПараметровКлиента.ТекстСообщения);

		КонецЕсли;
		
	КонецЕсли;
	
	//ОбновитьФорму();

КонецПроцедуры




&НаКлиенте
Функция ДобавитьНайденныеСерийныеНомера(СтруктураПараметров) 

	Если СтруктураПараметров.Свойство("Количество") Тогда 

			КоличествоУпаковок = СтруктураПараметров.Количество;

	Иначе	КоличествоУпаковок = 1;

	КонецЕсли;
	
	Если НаборПравИНастроек.ПродажиАктивированы Тогда

		ДанныеКупона = Новый Структура(
			"ЯвляетсяКупоном, ТипНоменклатуры, ИспользоватьСерийныеНомера, НоминалКупона"
			, Истина
			, ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.СкидочныйКупон")
			, Истина
			, 0);

	Иначе

		ДанныеКупона = ПолучитьДанныеКупона(СтруктураПараметров.Номенклатура, СтруктураПараметров.СерийныйНомер);

	КонецЕсли;

	Если ДанныеКупона.ЯвляетсяКупоном Тогда

		ПараметрыИнформации = ОбщегоНазначенияРТКлиентСервер.ПолучитьСтруктуруВыводимойВРМКИнформации();
		ПараметрыИнформации.ЗаголовокИнформации = НСтр("ru = 'Ошибки подарочных сертификатов и скидочных купонов'");

		Если ДанныеКупона.ИспользоватьСерийныеНомера Тогда

			СписокСтрок = Объект.ПогашениеСкидочныхКупонов.НайтиСтроки(Новый Структура("СерийныйНомер", СтруктураПараметров.СерийныйНомер));

			Если СписокСтрок.Количество() > 0 Тогда

				ПараметрыИнформации.ТекстИнформации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Номер купона ""%1"" уже содержится в данном чеке'"), СтруктураПараметров.СерийныйНомер);
				ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

				Возврат Ложь;

			КонецЕсли;

		КонецЕсли;

		Для каждого СтрокаТовары Из Объект.Товары Цикл

			Если НЕ СтрокаТовары.ПричинаРучнойСкидки.Пустая() Тогда

				ПараметрыИнформации.ТекстИнформации =
					НСтр("ru = 'Отказано! В чеке присутствует ручная скидка, использование любых скидок (и купонов) недопустимо.'");
				ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

				Возврат Ложь;

			КонецЕсли;

		КонецЦикла;

		Если ДанныеКупона.НоминалКупона = 0 И НЕ НаборПравИНастроек.ПродажиАктивированы Тогда

			СписокСтрок = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура", СтруктураПараметров.Номенклатура));

			Если СписокСтрок.Количество() > 0 Тогда

				ПараметрыИнформации.ТекстИнформации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Cкидочный купон номенклатуры ""%1"", может быть применён в чеке один раз'"), СтруктураПараметров.Номенклатура);
				ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

				Возврат Ложь;

			КонецЕсли;

			Если НЕ Объект.ПогашениеСкидочныхКупонов.Итог("НоминалКупона") = 0 Тогда

				ПараметрыИнформации.ТекстИнформации = 
					НСтр("ru = 'Отказано! Для чека уже указаны купоны с номиналом, несовместимые с текущим купоном.'");
				ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

				Возврат Ложь;

			КонецЕсли;

		Иначе

			Если НЕ ЗначениеЗаполнено(СтруктураПараметров.СерийныйНомер) Тогда

			//	.. а купона-то, собственно, и нет! Явная ошибка.
				ПараметрыИнформации.ТекстИнформации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Нет идентификации скидочного купона номенклатуры ""%1""" + ?(НаборПравИНастроек.ПродажиАктивированы, "'", ", имеющего номинал ""%2""'"))
						, СтруктураПараметров.Номенклатура
						, Формат(ДанныеКупона.НоминалКупона, "ЧДЦ=2; ЧН=0,00; ЧГ="));
				ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

				Возврат Ложь;

			Иначе
				
			//	контроль во избежание повторного ввода купона.

				СписокСтрок = Объект.ПогашениеСкидочныхКупонов.НайтиСтроки(Новый Структура("СерийныйНомер", СтруктураПараметров.СерийныйНомер));

				Если СписокСтрок.Количество() > 0 Тогда

					ПараметрыИнформации.ТекстИнформации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Cкидочный купон ""%1"" может быть применён в чеке один раз'"), СтруктураПараметров.СерийныйНомер);
					ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

					Возврат Ложь;

				КонецЕсли;

				Если НЕ НаборПравИНастроек.ПродажиАктивированы Тогда	//	LNK 26.09.2019 10:56:09

					Если НЕ Объект.ПогашениеСкидочныхКупонов.Количество() = 0 И Объект.ПогашениеСкидочныхКупонов.Итог("НоминалКупона") = 0 Тогда

						ПараметрыИнформации.ТекстИнформации = 
							НСтр("ru = 'Отказано! Для чека уже указаны купоны без номинала, несовместимые с текущим купоном.'");
						ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

						Возврат Ложь;

					КонецЕсли;

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;	// - HVOYA 21.11.2016 13:31:11, Латышев А.А. 

	Если НЕ НаборПравИНастроек.ПродажиАктивированы Тогда	//	LNK 26.09.2019 10:46:25

		ДобавитьНоменклатуруВТабЧасть(СтруктураПараметров.Номенклатура, 
			СтруктураПараметров.Характеристика, 
			СтруктураПараметров.Упаковка, 
			КоличествоУпаковок, 
			Истина,
			СтруктураПараметров.СерийныйНомер);

	КонецЕсли;

	Если ЭтоПогашениеКупона И ДанныеКупона.ЯвляетсяКупоном Тогда	// + HVOYA 21.11.2016 11:15:10, Латышев А.А.

		ДобавитьПогашениеСкидочныхКупонов(СтруктураПараметров.Номенклатура, СтруктураПараметров.СерийныйНомер, ДанныеКупона.НоминалКупона);

	КонецЕсли; 

	Возврат Истина;

КонецФункции

&НаСервере	//	LNK 16.06.2020 14:33:20
Процедура ПроверитьВозможностьПогашенияСкидочныхКупонов(Отказ, СтрокаОшибки)

	МаркетинговыеАкцииПривилегированный.ПроверитьСерийныеНомераПогашенияКупонов(
		Объект.Товары.Выгрузить(Новый Структура("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.СкидочныйКупон)),
		Объект.ПогашениеСкидочныхКупонов.Выгрузить(),
		Отказ,
		СтрокаОшибки);

КонецПроцедуры

&НаКлиенте	//	LNK 26.06.2020 12:18:51
Процедура ДобавитьПогашениеСкидочныхКупонов(Номенклатура, СерийныйНомер = Неопределено, НоминалКупона = 0)

	Если НЕ ЗначениеЗаполнено(СерийныйНомер) Тогда

		СтрокиКупонов = Объект.ПогашениеСкидочныхКупонов.НайтиСтроки(Новый Структура("СкидочныйКупон", Номенклатура));

		Если НЕ СтрокиКупонов.Количество() = 0 Тогда

		//	Уже есть такой безномерной купон..
			Возврат;

		КонецЕсли;

	КонецЕсли;

	СтрокаПогашенияКупона = Объект.ПогашениеСкидочныхКупонов.Добавить();
	СтрокаПогашенияКупона.СкидочныйКупон = Номенклатура;
	СтрокаПогашенияКупона.СерийныйНомер  = СерийныйНомер;
	СтрокаПогашенияКупона.НоминалКупона  = НоминалКупона;

	УстановитьОформлениеЭлементов();	//	LNK 27.09.2019 12:37:19

//	Если НаборПравИНастроек.ПродажиАктивированы Тогда
	Если ЗначениеЗаполнено(СерийныйНомер) Тогда

		ПоказатьОповещениеПользователя("Купон принят"
		,, "Купон «" + СерийныйНомер + "» принят и будет использован в текущем чеке"
		, БиблиотекаКартинок.Информация2_32);

	КонецЕсли;

КонецПроцедуры


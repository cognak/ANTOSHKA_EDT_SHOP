#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Получает текст запроса заполнения цен
//
// Параметры:
//  ПоДокументуОснованию - Булево, 
//
// Возвращаемое значение:
//  Строка
//
Функция ТекстЗапросаЗаполненияЦен(ПоДокументуОснованию, ОбъектЦенообразования) Экспорт
	
	Если ТипЗнч(ОбъектЦенообразования) = Тип("СправочникСсылка.Склады") Тогда
		Магазин = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектЦенообразования, "Магазин");
		ИспользоватьАссортимент = АссортиментСервер.ПолучитьФункциональнуюОпциюКонтроляАссортимента(Магазин);
	Иначе
		ИспользоватьАссортимент = АссортиментСервер.ПолучитьФункциональнуюОпциюКонтроляАссортимента(ОбъектЦенообразования);
	КонецЕсли;
	
	Если ПоДокументуОснованию Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПодЗапрос.Номенклатура КАК Номенклатура,
		|	ПодЗапрос.Характеристика КАК Характеристика,
		|	ПодЗапрос.Упаковка КАК Упаковка,
		|	ПодЗапрос.ВидЦен КАК ВидЦен,
		|	ПодЗапрос.Цена КАК Цена,
		|	ПодЗапрос.Акция,
		|	ПодЗапрос.Номенклатура.ЦеноваяГруппа КАК ЦеноваяГруппа,
		|	ДокументыУстановкиЦен.Дата КАК Дата
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Номенклатура КАК Номенклатура,
		|		Товары.Характеристика КАК Характеристика,
		|		Товары.Упаковка КАК Упаковка,
		|		Товары.ВидЦены КАК ВидЦен,
		|		Товары.Цена КАК Цена,
		|		Товары.Акция КАК Акция,
		|		Товары.Номенклатура.ЦеноваяГруппа КАК ЦеноваяГруппа,
		|		Товары.Ссылка КАК УстановкаЦен
		|	ИЗ
		|		Документ.УстановкаЦенНоменклатуры.Товары КАК Товары
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|				ПО СправочникНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
		|			ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
		|	ГДЕ
		|		Товары.Ссылка = &ОграниченияЗапроса
		|		И (ВидыНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать)
		|				ИЛИ ВидыНоменклатуры.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать)
		|					И Товары.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))) КАК ПодЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УстановкаЦенНоменклатуры КАК ДокументыУстановкиЦен
		|		ПО ПодЗапрос.УстановкаЦен = ДокументыУстановкиЦен.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	ВидЦен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеновыеГруппы.ЦеноваяГруппа КАК ЦеноваяГруппа,
		|	ЦеновыеГруппы.ВидЦен КАК ВидЦен
		|ПОМЕСТИТЬ ЦеновыеГруппыПравила
		|ИЗ
		|	Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ЦеновыеГруппы
		|ГДЕ
		|	ЦеновыеГруппы.Ссылка = &ПравилоЦенообразования
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидЦен,
		|	ЦеноваяГруппа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВидЦеныПравила.ВидЦен КАК ВидЦен
		|ПОМЕСТИТЬ ВидЦеныПравила
		|ИЗ
		|	Справочник.ПравилаЦенообразования КАК ВидЦеныПравила
		|ГДЕ
		|	ВидЦеныПравила.Ссылка = &ПравилоЦенообразования
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 50000
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Упаковка КАК Упаковка,
		|	ВложенныйЗапрос.Цена КАК Цена,
		|	ВложенныйЗапрос.Акция,
		|	ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) КАК ТекущаяДействующаяЦена,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) > 0
		|			ТОГДА (ВложенныйЗапрос.Цена / ДействующиеЦеныНоменклатуры.Цена - 1) * 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОтношениеЦенВПроцентах,
		|	ВложенныйЗапрос.Номенклатура.Код КАК КлючПорядка
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПодЗапрос.Номенклатура КАК Номенклатура,
		|		ПодЗапрос.Характеристика КАК Характеристика,
		|		ВЫБОР
		|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
		|				ТОГДА МАКСИМУМ(ПодЗапрос.УпаковкаПоЦеновымГруппам)
		|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.УпаковкаПоВидуЦен)
		|		КОНЕЦ КАК Упаковка,
		|		ПодЗапрос.ДатаУстановки КАК ДатаУстановки,
		|		ВЫБОР
		|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
		|				ТОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам)
		|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ЦенаПоВидуЦен)
		|		КОНЕЦ КАК Цена,
		|		ВЫБОР
		|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
		|				ТОГДА МАКСИМУМ(ПодЗапрос.ВидЦенПоЦеновымГруппам)
		|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ВидЦенПоВидуЦен)
		|		КОНЕЦ КАК ВидЦены,
		|		ВЫБОР
		|			КОГДА МАКСИМУМ(ПодЗапрос.АкцияПоЦеновымГруппам) = ИСТИНА
		|				ТОГДА МАКСИМУМ(ПодЗапрос.АкцияПоЦеновымГруппам)
		|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.АкцияПоВидуЦен)
		|		КОНЕЦ КАК Акция
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ТаблицаТовары.Номенклатура КАК Номенклатура,
		|			ТаблицаТовары.Характеристика КАК Характеристика,
		|			ТаблицаТовары.Упаковка КАК УпаковкаПоВидуЦен,
		|			ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК УпаковкаПоЦеновымГруппам,
		|			ТаблицаТовары.Дата КАК ДатаУстановки,
		|			ТаблицаТовары.Цена КАК ЦенаПоВидуЦен,
		|			0 КАК ЦенаПоЦеновымГруппам,
		|			ТаблицаТовары.Акция КАК АкцияПоВидуЦен,
		|			ЛОЖЬ КАК АкцияПоЦеновымГруппам,
		|			ВидЦеныПравила.ВидЦен КАК ВидЦенПоВидуЦен,
		|			ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка) КАК ВидЦенПоЦеновымГруппам
		|		ИЗ
		|			ВидЦеныПравила КАК ВидЦеныПравила
		|				ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
		|				ПО ВидЦеныПравила.ВидЦен = ТаблицаТовары.ВидЦен
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ТаблицаТовары.Номенклатура,
		|			ТаблицаТовары.Характеристика,
		|			ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка),
		|			ТаблицаТовары.Упаковка,
		|			ТаблицаТовары.Дата,
		|			0,
		|			ТаблицаТовары.Цена,
		|			ЛОЖЬ,
		|			ТаблицаТовары.Акция,
		|			ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка),
		|			ЦеновыеГруппыПравила.ВидЦен
		|		ИЗ
		|			ЦеновыеГруппыПравила КАК ЦеновыеГруппыПравила
		|				ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
		|				ПО ЦеновыеГруппыПравила.ВидЦен = ТаблицаТовары.ВидЦен
		|					И ЦеновыеГруппыПравила.ЦеноваяГруппа = ТаблицаТовары.ЦеноваяГруппа) КАК ПодЗапрос
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПодЗапрос.Номенклатура,
		|		ПодЗапрос.Характеристика,
		|		ПодЗапрос.ДатаУстановки) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(
		|				&Дата,
		|				ОбъектЦенообразования = &ОбъектЦенообразования
		|					И Регистратор <> &Ссылка) КАК ДействующиеЦеныНоменклатуры
		|		ПО ВложенныйЗапрос.Номенклатура = ДействующиеЦеныНоменклатуры.Номенклатура
		|			И ВложенныйЗапрос.Характеристика = ДействующиеЦеныНоменклатуры.Характеристика
		|			И ВложенныйЗапрос.Упаковка = ДействующиеЦеныНоменклатуры.Упаковка
		|ГДЕ
		|	ВложенныйЗапрос.Цена <> ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	КлючПорядка";
		
	Иначе //не по документу основанию
			
		Если ИспользоватьАссортимент Тогда //Запросы дополняются данными по ассортименту
		
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Ассортимент.Номенклатура КАК Номенклатура,
			|	Ассортимент.ВидЦен КАК ВидЦен
			|ПОМЕСТИТЬ втАссортиментСВидомЦен
			|ИЗ
			|	РегистрСведений.Ассортимент.СрезПоследних(КОНЕЦПЕРИОДА(&Дата, ДЕНЬ), ОбъектПланирования = &ФорматОбъектаЦенообразования) КАК Ассортимент
			|ГДЕ
			|	(Ассортимент.РазрешеныЗакупки
			|			ИЛИ Ассортимент.РазрешеныПродажи)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	ВидЦен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 50000
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	ВложенныйЗапрос.Характеристика КАК Характеристика,
			|	ВложенныйЗапрос.Упаковка КАК Упаковка,
			|	ВложенныйЗапрос.Цена КАК Цена,
			|	ВложенныйЗапрос.Акция,
			|	ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) КАК ТекущаяДействующаяЦена,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) > 0
			|			ТОГДА (ВложенныйЗапрос.Цена / ДействующиеЦеныНоменклатуры.Цена - 1) * 100
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ОтношениеЦенВПроцентах,
			|	ВложенныйЗапрос.Номенклатура.Код КАК КлючПорядка
			|ИЗ
			|	(ВЫБРАТЬ
			|		АссортиментСВидомЦен.Номенклатура КАК Номенклатура,
			|		ЦеныНоменклатурыПоАссортименту.Характеристика КАК Характеристика,
			|		ЦеныНоменклатурыПоАссортименту.Упаковка КАК Упаковка,
			|		ЕСТЬNULL(ЦеныНоменклатурыПоАссортименту.Цена, 0) КАК Цена,
			|		ЕСТЬNULL(ЦеныНоменклатурыПоАссортименту.Акция, ЛОЖЬ) КАК Акция
			|	ИЗ
			|		втАссортиментСВидомЦен КАК АссортиментСВидомЦен
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|					&Дата,
			|					ВидЦены В
			|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|								Ц.ВидЦен
			|							ИЗ
			|								втАссортиментСВидомЦен КАК Ц)
			|						И Номенклатура В
			|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|								Т.Номенклатура
			|							ИЗ
			|								втАссортиментСВидомЦен КАК Т)) КАК ЦеныНоменклатурыПоАссортименту
			|			ПО (ЦеныНоменклатурыПоАссортименту.Номенклатура = АссортиментСВидомЦен.Номенклатура)
			|				И (ЦеныНоменклатурыПоАссортименту.ВидЦены = АссортиментСВидомЦен.ВидЦен)) КАК ВложенныйЗапрос
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(
			|				&Дата,
			|				ОбъектЦенообразования = &ОбъектЦенообразования
			|					И Регистратор <> &Ссылка) КАК ДействующиеЦеныНоменклатуры
			|		ПО ВложенныйЗапрос.Номенклатура = ДействующиеЦеныНоменклатуры.Номенклатура
			|			И ВложенныйЗапрос.Характеристика = ДействующиеЦеныНоменклатуры.Характеристика
			|			И ВложенныйЗапрос.Упаковка = ДействующиеЦеныНоменклатуры.Упаковка
			|ГДЕ
			|	ВложенныйЗапрос.Цена <> ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0)
			|
			|УПОРЯДОЧИТЬ ПО
			|	КлючПорядка";   
			
		Иначе //Не используется ассортимент магазинов
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ЦеновыеГруппы.ЦеноваяГруппа КАК ЦеноваяГруппа,
			|	ЦеновыеГруппы.ВидЦен КАК ВидЦен
			|ПОМЕСТИТЬ ЦеновыеГруппыПравила
			|ИЗ
			|	Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ЦеновыеГруппы
			|ГДЕ
			|	ЦеновыеГруппы.Ссылка = &ПравилоЦенообразования
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ВидЦен,
			|	ЦеноваяГруппа
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВидЦеныПравила.ВидЦен КАК ВидЦен
			|ПОМЕСТИТЬ ВидЦеныПравила
			|ИЗ
			|	Справочник.ПравилаЦенообразования КАК ВидЦеныПравила
			|ГДЕ
			|	ВидЦеныПравила.Ссылка = &ПравилоЦенообразования
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 50000
			|	ТаблицаВедущая.Период КАК Период,
			|	ТаблицаВедущая.Номенклатура КАК Номенклатура,
			|	ТаблицаВедущая.Характеристика КАК Характеристика,
			|	ТаблицаВедущая.Упаковка КАК Упаковка,
			|	ТаблицаВедущая.Цена КАК Цена,
			|	ТаблицаВедущая.Акция,
			|	ЕСТЬNULL(ТаблицаДействующиеЦены.Цена, 0) КАК ТекущаяДействующаяЦена,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ТаблицаДействующиеЦены.Цена, 0) > 0
			|			ТОГДА (ТаблицаВедущая.Цена / ТаблицаДействующиеЦены.Цена - 1) * 100
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ОтношениеЦенВПроцентах,
			|	ТаблицаВедущая.Номенклатура.Код КАК КлючПорядка
			|ИЗ
			|	(ВЫБРАТЬ
			|		ВЫБОР
			|			КОГДА МАКСИМУМ(ПодЗапрос.ПериодПоЦеновымГруппам) <> ДАТАВРЕМЯ(1, 1, 1)
			|				ТОГДА МАКСИМУМ(ПодЗапрос.ПериодПоЦеновымГруппам)
			|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ПериодПоВидуЦен)
			|		КОНЕЦ КАК Период,
			|		ПодЗапрос.Номенклатура КАК Номенклатура,
			|		ПодЗапрос.Характеристика КАК Характеристика,
			|		ВЫБОР
			|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
			|				ТОГДА МАКСИМУМ(ПодЗапрос.УпаковкаПоЦеновымГруппам)
			|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.УпаковкаПоВидуЦен)
			|		КОНЕЦ КАК Упаковка,
			|		ВЫБОР
			|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
			|				ТОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам)
			|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ЦенаПоВидуЦен)
			|		КОНЕЦ КАК Цена,
			|		ВЫБОР
			|			КОГДА МАКСИМУМ(ПодЗапрос.АкцияПоЦеновымГруппам) = ИСТИНА
			|				ТОГДА МАКСИМУМ(ПодЗапрос.АкцияПоЦеновымГруппам)
			|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.АкцияПоВидуЦен)
			|		КОНЕЦ КАК Акция
			|	ИЗ
			|		(ВЫБРАТЬ
			|			ЦеныНоменклатурыПоВидуЦен.Период КАК ПериодПоВидуЦен,
			|			ДАТАВРЕМЯ(1, 1, 1) КАК ПериодПоЦеновымГруппам,
			|			ЦеныНоменклатурыПоВидуЦен.Номенклатура КАК Номенклатура,
			|			ЦеныНоменклатурыПоВидуЦен.Характеристика КАК Характеристика,
			|			ЦеныНоменклатурыПоВидуЦен.Упаковка КАК УпаковкаПоВидуЦен,
			|			ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК УпаковкаПоЦеновымГруппам,
			|			ЦеныНоменклатурыПоВидуЦен.Цена КАК ЦенаПоВидуЦен,
			|			0 КАК ЦенаПоЦеновымГруппам,
			|			ЦеныНоменклатурыПоВидуЦен.Акция КАК АкцияПоВидуЦен,
			|			ЛОЖЬ КАК АкцияПоЦеновымГруппам
			|		ИЗ
			|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|					&Дата,
			|					ВидЦены В
			|						(ВЫБРАТЬ
			|							ВидЦеныПравила.ВидЦен
			|						ИЗ
			|							ВидЦеныПравила КАК ВидЦеныПравила)) КАК ЦеныНоменклатурыПоВидуЦен
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ДАТАВРЕМЯ(1, 1, 1),
			|			ЦеныНоменклатурыПоЦеновымГруппам.Период,
			|			СправочникНоменклатура.Ссылка,
			|			ЦеныНоменклатурыПоЦеновымГруппам.Характеристика,
			|			ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка),
			|			ЦеныНоменклатурыПоЦеновымГруппам.Упаковка,
			|			0,
			|			ЕСТЬNULL(ЦеныНоменклатурыПоЦеновымГруппам.Цена, 0),
			|			ЛОЖЬ,
			|			ЕСТЬNULL(ЦеныНоменклатурыПоЦеновымГруппам.Акция, ЛОЖЬ)
			|		ИЗ
			|			ЦеновыеГруппыПравила КАК ЦеновыеГруппыПравила
			|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|				ПО ЦеновыеГруппыПравила.ЦеноваяГруппа = СправочникНоменклатура.ЦеноваяГруппа
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|						&Дата,
			|						ВидЦены В
			|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|								ЦеновыеГруппыПравила.ВидЦен
			|							ИЗ
			|								ЦеновыеГруппыПравила КАК ЦеновыеГруппыПравила)) КАК ЦеныНоменклатурыПоЦеновымГруппам
			|				ПО (ЦеныНоменклатурыПоЦеновымГруппам.Номенклатура = СправочникНоменклатура.Ссылка)
			|					И (ЦеныНоменклатурыПоЦеновымГруппам.ВидЦены = ЦеновыеГруппыПравила.ВидЦен)) КАК ПодЗапрос
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ПодЗапрос.Номенклатура,
			|		ПодЗапрос.Характеристика) КАК ТаблицаВедущая
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(
			|				&Дата,
			|				ОбъектЦенообразования = &ОбъектЦенообразования
			|					И Регистратор <> &Ссылка) КАК ТаблицаДействующиеЦены
			|		ПО ТаблицаВедущая.Номенклатура = ТаблицаДействующиеЦены.Номенклатура
			|			И ТаблицаВедущая.Характеристика = ТаблицаДействующиеЦены.Характеристика
			|			И ТаблицаВедущая.Упаковка = ТаблицаДействующиеЦены.Упаковка
			|ГДЕ
			|	(ТаблицаВедущая.Цена <> ЕСТЬNULL(ТаблицаДействующиеЦены.Цена, 0)
			|			ИЛИ ТаблицаВедущая.Акция <> ЕСТЬNULL(ТаблицаДействующиеЦены.Акция, 0)
			|				И НЕ ТаблицаВедущая.Период = &Дата)
			|	И НЕ ТаблицаВедущая.Цена = 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	КлючПорядка";   
					
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

//	LNK 14.12.2016 12:33:28
Процедура ОформитьПриНеобходимостиПоПеремещению(ПеремещениеСсылка)	Экспорт

	Если ОбменДаннымиПовтИсп.ЭтоГлавныйУзел()
	ИЛИ  ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().ВидУзла = Перечисления.ВидыУзлов.ТестовыйУзел	//	LNK 22.08.2023 07:03:35
	ИЛИ НЕ ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ИспользоватьПрименениеЦенПриПеремещении") = Истина
	Тогда

		Возврат;

	КонецЕсли;

//	---------------------------------------------------------------------------------------

//	Процедуру вызывать ТОЛЬКО ИЗ ВНЕШНЕЙ ТРАНЗАКЦИИ!
//	Использовать транзакцию здесь невозможно, так как вызов производится из обработчика "ПриЗаписи" (транзакция активна).

//	Иногда происходит какая-то транзакционная хрень... Валится в ошибку при записи в ЖР ссылки в случае ошибки.
//	Сделаем некоторый обход данной проблемы с помощью представления.
	ПредставлениеПеремещения = СокрЛП(ПеремещениеСсылка);

	Попытка

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаШапка.Дата,
		|	ТаблицаШапка.МагазинПолучатель КАК Магазин,
		|	ТаблицаПодчиненные.Ссылка КАК ПрименениеЦен,
		|	ТаблицаШапка.Ссылка КАК ПеремещениеТоваров
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ТаблицаШапка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрименениеЦенНоменклатуры КАК ТаблицаПодчиненные
		|		ПО ТаблицаШапка.Ссылка = ТаблицаПодчиненные.ДокументОснование
		|ГДЕ
		|	ТаблицаШапка.Ссылка = &ПеремещениеСсылка"
		);
		Запрос.УстановитьПараметр("ПеремещениеСсылка", ПеремещениеСсылка);
		ШапкаВыборка = Запрос.Выполнить().Выбрать();

		Если ШапкаВыборка.Следующий() Тогда

			Если ЗначениеЗаполнено(ШапкаВыборка.ПрименениеЦен) Тогда

				ДокументОбъект = ШапкаВыборка.ПрименениеЦен.ПолучитьОбъект();
				ДокументОбъект.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
				ДокументОбъект.УстановитьПометкуУдаления(Истина);

			КонецЕсли;

			ВыполнитьПрименениеЦенНаОснованииПеремещения(ШапкаВыборка);

		КонецЕсли;

	Исключение

	//	Ничего не сообщаем пользователю... не случилось, и всё!
		ТекстОшибки = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ПрименениеЦенПоВходящемуПеремещению.Ошибка", УровеньЖурналаРегистрации.Предупреждение
			, Метаданные.Документы.ПеремещениеТоваров,, ПредставлениеПеремещения + Символы.ПС + ТекстОшибки
			, РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);

	КонецПопытки;

КонецПроцедуры

Процедура ВыполнитьПрименениеЦенНаОснованииПеремещения(ШапкаВыборка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Ссылка.МагазинПолучатель КАК Магазин,
	|	МАКСИМУМ(ТабличнаяЧасть.Цена / ВЫБОР
	|			КОГДА ЕСТЬNULL(ТабличнаяЧасть.Упаковка.Коэффициент, 0) = 0
	|				ТОГДА 1
	|			ИНАЧЕ ТабличнаяЧасть.Упаковка.Коэффициент
	|		КОНЕЦ) КАК ЦенаЕдиницы,
	|	МИНИМУМ(ТабличнаяЧасть.НомерСтроки) КАК КлючПорядка
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПеремещениеСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Ссылка.МагазинПолучатель
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Магазин,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ЦенаЕдиницы КАК Цена,
	|	ЛОЖЬ КАК Акция,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК Упаковка,
	|	ТаблицаТовары.КлючПорядка КАК КлючПорядка
	|ИЗ
	|	Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних КАК ТаблицаЦены
	|		ПО ТаблицаТовары.Магазин = ТаблицаЦены.ОбъектЦенообразования
	|			И ТаблицаТовары.Номенклатура = ТаблицаЦены.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТаблицаЦены.Характеристика
	|ГДЕ
	|	ТаблицаЦены.Период ЕСТЬ NULL
	|	И НЕ ТаблицаТовары.ЦенаЕдиницы = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка"
	);
	Запрос.УстановитьПараметр("ПеремещениеСсылка", ШапкаВыборка.ПеремещениеТоваров);

	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		Если ЗначениеЗаполнено(ШапкаВыборка.ПрименениеЦен) Тогда

			ДокументОбъект = ШапкаВыборка.ПрименениеЦен.ПолучитьОбъект();

			Если ДокументОбъект.ПометкаУдаления Тогда

				ДокументОбъект.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
				ДокументОбъект.УстановитьПометкуУдаления(Ложь);

			КонецЕсли;

		Иначе

			ДокументОбъект = Документы.ПрименениеЦенНоменклатуры.СоздатьДокумент();
			ДокументОбъект.ДокументОснование     = ШапкаВыборка.ПеремещениеТоваров;
			ДокументОбъект.ОбъектЦенообразования = ШапкаВыборка.Магазин;
			ДокументОбъект.Ответственный         = Справочники.Пользователи.АдминистраторАвтоматов;
			ДокументОбъект.Комментарий = "Автоматическое назначение отсутствующих цен"; 

		КонецЕсли;

		ДокументОбъект.Дата = ШапкаВыборка.Дата - 1;
		ДокументОбъект.Товары.Загрузить(Результат.Выгрузить());
		ДокументОбъект.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);

	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Проведение

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Акция,
	|	ТаблицаТовары.Ссылка.Дата КАК Период,
	|	ТаблицаТовары.Ссылка.ОбъектЦенообразования КАК ОбъектЦенообразования
	|ИЗ
	|	Документ.ПрименениеЦенНоменклатуры.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (ТаблицаТовары.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать)
	|			ИЛИ ТаблицаТовары.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать)
	|				И ТаблицаТовары.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))");

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Результат = Запрос.Выполнить();

	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаДействующиеЦеныНоменклатуры", Результат.Выгрузить());

КонецПроцедуры

#КонецЕсли

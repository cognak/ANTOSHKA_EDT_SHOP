//	LNK 17.09.2016 12:52:01
Процедура ЗаполнитьЦеныПоТоварам(ПоДокументуОснованию = Ложь, КоличествоСтрокВДокументе = 0)	Экспорт

	Запрос = Новый Запрос(Документы.ПрименениеЦенНоменклатуры.ТекстЗапросаЗаполненияЦен(ПоДокументуОснованию, ОбъектЦенообразования));

	Если КоличествоСтрокВДокументе > 0 Тогда

		Запрос.Текст = СтрЗаменить(Запрос.Текст, " ПЕРВЫЕ 50000", " ПЕРВЫЕ " + Формат(КоличествоСтрокВДокументе, "ЧДЦ=; ЧГ="));

	КонецЕсли;		

	Если ПоДокументуОснованию Тогда		

		Запрос.УстановитьПараметр("ОграниченияЗапроса", ДокументОснование);

	КонецЕсли;

	ФорматМагазина = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектЦенообразования, "ФорматМагазина");

	Запрос.УстановитьПараметр("ПравилоЦенообразования", ОбъектЦенообразования.ПравилоЦенообразования);
	Запрос.УстановитьПараметр("ОбъектЦенообразования" , ОбъектЦенообразования);

	Если ТипЗнч(ОбъектЦенообразования) = Тип("СправочникСсылка.Магазины") Тогда

		Запрос.УстановитьПараметр("ФорматОбъектаЦенообразования", ФорматМагазина);

	ИначеЕсли ТипЗнч(ОбъектЦенообразования) = Тип("СправочникСсылка.Склады") Тогда

		Запрос.УстановитьПараметр("ФорматОбъектаЦенообразования", ФорматМагазина);

	Иначе

		Запрос.УстановитьПараметр("ФорматОбъектаЦенообразования",Справочники.ФорматыМагазинов.ПустаяСсылка());

	КонецЕсли;

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата"  , ?(НЕ ОбщегоНазначенияКлиентСервер.ЗначениеКлючаСтруктуры(ДополнительныеСвойства, "ГраницаЗаполнения", '00010101') = '00010101'
		, ДополнительныеСвойства.ГраницаЗаполнения
		, ?(ЗначениеЗаполнено(Дата)
			, Дата
			, ТекущаяДатаСеанса())));

	Товары.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	ИнициализироватьДокумент();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.УстановкаЦенНоменклатуры") Тогда
		
		ДокументОснование = ДанныеЗаполнения;
		
		Если Не ДокументОснование.Проведен Тогда
			
			ТекстОшибки = НСтр("ru='Документ %1 не проведен. Ввод на основании непроведенного документа невозможен.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументОснование);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТЧ_ВидыЦен.ВидЦены КАК ВидЦен
		|ПОМЕСТИТЬ ВидыЦенДокумента
		|ИЗ
		|	Документ.УстановкаЦенНоменклатуры.ВидыЦен КАК ТЧ_ВидыЦен
		|ГДЕ
		|	ТЧ_ВидыЦен.Ссылка = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ПодЗапрос.ПравилоЦенообразования
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ЦеновыеГруппы.ВидЦен КАК ВидЦен,
		|		ЦеновыеГруппы.Ссылка КАК ПравилоЦенообразования
		|	ИЗ
		|		Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ЦеновыеГруппы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВидЦеныПравила.ВидЦен,
		|		ВидЦеныПравила.Ссылка
		|	ИЗ
		|		Справочник.ПравилаЦенообразования КАК ВидЦеныПравила
		|	ГДЕ
		|		(НЕ ВидЦеныПравила.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка))) КАК ПодЗапрос
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыЦенДокумента КАК ДоступныеВидыЦен
		|		ПО (ДоступныеВидыЦен.ВидЦен = ПодЗапрос.ВидЦен)"
		);
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			
			ТекстОшибки = НСтр("ru='По документу %1 нет доступных видов цен для применения цен'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДокументОснование);
			
			ВызватьИсключение ТекстОшибки;
         			
		КонецЕсли;	
				
	КонецЕсли;
	
	ЦенообразованиеПереопределяемый.ОбработкаЗаполненияПримененияЦенНоменклатуры(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка)
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Ценообразование.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	Документы.ПрименениеЦенНоменклатуры.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	Ценообразование.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	Ценообразование.ОтразитьПрименениеЦенНоменклатуры(ДополнительныеСвойства, Движения, Отказ);

	Ценообразование.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ Пользователи.РолиДоступны("ПрименениеЦенНоменклатуры") 
	И НЕ Пользователи.РолиДоступны("ЧтениеЦенНоменклатуры") 
	И НЕ Пользователи.РолиДоступны("ПолныеПрава") Тогда
		
		ТекстОшибки = НСтр("ru='Нет прав на применение цен номенклатуры, чтение цен номенклатуры'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			,
			,
			Отказ);
			
	КонецЕсли;

	ПромежуточнаяТаблица = Товары.Выгрузить();
	ПромежуточнаяТаблица.Колонки.Добавить("КоличествоДублей");
	ПромежуточнаяТаблица.ЗаполнитьЗначения(1,"КоличествоДублей");
	ПромежуточнаяТаблица.Свернуть("Номенклатура,Характеристика,Упаковка","КоличествоДублей");
	ПромежуточнаяТаблица.Сортировать("КоличествоДублей Убыв");
	
	Если ПромежуточнаяТаблица.Количество() > 0
		   И ПромежуточнаяТаблица[0].КоличествоДублей > 1 Тогда
		
		ТекстОшибки = НСтр("ru='Не допускается двойное применение цен на одну и ту же номенклатуру, характеристику, упаковку'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			"Товары",
			"Объект.Товары",
			Отказ);
		
	КонецЕсли;	
		
	МассивНепроверяемыхРеквизитов = Новый Массив;
	ОбработкаТабличнойЧастиТоварыСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	 
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	Ценообразование.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	Ценообразование.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	Ценообразование.ЗаписатьНаборыЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
//	LNK 16.02.2017 14:33:05
	ЗаполнениеОбъектовСобытия.ОбщиеДействияПередЗаписью(ЭтотОбъект, Отказ);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

	Если ОбменДанными.Загрузка Тогда

		ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);

		Возврат;

	КонецЕсли;
	
КонецПроцедуры

//	LNK 20.09.2016 09:50:56
Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда

		Возврат;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ИнициализироватьДокумент();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// Инициализация и заполнение

// Инициализирует применение цен номенклатуры.
//
Процедура ИнициализироватьДокумент()

	Ответственный     = Пользователи.ТекущийПользователь();
	ДокументОснование = Документы.УстановкаЦенНоменклатуры.ПустаяСсылка();
	
КонецПроцедуры

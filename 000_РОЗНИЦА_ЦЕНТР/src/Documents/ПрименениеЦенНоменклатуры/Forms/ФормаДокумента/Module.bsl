///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);

	ДополнительныеКолонкиНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	
	ОбщегоНазначенияРТ.ЗаполнитьШапкуДокумента(Объект, КартинкаСостоянияДокумента, СостояниеДокумента, РазрешеноПроведение);
	
	СтруктураОбъектаЦенообразования                = ЦенообразованиеПереопределяемый.ИспользуемыйОбъектЦенообразования();
	ИмяОбъектаЦенообразования                      = СтруктураОбъектаЦенообразования.ПредставлениеОбъекта;
	МассивОграниченияТипов                         = Новый Массив;
	МассивОграниченияТипов.Добавить(ТипЗнч(СтруктураОбъектаЦенообразования.Ссылка));
	Элементы.ОбъектЦенообразования.ОграничениеТипа = Новый ОписаниеТипов(МассивОграниченияТипов);
	Элементы.ОбъектЦенообразования.Заголовок       = ИмяОбъектаЦенообразования;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		
		Элементы.ДокументОснование.Видимость = Ложь;
		
	КонецЕсли;
		
	ЗаполнитьСтарыеЦены();
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.Товары);
	КонецЕсли;
	
	НастроитьФормуПоДополнительнымПравам();

	УправлениеДоступомРТ.ПриСозданииФормыНаСервере(ЭтотОбъект);	//	LNK 17.10.2019 14:30:01
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.Товары);
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
КонецПроцедуры

//	LNK 20.09.2016 09:36:14
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	

КонецПроцедуры

//	LNK 20.09.2016 09:37:10
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)


КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.Товары);
	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеДокумента(Объект, СостояниеДокумента, КартинкаСостоянияДокумента, РазрешеноПроведение);
	
КонецПроцедуры

//	LNK 06.10.2016 12:45:12
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Объект.Товары.Количество() = 0 Тогда
		
		ТекстОшибки = НСтр("ru='Не введено ни одной строки в список ""Товары"".'");
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			Объект,
			"Товары",
			,
			Отказ);
			
	Иначе
			
		Ценообразование.ПроверитьКорректностьЗаполненияДокументаПрименениеЦенНоменклатуры(Объект, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ОткрытьФормуРедактированияКомментария(Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ЗаполнитьСтарыеЦены();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектЦенообразованияПриИзменении(Элемент)
	
	ЗаполнитьЦены(ЗначениеЗаполнено(Объект.ДокументОснование));
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Заполнение:'"),
		,
		СтрЗаменить(НСтр("ru = 'Заполнено %КоличествоСтрок% строк по назначенным ценам в таблице Товары'"), "%КоличествоСтрок%",Объект.Товары.Количество()),
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектЦенообразованияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Объект.Товары.Количество() > 0 Тогда
		Ответ = Вопрос(НСтр("ru = 'Табличная часть будет очищена.
			|Продолжить редактирование?'"), РежимДиалогаВопрос.ДаНет); 
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "Товары"

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаполнитьПоНазначеннымЦенам(Команда)
	
	Если НЕ ВозможностьЗаполненияТабличнойЧасти() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ЗаполнитьЦены();
	
	ПоказатьОповещениеПользователя(
			НСтр("ru = 'Заполнение:'"),
			,
			СтрЗаменить(НСтр("ru = 'Заполнено %КоличествоСтрок% строк по ценам номенклатуры в таблице Товары'"), "%КоличествоСтрок%",Объект.Товары.Количество()),
			БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьРедактированиеЦен(Команда)
	
	Элементы.ФормаРазрешитьРедактированиеЦен.Пометка = НЕ Элементы.ФормаРазрешитьРедактированиеЦен.Пометка;
	Элементы.ТоварыЦена.ТолькоПросмотр = НЕ Элементы.ФормаРазрешитьРедактированиеЦен.Пометка; 
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьСтарыеЦены()
	
	Если Объект.Товары.Количество() > 0 Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ТаблицаЦен.Номенклатура КАК Номенклатура,
		|	ТаблицаЦен.Характеристика КАК Характеристика,
		|	ТаблицаЦен.Упаковка КАК Упаковка,
		|	ТаблицаЦен.Цена КАК Цена,
		|	ТаблицаЦен.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ПрименениеЦенТовары
		|ИЗ
		|	&ТаблицаЦен КАК ТаблицаЦен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(ДействующиеЦены.Цена, 0) КАК ТекущаяДействующаяЦена,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДействующиеЦены.Цена, 0) > 0
		|			ТОГДА (ПрименениеЦенТовары.Цена / ДействующиеЦены.Цена - 1) * 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОтношениеЦенВПроцентах,
		|	ПрименениеЦенТовары.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	ПрименениеЦенТовары КАК ПрименениеЦенТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(
		|				&ДатаДокумента,
		|				(Номенклатура, Упаковка, Характеристика) В
		|						(ВЫБРАТЬ
		|							Товары.Номенклатура КАК Номенклатура,
		|							Товары.Упаковка КАК Упаковка,
		|							Товары.Характеристика КАК Характеристика
		|						ИЗ
		|							ПрименениеЦенТовары КАК Товары)
		|					И ОбъектЦенообразования = &ОбъектЦенообразования
		|					И Регистратор <> &Документ) КАК ДействующиеЦены
		|		ПО (ДействующиеЦены.Номенклатура = ПрименениеЦенТовары.Номенклатура)
		|			И (ДействующиеЦены.Характеристика = ПрименениеЦенТовары.Характеристика)
		|			И (ДействующиеЦены.Упаковка = ПрименениеЦенТовары.Упаковка)");
		
		Запрос.УстановитьПараметр("ТаблицаЦен",            Объект.Товары.Выгрузить());
		Запрос.УстановитьПараметр("Документ",              Объект.Ссылка);
		Запрос.УстановитьПараметр("ОбъектЦенообразования", Объект.ОбъектЦенообразования);
		Запрос.УстановитьПараметр("ДатаДокумента",         ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса()));
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СтрокаТабличнойЧасти = Объект.Товары[Выборка.НомерСтроки - 1];
			СтрокаТабличнойЧасти.ОтношениеЦенВПроцентах = Выборка.ОтношениеЦенВПроцентах;
			СтрокаТабличнойЧасти.ТекущаяДействующаяЦена = Выборка.ТекущаяДействующаяЦена;
			
		КонецЦикла;	
			
	КонецЕсли;	
		
КонецПроцедуры

// Заполняет табличную часть по данным РС "ЦеныНоменклатуры" и по списку позиций из документа-основания
//
// Параметры:
// ПоДокументуОснованию - Булево - признак заполнения списка товаров из документа основания
&НаСервере
Процедура ЗаполнитьЦены(ПоДокументуОснованию = Ложь)
	
//	LNK 17.09.2016 12:55:03
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьЦеныПоТоварам(ПоДокументуОснованию);

	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.Товары);

//	LNK 17.09.2016 12:55:07
//	Всё, что ниже, позже удалить.
	Возврат;
	Запрос = Новый Запрос;
	Запрос.Текст = Документы.ПрименениеЦенНоменклатуры.ТекстЗапросаЗаполненияЦен(ПоДокументуОснованию, Объект.ОбъектЦенообразования);
	Если ПоДокументуОснованию Тогда		
		Запрос.УстановитьПараметр("ОграниченияЗапроса", Объект.ДокументОснование);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПравилоЦенообразования", Объект.ОбъектЦенообразования.ПравилоЦенообразования);
	Запрос.УстановитьПараметр("ОбъектЦенообразования",Объект.ОбъектЦенообразования);
	Если ТипЗнч(Объект.ОбъектЦенообразования) = Тип("СправочникСсылка.Магазины") Тогда
		Запрос.УстановитьПараметр("ФорматОбъектаЦенообразования",Объект.ОбъектЦенообразования.ФорматМагазина);
	ИначеЕсли ТипЗнч(Объект.ОбъектЦенообразования) = Тип("СправочникСсылка.Склады") Тогда
		Запрос.УстановитьПараметр("ФорматОбъектаЦенообразования",Объект.ОбъектЦенообразования.ФорматМагазина);
	Иначе
		Запрос.УстановитьПараметр("ФорматОбъектаЦенообразования",Справочники.ФорматыМагазинов.ПустаяСсылка());
	КонецЕсли;
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("Дата",?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДатаСеанса()));
	
	Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.Товары);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоДополнительнымПравам()

	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Дата.ТолькоПросмотр, 
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьДату);
//	LNK 04.01.2017 13:54:53
	УправлениеПользователями.УстановитьТолькоПросмотрДляРеквизитовТабличнойЧасти(Элементы.Номер.ТолькоПросмотр,
																				 ПланыВидовХарактеристик.ПраваПользователей.ИзменятьНомерДокумента);

КонецПроцедуры

//Осуществляет проверки на заполненность реквизитов, нужных для заполнения
//Очищает табличную часть в случае необходимости
//Возвращаемое значение - Булево (Истина - все проверки и действия успешны)
&НаКлиенте
Функция ВозможностьЗаполненияТабличнойЧасти()
	
	Если НЕ ЗначениеЗаполнено(Объект.ОбъектЦенообразования) Тогда
		
		ТекстОшибки = НСтр("ru='Поле %1 не заполнено'");
			
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ИмяОбъектаЦенообразования),
			Объект.Ссылка,
			"Объект.ОбъектЦенообразования");
			
		Возврат Ложь;
			
	КонецЕсли;
		
	Если Объект.Товары.Количество() = 0 Тогда
		
		Возврат Истина;
		
	КонецЕсли; 
	
	Ответ = Вопрос(НСтр("ru = 'Табличная часть будет очищена! Продолжить выполнение операции?'"), РежимДиалогаВопрос.ДаНет, 0);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Объект.Товары.Очистить();
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
 
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

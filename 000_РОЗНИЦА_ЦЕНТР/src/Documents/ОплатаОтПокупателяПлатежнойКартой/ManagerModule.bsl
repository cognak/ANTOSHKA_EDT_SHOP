#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция возвращает массив типов для ограничения типов элемента формы РасшифровкаПлатежаДокументРасчетовСКонтрагентом
// Параметры:
//           ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Вид операции документа для которого необходимо получить массив типов
// Возвращаемое значение:
//           МассивТиповОграничений - Массив - Массив типов ограничивающих типы для реквизита формы РасшифровкаПлатежаДокументРасчетовСКонтрагентом
//
Функция ОграничениеТипаДокументаРасчетовПоХозяйственнойОперации(ХозяйственнаяОперация) Экспорт
	
	Перем МассивТиповОграничений;
	МассивТиповОграничений = Новый Массив();
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента Тогда
		МассивТиповОграничений.Добавить(Тип("ДокументСсылка.РеализацияТоваров"));
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту Тогда
		МассивТиповОграничений.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтПокупателя"));
	КонецЕсли;
	Возврат МассивТиповОграничений;
	
КонецФункции

// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
// Параметры:
//           ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хоз. операции документа для которого необходимо получить массив реквизитов
//           МассивВсехРеквизитов - Неопределено - Выходной параметр с типом Массив в который будут помещены имена всех реквизитов документов
//           МассивРеквизитовОперации - Неопределено - Выходной параметр с типом Массив в который будут помещены имена реквизитов по виду операции документа
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ХозяйственнаяОперация");
	МассивВсехРеквизитов.Добавить("Организация");
	МассивВсехРеквизитов.Добавить("Контрагент");
	МассивВсехРеквизитов.Добавить("ВидОплаты");
	МассивВсехРеквизитов.Добавить("Магазин");
	МассивВсехРеквизитов.Добавить("ДоговорЭквайринга");
	МассивВсехРеквизитов.Добавить("ЭквайринговыйТерминал");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДокументРасчетовСКонтрагентом");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Сумма");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента Тогда
		// У документа нет зависимых реквизитов от хоз. операции, добавляются все реквизиты.
		МассивРеквизитовОперации.Добавить("ХозяйственнаяОперация");
		МассивРеквизитовОперации.Добавить("Организация");
		МассивРеквизитовОперации.Добавить("Магазин");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ЭквайринговыйТерминал");
		МассивРеквизитовОперации.Добавить("ВидОплаты");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Сумма");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДокументРасчетовСКонтрагентом");
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Проведение

// Инициализирует таблицы значений, содержащие данные табличных частей документа.
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства".
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, СтруктураДополнительныеСвойства) Экспорт
	
	Запрос = Новый Запрос();
	
	ТекстЗапроса = ТекстЗапросаТаблицаРасчетыПоЭквайрингу();
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаРасчетыПоЭквайрингу", МассивРезультатов[0].Выгрузить());
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыПоЭквайрингу()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                 КАК Период,
	|	ДанныеДокумента.ДоговорЭквайринга                    КАК ДоговорЭквайринга,
	|	ДанныеДокумента.ЭквайринговыйТерминал                КАК ЭквайринговыйТерминал,
	|	ДанныеДокумента.Магазин                              КАК Магазин,
	|	ДанныеДокумента.ВидОплаты                            КАК ВидОплаты,
	|	ДанныеДокумента.СуммаДокумента                       КАК Сумма,
	|	ДанныеДокумента.СуммаТорговойУступки                 КАК СуммаТорговойУступки
	|ИЗ
	|	Документ.ОплатаОтПокупателяПлатежнойКартой КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                 КАК Период,
	|	ДанныеДокумента.ДоговорЭквайринга                    КАК ДоговорЭквайринга,
	|	ДанныеДокумента.ЭквайринговыйТерминал                КАК ЭквайринговыйТерминал,
	|	ДанныеДокумента.Магазин                              КАК Магазин,
	|	ДанныеДокумента.ВидОплаты                            КАК ВидОплаты,
	|	- ДанныеДокумента.СуммаДокумента                     КАК Сумма,
	|	ВЫБОР	КОГДА ДанныеДокумента.ДоговорЭквайринга.ЭквайрерВозвращаетКомиссиюПриВозврате
	|			ТОГДА - ДанныеДокумента.СуммаТорговойУступки
	|			ИНАЧЕ 0.00
	|	КОНЕЦ                                                КАК СуммаТорговойУступки
	|ИЗ
	|	Документ.ОплатаОтПокупателяПлатежнойКартой КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)
	|	
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецЕсли

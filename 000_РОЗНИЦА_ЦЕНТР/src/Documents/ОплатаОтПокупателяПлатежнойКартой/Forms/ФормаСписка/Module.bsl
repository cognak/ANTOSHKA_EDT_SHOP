
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	ВосстановитьНастройки();
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Организация", Организация, ЗначениеЗаполнено(Организация));
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "ЭквайринговыйТерминал", ЭквайринговыйТерминал, ЗначениеЗаполнено(ЭквайринговыйТерминал));
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Магазин", Магазин, ЗначениеЗаполнено(Магазин));
	ЗаполнитьСписокХозяйственныхОпераций();
	СохранитьРабочиеЗначенияПолейФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьТерминала();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	СохранитьНастройки();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Организация", Организация, ЗначениеЗаполнено(Организация));
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "ЭквайринговыйТерминал", ЭквайринговыйТерминал, ЗначениеЗаполнено(ЭквайринговыйТерминал));
	СохранитьРабочиеЗначенияПолейФормы();
	УстановитьДоступностьТерминала();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЭквайринговыйТерминалПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "ЭквайринговыйТерминал", ЭквайринговыйТерминал, ЗначениеЗаполнено(ЭквайринговыйТерминал));
	СохранитьРабочиеЗначенияПолейФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборМагазинПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Магазин", Магазин, ЗначениеЗаполнено(Магазин));
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "ЭквайринговыйТерминал", ЭквайринговыйТерминал, ЗначениеЗаполнено(ЭквайринговыйТерминал));
	СохранитьРабочиеЗначенияПолейФормы();
	УстановитьДоступностьТерминала();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура НовыйДокументОперацияВозвратОплатыКлиенту(Команда)
	
	НовыйДокументОплатаОтПокупателяПлатежнойКартой(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура НовыйДокументОплатаОтПокупателяПлатежнойКартой(ХозяйственнаяОперацияИндекс, Основание = Неопределено)
	
	СтруктураПараметры = Новый Структура;
	Если Основание = Неопределено Тогда
		ХозяйственнаяОперация = СписокХозяйственныхОпераций[ХозяйственнаяОперацияИндекс].Значение;
		СтруктураПараметры.Вставить("Основание", Новый Структура("ХозяйственнаяОперация, Организация, ЭквайринговыйТерминал", ХозяйственнаяОперация, Организация, ЭквайринговыйТерминал));
	Иначе
		СтруктураПараметры.Вставить("Основание", Основание);
	КонецЕсли;
	
	ОткрытьФорму("Документ.ОплатаОтПокупателяПлатежнойКартой.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокХозяйственныхОпераций()
	
	СписокХозяйственныхОпераций.Очистить();
	СписокХозяйственныхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента); // 0
	СписокХозяйственныхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту); // 1
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Настройки

// Процедура востанавливает ранее сохраненные настройки (Отбор по огранизации, эквайринговый терминал, магазин)
// сохраненные при предыдущем обращении к форме списка документов
&НаСервере
Процедура ВосстановитьНастройки()
	Перем ЗначениеНастроек;

	ЗначениеНастроек = ХранилищеОбщихНастроек.Загрузить("Документы.ОплатаОтПокупателяПлатежнойКартой", "НастройкиСпискаОплатаОтПокупателяПлатежнойКартой");
	
	Если ТипЗнч(ЗначениеНастроек) = Тип("Структура") Тогда
		ЗначениеНастроек.Свойство("ТекущаяОрганизация", Организация);
		ЗначениеНастроек.Свойство("ТекущийЭквайринговыйТерминал", ЭквайринговыйТерминал);
		ЗначениеНастроек.Свойство("ТекущийМагазин", Магазин);
	КонецЕсли;

КонецПроцедуры

//Процедура сохраняет установленные отборы на магазин, организация, эквайринговый терминал
//
&НаСервере
Процедура СохранитьНастройки()
	Перем Настройки;

	Настройки = Новый Структура;
	Настройки.Вставить("ТекущаяОрганизация", Организация);
	Настройки.Вставить("ТекущийЭквайринговыйТерминал", ЭквайринговыйТерминал);
	Настройки.Вставить("ТекущийМагазин", Магазин);
	
	ХранилищеОбщихНастроек.Сохранить("Документы.ОплатаОтПокупателяПлатежнойКартой", "НастройкиСпискаОплатаОтПокупателяПлатежнойКартой", Настройки);
	СохранитьРабочиеЗначенияПолейФормы(Истина);
КонецПроцедуры

&НаСервере
Процедура СохранитьРабочиеЗначенияПолейФормы(СохранитьНеопределено = Ложь)
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ТекущийЭквайринговыйТерминал", , ?(СохранитьНеопределено, Неопределено, ЭквайринговыйТерминал));
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ТекущийМагазин", , ?(СохранитьНеопределено, Неопределено, Магазин));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьТерминала()
	
	Если ЗначениеЗаполнено(Магазин) И ЗначениеЗаполнено(Организация) Тогда
		Элементы.ОтборЭквайринговыйТерминал.ТолькоПросмотр = Ложь;
	Иначе
		Элементы.ОтборЭквайринговыйТерминал.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ПолучитьСписоКдатПрихода(Номенклатура,ДатаПриходаС,ДатаПриходаПо)
	СписокДат = Новый Массив;
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(ТоварыНаСкладах.Период, ДЕНЬ) КАК Период
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
		|ГДЕ
		|	ТоварыНаСкладах.Период МЕЖДУ &ПериодС И &ПериодПо
		|	И ТоварыНаСкладах.Номенклатура = &Номенклатура
		|	И ТоварыНаСкладах.ВидДвижения = &ВидДвижения
		|	И ТоварыНаСкладах.Активность = ИСТИНА
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ТоварыНаСкладах.Период, ДЕНЬ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ПериодПо", ДатаПриходаПо);
	Запрос.УстановитьПараметр("ПериодС", ДатаПриходаС);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//Если Не РезультатЗапроса.Пустой() тогда
	//	СписокДат = РезультатЗапроса.Выгрузить();
	//КонецЕсли;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокДат.Добавить(ВыборкаДетальныеЗаписи.Период);
	КонецЦикла;
	
	Возврат СписокДат;	
	
КонецФункции

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	//Если НЕ Элементы.ТоварыДатаПрихода.СписокВыбора.НайтиПоЗначению(Объект.ДатаПрихода) = Неопределено Тогда
	//	Возврат;
	//КонецЕсли;
	 
	Элементы.ТоварыДатаПрихода.СписокВыбора.Очистить();
	
	ТекДанные = Элементы.Товары.ТекущиеДанные;
Если ЗначениеЗаполнено(ТекДанные.Номенклатура) и  ЗначениеЗаполнено(ТекДанные.ДатаПриходаС) и  ЗначениеЗаполнено(ТекДанные.ДатаПриходаПо) тогда	
	Список = ПолучитьСписоКдатПрихода(ТекДанные.Номенклатура,ТекДанные.ДатаПриходаС,ТекДанные.ДатаПриходаПо);

	Если Список.Количество() > 0 тогда
		Элементы.ТоварыДатаПрихода.СписокВыбора.ЗагрузитьЗначения(Список);
		
	КонецЕсли;
Иначе
	Элементы.ТоварыДатаПрихода.СписокВыбора.Очистить();
КонецЕсли;	//Для каждого строка из Список тогда
	//	Элементы.ДатаПрихода.СписокВыбора.Добавить(строка.Дата);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыДатаПриходаПриИзменении(Элемент)
	//
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.ДатаПрихода) И ЗначениеЗаполнено(ТекДанные.СрокГодности) тогда 
		ТекДанные.ОсталосьДнейДоконцаСрока =   ОКР((ТекДанные.СрокГодности - ТекДанные.ДатаПрихода)/86400);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	Если НЕ Объект.Товары.Количество() = 0 тогда
		Элементы.ТоварыДатаПрихода.СписокВыбора.Очистить();
		
		ТекДанные = Элементы.Товары.ТекущиеДанные;
		Если ЗначениеЗаполнено(ТекДанные.Номенклатура) и  ЗначениеЗаполнено(ТекДанные.ДатаПриходаС) и  ЗначениеЗаполнено(ТекДанные.ДатаПриходаПо) тогда	
			Список = ПолучитьСписоКдатПрихода(ТекДанные.Номенклатура,ТекДанные.ДатаПриходаС,ТекДанные.ДатаПриходаПо);

			Если Список.Количество() > 0 тогда
				Элементы.ТоварыДатаПрихода.СписокВыбора.ЗагрузитьЗначения(Список);
				
			КонецЕсли;
		Иначе
			Элементы.ТоварыДатаПрихода.СписокВыбора.Очистить();
		КонецЕсли;	//Для каждого строка из Список тогда
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПродажиНаСервере(ДатаНачала,ДатаОкончания)
	//Для Каждого Строка из Объект.Товары цикл
	//	Строка.КоличествоПродажи = ПолучитьКолПрожи(Строка.Номенклатура,ПериодПродажи.ДатаНачала,ПериодПродажи.ДатаОкончания);
	//КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабДок.Номенклатура КАК Номенклатура,
		|	ТабДок.ДатаПриходаС КАК ДатаПриходаС,
		|	ТабДок.ДатаПриходаПо КАК ДатаПриходаПо,
		|	ТабДок.ДатаПрихода КАК ДатаПрихода,
		|	ТабДок.СрокГодности КАК СрокГодности,
		|	ТабДок.ОсталосьДнейДоконцаСрока КАК ОсталосьДнейДоконцаСрока,
		|	ТабДок.Цена КАК Цена,
		|	ТабДок.КоличествоОтстаток КАК КоличествоОтстаток,
		|	ТабДок.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ТаблицаДок
		|ИЗ
		|	&ТабДок КАК ТабДок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДок.Номенклатура КАК Номенклатура,
		|	ТаблицаДок.ДатаПриходаС КАК ДатаПриходаС,
		|	ТаблицаДок.ДатаПриходаПо КАК ДатаПриходаПо,
		|	ТаблицаДок.ДатаПрихода КАК ДатаПрихода,
		|	ТаблицаДок.СрокГодности КАК СрокГодности,
		|	ТаблицаДок.ОсталосьДнейДоконцаСрока КАК ОсталосьДнейДоконцаСрока,
		|	ТаблицаДок.Характеристика КАК Характеристика,
		|	ПродажиОбороты.КоличествоОборот КАК КоличествоПродажи,
		|	ТаблицаДок.Цена КАК Цена,
		|	ТаблицаДок.КоличествоОтстаток КАК КоличествоОтстаток
		|ИЗ
		|	ТаблицаДок КАК ТаблицаДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, Авто, Склад.Магазин = &Магазин) КАК ПродажиОбороты
		|		ПО ТаблицаДок.Номенклатура = ПродажиОбороты.Номенклатура
		|			И ТаблицаДок.Характеристика = ПродажиОбороты.Характеристика";
	
	Запрос.УстановитьПараметр("Магазин", Объект.Магазин);   	
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", ДатаОкончания);
	Запрос.УстановитьПараметр("ТабДок", Объект.Товары.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если НЕ РезультатЗапроса.Пустой() тогда 
		Объект.Товары.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПродажи(Команда)
	Если ЗначениеЗаполнено(ПериодПродажи) тогда
		ЗаполнитьПродажиНаСервере(ПериодПродажи.ДатаНачала,ПериодПродажи.ДатаОкончания);
	Иначе
		ПоказатьОповещениеПользователя("Заполните период продажи");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьКолПрожи(Номенклатура, ДатаС, ДатаПо)
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПриходыНаСервере()
	Для Каждого Строка из Объект.Товары цикл
		Строка.ДатаПриходаС = ПериодПрихода.ДатаНачала;
		Строка.ДатаПриходаПо = ПериодПрихода.ДатаОкончания; 		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПриходы(Команда) 	
	
	Если ЗначениеЗаполнено(ПериодПродажи) тогда
		ЗаполнитьПриходыНаСервере();
	Иначе
		ПоказатьОповещениеПользователя("Заполните период продажи");  
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДатаФормированияПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ДатаФормирования) тогда
		Если КонецДня(Объект.ДатаФормирования) < КонецДня(ТекущаяДата()) тогда
			ПоказатьОповещениеПользователя("Дата формирования меньше текущей даты! Измените дату формирования!");
		Иначе
			ЗаполнитьЦеныНаСервере();
		КонецЕсли;
	Иначе
		ПоказатьОповещениеПользователя("Заполните дату формирования!");		
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьЦеныНаСервере()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабДок.Номенклатура КАК Номенклатура,
		|	ТабДок.ДатаПриходаС КАК ДатаПриходаС,
		|	ТабДок.ДатаПриходаПо КАК ДатаПриходаПо,
		|	ТабДок.ДатаПрихода КАК ДатаПрихода,
		|	ТабДок.СрокГодности КАК СрокГодности,
		|	ТабДок.ОсталосьДнейДоконцаСрока КАК ОсталосьДнейДоконцаСрока,
		|	ТабДок.КоличествоПродажи КАК КоличествоПродажи,
		|	ТабДок.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ ТаблицаДок
		|ИЗ
		|	&ТабДок КАК ТабДок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДействующиеЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
		|	ТаблицаДок.Номенклатура КАК Номенклатура,
		|	ТаблицаДок.ДатаПриходаС КАК ДатаПриходаС,
		|	ТаблицаДок.ДатаПриходаПо КАК ДатаПриходаПо,
		|	ТаблицаДок.ДатаПрихода КАК ДатаПрихода,
		|	ТаблицаДок.СрокГодности КАК СрокГодности,
		|	ТаблицаДок.ОсталосьДнейДоконцаСрока КАК ОсталосьДнейДоконцаСрока,
		|	ТаблицаДок.КоличествоПродажи КАК КоличествоПродажи,
		|	ТаблицаДок.Характеристика КАК Характеристика,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	ТаблицаДок КАК ТаблицаДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&Период, ОбъектЦенообразования = &Магазин) КАК ДействующиеЦеныНоменклатурыСрезПоследних
		|		ПО ТаблицаДок.Номенклатура = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И ТаблицаДок.Характеристика = ДействующиеЦеныНоменклатурыСрезПоследних.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Период, Склад.Магазин = &Магазин) КАК ТоварыНаСкладахОстатки
		|		ПО ТаблицаДок.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		|			И ТаблицаДок.Характеристика = ТоварыНаСкладахОстатки.Характеристика";
	
	Запрос.УстановитьПараметр("Магазин", Объект.Магазин);   	
	Запрос.УстановитьПараметр("Период", Объект.ДатаФормирования);
	Запрос.УстановитьПараметр("ТабДок", Объект.Товары.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если НЕ РезультатЗапроса.Пустой() тогда 
		Объект.Товары.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
		

	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЦены(Команда)
 	ЗаполнитьЦеныНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.Магазин) тогда
		Объект.Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.Ответственный) тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ДатаФормирования) тогда
		Объект.ДатаФормирования = ТекущаяДатаСеанса();
	КонецЕсли;

	УправлениеДоступомРТ.ПриСозданииФормыНаСервере(ЭтотОбъект);	//	LNK 17.10.2019 14:30:01
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСрокРеализацииДнейПриИзменении(Элемент)
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.ДатаПрихода) И ЗначениеЗаполнено(ТекДанные.СрокГодности) тогда 
		ТекДанные.ОсталосьДнейДоконцаСрока =   ОКР((ТекДанные.СрокГодности - ТекДанные.ДатаПрихода)/86400);
	КонецЕсли;	
КонецПроцедуры

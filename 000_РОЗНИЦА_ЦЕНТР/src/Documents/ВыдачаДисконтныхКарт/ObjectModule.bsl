#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)

	Автор = Неопределено;
	УзелСоздания = Неопределено;
	
	ИнициализироватьДокумент();

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	ИнициализироватьДокумент();

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)


КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ЗаполнениеОбъектовСобытия.ОбщиеДействияПередЗаписью(ЭтотОбъект, Отказ);	//	LNK 20.08.2019 08:35:01
	
	ДополнительныеСвойства.Вставить("ЭтоНовый"   , ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	ДополнительныеСвойства.Вставить("Проведен"   , ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Проведен", Ложь));
	
	ЗаполнениеОбъектовСобытия.ОбщиеДействияПередЗаписью(ЭтотОбъект, Отказ);

	Если ОбменДанными.Загрузка = Истина Тогда

		Возврат;

	КонецЕсли;

	ПроведениеСервер.УстановитьРежимПроведения(Проведен, РежимЗаписи, РежимПроведения);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	//
	// Инициализация данных документа
	Документы.ВыдачаДисконтныхКарт.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	//
	// Подготовка наборов записей
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	//
	ВыполнитьОперацииПоДисконтнымКартам(Отказ);
	//
	СформироватьСписокРегистровДляКонтроля();
	//
	// Запись наборов записей
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)


КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//	LNK 31.07.2019 12:26:21
Процедура ИнициализироватьДокумент()
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Магазин = ПараметрыСеанса.ТекущийМагазин;

	Если Магазин.Пустая() Тогда

		Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;

	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;

	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

Процедура ВыполнитьОперацииПоДисконтнымКартам(Отказ)

	УстановитьПривилегированныйРежим(Истина);

	Для каждого СтрокаТаблицы Из ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНазначитьВладельцевКарт Цикл

		ВерификацияКлиентовСервер.УстановитьДанныеИнформационнойКарты(СтрокаТаблицы);

	КонецЦикла;

КонецПроцедуры
	
#КонецОбласти
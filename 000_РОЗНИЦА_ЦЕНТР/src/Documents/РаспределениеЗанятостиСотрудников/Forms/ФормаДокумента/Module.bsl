&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	//ЗаполнитьСотрудников();
КонецПроцедуры             

             

&НаСервере
Процедура ЗаполнитьСотрудников(Сотрудник = Неопределено) 
	Если Сотрудник = Неопределено Тогда
		Объект.Сотрудники.Очистить();
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	               |	РаботникиОрганизаций.Должность КАК Должность,
	               |	РаботникиОрганизаций.Магазин КАК Магазин
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		РаботникиОрганизаций.Организация КАК Организация,
	               |		РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	               |		МАКСИМУМ(РаботникиОрганизаций.ПериодНачала) КАК ПериодНачала
	               |	ИЗ
	               |		РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		РаботникиОрганизаций.Организация,
	               |		РаботникиОрганизаций.Сотрудник) КАК ВложенныйЗапрос1
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	               |				МАКСИМУМ(СостояниеРаботниковОрганизацийСрезПоследних.Период) КАК Период,
	               |				СостояниеРаботниковОрганизацийСрезПоследних.Организация КАК Организация
	               |			ИЗ
	               |				РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних КАК СостояниеРаботниковОрганизацийСрезПоследних
	               |			ГДЕ
	               |				СостояниеРаботниковОрганизацийСрезПоследних.Организация = &Организация
	               |				И СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник.Магазин = &Магазин
	               |				И СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник.Уволен = ЛОЖЬ
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник,
	               |				СостояниеРаботниковОрганизацийСрезПоследних.Организация) КАК ВложенныйЗапрос
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних КАК СостояниеРаботниковОрганизацийСрезПоследних
	               |				ПО ВложенныйЗапрос.Сотрудник = СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник
	               |					И ВложенныйЗапрос.Период = СостояниеРаботниковОрганизацийСрезПоследних.Период
	               |			ПО РаботникиОрганизаций.Сотрудник = ВложенныйЗапрос.Сотрудник
	               |				И РаботникиОрганизаций.Организация = ВложенныйЗапрос.Организация
	               |		ПО ВложенныйЗапрос1.Организация = РаботникиОрганизаций.Организация
	               |			И ВложенныйЗапрос1.Сотрудник = РаботникиОрганизаций.Сотрудник
	               |			И ВложенныйЗапрос1.ПериодНачала = РаботникиОрганизаций.ПериодНачала
	               |ГДЕ
	               |	(ЕСТЬNULL(СостояниеРаботниковОрганизацийСрезПоследних.Состояние, 0) = 0
	               |			ИЛИ СостояниеРаботниковОрганизацийСрезПоследних.Состояние В (&СостоянияРаботающих)
	               |			ИЛИ СостояниеРаботниковОрганизацийСрезПоследних.ПериодЗавершения < &КонецПериода
	               |				И СостояниеРаботниковОрганизацийСрезПоследних.СостояниеЗавершения В (&СостоянияРаботающих))
	               |	И РаботникиОрганизаций.Сотрудник.Магазин = &Магазин
	               |	И РаботникиОрганизаций.Сотрудник.Уволен = ЛОЖЬ
	               |	И РаботникиОрганизаций.Организация = &Организация
	               |	И РаботникиОрганизаций.ЗанимаемыхСтавок > 0";

	Если Сотрудник <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + " И РаботникиОрганизаций.Сотрудник = &Сотрудник";
		Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	КонецЕсли;                                                     
	
	//2025-07-02 sa Нужно подсвечивать цветом уволенных сотрудников. для этого нужно определить в каком они состоянии находятся.
	МассивСостоянийРаботающихСотрудников = Новый Массив;
	МассивСостоянийРаботающихСотрудников.Добавить(Перечисления.СостоянияРаботникаОрганизации.Работает);
	МассивСостоянийРаботающихСотрудников.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускЕжегодный);
	МассивСостоянийРаботающихСотрудников.Добавить(Перечисления.СостоянияРаботникаОрганизации.ПриостановкаТрудовогоДоговора);
	МассивСостоянийРаботающихСотрудников.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебный);
	Запрос.УстановитьПараметр("СостоянияРаботающих",МассивСостоянийРаботающихСотрудников);
	Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(Объект.Дата));
	
	Запрос.УстановитьПараметр("Магазин",Объект.Магазин);
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		ДанныеРаспределения = Объект.Сотрудники;
		НайденныеСотрудники = ДанныеРаспределения.НайтиСтроки(Новый Структура("Сотрудник",Результат.Сотрудник));
		Если НайденныеСотрудники.Количество() = 0 Тогда 
			Строка_ = ДанныеРаспределения.Добавить();
		Иначе
			Строка_ = НайденныеСотрудники[0];
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Строка_,Результат);
	КонецЦикла;
	
	
	
КонецПроцедуры  


&НаКлиенте
Процедура СотрудникиПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.Сотрудники.ТекущиеДанные; 
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОбновитьКолонкиТаблицыРаспределения();
	ОбновитьИтоги(ТекущаяСтрока.НомерСтроки-1);

КонецПроцедуры

&НаСервере
Процедура ОбновитьИтоги(ИндексСтроки)
	ТекСтрока = Объект.Сотрудники[ИндексСтроки];
	
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 

	ТекСтрока.Итог = 0;
	ДанныеРаспределения = Объект.Сотрудники.Выгрузить();
	Для Каждого Колонка_ Из ДанныеРаспределения.Колонки Цикл
		Если Найти(Колонка_.Имя,"Проект_")=0 Тогда
			Продолжить;
		КонецЕсли;
		ТекСтрока.Итог = ТекСтрока.Итог + ТекСтрока[Колонка_.Имя];
	КонецЦикла;

	
КонецПроцедуры


&НаСервере
Процедура ОбновитьКолонкиТаблицыРаспределения()

	Для Каждого СтрокаСотрудник Из Объект.Сотрудники Цикл
		ПараметрыСотрудника = ПолучитьПараметрыСотрудника(СтрокаСотрудник.Сотрудник);
		СтрокаСотрудник.Должность = ПараметрыСотрудника.Должность;
		СтрокаСотрудник.ИНН = ПараметрыСотрудника.ИНН; 
		ОбновитьИтоги(СтрокаСотрудник.НомерСтроки-1);
	КонецЦикла;
	
КонецПроцедуры  


&НаСервере
Функция ПолучитьПараметрыСотрудника(Сотрудник) 
	Ответ = Новый Структура("Должность,ИНН,Сотрудник");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ФизическиеЛица.Ссылка КАК Сотрудник,
	               |	РаботникиОрганизаций.Должность КАК Должность,
	               |	ФизическиеЛица.ИНН КАК ИНН
	               |ИЗ
	               |	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |		ПО РаботникиОрганизаций.Сотрудник = ФизическиеЛица.Ссылка
	               |ГДЕ
	               |	ФизическиеЛица.Магазин = &Магазин
	               |	И ФизическиеЛица.Сотрудник = ИСТИНА
	               |	И ФизическиеЛица.Уволен = ЛОЖЬ
	               |	И ФизическиеЛица.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Сотрудник);
	Запрос.УстановитьПараметр("Магазин",Объект.Магазин);
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Ответ,Результат);
	КонецЦикла;
	
	Возврат Ответ;
	
КонецФункции

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи) 
	ОбновитьКолонкиТаблицыРаспределения();
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекущийОбъект.УстановитьНовыйНомер(Формат(Объект.Магазин.НомерМагазина,"ЧЦ=3; ЧДЦ=0; ЧВН=; ЧГ=; ЧФ=Ч-"));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьКолонкиТаблицыРаспределения();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	Если не ЗначениеЗаполнено(Объект.Магазин) тогда 
		Объект.Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;	
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Объект.Организация) тогда 
		//Объект.Организация = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин,"Организация");	
		Объект.Организация = ПолучитьОрганизацию(ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);	
	КонецЕсли;
	
	Если Объект.Сотрудники.Количество() = 0 Тогда
  		ЗаполнитьСотрудников(); 
	КонецЕсли;
	ОбновитьКолонкиТаблицыРаспределения(); 


КонецПроцедуры

&НаСервере
Функция ПолучитьОрганизацию(Магазин)
	ОрганизацИЯ = Справочники.Организации.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ 
		|	ОрганизацииПодразделенийСрезПоследних.Организация КАК Организация
		|ИЗ
		|	РегистрСведений.ОрганизацииПодразделений.СрезПоследних(&ТекДата, Владелец = &Владелец) КАК ОрганизацииПодразделенийСрезПоследних";
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Владелец", Магазин);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОрганизацИЯ = ВыборкаДетальныеЗаписи.Организация;	
	КонецЦикла;
	Возврат Организация;
КонецФункции

&НаКлиенте
Процедура КомандаЗаполнить(Команда) 
	Если Объект.Сотрудники.Количество() >0 Тогда
		Ответ = Вопрос("Таблица сотрудников уже заполнена. Вы действительно хотите ее очистить?",РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаполнитьСотрудников();
		КонецЕсли;
	Иначе
		ЗаполнитьСотрудников();
	КонецЕсли;
	
	ОбновитьКолонкиТаблицыРаспределения();
КонецПроцедуры

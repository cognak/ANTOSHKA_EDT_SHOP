
&НаКлиенте
Процедура ПроектыПриИзменении(Элемент)
	
	ОбновитьКолонкиТаблицыРаспределения();
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьСоответствиеКолонок(КлючНазвание = Истина) 
	СоответствиеКолонок = Новый Соответствие;
	Для Каждого СтрокаПроект Из Объект.Проекты Цикл
		Если КлючНазвание = Истина Тогда
			СоответствиеКолонок.Вставить(ПолучитьИмяКолонки(СтрокаПроект.ВидНоменклатуры),СтрокаПроект.ВидНоменклатуры);
		Иначе
			СоответствиеКолонок.Вставить(СтрокаПроект.ВидНоменклатуры,ПолучитьИмяКолонки(СтрокаПроект.ВидНоменклатуры));
		КонецЕсли;
		
	КонецЦикла;                                                                                                     
	
	Возврат СоответствиеКолонок;
	
КонецФункции

&НаСервере
Процедура ОбновитьКолонкиТаблицыРаспределения()
	ТЗ_Распределения = ДанныеРаспределения.Выгрузить();
	МассивКолонок = Новый Массив; 
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	   
	//2025-06-22 sa добавляем недостающие колонки в таблицу распределения. 
	Для Каждого СтрокаПроекта ИЗ Объект.Проекты Цикл 
		ИмяКолонки = ПолучитьИмяКолонки(СтрокаПроекта.ВидНоменклатуры);
		Если ИмяКолонки = "Кол_" Тогда
			Продолжить;
		КонецЕсли;
		МассивКолонок.Добавить(ИмяКолонки);
		Если ТЗ_Распределения.Колонки.Найти(ИмяКолонки) = Неопределено Тогда
			ТЗ_Распределения.Колонки.Добавить(ИмяКолонки,Новый ОписаниеТипов("Число"),Строка(СтрокаПроекта.ВидНоменклатуры)); 
			НовыйРеквизит = Новый РеквизитФормы(ИмяКолонки, Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(3,0)),"ДанныеРаспределения", Строка(СтрокаПроекта.ВидНоменклатуры));
			МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
		КонецЕсли;
	КонецЦикла;                            
	ЭтаФорма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	СоответствиеКолонок = ПолучитьСоответствиеКолонок();
	
	Для Каждого ИмяКолонки Из МассивКолонок Цикл 
		ВидНоменклатуры = СоответствиеКолонок.Получить(ИмяКолонки);
		Если Элементы.ДанныеРаспределения.ПодчиненныеЭлементы.Найти(ИмяКолонки) = Неопределено Тогда
			НоваяКолонка = Элементы.Добавить(ИмяКолонки, Тип("ПолеФормы"), ЭтаФорма.Элементы.ДанныеРаспределения);
			НоваяКолонка.Заголовок = Строка(ВидНоменклатуры);
			НоваяКолонка.ПутьКДанным = "ДанныеРаспределения."+ИмяКолонки;
			НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода; 
		КонецЕсли;
	КонецЦикла;	   

	//2025-06-22 sa удаляем лишние колонки из таблицы распределения.
	МассивУдаляемыхКолонок = Новый Массив; 
	МассивУдаляемыхРеквизитов = Новый Массив;
	
	Для Каждого Колонка Из ТЗ_Распределения.Колонки Цикл 
		Если Найти(Колонка.Имя,"Кол_")=0 Тогда
			Продолжить;
		КонецЕсли;
		Если МассивКолонок.Найти(Колонка.Имя) = Неопределено Тогда
			МассивУдаляемыхКолонок.Добавить(Колонка.Имя);
			НовыйРеквизит = Новый РеквизитФормы(Колонка.Имя, Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(3,0)),"ДанныеРаспределения", Строка(СтрокаПроекта.ВидНоменклатуры));
			МассивУдаляемыхРеквизитов.Добавить(НовыйРеквизит);
			УдаляемыйЭлемент = Элементы.Найти(Колонка.Имя);
			Если УдаляемыйЭлемент <> Неопределено Тогда
				Элементы.Удалить(УдаляемыйЭлемент);	
				
				УдаляемыйВидНоменклатуры = СоответствиеКолонок.Получить(Колонка.Имя); 
				УдаляемыеСтроки = Объект.Сотрудники.НайтиСтроки(Новый Структура("ВидНоменклатуры",УдаляемыйВидНоменклатуры));
				Для Каждого СтрокаСотрудник Из УдаляемыеСтроки Цикл
					Объект.Сотрудники.Удалить(СтрокаСотрудник);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяКолонки(Знач НазваниеКолонки)
	НазваниеКолонки = СокрЛП(НазваниеКолонки); 
	Результат = "Кол_";
	КоличествоСимволов = СтрДлина(НазваниеКолонки);
	РазрешенныеСимволы = "АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЬЫЪЭЮЯабвгдеёжзийклмнопрстуфхцчшщьыъэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz01234567890";
	Для н = 1 По КоличествоСимволов Цикл
		ТекСимвол = Сред(НазваниеКолонки,н,1);
		Если Найти(РазрешенныеСимволы,ТекСимвол) > 0 Тогда
			Результат = Результат + ТекСимвол;
		Иначе
			Результат = Результат + "_";
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции


&НаКлиенте
Процедура КомандаОбновитьТЗ(Команда)
	ОбновитьКолонкиТаблицыРаспределения();
КонецПроцедуры


&НаКлиенте
Процедура ПроектыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ПроектыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ТекСтрока = Элементы.Проекты.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Объект.Проекты.НайтиСтроки(Новый Структура("ВидНоменклатуры", ТекСтрока.ВидНоменклатуры));
	Если МассивСтрок.Количество() > 1 Тогда
		Сообщить("Вид номенкатуры "+ТекСтрока.ВидНоменклатуры+" уже есть в табличной части!"); 
		ТекСтрока.ВидНоменклатуры = Неопределено;
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	ЗаполнитьСотрудников();
КонецПроцедуры             

&НаСервере
Процедура ЗаполнитьСотрудников(Сотрудник = Неопределено)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ  РАЗРЕШЕННЫЕ
	               |	ФизическиеЛица.Ссылка КАК Сотрудник,
	               |	РаботникиОрганизаций.Должность КАК Должность,
	               |	ФизическиеЛица.ИНН КАК ИНН
	               |ИЗ
	               |	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |		ПО РаботникиОрганизаций.Сотрудник = ФизическиеЛица.Ссылка
	               |ГДЕ
	               |	ФизическиеЛица.Магазин = &Магазин
	               |	И ФизическиеЛица.Сотрудник = ИСТИНА
	               |	И ФизическиеЛица.Уволен = ЛОЖЬ";
	Если Сотрудник <> Неопределено Тогда
		Запрос.Текст = Запрос.Текст + " И ФизическиеЛица.Ссылка = &Сотрудник";
		Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	КонецЕсли;
	Запрос.УстановитьПараметр("Магазин",Объект.Магазин);
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		НайденныеСотрудники = ДанныеРаспределения.НайтиСтроки(Новый Структура("Сотрудник",Результат.Сотрудник));
		Если НайденныеСотрудники.Количество() = 0 Тогда 
			Строка_ = ДанныеРаспределения.Добавить();
		Иначе
			Строка_ = НайденныеСотрудники[0];
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Строка_,Результат);
	КонецЦикла;
	
	
	
КонецПроцедуры  

&НаСервере
Функция ПолучитьПараметрыСотрудника(Сотрудник) 
	Ответ = Новый Структура("Должность,ИНН,Сотрудник");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ФизическиеЛица.Ссылка КАК Сотрудник,
	               |	РаботникиОрганизаций.Должность КАК Должность,
	               |	ФизическиеЛица.ИНН КАК ИНН
	               |ИЗ
	               |	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |		ПО РаботникиОрганизаций.Сотрудник = ФизическиеЛица.Ссылка
	               |ГДЕ
	               |	ФизическиеЛица.Магазин = &Магазин
	               |	И ФизическиеЛица.Сотрудник = ИСТИНА
	               |	И ФизическиеЛица.Уволен = ЛОЖЬ
	               |	И ФизическиеЛица.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Сотрудник);
	Запрос.УстановитьПараметр("Магазин",Объект.Магазин);
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Ответ,Результат);
	КонецЦикла;
	
	Возврат Ответ;
	
КонецФункции

&НаКлиенте
Процедура ДанныеРаспределенияСотрудникПриИзменении(Элемент)
	ТекСтрока = Элементы.ДанныеРаспределения.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьСотрудников(ТекСтрока.Сотрудник);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	СохранитьДанныеРаспределения(ТекущийОбъект);
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеРаспределения(ТекущийОбъект)
	СоответствиеКолонок = ПолучитьСоответствиеКолонок();
	ТекущийОбъект.Сотрудники.Очистить();
	Для Каждого СтрокаРаспределения Из ДанныеРаспределения Цикл
		Для Каждого Колонка_ Из СоответствиеКолонок Цикл
			Строка_ = ТекущийОбъект.Сотрудники.Добавить();
			Строка_.Сотрудник = СтрокаРаспределения.Сотрудник;
			Строка_.ВидНоменклатуры = Колонка_.Значение;
			Строка_.Процент = СтрокаРаспределения[Колонка_.Ключ];
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьДанныеРаспределения(Команда)
	СохранитьДанныеРаспределения(Объект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВосстановитьДанныеРаспределения();  
	Если Объект.Сотрудники.Количество() = 0 Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаПроекты;	
	КонецЕсли;
КонецПроцедуры                        

&НаСервере
Процедура ВосстановитьДанныеРаспределения()
	ОбновитьКолонкиТаблицыРаспределения();
	
	СоответствиеКолонок = ПолучитьСоответствиеКолонок();
	СоответствиеПроектов = ПолучитьСоответствиеКолонок(Ложь);
	Для Каждого СтрокаСотрудник Из Объект.Сотрудники Цикл
		НайденныеСотрудники = ДанныеРаспределения.НайтиСтроки(Новый Структура("Сотрудник",СтрокаСотрудник.Сотрудник));  
		Если НайденныеСотрудники.Количество() = 0 Тогда
			Строка_ = ДанныеРаспределения.Добавить();
			Строка_.Сотрудник = СтрокаСотрудник.Сотрудник;
			ПараметрыСотрудника = ПолучитьПараметрыСотрудника(СтрокаСотрудник.Сотрудник);
			Строка_.Должность = ПараметрыСотрудника.Должность;
			Строка_.ИНН = ПараметрыСотрудника.ИНН;
		Иначе
			Строка_ = НайденныеСотрудники[0];
		КонецЕсли;
		Для Каждого Колонка_ Из СоответствиеКолонок Цикл 
			Если Колонка_.Значение = СтрокаСотрудник.ВидНоменклатуры Тогда
				Строка_[Колонка_.Ключ] = СтрокаСотрудник.Процент;
				Строка_.Итог = Строка_.Итог + СтрокаСотрудник.Процент;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не РольДоступна("АдминистраторСистемы") Тогда
		Элементы.ГруппаСотрудники.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРаспределенияПриИзменении(Элемент)
	ТекСтрока = Элементы.ДанныеРаспределения.ТекущиеДанные;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СоответствиеКолонок = ПолучитьСоответствиеКолонок();
	ТекСтрока.Итог = 0;
	Для Каждого КлючИЗначение Из СоответствиеКолонок Цикл
		Если Найти(КлючИЗначение.Ключ,"Кол_")=0 Тогда
			Продолжить;
		КонецЕсли;
		ТекСтрока.Итог = ТекСтрока.Итог + ТекСтрока[КлючИЗначение.Ключ];
	КонецЦикла;
	Если ТекСтрока.Итог > 100 Тогда
		Элементы.ДанныеРаспределения.ПодчиненныеЭлементы.ДанныеРаспределенияИтог.ЦветФона = Новый Цвет(240,100,100);
	Иначе
		Элементы.ДанныеРаспределения.ПодчиненныеЭлементы.ДанныеРаспределенияИтог.ЦветФона = Новый Цвет(255,255,255);
	КонецЕсли;
	//РаскраситьТаблицу();
	
КонецПроцедуры 

//&НаСервере
//Процедура РаскраситьТаблицу()

//    УсловноеОформление.Элементы.Очистить();

//    // Пример: выделить строку, если значение в колонке "Сумма" больше 1000
//    НовоеОформление = УсловноеОформление.Элементы.Добавить();
//	//НовоеОформление.Поля.Элементы
//    //НовоеОформление.Отображать = Истина;
//    //НовоеОформление.Значение = ДанныеРаспределения.Колонки.Сумма;
//    НовоеОформление.Поле = "Итог";
//    НовоеОформление.Использование = Истина;
//    НовоеОформление.Представление = "Сумма более 100";
//    НовоеОформление.Оформление.УстановитьЗначение("ЦветФона", WebЦвета.Красный);  // Пример: красный фон
//    НовоеОформление.Условие = "Значение > 100"; // Условие на сервере
//КонецПроцедуры
	

                                                                                                                         																														

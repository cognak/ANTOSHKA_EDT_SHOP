#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.Ссылка.Пустая() Тогда
		
		Записать();
		
	КонецЕсли;
	
	Элементы.ПерезаполнитьДокумент.Видимость = ПустаяСтрока(Объект.ВнешняяСсылка);

	ОтображениеЭлементов();
	ПодключитьОбработчикОжидания("ОтображениеЭлементов", 60);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Статусы.Параметры.УстановитьЗначениеПараметра("Регистратор", Объект.Ссылка);
	
	Элементы.МагазинПолучатель.Видимость = Не (Объект.МагазинПолучатель = Справочники.Магазины.ПустаяСсылка())
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		
		ВГХНеЗаполнены = ПроверитьВГХ();
	
		Если ВГХНеЗаполнены	Тогда
			Сообщить("Не заполены ВГХ!");  
	        Отказ = Истина; 			
		КонецЕсли;
		
		Если Не ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДокументОснование,"ОператорДоставки")
				= ПредопределенноеЗначение("Перечисление.ОператорыДоставки.ВнутренняяЛогистика") Тогда
		 
			Если НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ЗаказПокупателя,"ДоставкаНаАдрес") Тогда
				
				Отделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ЗаказПокупателя,"Отделение");
				
				Если ПустаяСтрока(Отделение)
						Или Отделение = ПредопределенноеЗначение("Справочник.Отделения.ПустаяСсылка")
						Или Отделение = ПредопределенноеЗначение("Справочник.Почтоматы.ПустаяСсылка") Тогда
					Сообщить("Отделение не заполнено!");  
	        		Отказ = Истина; 			
				КонецЕсли;
				
				ОбъемныйВесПревышен = ПроверитьОбъемныйВес();  
				Если ОбъемныйВесПревышен Тогда
					Сообщить("Превышен максимальный объемный вес для данного отделения!");  
			        Отказ = Истина; 			
				КонецЕсли; 
			Иначе

				Если ПустаяСтрока(Объект.ГородПолучатель)
						Или ПустаяСтрока(Объект.УлицаПолучатель)
						Или ПустаяСтрока(Объект.ДомПолучатель)
						Или ПустаяСтрока(Объект.КвартираПолучатель)
						Или Объект.ГородПолучатель = ПредопределенноеЗначение("Справочник.ГородаДоставки.ПустаяСсылка")
						Или Объект.УлицаПолучатель = ПредопределенноеЗначение("Справочник.Улицы.ПустаяСсылка") Тогда 

					Сообщить("Не заполнен адресные данные!");  
			        Отказ = Истина; 			
				
				КонецЕсли; 
				
			КонецЕсли;
	
			Если ПустаяСтрока(Объект.ИмяПолучатель) Тогда
				Сообщить("Не заполнено имя");
				Отказ = Истина;
			КонецЕсли;    

			Если ПустаяСтрока(Объект.ФамилияПолучатель) тогда
				Сообщить("Не заполнена фамилия!");  
				Отказ = Истина;
			КонецЕсли;    
			
			Телефон = СокрЛП(Объект.ТелефонПолучатель); 
			Если СтрДлина(Телефон)<> 12 или Лев(Телефон,3)<>"380"	тогда
				Сообщить("Неверный номер телефона.");  
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НомерТелефонаОтправительПриИзменении(Элемент)
	Если Объект.ТелефонПолучатель <> "" тогда
		Поз = Найти(Объект.ТелефонПолучатель, " ");
		Если Поз <> 0 тогда    
			Сообщить("Не правильно введен телефон!");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтправкаИзМагазинаПриИзменении(Элемент)
	ОтображениеЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПерезаполнитьДокумент(Команда)
	
	ПерезаполнитьДокументНаСервере();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПосылкаПолучена(Команда)
	ПосылкаПолученаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьДокументы(Команда)
	ПолучитьДокументыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьНакладную(Команда)
	ОтменитьНакладнуюНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНакладную(Команда)
	Если Модифицированность Или Объект.Ссылка.Пустая() Тогда
		Сообщить("Треба записати документ");
	Иначе
		
		Если Объект.ОператорДоставки = ПредопределенноеЗначение("Перечисление.ОператорыДоставки.НоваяПочта") Тогда
			Если ПустаяСтрока(Объект.ВнешняяСсылка) тогда
				ТТННаСервере();
			Иначе
				Сообщить("ТТН создана раенне, повторное создание невозможно!");
			КонецЕсли;
		Иначе 
			Сообщить("Создание ТТН возможно только для оператора НОВАЯ ПОЧТА!");
		КонецЕсли;    
	КонецЕсли;    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПроверитьОбъемныйВес() 
	
	Возврат ОбменНПСервер.ПроверитьОбъемныйВес(Объект.ДокументОснование, Объект.ОтделениеПолучатель);

КонецФункции

&НаСервере
Процедура ОтменитьНакладнуюНаСервере()
	Если Не ОбменНПСервер.ПроверитьРедактирование(Объект.Номер, Объект.ТелефонПолучатель) = 1 Тогда
		Сообщить("По данному документу инициировано движение посылки, редактирование запрещено!");
		Возврат;
	КонецЕсли;
	
	Если СокрЛП(Объект.ВнешняяСсылка) = СокрЛП(ОбменНПСервер.УдалитьНакладную(Объект.ВнешняяСсылка)) Тогда
		
		Сообщить("Накладная удалена");
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПолучитьДокументыНаСервере()
	СтруктураОтветаЭН = ОбменНПСервер.СтруктураОтветаПоЭНИнициализация(Объект.ДокументОснование);
	
	СтруктураОтветаЭН.НомерТТН = СокрЛП(Объект.Номер);
	СтруктураОтветаЭН.ТТНRef = Объект.ВнешняяСсылка;
	ФайлыДляНакладной = ОбменНПСервер.СохранитьТТНвPDF(СтруктураОтветаЭН);
	
	Объект.ПутьКФайлуТТН = ФайлыДляНакладной.ПутьКФайлуТТН;
	Объект.ПутьКФайлуСтикера = ФайлыДляНакладной.ПутьКФайлуСтикера;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПосылкаПолученаНаСервере()
	
	ТекДата = ТекущаяДатаСеанса();

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КодыСтатусовТТН.Ссылка
		|ИЗ
		|	Справочник.КодыСтатусовТТН КАК КодыСтатусовТТН
		|ГДЕ
		|	КодыСтатусовТТН.ОператорДоставки = &ОператорДоставки
		|	И КодыСтатусовТТН.СтатусПосылки = ЗНАЧЕНИЕ(Перечисление.СтатусыПосылокСлужбыДоставки.Получена)";
	
	Запрос.УстановитьПараметр("ОператорДоставки", Объект.ОператорДоставки);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		СтатусТТН = Выборка.Ссылка;
		
		НаборЗаписей = РегистрыСведений.СтатусыЭН.СоздатьНаборЗаписей(); 

		НаборЗаписей.Отбор.ДокументРегистратор.Установить(Объект.Ссылка); 
		НаборЗаписей.Отбор.Период.Установить(ТекДата); 

		НоваяЗапись 					= НаборЗаписей.Добавить();
		НоваяЗапись.ДокументРегистратор = Объект.Ссылка; 
		НоваяЗапись.Период 				= ТекДата;
		НоваяЗапись.СтатусЭН   			= СтатусТТН; 
		НаборЗаписей.Записать();  
	КонецЕсли;		

КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьДокументНаСервере()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьДокумент(ДокументОбъект, Объект.ДокументОснование);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Функция НакладнаяУОператора()

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СтатусыЭНСрезПоследних.СтатусЭН.СтатусПосылки КАК СтатусПосылки
		|ИЗ
		|	РегистрСведений.СтатусыЭН.СрезПоследних(, ДокументРегистратор = &ДокументРегистратор) КАК СтатусыЭНСрезПоследних";
	
	Запрос.УстановитьПараметр("ДокументРегистратор", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат = Не (Выборка.СтатусПосылки = Перечисления.СтатусыПосылокСлужбыДоставки.Новая);
	Иначе
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Процедура ОтображениеЭлементов()

	Элементы.ГруппаОтправительАдрес.Видимость = Объект.ОтправкаИзМагазина;
	Элементы.ГруппаОтправительОтделение.Видимость = Не Объект.ОтправкаИзМагазина;

	Элементы.ГруппаПолучательАдрес.Видимость = Объект.ДоставкаНаАдрес;
	Элементы.ГруппаПолучательОтделение.Видимость = Не Объект.ДоставкаНаАдрес;
	
	Элементы.ФормаОтменитьНакладную.Видимость = Не ПустаяСтрока(Объект.ВнешняяСсылка)
												И Не НакладнаяУОператора();

КонецПроцедуры

&НаСервере
Процедура ТТННаСервере()
	ОтветЭН = ОбменНПСервер.РегистрацияЕН(Объект.Ссылка);
	Если ОтветЭН.Успех Тогда
		Сообщить("Создана ЭН");
		Объект.ДатаДоставки = ОтветЭН.ДатаДоставки;
		Объект.СуммаДоставки = ОтветЭН.СуммаОтОператора;
		Объект.Номер = ОтветЭН.НомерТТН;
		Объект.ВнешняяСсылка = ОтветЭН.ТТНRef;
		Объект.ПутьКФайлуСтикера = ОтветЭН.ПутьКФайлуСтикера;
		Объект.ПутьКФайлуТТН = ОтветЭН.ПутьКФайлуТТН;
		Записать();
	Иначе
		Сообщить("В результате создания ТТН возникла ошибка!");
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПроверитьВГХ()
	Результат = Ложь; 
	Если Объект.ДокументОснование.Упаковки.Количество() = 0 тогда 
		Результат = Истина; 
	Иначе 
		Для Каждого Строка Из Объект.ДокументОснование.Упаковки Цикл
			Если Строка.Ширина = 0 Или Строка.Ширина = 0 Или Строка.Ширина = 0 тогда
				Результат = Истина; 
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат Результат; 
КонецФункции

#КонецОбласти

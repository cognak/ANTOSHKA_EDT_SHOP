#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗапросДоступностиТоваров") Тогда

		Если (Не (ДанныеЗаполнения.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.КОтправке
			Или ДанныеЗаполнения.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.ВыданДоставке))
			И Не ТехническаяПоддержкаВызовСервера.ИсключительныйРежим() Тогда
			
			ТекстОшибки = НСтр("ru='Отказано! «%1» не собран (или уже закрыт). Ввод на основании такого документа невозможен.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеЗаполнения);
			
			ВызватьИсключение ТекстОшибки;

		КонецЕсли;
		
		Если ДанныеЗаполнения.ТипДоставки = Перечисления.ТипДоставкиЗаказПокупателя.Самовывоз
				И ДанныеЗаполнения.Упаковки.Количество() = 0 Тогда
			
			ТекстОшибки = НСтр("ru='Отказано! «%1» не заполнены ВГХ. Ввод на основании такого документа невозможен.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеЗаполнения);
			
			ВызватьИсключение ТекстОшибки;

		КонецЕсли;
		
		Если ДанныеЗаполнения.МагазинОтправитель = ДанныеЗаполнения.МагазинПолучатель Тогда
			
			ТекстОшибки = НСтр("ru='Отказано! У «%1» магазины отправителя и получателя одинаковы. Ввод на основании такого документа невозможен.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеЗаполнения);

			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		ТТНСоздана = ОбменНПСервер.ТТНУжеСоздана(ДанныеЗаполнения);

		Если ТТНСоздана Тогда
			
			ТекстОшибки = НСтр("ru='Отказано! Для «%1» уже есть электронная накладная. Ввод на основании такого документа невозможен.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеЗаполнения);

			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
		ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполнить документ.
// 
// Параметры:
//  ДокументДляЗаполнения - ДокументОбъект.ЭлектроннаяНакладная - Документ для заполнения
//  ДанныеЗаполнения - ДокументСсылка.ЗапросДоступностиТоваров -  Данные заполнения
Процедура ЗаполнитьДокумент(ДокументДляЗаполнения, ДанныеЗаполнения) Экспорт

	ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
	ДокументДляЗаполнения.Дата = ТекущаяДатаСеанса();
	ДокументДляЗаполнения.ДокументОснование = ДанныеЗаполнения;
	ДокументДляЗаполнения.ЗаказПокупателя = ДанныеЗаполнения.ДокументОснование;
	
	Если ДанныеЗаполнения.ОператорДоставки = Перечисления.ОператорыДоставки.ВнутренняяЛогистика Тогда
		ОператорДоставки = Перечисления.ОператорыДоставки.НоваяПочта;
	Иначе
		ОператорДоставки = ДанныеЗаполнения.ОператорДоставки;
	КонецЕсли;
	
	Если Не ДанныеЗаполнения.СуммаОплатыДоставки = 0 Тогда
		ДокументДляЗаполнения.НашаСуммаДоставки = ДанныеЗаполнения.СуммаОплатыДоставки;
	КонецЕсли;
	
	ДокументДляЗаполнения.КомментарийДляДоставки = ДанныеЗаполнения.ДокументОснование.КомментарийДляДоставки;
	
	//Данные получателя
	Если ДанныеЗаполнения.ОператорДоставки = Перечисления.ОператорыДоставки.ВнутренняяЛогистика Тогда
		
		ДокументДляЗаполнения.МагазинПолучатель = ДанныеЗаполнения.МагазинПолучатель;
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	НастройкиСлужбДоставки.Контрагент,
			|	НастройкиСлужбДоставки.КонтактноеЛицо,
			|	НастройкиСлужбДоставки.НомерТелефона,
			|	НастройкиСлужбДоставки.Отделение,
			|	НастройкиСлужбДоставки.ОтправкаИзМагазина,
			|	КонтактныеЛицаСлужбыДоставки.КонтактноеЛицо,
			|	КонтактныеЛицаСлужбыДоставки.Телефон,
			|	КонтактныеЛицаСлужбыДоставки.Email,
			|	КонтактныеЛицаСлужбыДоставки.Контрагент,
			|	КонтактныеЛицаСлужбыДоставки.Фамилия,
			|	КонтактныеЛицаСлужбыДоставки.Имя,
			|	КонтактныеЛицаСлужбыДоставки.Отчество,
			|	КонтактныеЛицаСлужбыДоставки.Действие,
			|	КонтактныеЛицаСлужбыДоставки.Предопределенный,
			|	КонтактныеЛицаСлужбыДоставки.ИмяПредопределенныхДанных,
			|	КонтактныеЛицаСлужбыДоставки.Представление,
			|	АдресаСлужбыДоставки.ИДГорода,
			|	АдресаСлужбыДоставки.ИДУлицы,
			|	АдресаСлужбыДоставки.Дом,
			|	АдресаСлужбыДоставки.Адрес
			|ИЗ
			|	РегистрСведений.НастройкиСлужбДоставки КАК НастройкиСлужбДоставки
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаСлужбыДоставки КАК КонтактныеЛицаСлужбыДоставки
			|		ПО НастройкиСлужбДоставки.КонтактноеЛицо = КонтактныеЛицаСлужбыДоставки.Ссылка
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АдресаСлужбыДоставки КАК АдресаСлужбыДоставки
			|		ПО НастройкиСлужбДоставки.Адрес = АдресаСлужбыДоставки.Ссылка
			|ГДЕ
			|	НастройкиСлужбДоставки.Магазин = &Магазин
			|	И НастройкиСлужбДоставки.ОператорДоставки = &ОператорДоставки";
		
		Запрос.УстановитьПараметр("Магазин", ДанныеЗаполнения.МагазинПолучатель);
		Запрос.УстановитьПараметр("ОператорДоставки", ОператорДоставки);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ДокументДляЗаполнения.ДоставкаНаАдрес = Истина;
			ДокументДляЗаполнения.ГородПолучатель = Выборка.ИДГорода;
			ДокументДляЗаполнения.ОтделениеПолучатель = Выборка.Отделение;
			ДокументДляЗаполнения.УлицаПолучатель = Выборка.ИДУлицы;
			ДокументДляЗаполнения.ФамилияПолучатель = Выборка.Фамилия;
			ДокументДляЗаполнения.ИмяПолучатель = Выборка.Имя;
			ДокументДляЗаполнения.ОтчествоПолучатель = Выборка.Отчество;
			ДокументДляЗаполнения.ТелефонПолучатель = Выборка.Телефон;
			ДокументДляЗаполнения.ДомПолучатель = Выборка.Дом;
		
		КонецЦикла;
			
	Иначе
			
		ДокументДляЗаполнения.МагазинПолучатель = Справочники.Магазины.ПустаяСсылка();
		ДокументДляЗаполнения.ГородПолучатель = ДанныеЗаполнения.ДокументОснование.Город;
		ДокументДляЗаполнения.ОтделениеПолучатель = ДанныеЗаполнения.ДокументОснование.Отделение;
		ДокументДляЗаполнения.УлицаПолучатель = ДанныеЗаполнения.ДокументОснование.Улица;
		ДокументДляЗаполнения.ДомПолучатель = ДанныеЗаполнения.ДокументОснование.Дом;
		ДокументДляЗаполнения.КвартираПолучатель = ДанныеЗаполнения.ДокументОснование.Квартира;
		ДокументДляЗаполнения.ФамилияПолучатель = ДанныеЗаполнения.ДокументОснование.Фамилия;
		ДокументДляЗаполнения.ИмяПолучатель = ДанныеЗаполнения.ДокументОснование.Имя;
		ДокументДляЗаполнения.ОтчествоПолучатель = ДанныеЗаполнения.ДокументОснование.Отчество;
		ДокументДляЗаполнения.ТелефонПолучатель = ДанныеЗаполнения.ДокументОснование.Телефон;
		ДокументДляЗаполнения.РайонПолучатель = ДанныеЗаполнения.ДокументОснование.Район;
		ДокументДляЗаполнения.ОбластьПолучатель = ДанныеЗаполнения.ДокументОснование.Область;
		ДокументДляЗаполнения.ДоставкаНаАдрес = ДанныеЗаполнения.ДокументОснование.ДоставкаНаАдрес;

	КонецЕсли;	

	//Данные отправителя
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	НастройкиСлужбДоставки.Контрагент,
		|	НастройкиСлужбДоставки.КонтактноеЛицо,
		|	НастройкиСлужбДоставки.НомерТелефона,
		|	НастройкиСлужбДоставки.Отделение,
		|	НастройкиСлужбДоставки.ОтправкаИзМагазина,
		|	АдресаСлужбыДоставки.ИДГорода,
		|	АдресаСлужбыДоставки.ИДУлицы,
		|	АдресаСлужбыДоставки.Дом,
		|	АдресаСлужбыДоставки.Ссылка
		|ИЗ
		|	РегистрСведений.НастройкиСлужбДоставки КАК НастройкиСлужбДоставки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АдресаСлужбыДоставки КАК АдресаСлужбыДоставки
		|		ПО НастройкиСлужбДоставки.Адрес = АдресаСлужбыДоставки.Ссылка
		|ГДЕ
		|	НастройкиСлужбДоставки.Магазин = &Магазин
		|	И НастройкиСлужбДоставки.ОператорДоставки = &ОператорДоставки";
	
	Если ТипЗнч(ДанныеЗаполнения.МагазинОтправитель) = Тип("СправочникСсылка.Склады") Тогда
		Запрос.УстановитьПараметр("Магазин", ДанныеЗаполнения.МагазинОтправитель.Магазин);
	Иначе
		Запрос.УстановитьПараметр("Магазин", ДанныеЗаполнения.МагазинОтправитель);
	КонецЕсли;

	Запрос.УстановитьПараметр("ОператорДоставки", ОператорДоставки);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДокументДляЗаполнения.КонтрагентОтправитель = Выборка.Контрагент;
		ДокументДляЗаполнения.ОтправкаИзМагазина = Выборка.ОтправкаИзМагазина;
		ДокументДляЗаполнения.КонтактноеЛицоОтправитель = Выборка.КонтактноеЛицо;
		ДокументДляЗаполнения.НомерТелефонаОтправитель = Выборка.НомерТелефона;
		ДокументДляЗаполнения.ГородОтправитель = Выборка.ИДГорода;
		ДокументДляЗаполнения.УлицаОтправитель = Выборка.ИДУлицы;
		ДокументДляЗаполнения.НомерДомаОтправитель = Выборка.Дом;
		ДокументДляЗаполнения.АдресОтправитель = Выборка.Ссылка;
		ДокументДляЗаполнения.ОтделениеОтправитель = Выборка.Отделение;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Иначе
	
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
	
#КонецЕсли

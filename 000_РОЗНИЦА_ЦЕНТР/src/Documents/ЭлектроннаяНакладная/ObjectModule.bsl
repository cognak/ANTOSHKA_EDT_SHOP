#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗапросДоступностиТоваров") Тогда

		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ТаблицаУпаковок.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ТаблицаУпаковок
			|ИЗ
			|	Документ.ЗапросДоступностиТоваров.Упаковки КАК ТаблицаУпаковок
			|ГДЕ
			|	ТаблицаУпаковок.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ТаблицаЗапроса.СтатусЗапроса,
			|	ТаблицаЗапроса.ТипДоставки,
			|	ТаблицаЗапроса.МагазинОтправитель,
			|	ТаблицаЗапроса.МагазинПолучатель,
			|	ВЫБОР
			|		КОГДА ТаблицаУпаковок.Ссылка ЕСТЬ NULL
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК НетУпаковок
			|ИЗ
			|	Документ.ЗапросДоступностиТоваров КАК ТаблицаЗапроса
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаУпаковок КАК ТаблицаУпаковок
			|		ПО ТаблицаУпаковок.Ссылка = ТаблицаЗапроса.Ссылка
			|ГДЕ
			|	ТаблицаЗапроса.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда

			Если (Не (Выборка.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.КОтправке
				Или Выборка.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.ВыданДоставке))
				И Не ТехническаяПоддержкаВызовСервера.ИсключительныйРежим() Тогда
				
				ТекстОшибки = НСтр("ru='Отказано! «%1» не собран (или уже закрыт). Ввод на основании такого документа невозможен.'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеЗаполнения);
				
				ВызватьИсключение ТекстОшибки;
	
			КонецЕсли;
			
			Если Выборка.ТипДоставки = Перечисления.ТипДоставкиЗаказПокупателя.Самовывоз
					И Выборка.НетУпаковок Тогда
				
				ТекстОшибки = НСтр("ru='Отказано! «%1» не заполнены ВГХ. Ввод на основании такого документа невозможен.'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеЗаполнения);
				
				ВызватьИсключение ТекстОшибки;
	
			КонецЕсли;
			
			Если Выборка.МагазинОтправитель = Выборка.МагазинПолучатель Тогда
				
				ТекстОшибки = НСтр("ru='Отказано! У «%1» магазины отправителя и получателя одинаковы. Ввод на основании такого документа невозможен.'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеЗаполнения);
	
				ВызватьИсключение ТекстОшибки;
				
			КонецЕсли;
			
			ТТНСоздана = ОбменНПСервер.ТТНУжеСоздана(ДанныеЗаполнения);
	
			Если ТТНСоздана Тогда
				
				ТекстОшибки = НСтр("ru='Отказано! Для «%1» уже есть электронная накладная. Ввод на основании такого документа невозможен.'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ДанныеЗаполнения);
	
				ВызватьИсключение ТекстОшибки;
				
			КонецЕсли;
			
			ЗаполнитьДокумент(ЭтотОбъект, ДанныеЗаполнения);
	
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
			И ТипЗнч(ДанныеЗаполнения.Ссылка) = Тип("ДокументСсылка.ВозвратИнтернетЗаказа") Тогда

		УчетнаяПолитика = ОбщегоНазначенияРТповтИсп.ПолучитьУчетнуюПолитику();
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВозвратИнтернетЗаказа.Ссылка КАК Ссылка,
			|	ЕСТЬNULL(Склады.Магазин, ВозвратИнтернетЗаказа.МагазинВозврата) КАК МагазинВозврата,
			|	ВозвратИнтернетЗаказа.ДокументОснование КАК ЗаказПокупателя,
			|	ЗаказПокупателя.Фамилия КАК Фамилия,
			|	ЗаказПокупателя.Имя КАК Имя,
			|	ЗаказПокупателя.Отчество КАК Отчество,
			|	ЗаказПокупателя.Телефон КАК Телефон,
			|	ЗаказПокупателя.Отделение КАК Отделение
			|ИЗ
			|	Документ.ВозвратИнтернетЗаказа КАК ВозвратИнтернетЗаказа
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
			|		ПО ВозвратИнтернетЗаказа.МагазинВозврата = Склады.Ссылка
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ЗаказПокупателя
			|		ПО ВозвратИнтернетЗаказа.ДокументОснование = ЗаказПокупателя.Ссылка
			|ГДЕ
			|	ВозвратИнтернетЗаказа.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();
		
		ДокументОснование = Выборка.Ссылка;
		ЗаказПокупателя = Выборка.ЗаказПокупателя;
		ОтделениеОтправитель = Выборка.Отделение;
		НомерТелефонаОтправитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УчетнаяПолитика.КонтактноеЛицоНовойПочты, "Телефон");
		ВозвратОтКлиента = Истина;
		КонтрагентОтправитель = УчетнаяПолитика.КонтрагентНовойПочты;
		КонтактноеЛицоОтправитель = УчетнаяПолитика.КонтактноеЛицоНовойПочты;
		ОператорДоставки = Перечисления.ОператорыДоставки.НоваяПочта;

		ЗаполнитьМагазинПолучатель(ЭтотОбъект,
				Выборка.МагазинВозврата,
				Перечисления.ОператорыДоставки.НоваяПочта);
				
		НоваяСтрока = Упаковки.Добавить();
		НоваяСтрока.Вес = 1;
		НоваяСтрока.Высота = 15;
		НоваяСтрока.Глубина = 15;
		НоваяСтрока.Ширина = 15;
		НоваяСтрока.Представление = "Коробка";

	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		
		Возврат
		
	КонецЕсли;

	СтатусПосылки = ОбменНПСервер.ПолучитьСтатусЭН(Ссылка);
	
	Если СтатусПосылки.СтатусСлужбыДоставки = Перечисления.СтатусыПосылокСлужбыДоставки.Отменена Тогда
		
		Если Не Реестр = Документы.РеестрЭН.ПустаяСсылка() Тогда
			
			ОбменНПСервер.УдалитьИзРеестра(Ссылка, ВнешняяСсылка);
			
		КонецЕсли;

		Реестр = Документы.РеестрЭН.ПустаяСсылка();
		ПутьКФайлуСтикера = "";
		ПутьКФайлуТТН = "";
		
	КонецЕсли;

	Если (СтатусПосылки.СтатусСлужбыДоставки = Перечисления.СтатусыПосылокСлужбыДоставки.Новая
				Или СтатусПосылки.СтатусСлужбыДоставки = Перечисления.СтатусыПосылокСлужбыДоставки.ПустаяСсылка())
			И Реестр.Пустая()
			И Не ПустаяСтрока(ВнешняяСсылка)
			И Не ВозвратОтКлиента Тогда

		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	РеестрЭН.Ссылка,
			|	РеестрЭН.ВнешняяСсылка
			|ИЗ
			|	Документ.ЭлектроннаяНакладная КАК ЭлектроннаяНакладная
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗапросДоступностиТоваров КАК ЗапросДоступностиТоваров
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрЭН КАК РеестрЭН
			|			ПО РеестрЭН.МагазинСклад = ЗапросДоступностиТоваров.МагазинОтправитель
			|		ПО ЭлектроннаяНакладная.ДокументОснование = ЗапросДоступностиТоваров.Ссылка
			|ГДЕ
			|	НЕ РеестрЭН.Напечатан
			|	И ЭлектроннаяНакладная.Ссылка = &Ссылка";
			
		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			ОбменНПСервер.ДобавитьВРеестрЕН(Ссылка, ВнешняяСсылка, Выборка.ВнешняяСсылка);
			
		Иначе
			
			ОбменНПСервер.ДобавитьВРеестрЕН(Ссылка, ВнешняяСсылка);
			
		КонецЕсли;

		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	РеестрЭНСписокЭН.Ссылка
			|ИЗ
			|	Документ.РеестрЭН.СписокЭН КАК РеестрЭНСписокЭН
			|ГДЕ
			|	РеестрЭНСписокЭН.ЭлектронныеНакладные = &ЭлектронныеНакладные";
		
		Запрос.УстановитьПараметр("ЭлектронныеНакладные", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Реестр = Выборка.Ссылка;
			
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;

	МассивНепроверяемыхРеквизитов.Добавить("ГородОтправитель");
	МассивНепроверяемыхРеквизитов.Добавить("ОтделениеОтправитель");
	МассивНепроверяемыхРеквизитов.Добавить("УлицаОтправитель");
	МассивНепроверяемыхРеквизитов.Добавить("НомерДомаОтправитель");

	Если ГородОтправитель.Пустая() Тогда
		
		ТекстОшибки = НСтр("ru='Не указан город отправки'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			"ГородОтправитель",
			,
			Отказ
			);

	КонецЕсли;
	
	Если Не ОтправкаИзМагазина Тогда

		Если ОтделениеОтправитель.Пустая() Тогда
			
			ТекстОшибки = НСтр("ru='Не указано отделение отправки'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				"ОтделениеОтправитель",
				,
				Отказ
				);

		КонецЕсли;
		
	Иначе

		Если УлицаОтправитель.Пустая() Тогда
			
			ТекстОшибки = НСтр("ru='Не указана улица для курьера'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				"УлицаОтправитель",
				,
				Отказ
				);

		КонецЕсли;

		Если НомерДомаОтправитель.Пустая() Тогда
			
			ТекстОшибки = НСтр("ru='Не указан номер дома для курьера'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				"НомерДомаОтправитель",
				,
				Отказ
				);

		КонецЕсли;

	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполнить документ.
// 
// Параметры:
//  ДокументДляЗаполнения - ДокументОбъект.ЭлектроннаяНакладная - Документ для заполнения
//  ДанныеЗаполнения - ДокументСсылка.ЗапросДоступностиТоваров -  Данные заполнения
Процедура ЗаполнитьДокумент(ДокументДляЗаполнения, ДанныеЗаполнения) Экспорт

	УчетнаяПолитика = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику(ТекущаяДатаСеанса());
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаЗаказа.Ссылка КАК ДокументЗаказа,
		|	ТаблицаЗапроса.ОператорДоставки КАК ОператорДоставки,
		|	ТаблицаЗапроса.СуммаОплатыДоставки КАК СуммаОплатыДоставки,
		|	ТаблицаЗаказа.КомментарийДляДоставки КАК КомментарийДляДоставки,
		|	ТаблицаЗапроса.МагазинПолучатель КАК МагазинПолучатель,
		|	ТаблицаЗапроса.МагазинОтправитель КАК МагазинОтправитель,
		|	ТаблицаЗаказа.Город КАК Город,
		|	ТаблицаЗаказа.Отделение КАК Отделение,
		|	ТаблицаЗаказа.Улица КАК Улица,
		|	ТаблицаЗаказа.Дом КАК Дом,
		|	ТаблицаЗаказа.Квартира КАК Квартира,
		|	ТаблицаЗаказа.Фамилия КАК Фамилия,
		|	ТаблицаЗаказа.Имя КАК Имя,
		|	ТаблицаЗаказа.Отчество КАК Отчество,
		|	ТаблицаЗаказа.Телефон КАК Телефон,
		|	ТаблицаЗаказа.Район КАК Район,
		|	ТаблицаЗаказа.Область КАК Область,
		|	ТаблицаЗаказа.ДоставкаНаАдрес КАК ДоставкаНаАдрес,
		|	Склады.Магазин КАК СкладМагазин
		|ИЗ
		|	Документ.ЗапросДоступностиТоваров КАК ТаблицаЗапроса
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ТаблицаЗаказа
		|		ПО ТаблицаЗапроса.ДокументОснование = ТаблицаЗаказа.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО ТаблицаЗапроса.МагазинОтправитель = Склады.Ссылка
		|ГДЕ
		|	ТаблицаЗапроса.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗаполнения = РезультатЗапроса.Выбрать();
	
	Если ВыборкаЗаполнения.Следующий() Тогда

		ОбщегоНазначенияРТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения);
		ДокументДляЗаполнения.Дата = ТекущаяДатаСеанса();
		ДокументДляЗаполнения.ДокументОснование = ДанныеЗаполнения;
		ДокументДляЗаполнения.ЗаказПокупателя = ВыборкаЗаполнения.ДокументЗаказа;
		
		Если ВыборкаЗаполнения.ОператорДоставки = Перечисления.ОператорыДоставки.ВнутренняяЛогистика Тогда
			ОператорДоставки = Перечисления.ОператорыДоставки.НоваяПочта;
		Иначе
			ОператорДоставки = ВыборкаЗаполнения.ОператорДоставки;
		КонецЕсли;
		
		Если Не ВыборкаЗаполнения.СуммаОплатыДоставки = 0 Тогда
			ДокументДляЗаполнения.НашаСуммаДоставки = ВыборкаЗаполнения.СуммаОплатыДоставки;
		КонецЕсли;
		
		ДокументДляЗаполнения.КомментарийДляДоставки = ВыборкаЗаполнения.КомментарийДляДоставки;
		
		//Данные получателя
		Если ВыборкаЗаполнения.ОператорДоставки = Перечисления.ОператорыДоставки.ВнутренняяЛогистика Тогда
			
			ЗаполнитьМагазинПолучатель(ДокументДляЗаполнения,
					ВыборкаЗаполнения.МагазинПолучатель,
					ОператорДоставки);
				
		Иначе
				
			ДокументДляЗаполнения.МагазинПолучатель = Справочники.Магазины.ПустаяСсылка();
			ДокументДляЗаполнения.ГородПолучатель = ВыборкаЗаполнения.Город;
			ДокументДляЗаполнения.ОтделениеПолучатель = ВыборкаЗаполнения.Отделение;
			ДокументДляЗаполнения.УлицаПолучатель = ВыборкаЗаполнения.Улица;
			ДокументДляЗаполнения.ДомПолучатель = ВыборкаЗаполнения.Дом;
			ДокументДляЗаполнения.КвартираПолучатель = ВыборкаЗаполнения.Квартира;
			ДокументДляЗаполнения.ФамилияПолучатель = ВыборкаЗаполнения.Фамилия;
			ДокументДляЗаполнения.ИмяПолучатель = ВыборкаЗаполнения.Имя;
			ДокументДляЗаполнения.ОтчествоПолучатель = ВыборкаЗаполнения.Отчество;
			ДокументДляЗаполнения.ТелефонПолучатель = ВыборкаЗаполнения.Телефон;
			ДокументДляЗаполнения.РайонПолучатель = ВыборкаЗаполнения.Район;
			ДокументДляЗаполнения.ОбластьПолучатель = ВыборкаЗаполнения.Область;
			ДокументДляЗаполнения.ДоставкаНаАдрес = ВыборкаЗаполнения.ДоставкаНаАдрес;
	
		КонецЕсли;	
	
		//Данные отправителя
		Если УчетнаяПолитика.СкладЗакупки = ВыборкаЗаполнения.МагазинОтправитель Тогда
			СтороннийОтправитель = Истина;
		Иначе
			СтороннийОтправитель = Ложь;
		КонецЕсли;

		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	НастройкиСлужбДоставки.Контрагент,
			|	НастройкиСлужбДоставки.КонтактноеЛицо,
			|	НастройкиСлужбДоставки.НомерТелефона,
			|	НастройкиСлужбДоставки.Отделение,
			|	НастройкиСлужбДоставки.ОтправкаИзМагазина,
			|	АдресаСлужбыДоставки.ИДГорода,
			|	АдресаСлужбыДоставки.ИДУлицы,
			|	АдресаСлужбыДоставки.Дом,
			|	АдресаСлужбыДоставки.Ссылка
			|ИЗ
			|	РегистрСведений.НастройкиСлужбДоставки КАК НастройкиСлужбДоставки
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АдресаСлужбыДоставки КАК АдресаСлужбыДоставки
			|		ПО НастройкиСлужбДоставки.Адрес = АдресаСлужбыДоставки.Ссылка
			|ГДЕ
			|	НастройкиСлужбДоставки.Магазин = &Магазин
			|	И НастройкиСлужбДоставки.ОператорДоставки = &ОператорДоставки";
		
		Если ТипЗнч(ВыборкаЗаполнения.МагазинОтправитель) = Тип("СправочникСсылка.Склады") Тогда
			Запрос.УстановитьПараметр("Магазин", ВыборкаЗаполнения.СкладМагазин);
		Иначе
			Запрос.УстановитьПараметр("Магазин", ВыборкаЗаполнения.МагазинОтправитель);
		КонецЕсли;
	
		Запрос.УстановитьПараметр("ОператорДоставки", ОператорДоставки);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда
			ДокументДляЗаполнения.КонтрагентОтправитель = Выборка.Контрагент;
			Если Не СтороннийОтправитель Тогда
				ДокументДляЗаполнения.ОтправкаИзМагазина = Выборка.ОтправкаИзМагазина;
				ДокументДляЗаполнения.КонтактноеЛицоОтправитель = Выборка.КонтактноеЛицо;
				ДокументДляЗаполнения.НомерТелефонаОтправитель = Выборка.НомерТелефона;
				ДокументДляЗаполнения.ГородОтправитель = Выборка.ИДГорода;
				ДокументДляЗаполнения.УлицаОтправитель = Выборка.ИДУлицы;
				ДокументДляЗаполнения.НомерДомаОтправитель = Выборка.Дом;
				ДокументДляЗаполнения.АдресОтправитель = Выборка.Ссылка;
				ДокументДляЗаполнения.ОтделениеОтправитель = Выборка.Отделение;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗапросДоступностиТоваровУпаковки.Вес,
		|	ЗапросДоступностиТоваровУпаковки.Высота,
		|	ЗапросДоступностиТоваровУпаковки.Глубина,
		|	ЗапросДоступностиТоваровУпаковки.НомерСтроки,
		|	ЗапросДоступностиТоваровУпаковки.Представление,
		|	ЗапросДоступностиТоваровУпаковки.Ссылка,
		|	ЗапросДоступностиТоваровУпаковки.Ширина
		|ИЗ
		|	Документ.ЗапросДоступностиТоваров.Упаковки КАК ЗапросДоступностиТоваровУпаковки
		|ГДЕ
		|	ЗапросДоступностиТоваровУпаковки.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
	
	Упаковки.Очистить();
	Упаковки.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

Процедура ЗаполнитьМагазинПолучатель(ДокументДляЗаполнения, МагазинПолучатель, ОператорДоставки)

	ДокументДляЗаполнения.МагазинПолучатель = МагазинПолучатель;
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	НастройкиСлужбДоставки.Контрагент,
		|	НастройкиСлужбДоставки.КонтактноеЛицо,
		|	НастройкиСлужбДоставки.НомерТелефона,
		|	НастройкиСлужбДоставки.Отделение,
		|	НастройкиСлужбДоставки.ОтправкаИзМагазина,
		|	КонтактныеЛицаСлужбыДоставки.КонтактноеЛицо,
		|	КонтактныеЛицаСлужбыДоставки.Телефон,
		|	КонтактныеЛицаСлужбыДоставки.Email,
		|	КонтактныеЛицаСлужбыДоставки.Контрагент,
		|	КонтактныеЛицаСлужбыДоставки.Фамилия,
		|	КонтактныеЛицаСлужбыДоставки.Имя,
		|	КонтактныеЛицаСлужбыДоставки.Отчество,
		|	КонтактныеЛицаСлужбыДоставки.Действие,
		|	КонтактныеЛицаСлужбыДоставки.Предопределенный,
		|	КонтактныеЛицаСлужбыДоставки.ИмяПредопределенныхДанных,
		|	КонтактныеЛицаСлужбыДоставки.Представление,
		|	АдресаСлужбыДоставки.ИДГорода,
		|	АдресаСлужбыДоставки.ИДУлицы,
		|	АдресаСлужбыДоставки.Дом,
		|	АдресаСлужбыДоставки.Адрес
		|ИЗ
		|	РегистрСведений.НастройкиСлужбДоставки КАК НастройкиСлужбДоставки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаСлужбыДоставки КАК КонтактныеЛицаСлужбыДоставки
		|		ПО НастройкиСлужбДоставки.КонтактноеЛицо = КонтактныеЛицаСлужбыДоставки.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АдресаСлужбыДоставки КАК АдресаСлужбыДоставки
		|		ПО НастройкиСлужбДоставки.Адрес = АдресаСлужбыДоставки.Ссылка
		|ГДЕ
		|	НастройкиСлужбДоставки.Магазин = &Магазин
		|	И НастройкиСлужбДоставки.ОператорДоставки = &ОператорДоставки";
	
	Запрос.УстановитьПараметр("Магазин", МагазинПолучатель);
	Запрос.УстановитьПараметр("ОператорДоставки", ОператорДоставки);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ДокументДляЗаполнения.ДоставкаНаАдрес = Истина;
		ДокументДляЗаполнения.ГородПолучатель = Выборка.ИДГорода;
		ДокументДляЗаполнения.ОтделениеПолучатель = Выборка.Отделение;
		ДокументДляЗаполнения.УлицаПолучатель = Выборка.ИДУлицы;
		ДокументДляЗаполнения.ФамилияПолучатель = Выборка.Фамилия;
		ДокументДляЗаполнения.ИмяПолучатель = Выборка.Имя;
		ДокументДляЗаполнения.ОтчествоПолучатель = Выборка.Отчество;
		ДокументДляЗаполнения.ТелефонПолучатель = Выборка.Телефон;
		ДокументДляЗаполнения.ДомПолучатель = Выборка.Дом;
	
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Иначе
	
	ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
	
#КонецЕсли

//*******************
//Фомин Павел AKA Pasha1st, 2014
//Версия 1.0
//
//Модуль формирования штрихкодов без использования внешних компонент
//Поддерживаются форматы:
//Линейные:
//*CODE128
//*CODABAR
//*CODE39
//*EAN8
//*EAN13
//Поддерживает формирование картинок форматов BMP,PNG

перем codes;
Перем Б64т;
Перем Б64м;
Перем анси2ю;
Перем ю2анси;
Перем ean;
Перем ean13m;
Перем hex;
Перем СтильКарандаш Экспорт;
Перем СтильКисть Экспорт;
Перем СтильШтриховки Экспорт;
Перем ВыводТекста Экспорт;
Перем ВыравниваниеТекста Экспорт;
Перем ВыводФона Экспорт;

Функция ПолучитьКодЛинейногоШК(текст,тип="CODE128") Экспорт
	Если тип="CODE128" тогда
		возврат штрих_128(текст);
	ИначеЕсли тип="CODABAR" тогда
		возврат штрих_codabar(текст);
	ИначеЕсли тип="CODE39" тогда
		возврат штрих_code39(текст);
	ИначеЕсли тип="EAN8" тогда
		возврат штрих_ean8(текст);
	ИначеЕсли тип="EAN13" тогда
		возврат штрих_ean13(текст);
	Иначе
		возврат Неопределено;
	КонецЕсли;
КонецФункции

//Формирует из заданного текста картину указанного формата
//текст - кодируемый текст
//тип - формат штрихкода из поддерживаемых
//ФорматИзображения - формат картинки типа ФорматКартинки.
//ВключитьТекст(булево) - требуется ли рисовать подпись под кодом
//ЦветФона - объект типа Цвет(абсолютный) для задания фона изображения, по умолчанию белый Цвет(255,255,255)
//ЦветКода - объект типа Цвет(абсолютный) для задания цвета изображения, по умолчанию черный Цвет(0,0,0)
//Ширина - ширина результирующей картинки в пикселях
//Высота - высота результирующей картинки в пикселях
//
//Возвращает объект Картинка
Функция ПолучитьКартинкуЛинейногоШК(текст,тип,ФорматИзображения=Неопределено,ВключитьТекст=Ложь,ЦветФона=Неопределено,ЦветКода=Неопределено,Ширина=Неопределено,Высота=Неопределено,ШиринаЛинии=3) Экспорт
	Если Текст="" тогда
		Возврат Неопределено;
	КонецЕсли;
	Если ЦветФона=Неопределено тогда
		ЦветФона=Новый Цвет(255,255,255);
	КонецЕсли;
	Если ЦветКода=Неопределено тогда
		ЦветКода=Новый Цвет(0,0,0);
	КонецЕсли;
	код=ПолучитьКодЛинейногоШК(текст,тип);
	Если ФорматИзображения=Неопределено тогда
		ФорматИзображения=ФорматКартинки.WMF;
	КонецЕсли;
	Если (код=Неопределено)или(код="") тогда
		Возврат Неопределено;
	КонецЕсли;
	РазмерОтступа=?(Тип="EAN13",7,5);//Отступ слева и справа в "линиях"
	ШиринаКода=0; 
	Для Н=1 по СтрДлина(код) Цикл
		ШиринаКода=ШиринаКода+Число(Сред(код,Н,1));
	КонецЦикла;
	ШиринаКодаСОтступами=ШиринаКода+2*РазмерОтступа;
	ВекторныйРисунок=ФорматИзображения=ФорматКартинки.WMF;
	Если (Ширина<>Неопределено)и(ВекторныйРисунок) тогда
		Ширина=Ширина*15;
	КонецЕсли;
	Если (Высота<>Неопределено)и(ВекторныйРисунок) тогда
		Высота=Высота*15;
	КонецЕсли;
	Если Ширина=Неопределено тогда
		Ширина=(ШиринаКодаСОтступами)*ШиринаЛинии*?(ВекторныйРисунок,15,1);
	КонецЕсли;
	ШиринаЛинии=Цел(Ширина/(ШиринаКодаСОтступами));
	ДопОтступ=0;
	Если Ширина<>Неопределено тогда
		ДопОтступ=Цел(Ширина%ШиринаКодаСОтступами/2);
	КонецЕсли;
	
	ШиринаСимволов=Цел(Ширина/СтрДлина(текст));
	Если (Тип="EAN13")или(Тип="EAN8") тогда
		ШиринаСимволов=ШиринаЛинии*7;
		Если ВекторныйРисунок тогда
			ШиринаСимволов=ШиринаЛинии*6;
		КонецЕсли;
	Иначе
		Если ВекторныйРисунок тогда
			ШиринаСимволов=Мин(Мин(16*10,ШиринаСимволов-ШиринаЛинии));
		КонецЕсли;
	КонецЕсли;
	ШиринаСимволов = 50; // На ценниках 2 на 2 только так отображается корректно штрихкод
	ВысотаСимволов=ШиринаСимволов*2;
	Если ВключитьТекст И не ВекторныйРисунок тогда
		шрифт=ПолучитьШрифт(16);
		ВысотаСимволов=шрифт.Параметры.Высота/16;
	КонецЕсли;
	Если Высота=Неопределено тогда
		Высота=(40)*?(ВекторныйРисунок,15,1)+?(ВключитьТекст,?((Тип="EAN13")или(Тип="EAN8"),Цел(ВысотаСимволов/2),ВысотаСимволов),0);
	КонецЕсли;
	ВысотаШтриха=?(ВключитьТекст,?((Тип="EAN13")или(Тип="EAN8"),Высота-Цел(ВысотаСимволов/2),Высота-ВысотаСимволов),Высота);
	Если ВекторныйРисунок тогда
		к=СоздатьВекторнуюКартинку(Ширина,Высота);
		ВекторнаяКартинкаSelectObject(к,ВекторнаяКартинкаCREATEPENINDIRECT(к,СтильКарандаш.Сплошной,0,ЦветФона));
		ВекторнаяКартинкаSelectObject(к,ВекторнаяКартинкаCREATEBRUSHINDIRECT(к,СтильКисть.Сплошной,ЦветФона));
		ВекторнаяКартинкаRECTANGLE(к,0,0,Ширина-1,Высота-1);
		ВекторнаяКартинкаSelectObject(к,ВекторнаяКартинкаCREATEPENINDIRECT(к,СтильКарандаш.Сплошной,0,ЦветКода));
		ВекторнаяКартинкаSelectObject(к,ВекторнаяКартинкаCREATEBRUSHINDIRECT(к,СтильКисть.Сплошной,ЦветКода));
		поз=РазмерОтступа*ШиринаЛинии+ДопОтступ;
		Для Н=1 по СтрДлина(код) Цикл
			шир=Число(Сред(код,Н,1))*ШиринаЛинии;
			Если Н%2=1 тогда
				ВекторнаяКартинкаRECTANGLE(к,поз,0,поз+шир-1,ВысотаШтриха);
			КонецЕсли;
			поз=поз+шир;
		КонецЦикла;
		Если ВключитьТекст тогда
			ВекторнаяКартинкаSelectObject(к,ВекторнаяКартинкаCREATEFONTINDIRECT(к,Новый Шрифт("Arial",ВысотаСимволов,Истина,Ложь,Ложь,Ложь),ШиринаСимволов));
			ВекторнаяКартинкаSETBKCOLOR(к,ЦветФона);
			ВекторнаяКартинкаSETBKMODE(к,ВыводФона.Непрозрачный);
			Если Тип="EAN8" тогда
				ВекторнаяКартинкаSelectObject(к,ВекторнаяКартинкаCREATEPENINDIRECT(к,СтильКарандаш.Сплошной,0,ЦветФона));
				ВекторнаяКартинкаSelectObject(к,ВекторнаяКартинкаCREATEBRUSHINDIRECT(к,СтильКисть.Сплошной,ЦветФона));
				ВекторнаяКартинкаRECTANGLE(к,ДопОтступ+(РазмерОтступа+3)*ШиринаЛинии,Высота-ВысотаСимволов,ДопОтступ+(РазмерОтступа+3+4*7)*ШиринаЛинии,Высота-1);
				ВекторнаяКартинкаRECTANGLE(к,ДопОтступ+(РазмерОтступа+3+5+4*7)*ШиринаЛинии,Высота-ВысотаСимволов,ДопОтступ+(РазмерОтступа+3+5+8*7)*ШиринаЛинии,Высота-1);
				
				стр=Сред(текст,1,4);
				ВекторнаяКартинкаSETTEXTALIGN(к,ВыравниваниеТекста.ЛевоВерх);
//				ВекторнаяКартинкаEXTTEXTOUT(к,(РазмерОтступа+3)*ШиринаЛинии,Высота-ВысотаСимволов,стр,ВыводТекста.Непрозрачный+ВыводТекста.Ограниченный,(РазмерОтступа+3)*ШиринаЛинии,Высота-ВысотаСимволов,(РазмерОтступа+3+4*7)*ШиринаЛинии,Высота-1);
//				ВекторнаяКартинкаTEXTOUT(к,(РазмерОтступа+3)*ШиринаЛинии,Высота-ВысотаСимволов,стр);
				Для Н=1 по 4 Цикл
					стр=Сред(текст,Н,1);
					ВекторнаяКартинкаEXTTEXTOUT(к,ДопОтступ+(РазмерОтступа+3+(Н-1)*7)*ШиринаЛинии,Высота-ВысотаСимволов,стр,ВыводТекста.Непрозрачный+ВыводТекста.Ограниченный,
						ДопОтступ+(РазмерОтступа+3+(Н-1)*7)*ШиринаЛинии,Высота-ВысотаСимволов,ДопОтступ+(РазмерОтступа+3+Н*7)*ШиринаЛинии,Высота-1);
                КонецЦикла;
				Для Н=5 по 8 Цикл
					стр=Сред(текст,Н,1);
					ВекторнаяКартинкаEXTTEXTOUT(к,ДопОтступ+(РазмерОтступа+3+5+(Н-1)*7)*ШиринаЛинии,Высота-ВысотаСимволов,стр,ВыводТекста.Непрозрачный+ВыводТекста.Ограниченный,
						ДопОтступ+(РазмерОтступа+3+5+(Н-1)*7)*ШиринаЛинии,Высота-ВысотаСимволов,ДопОтступ+(РазмерОтступа+3+5+Н*7)*ШиринаЛинии,Высота-1);
                КонецЦикла;
				//стр=Сред(текст,5,4);
				//ВекторнаяКартинкаTEXTOUT(к,(РазмерОтступа+3+5+7*4)*ШиринаЛинии,Высота-ВысотаСимволов,стр);
			ИначеЕсли Тип="EAN13" тогда
				ВекторнаяКартинкаSelectObject(к,ВекторнаяКартинкаCREATEPENINDIRECT(к,СтильКарандаш.Сплошной,0,ЦветФона));
				ВекторнаяКартинкаSelectObject(к,ВекторнаяКартинкаCREATEBRUSHINDIRECT(к,СтильКисть.Сплошной,ЦветФона));
				ВекторнаяКартинкаRECTANGLE(к,ДопОтступ+(РазмерОтступа+3)*ШиринаЛинии,Высота-ВысотаСимволов,ДопОтступ+(РазмерОтступа+3+6*7)*ШиринаЛинии,Высота-1);
				ВекторнаяКартинкаRECTANGLE(к,ДопОтступ+(РазмерОтступа+3+5+6*7)*ШиринаЛинии,Высота-ВысотаСимволов,ДопОтступ+(РазмерОтступа+3+5+12*7)*ШиринаЛинии,Высота-1);
				
				стр=Сред(текст,1,1);
				ВекторнаяКартинкаEXTTEXTOUT(к,ДопОтступ+0,Высота-ВысотаСимволов,стр,ВыводТекста.Непрозрачный+ВыводТекста.Ограниченный,
					ДопОтступ+0,Высота-ВысотаСимволов,ДопОтступ+РазмерОтступа*ШиринаЛинии-1,Высота-1);
				//ВекторнаяКартинкаTEXTOUT(к,0,Высота-ВысотаСимволов,стр);
				Для Н=2 по 7 Цикл
					стр=Сред(текст,Н,1);
					ВекторнаяКартинкаEXTTEXTOUT(к,ДопОтступ+(РазмерОтступа+3+(Н-2)*7)*ШиринаЛинии,Высота-ВысотаСимволов,стр,ВыводТекста.Непрозрачный+ВыводТекста.Ограниченный,
						ДопОтступ+(РазмерОтступа+3+(Н-2)*7)*ШиринаЛинии,Высота-ВысотаСимволов,ДопОтступ+(РазмерОтступа+3+(Н-1)*7)*ШиринаЛинии,Высота-1);
                КонецЦикла;
				//стр=Сред(текст,2,6);
				//ВекторнаяКартинкаTEXTOUT(к,(РазмерОтступа+3)*ШиринаЛинии,Высота-ВысотаСимволов,стр);
				Для Н=8 по 13 Цикл
					стр=Сред(текст,Н,1);
					ВекторнаяКартинкаEXTTEXTOUT(к,ДопОтступ+(РазмерОтступа+3+5+(Н-2)*7)*ШиринаЛинии,Высота-ВысотаСимволов,стр,ВыводТекста.Непрозрачный+ВыводТекста.Ограниченный,
						ДопОтступ+(РазмерОтступа+3+5+(Н-2)*7)*ШиринаЛинии,Высота-ВысотаСимволов,ДопОтступ+(РазмерОтступа+3+5+(Н-1)*7)*ШиринаЛинии,Высота-1);
                КонецЦикла;
				//стр=Сред(текст,8,6);
				//ВекторнаяКартинкаTEXTOUT(к,(РазмерОтступа+3+5+7*6)*ШиринаЛинии,Высота-ВысотаСимволов,стр);
			Иначе
				//ВекторнаяКартинкаSETTEXTALIGN(к,ВыравниваниеТекста.ЦентрВерх);
				//ВекторнаяКартинкаTEXTOUT(к,Цел(Ширина/2),Высота-ВысотаСимволов,текст);
				ШиринаЗнакоместа=ШиринаСимволов+ШиринаЛинии;
				ШиринаТекста=СтрДлина(текст)*(ШиринаЗнакоместа);
				Для Н=1 по СтрДлина(текст) Цикл
					стр=Сред(текст,Н,1);
					ВекторнаяКартинкаEXTTEXTOUT(к,Цел((Ширина-ШиринаТекста)/2+(Н-1)*ШиринаЗнакоместа),Высота-ВысотаСимволов,стр,ВыводТекста.Непрозрачный+ВыводТекста.Ограниченный,
						Цел((Ширина-ШиринаТекста)/2+(Н-1)*ШиринаЗнакоместа),Высота-ВысотаСимволов,Цел((Ширина-ШиринаТекста)/2+Н*ШиринаЗнакоместа)-1,Высота-1);
                КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		к=Новый Картинка(ВекторнаяКартинкаСохранитьВДанные(к));
	Иначе
		к=СоздатьКартинку(Новый Структура("Ширина,Высота,БитНаПиксель,ЦветФона",Ширина,Высота,1,1));
		к.палитра[0]=ЦветКода;
		к.палитра[1]=ЦветФона;
		поз=РазмерОтступа*ШиринаЛинии+ДопОтступ;
		Для Н=1 по СтрДлина(код) Цикл
			шир=Число(Сред(код,Н,1))*ШиринаЛинии;
			Если Н%2=1 тогда
				КартинкаПрямоугольник(к,поз,0,поз+шир-1,ВысотаШтриха,0,0);
			КонецЕсли;
			поз=поз+шир;
		КонецЦикла;
		Если ВключитьТекст тогда
			Если Тип="EAN8" тогда
				КартинкаПрямоугольник(к,ДопОтступ+(РазмерОтступа+3)*ШиринаЛинии,Высота-ВысотаСимволов,ДопОтступ+(РазмерОтступа+3+7*4)*ШиринаЛинии-1,Высота-1,1,1);
				КартинкаПрямоугольник(к,ДопОтступ+(РазмерОтступа+3+5+7*4)*ШиринаЛинии,Высота-ВысотаСимволов,ДопОтступ+(РазмерОтступа+3+5+7*8)*ШиринаЛинии-1,Высота-1,1,1);
				Для Н=1 по 4 Цикл
					симв=Сред(текст,Н,1);
					КартинкаВывестиБукву(к,ДопОтступ+(РазмерОтступа+3)*ШиринаЛинии+(н-1)*ШиринаСимволов,Высота-ВысотаСимволов,симв,шрифт);
				КонецЦикла;
				Для Н=5 по 8 Цикл
					симв=Сред(текст,Н,1);
					КартинкаВывестиБукву(к,ДопОтступ+(РазмерОтступа+3+5)*ШиринаЛинии+(н-1)*ШиринаСимволов,Высота-ВысотаСимволов,симв,шрифт);
				КонецЦикла;
			ИначеЕсли Тип="EAN13" тогда
				КартинкаПрямоугольник(к,ДопОтступ+(РазмерОтступа+3)*ШиринаЛинии,Высота-ВысотаСимволов,ДопОтступ+(РазмерОтступа+3+7*6)*ШиринаЛинии-1,Высота-1,1,1);
				КартинкаПрямоугольник(к,ДопОтступ+(РазмерОтступа+3+5+7*6)*ШиринаЛинии,Высота-ВысотаСимволов,ДопОтступ+(РазмерОтступа+3+5+7*12)*ШиринаЛинии-1,Высота-1,1,1);
				симв=Сред(текст,1,1);
				КартинкаВывестиБукву(к,ДопОтступ+0,Высота-ВысотаСимволов,симв,шрифт);
				Для Н=2 по 7 Цикл
					симв=Сред(текст,Н,1);
					КартинкаВывестиБукву(к,ДопОтступ+(РазмерОтступа+3)*ШиринаЛинии+(н-2)*ШиринаСимволов,Высота-ВысотаСимволов,симв,шрифт);
				КонецЦикла;
				Для Н=8 по 13 Цикл
					симв=Сред(текст,Н,1);
					КартинкаВывестиБукву(к,ДопОтступ+(РазмерОтступа+3+5)*ШиринаЛинии+(н-2)*ШиринаСимволов,Высота-ВысотаСимволов,симв,шрифт);
				КонецЦикла;
			Иначе
				ШиринаТекста=СтрДлина(текст)*ШиринаСимволов;
				Для Н=1 по СтрДлина(текст) Цикл
					симв=Сред(текст,Н,1);
					КартинкаВывестиБукву(к,Цел((Ширина-ШиринаТекста)/2)+(н-1)*ШиринаСимволов,Высота-ВысотаСимволов+1,симв,шрифт);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		к=Новый Картинка(СохранитьКартинкуВДанные(к));
		Если ФорматИзображения<>ФорматКартинки.BMP тогда
			к=к.Преобразовать(ФорматИзображения);
		КонецЕсли;
	КонецЕсли;
	Возврат к;
КонецФункции

//Вставить в табличный документ штрихкод как набор прямоугольников
//тд - ТабличныйДокумент, в который требуется вставить штрихкод
//область - ОбластьЯчеекТабличногоДокумента, в которой требуется разместить штрихкод
//текст - содержимое штрихкода
//тип - формат штрихкода из поддерживаемых
//ВключитьТекст - добавить к рисунку подпись с текстом
//ЦветФона,ЦветКода - необязательные указания по цвету типа Цвет. По умолчанию белый и черный
//ВысотаТекста - высота области с подписью (используется если ВключитьТекст=Истина)
//РазмерШрифта - размер шрифта, используемого для вывода подписи
Процедура ВставитьВТабличныйДокументЛинейныйШКОбласть(тд,область,текст,тип,ВключитьТекст=Ложь,ЦветФона=Неопределено,ЦветКода=Неопределено,ВысотаТекста=4,РазмерШтрифта=10) Экспорт
	р=тд.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Прямоугольник);
	р.Расположить(область);
	ВставитьВТабличныйДокументЛинейныйШККоординаты(тд,р.лево,р.верх,р.ширина,р.высота,текст,тип,ВключитьТекст,ЦветФона,ЦветКода,ВысотаТекста,РазмерШтрифта);
	тд.Рисунки.Удалить(р);
КонецПроцедуры

//Вставить в табличный документ штрихкод как набор прямоугольников
//тд - ТабличныйДокумент, в который требуется вставить штрихкод
//лево,верх,ширина,высота - размер и положение области в мм, куда требуется вставить штрихкод
//текст - содержимое штрихкода
//тип - формат штрихкода из поддерживаемых
//ВключитьТекст - добавить к рисунку подпись с текстом
//ЦветФона,ЦветКода - необязательные указания по цвету типа Цвет. По умолчанию белый и черный
//ВысотаТекста - высота области с подписью (используется если ВключитьТекст=Истина)
//РазмерШрифта - размер шрифта, используемого для вывода подписи
Процедура ВставитьВТабличныйДокументЛинейныйШККоординаты(тд,лево,верх,ширина,высота,текст,тип,ВключитьТекст=Ложь,ЦветФона=Неопределено,ЦветКода=Неопределено,ВысотаТекста=4,РазмерШтрифта=10) Экспорт
	Если Текст="" тогда
		Возврат;
	КонецЕсли;
	Если ЦветФона=Неопределено тогда
		ЦветФона=Новый Цвет(255,255,255);
	КонецЕсли;
	Если ЦветКода=Неопределено тогда
		ЦветКода=Новый Цвет(0,0,0);
	КонецЕсли;
	код=ПолучитьКодЛинейногоШК(текст,тип);
	Если (код=Неопределено)или(код="") тогда
		Возврат;
	КонецЕсли;
	ШиринаКода=0; 
	Для Н=1 по СтрДлина(код) Цикл
		ШиринаКода=ШиринаКода+Число(Сред(код,Н,1));
	КонецЦикла;
	ШиринаЛинии=ширина/ШиринаКода;
	//тд=Новый ТабличныйДокумент;
	отступ=0;
	НетЛинии=Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии,0);
	ВысотаЛинии=?(ВключитьТекст,высота-ВысотаТекста,высота);
	Для Н=1 по СтрДлина(код) Цикл
		штрих=тд.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Прямоугольник);
		ШиринаШтриха=Число(Сред(код,Н,1));
		штрих.Лево=лево+отступ*ШиринаЛинии;//ширина/ШиринаКода;
		штрих.Верх=верх;
		штрих.Ширина=ШиринаШтриха*ШиринаЛинии;//ширина/ШиринаКода;
		штрих.Высота=ВысотаЛинии;//ширина/ШиринаКода;
		штрих.Линия=НетЛинии;
		штрих.ЦветФона=?(Н%2=1,ЦветКода,ЦветФона);
		отступ=отступ+ШиринаШтриха;
	КонецЦикла;
	Если ВключитьТекст тогда
		штрих=тд.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Текст);
		штрих.Лево=лево;
		штрих.Верх=верх+высота-ВысотаТекста;
		штрих.Ширина=ширина;//ширина/ШиринаКода;
		штрих.Высота=ВысотаТекста;//ширина/ШиринаКода;
		штрих.Шрифт=Новый Шрифт(штрих.Шрифт,,РазмерШтрифта);
		штрих.Линия=НетЛинии;
		штрих.ЦветФона=ЦветФона;
		штрих.ЦветТекста=ЦветКода;
		штрих.ГоризонтальноеПоложение=ГоризонтальноеПоложение.Центр;
		штрих.Текст=текст;
	КонецЕсли;
КонецПроцедуры
	
функция штрих_128(стр) Экспорт
	рез="";
	
    bCode="";
    curMode=символ(0);
	нн=1;
	пока нн<=СтрДлина(стр) цикл
      ch=КодСимвола(сред(стр,нн,1));
	  нн=нн+1;
      if ch>127 then
        возврат "";
	  КонецЕсли;
      if нн<=СтрДлина(стр) then
        ch2=КодСимвола(сред(стр,нн,1));
      else
        ch2=0;
	  КонецЕсли;
      if (ch>=48)and((ch<=57))and(ch2>=48)and(ch2<=57) then 
        нн=нн+1;
        if bCode="" then 
          curMode="C";
          bCode=bCode+"i"//#$69;//"i" CODE-C
        ИначеЕсли curMode<>"C" then 
          curMode="C";
          bCode=bCode+"c";//#$63;//"c"
        КонецЕсли;
        bCode=bCode+Символ((ch-48)*10+(ch2-48));
	  иначе
		Если bCode="" then 
          if ch<32 then //" "
            curMode="A";
            bCode=bCode+"g";//#$67;//"g" CODE-A
          иначе
            curMode="B";
            bCode=bCode+"h";//#$68;//"h" CODE-B
		  КонецЕсли;
		КонецЕсли;
        if (ch<32)and (curMode<>"A") then 
          curMode="A";
          bCode=bCode+"e";//#$65;//"e"
        ИначеЕсли ((ch>=64)and(curMode<>"B"))or(curMode="C") then 
          curMode="B";
          bCode=bCode+"d";//#$64;//"d"
        КонецЕсли;
        if (ch<32) then 
          bCode=bCode+Символ(ch+64);//"@"
        Иначе
          bCode=bCode+Символ(ch-32);//" "
		КонецЕсли;
      КонецЕсли;
	КонецЦикла;
    if bCode<>"" then
      cCode=КодСимвола(bCode);//-цел(КодСимв(bCode)/103) //"g"
    else
      cCode=0;
	КонецЕсли;
    для i = 1 to СтрДлина(bCode)-1 do
      cCode=(cCode+КодСимвола(Сред(bCode,i+1,1))*i);//mod $67;
	КонецЦикла;
	cCode=cCode-Цел(cCode/103)*103;
    bCode=bCode+Символ(cCode)+"j";//#$6a;//"j" CODE-@
    for I = 1 to СтрДлина(bCode) do 
      рез=рез+(Codes[КодСимвола(Сред(bCode,i,1))+1]);
    КонецЦикла;
	
	возврат рез;
КонецФункции
Функция штрих_codabar(стр) Экспорт
	рез="11133311";
	Для Н=1 по СтрДлина(стр) Цикл
		с=ВРег(Сред(стр,Н,1));
		если с="0" тогда
			рез=рез+"11111331";
		ИначеЕсли с="1" тогда
			рез=рез+"11113311";
		ИначеЕсли с="2" тогда
			рез=рез+"11131131";
		ИначеЕсли с="3" тогда
			рез=рез+"33111111";
		ИначеЕсли с="4" тогда
			рез=рез+"11311311";
		ИначеЕсли с="5" тогда
			рез=рез+"31111311";
		ИначеЕсли с="6" тогда
			рез=рез+"13111131";
		ИначеЕсли с="7" тогда
			рез=рез+"13113111";
		ИначеЕсли с="8" тогда
			рез=рез+"13311111";
		ИначеЕсли с="9" тогда
			рез=рез+"31131111";
		ИначеЕсли с="-" тогда
			рез=рез+"11133111";
		ИначеЕсли с="$" тогда
			рез=рез+"11331111";
		ИначеЕсли с=":" тогда
			рез=рез+"31113131";
		ИначеЕсли с="/" тогда
			рез=рез+"31311131";
		ИначеЕсли с="." тогда
			рез=рез+"31313111";
		ИначеЕсли с="+" тогда
			рез=рез+"11313131";
		ИначеЕсли с="A" тогда
			рез=рез+"11331111";
		ИначеЕсли с="B" тогда
			рез=рез+"13131131";
		ИначеЕсли с="C" тогда
			рез=рез+"11131331";
		ИначеЕсли с="D" тогда
			рез=рез+"11133311";
		ИначеЕсли с="T" тогда
			рез=рез+"11331311";
		ИначеЕсли с="N" тогда
			рез=рез+"13131131";
		ИначеЕсли с="*" тогда
			рез=рез+"11131331";
		ИначеЕсли с="E" тогда
			рез=рез+"11133311";
		Иначе
			возврат "";
		КонецЕсли;
	КонецЦикла;
	возврат рез+"11133311";
КонецФункции
Функция штрих_code39(стр) Экспорт
	рез="1311313111";
	Для Н=1 по СтрДлина(стр) Цикл
		с=ВРег(Сред(стр,Н,1));
		если с="0" тогда			рез=рез+"1113313111";
		ИначеЕсли с="1" тогда		рез=рез+"3113111131";
		ИначеЕсли с="2" тогда      рез=рез+"1133111131";
		ИначеЕсли с="3" тогда      рез=рез+"3133111111";
		ИначеЕсли с="4" тогда      рез=рез+"1113311131";
		ИначеЕсли с="5" тогда      рез=рез+"3113311111";
		ИначеЕсли с="6" тогда      рез=рез+"1133311111";
		ИначеЕсли с="7" тогда      рез=рез+"1113113131";
		ИначеЕсли с="8" тогда      рез=рез+"3113113111";
		ИначеЕсли с="9" тогда      рез=рез+"1133113111";
		ИначеЕсли с="0" тогда      рез=рез+"1113313111";
		ИначеЕсли с="A" тогда      рез=рез+"3111131131";
		ИначеЕсли с="B" тогда      рез=рез+"1131131131";
		ИначеЕсли с="C" тогда      рез=рез+"3131131111";
		ИначеЕсли с="D" тогда      рез=рез+"1111331131";
		ИначеЕсли с="E" тогда      рез=рез+"3111331111";
		ИначеЕсли с="F" тогда      рез=рез+"1131331111";
		ИначеЕсли с="G" тогда      рез=рез+"1111133131";
		ИначеЕсли с="H" тогда      рез=рез+"3111133111";
		ИначеЕсли с="I" тогда      рез=рез+"1131133111";
		ИначеЕсли с="J" тогда      рез=рез+"1111333111";
		ИначеЕсли с="K" тогда      рез=рез+"3111111331";
		ИначеЕсли с="L" тогда      рез=рез+"1131111331";
		ИначеЕсли с="M" тогда      рез=рез+"3131111311";
		ИначеЕсли с="N" тогда      рез=рез+"1111311331";
		ИначеЕсли с="O" тогда      рез=рез+"3111311311";
		ИначеЕсли с="P" тогда      рез=рез+"1131311311";
		ИначеЕсли с="Q" тогда      рез=рез+"1111113331";
		ИначеЕсли с="R" тогда      рез=рез+"3111113311";
		ИначеЕсли с="S" тогда      рез=рез+"1131113311";
		ИначеЕсли с="T" тогда      рез=рез+"1111313311";
		ИначеЕсли с="U" тогда      рез=рез+"3311111131";
		ИначеЕсли с="V" тогда      рез=рез+"1331111131";
		ИначеЕсли с="W" тогда      рез=рез+"3331111111";
		ИначеЕсли с="X" тогда      рез=рез+"1311311131";
		ИначеЕсли с="Y" тогда      рез=рез+"3311311111";
		ИначеЕсли с="Z" тогда      рез=рез+"1331311111";
		ИначеЕсли с="-" тогда      рез=рез+"1311113131";
		ИначеЕсли с="." тогда      рез=рез+"3311113111";
		ИначеЕсли с=" " тогда      рез=рез+"1331113111";
		ИначеЕсли с="*" тогда      рез=рез+"1311313111";
		ИначеЕсли с="$" тогда      рез=рез+"1313131111";
		ИначеЕсли с="/" тогда      рез=рез+"1313111311";
		ИначеЕсли с="+" тогда      рез=рез+"1311131311";
		ИначеЕсли с="%" тогда      рез=рез+"1113131311";
		Иначе
			возврат "";
		КонецЕсли;
	КонецЦикла;
	возврат рез+"1311313111";
КонецФункции
Функция штрих_ean8(стр) Экспорт
	рез="111";
	Если СтрДлина(стр)=8 тогда
		стр=Лев(стр,7);
	ИначеЕсли СтрДлина(стр)<>7 тогда
		возврат "";
	КонецЕсли;
	кс=0;
	Для Н=1 по 7 цикл
		ч=Число(Сред(стр,Н,1));
		кс=кс+ч*((Н%2)*2+1);
		рез=рез+ean[ч];
		Если Н=4 тогда
			рез=рез+"11111";
		КонецЕсли;
	КонецЦикла;
	кс=(10-кс%10)%10;
	стр=стр+кс;
	возврат рез+ean[кс]+"111";
КонецФункции
Функция СтрРеверс(стр)
	рез="";
	л=СтрДлина(стр);
	Для Н=0 по л-1 Цикл
		рез=рез+Сред(стр,л-н,1);
	КонецЦикла;
	Возврат рез;
КонецФункции
Функция штрих_ean13(стр) Экспорт
	рез="111";
	Если СтрДлина(стр)=13 тогда
		стр=Лев(стр,12);
	ИначеЕсли СтрДлина(стр)<>12 тогда
		возврат "";
	КонецЕсли;
	кс=Число(лев(стр,1));
	м=ean13m[Число(Лев(стр,1))];
	Для Н=2 по 7 цикл
		ч=Число(Сред(стр,Н,1));
		кс=кс+ч*(((Н+1)%2)*2+1);
		зн=ean[ч];
		рез=рез+?(Сред(м,Н-1,1)="0",зн,СтрРеверс(зн));
	КонецЦикла;
	рез=рез+"11111";
	Для Н=8 по 12 цикл
		ч=Число(Сред(стр,Н,1));
		кс=кс+ч*(((Н+1)%2)*2+1);
		зн=ean[ч];
		рез=рез+зн;
	КонецЦикла;
	кс=(10-кс%10)%10;
	стр=стр+кс;
	возврат рез+ean[кс]+"111";
КонецФункции

//Инициализация данных "картинки"
//На входе структура с параметрами:
//Ширина - ширина картинки в пикселях
//Высота - высота картинки в пикселях
//БитНаПиксель - битность картинки, число, доступно 1,4,8,24. По умолчанию 1 - ч/б
//ЦветФона - опция, цвет для заливки. По умолчанию 0
Функция СоздатьКартинку(знач Параметры) Экспорт
	Если Не Параметры.Свойство("БитНаПиксель") тогда
		Параметры.Вставить("БитНаПиксель",1);
	КонецЕсли;
	ЦветФона=0;
	Если Не Параметры.Свойство("ЦветФона",ЦветФона) тогда
		ЦветФона=0;
	КонецЕсли;
//	слов=0;
	ЦветФона=ЦветФона%Pow(2,Параметры.БитНаПиксель);
	//Если Параметры.БитНаПиксель=1 тогда
	//	слов=Цел(Параметры.Ширина/32)+?(Ост(Параметры.Ширина,32)>0,1,0);
	//	цф=0;
	//	Для н=1 по 32 цикл
	//		цф=цф*2+ЦветФона;
	//	КонецЦикла;
	//	ЦветФона=цф;
	//ИначеЕсли Параметры.БитНаПиксель=8 Тогда
	//	слов=Цел(Параметры.Ширина/4)+?(Ост(Параметры.Ширина,4)>0,1,0);
	//	цф=0;
	//	Для н=1 по 4 цикл
	//		цф=цф*256+ЦветФона;
	//	КонецЦикла;
	//	ЦветФона=цф;
	//КонецЕсли;
	Палитра=ПолучитьПалитруПоУмолчанию(Параметры.БитНаПиксель);
	данные=Новый Массив(Параметры.Высота,Параметры.Ширина);
	Для в=0 по Параметры.Высота-1 цикл
		для ш=0 по Параметры.Ширина-1 цикл
			данные[в][ш]=ЦветФона;
		КонецЦикла;
	КонецЦикла;
	рез=Новый Структура("Параметры,Данные,Палитра",Параметры,данные,палитра);
	Возврат рез;
КонецФункции
//Одновременное целочисленное деление и получение остатка
Функция ЦелДеление(ч1,ч2,остаток) Экспорт
	рез=цел(ч1/ч2);
	остаток=ч1-рез*ч2;
	возврат рез;
КонецФункции
//Модуль числа (убирает знак)
Функция Модуль(ч) Экспорт
	Возврат ?(ч>0,ч,-ч);
КонецФункции
//Битовый сдвиг влево на число бит
Функция ДвВлево(знач ч,сдвиг) Экспорт
	//Для н=1 по сдвиг цикл
	//	ч=ч*2;
	//КонецЦикла;
	Возврат Окр(Цел(ч)*Pow(2,сдвиг));
КонецФункции
//Битовый сдвиг вправо на число бит
Функция ДвВправо(знач ч,сдвиг) Экспорт
	Для н=1 по сдвиг цикл
		ч=Цел(ч/2);
	КонецЦикла;
	Возврат ч;
КонецФункции
//Битовое НЕ для указанного числа младших бит
Функция ДвНЕ(знач ч,ширина) Экспорт
	мн=1;
	рез=0;
	ч=Цел(ч);
	Для Н=1 по Ширина Цикл
		т=Цел(ч/2);
		б=ч%2;
		Если б=0 тогда
			рез=рез+мн;
		КонецЕсли;
		ч=т;
		мн=мн*2;
	КонецЦикла;
	Возврат рез;
КонецФункции
//Двоичное И двух чисел
Функция ДвИ(знач ч1,знач ч2) Экспорт
	рез=0;
	мн=1;
	ч1=цел(ч1);ч2=цел(ч2);
	Пока (ч1>0)и(ч2>0) цикл
		т1=Цел(ч1/2);т2=Цел(ч2/2);
		б1=ч1%2;б2=ч2%2;
		Если (б1+б2)=2 тогда
			рез=рез+мн;
		КонецЕсли;
		ч1=т1;ч2=т2;
		мн=мн*2;
	КонецЦикла;
	Возврат рез;
КонецФункции
//Двоичное ИЛИ двух чисел
Функция ДвИЛИ(знач ч1,знач ч2) Экспорт
	рез=0;
	мн=1;
	ч1=цел(ч1);ч2=цел(ч2);
	Пока (ч1>0)или(ч2>0) цикл
		т1=Цел(ч1/2);т2=Цел(ч2/2);
		б1=ч1%2;б2=ч2%2;
		Если ((б1+б2)>=1) тогда
			рез=рез+мн;
		КонецЕсли;
		ч1=т1;ч2=т2;
		мн=мн*2;
	КонецЦикла;
	Возврат рез;
КонецФункции
//Двоичное Исключающее ИЛИ двух чисел (XOR)
Функция ДвИсклИЛИ(знач ч1,знач ч2) Экспорт
	рез=0;
	мн=1;
	ч1=цел(ч1);ч2=цел(ч2);
	Пока (ч1>0)или(ч2>0) цикл
		б1=ч1%2;б2=ч2%2;
		т1=Цел(ч1/2);т2=Цел(ч2/2);
		Если (б1<>б2) тогда
			рез=рез+мн;
		КонецЕсли;
		ч1=т1;ч2=т2;
		мн=мн*2;
	КонецЦикла;
	Возврат рез;
КонецФункции

//Возвращает строку - кодированные по Base64 данные, представленные массивом байт
Функция КодироватьБ64(данные) Экспорт
	Рез="";
//	ВГр=данные.ВГраница();
	кол=данные.Количество();
	Если кол=0 тогда
		Возврат "";
	КонецЕсли;
	
	Попытка
		х=Новый ЗаписьXML();
		х.УстановитьСтроку();
		
		Для НН=0 по Цел(кол/3)-1 цикл
			х.ЗаписатьБезОбработки(Б64м[Цел(данные[НН*3]/4)]                                          
			  +Б64м[(данные[НН*3]%4)*16+Цел(данные[НН*3+1]/16)]
			  +Б64м[(данные[НН*3+1]%16)*4+Цел(данные[НН*3+2]/64)]
			  +Б64м[(данные[НН*3+2]%64)]);
		КонецЦикла;
	    о=(кол%3);
		Если о>0 тогда
			НН=Цел(кол/3)*3;
			ч1=данные[НН];
			ч2=?(о>1,данные[НН+1],0);
			Рез=Б64м[Цел(ч1/4)]+Б64м[(ч1%4)*16+Цел(ч2/16)];
			Если о=1 тогда
				Рез=Рез+"==";
			Иначе
				Рез=Рез+Б64м[(ч2%16)*4]+"=";
			КонецЕсли;
			х.ЗаписатьБезОбработки(Рез);
		КонецЕсли;
		Рез=х.Закрыть();
	Исключение
		Строки=Новый Массив();
		Для НН=0 по Цел(кол/3)-1 цикл
			Строки.Добавить(Б64м[Цел(данные[НН*3]/4)]                                          
			  +Б64м[(данные[НН*3]%4)*16+Цел(данные[НН*3+1]/16)]
			  +Б64м[(данные[НН*3+1]%16)*4+Цел(данные[НН*3+2]/64)]
			  +Б64м[(данные[НН*3+2]%64)]);
		КонецЦикла;
	    о=(кол%3);
		Если о>0 тогда
			НН=Цел(кол/3)*3;
			ч1=данные[НН];
			ч2=?(о>1,данные[НН+1],0);
			Рез=Б64м[Цел(ч1/4)]+Б64м[(ч1%4)*16+Цел(ч2/16)];
			Если о=1 тогда
				Рез=Рез+"==";
			Иначе
				Рез=Рез+Б64м[(ч2%16)*4]+"=";
			КонецЕсли;
			Строки.Добавить(Рез);
		КонецЕсли;
		КолСтрок=Строки.Количество();
		Пока КолСтрок>1 цикл
			Для Н=0 по Цел(КолСтрок/2)-1 Цикл
				Строки[Н]=Строки[н*2]+Строки[н*2+1];
			КонецЦикла;
			Если (КолСтрок%2)=1 тогда
				Строки[Цел(КолСтрок/2)]=Строки[КолСтрок-1];
			КонецЕсли;
			КолСтрок=Цел(КолСтрок/2)+КолСтрок%2;
			//к=Строки.ВГраница();
			//Для н=Цел(Строки.Количество()/2)+(м.Количество()%2) по к Цикл
			//	м.Удалить(м.ВГраница());
			//КонецЦикла;
		КонецЦикла;
		Рез=Строки[0];
	КонецПопытки;
	Возврат Рез;
КонецФункции
Функция Число32ВМассив(ч)
	рез=Новый Массив(4);
	рез[0]=(ч%256);
	рез[1]=Цел((ч%(256*256))/256);
	рез[2]=Цел((ч%(256*256*256))/256/256);
	рез[3]=Цел(ч/256/256/256)%256;
	Возврат рез;
КонецФункции

Функция КартинкаПолучитьМассив(Картинка);
	разм=14+40;
	размпал=Картинка.палитра.Количество()*4;
	//Если Картинка.Параметры.БитНаПиксель<=8 тогда
	//	размпал=4*Окр(Pow(2,Картинка.Параметры.БитНаПиксель));
	//КонецЕсли;
	разм=разм+размпал;
	линия=0;
	Если Картинка.Параметры.БитНаПиксель=1 тогда
		строка=Цел(Картинка.Параметры.Ширина/8)+?((Картинка.Параметры.Ширина%8)>0,1,0);
	ИначеЕсли Картинка.Параметры.БитНаПиксель=8 тогда
		строка=Картинка.Параметры.Ширина;
	ИначеЕсли Картинка.Параметры.БитНаПиксель=4 тогда
		строка=Цел(Картинка.Параметры.Ширина/2)+Картинка.Параметры.Ширина%2;
	ИначеЕсли Картинка.Параметры.БитНаПиксель=24 тогда
		строка=Картинка.Параметры.Ширина*3;
	КонецЕсли;
	Если (строка%4)>0 тогда
		строка=(Цел(строка/4)+1)*4;
	КонецЕсли;
	разм=разм+Картинка.Параметры.Высота*строка;
	рез=Новый Массив(разм);
	рез[0]=КодСимвола("B");
	рез[1]=КодСимвола("M");
	м=Число32ВМассив(разм);
	рез[2]=м[0];
	рез[3]=м[1];
	рез[4]=м[2];
	рез[5]=м[3];
	рез[6]=0;
	рез[7]=0;
	рез[8]=0;
	рез[9]=0;
	см=14+40+размпал;
	м=Число32ВМассив(см);
	рез[10]=м[0];
	рез[11]=м[1];
	рез[12]=м[2];
	рез[13]=м[3];
	
	рез[14]=40;
	рез[15]=0;
	рез[16]=0;
	рез[17]=0;
	м=Число32ВМассив(Картинка.Параметры.Ширина);
	рез[18]=м[0];
	рез[19]=м[1];
	рез[20]=м[2];
	рез[21]=м[3];
	м=Число32ВМассив(Картинка.Параметры.Высота);
	рез[22]=м[0];
	рез[23]=м[1];
	рез[24]=м[2];
	рез[25]=м[3];
	рез[26]=1;
	рез[27]=0;
	рез[28]=Картинка.Параметры.БитНаПиксель;
	рез[29]=0;
	Для н=30 по 14+40-1 цикл
		рез[н]=0;
	КонецЦикла;
	//Если Картинка.Параметры.БитНаПиксель=1 тогда
	//	рез[54]=0;
	//	рез[55]=0;
	//	рез[56]=0;
	//	рез[57]=0;
	//	рез[58]=255;
	//	рез[59]=255;
	//	рез[60]=255;
	//	рез[61]=0;
	//ИначеЕсли Картинка.Параметры.БитНаПиксель=8 тогда
	//	//Для Н=0 по 255 цикл
	//	//	рез[54+Н*4]=Н;
	//	//	рез[54+Н*4+1]=Н;
	//	//	рез[54+Н*4+2]=Н;
	//	//	рез[54+Н*4+3]=0;
	//	//КонецЦикла;
	//	//Н=15;
	//	//рез[54+Н*4]=255;
	//	//рез[54+Н*4+1]=255;
	//	//рез[54+Н*4+2]=255;
	//	ц=0;
	//	Для ц1=0 по 5 цикл
	//		Для ц2=0 по 5 цикл
	//			Для ц3=0 по 5 цикл
	//				рез[54+ц*4]=Окр(255/ц1*5);
	//				рез[54+ц*4+1]=Окр(255/ц2*5);
	//				рез[54+ц*4+2]=Окр(255/ц3*5);
	//				рез[54+ц*4+3]=0;
	//				ц=ц+1;
	//			КонецЦикла;
	//		КонецЦикла;
	//	КонецЦикла;
	//	Для н=0 по 39 цикл
	//		рез[54+ц*4+0]=Окр(255/н*39);
	//		рез[54+ц*4+1]=Окр(255/н*39);
	//		рез[54+ц*4+2]=Окр(255/н*39);
	//		рез[54+ц*4+3]=0;
	//		ц=ц+1;
	//	КонецЦикла;
	//КонецЕсли;
	для цв=0 по Картинка.Палитра.Количество()-1 Цикл
		рез[54+цв*4+0]=Картинка.Палитра[цв].Синий;
		рез[54+цв*4+1]=Картинка.Палитра[цв].Зеленый;
		рез[54+цв*4+2]=Картинка.Палитра[цв].Красный;
		рез[54+цв*4+3]=0;
	КонецЦикла;
	
	Для Выс=0 по Картинка.Параметры.Высота-1 цикл
		ви=Картинка.Параметры.Высота-1-Выс;
		шт=0;
//		байт=0;
		БайтВСтроке=0;
		Для ш=0 По Картинка.Данные[ви].ВГраница() цикл
			зн=Картинка.Данные[ви][ш];
			Если Картинка.Параметры.БитНаПиксель=1 тогда
				если шт=0 тогда
					байт=0;
				КонецЕсли;
				шт=шт+1;
				байт=байт*2+(зн%2);
				если шт=8 тогда
					шт=0;
				Иначе
					Продолжить;
				КонецЕсли;
			ИначеЕсли Картинка.Параметры.БитНаПиксель=8 тогда
				байт=(зн%256);
			ИначеЕсли Картинка.Параметры.БитНаПиксель=4 тогда
				шт=(1-ш%2)*4;
				если шт=0 тогда
					байт=байт*16+(зн%16);
					шт=0;
				Иначе
					байт=зн%16;
					продолжить;
				КонецЕсли;
			ИначеЕсли Картинка.Параметры.БитНаПиксель=24 тогда
				цвр=0;цвж=0;цвб=0;
				т=ЦелДеление(зн,256,цвр);
				т=ЦелДеление(т,256,цвж);
				т=ЦелДеление(т,256,цвб);
				рез[см+0]=цвб;
				рез[см+1]=цвж;
				рез[см+2]=цвр;
				БайтВСтроке=БайтВСтроке+3;
				см=см+3;
				Продолжить;
			КонецЕсли;
			//м=Число32ВМассив(Картинка.Данные[ви][ш]);
			//рез[см  ]=м[3];
			//рез[см+1]=м[2];
			//рез[см+2]=м[1];
			//рез[см+3]=м[0];
			рез[см]=байт;
			БайтВСтроке=БайтВСтроке+1;
			см=см+1;
		КонецЦикла;
		Если шт<>0 тогда
			байт=байт*Pow(2,8-шт);
			БайтВСтроке=БайтВСтроке+1;
			рез[см]=байт;
			см=см+1;
		КонецЕсли;
		о=(4-(БайтВСтроке%4))%4;
		Для н=1 по о цикл
			рез[см]=0;
			см=см+1;
		КонецЦикла;
	КонецЦикла;
	Возврат рез;
КонецФункции
	
//Сохранить подготовленную картинку в файл формата BMP
Процедура СохранитьКартинкуВФайл(картинка,ИмяФайла) Экспорт
	СохранитьКартинкуВДанные(Картинка).Записать(ИмяФайла);
КонецПроцедуры

//Сохранить подготовленную картинку в ДвоичныеДанные
Функция СохранитьКартинкуВДанные(картинка) Экспорт
	возврат Base64Значение(КодироватьБ64(КартинкаПолучитьМассив(Картинка)));
КонецФункции
//Рисование вертикальной линии от ряд1 до ряд2 включительно, ряд1<ряд2.
Процедура КартинкаВертикальнаяЛиния(картинка,столбец,ряд1,ряд2,цвет) Экспорт
	Если (столбец<0)или(столбец>=Картинка.Параметры.Ширина) Тогда
		возврат;
	КонецЕсли;
	Если ряд1<0 тогда
		ряд1=0;
	КонецЕсли;
	Если ряд2<0 тогда
		ряд2=0;
	КонецЕсли;
	Если ряд1>=Картинка.Параметры.Высота тогда
		ряд1=Картинка.Параметры.Высота-1;
	КонецЕсли;
	Если ряд2>=Картинка.Параметры.Высота тогда
		ряд2=Картинка.Параметры.Высота-1;
	КонецЕсли;
	//Если Картинка.Параметры.БитНаПиксель=1 тогда
	//	слово=Цел(столбец/32);
	//	бит=31-Ост(столбец,32);
	//	Для н=ряд1 по ряд2 цикл
	//		Картинка.Данные[н][слово]=ДвИ(Картинка.Данные[н][слово],ДвНе(Pow(2,бит),32))+цвет;
	//	КонецЦикла;
	//ИначеЕсли Картинка.Параметры.БитНаПиксель=8 тогда
	//	слово=Цел(столбец/4);
	//	байт=3-Ост(столбец,4);
	//	Для н=ряд1 по ряд2 цикл
	//		Картинка.Данные[н][слово]=ДвИ(Картинка.Данные[н][слово],ДвНе(255*Pow(2,байт*8),32))+цвет;
	//	КонецЦикла;
	//КонецЕсли;
	Для н=ряд1 по ряд2 цикл
		Картинка.Данные[н][столбец]=цвет;
	КонецЦикла;
КонецПроцедуры
//Рисование горизонтальной линии от столбец1 до столбец2 включительно, столбец1<столбец2.
Процедура КартинкаГоризонтальнаяЛиния(картинка,столбец1,столбец2,ряд,цвет) Экспорт
	Если (ряд<0)или(ряд>=Картинка.Параметры.Высота) Тогда
		возврат;
	КонецЕсли;
	Если столбец1<0 тогда
		столбец1=0;
	КонецЕсли;
	Если столбец2<0 тогда
		столбец2=0;
	КонецЕсли;
	Если столбец1>=Картинка.Параметры.Ширина тогда
		столбец1=Картинка.Параметры.Ширина-1;
	КонецЕсли;
	Если столбец2>=Картинка.Параметры.Ширина тогда
		столбец2=Картинка.Параметры.Ширина-1;
	КонецЕсли;
	Для н=столбец1 по столбец2 цикл
		Картинка.Данные[ряд][н]=цвет;
	КонецЦикла;
	//Если Картинка.Параметры.БитНаПиксель=1 тогда
	//	слово1=Цел(столбец1/32);
	//	слово2=Цел(столбец2/32);
	//	бит1=31-Ост(столбец1,32);
	//	бит2=31-Ост(столбец2,32);
	//	Если слово2-слово1>1 тогда
	//		Если Цвет=0 тогда
	//			ц=0;
	//		Иначе
	//			ц=Pow(2,32)-1;
	//		КонецЕсли;
	//		Для н=слово1+1 по слово2-1 цикл
	//			Картинка.Данные[ряд][н]=ц;
	//		КонецЦикла;
	//	КонецЕсли;
	//	Если слово1=слово2 тогда
	//		б1=pow(2,бит2);
	//		б2=0;
	//		для н=бит2 по бит1 цикл
	//			б2=б2+б1;
	//			б1=б1*2;
	//		КонецЦикла;
	//		д=Картинка.Данные[ряд][слово1];
	//		если цвет>0 тогда
	//			д=ДвИЛИ(д,б2);
	//		Иначе
	//			д=ДвИ(д,ДвНЕ(б2,32))
	//		КонецЕсли;
	//		Картинка.Данные[ряд][слово1]=д;
	//	Иначе
	//		д1=Картинка.Данные[ряд][слово1];
	//		д2=Картинка.Данные[ряд][слово2];
	//		б1=pow(2,бит1);
	//		б2=pow(2,бит2);
	//		д1=ДвИ(д1,б1-1);
	//		д2=ДвНЕ(б2-1,32);
	//		если цвет>0 тогда
	//			Для н=бит1 по 31 Цикл
	//				д1=д1+б1;
	//				б1=б1*2;
	//			КонецЦикла;
	//			б2=1;
	//			Для н=0 по бит2 Цикл
	//				д2=д2+б2;
	//				б2=б2*2;
	//			КонецЦикла;
	//		КонецЕсли;
	//		Картинка.Данные[ряд][слово1]=д1;
	//		Картинка.Данные[ряд][слово1]=д2;
	//	КонецЕсли;
	//ИначеЕсли Картинка.Параметры.БитНаПиксель=8 тогда
	//	слово1=Цел(столбец1/4);
	//	байт1=3-Ост(столбец1,4);
	//	слово2=Цел(столбец2/4);
	//	байт2=3-Ост(столбец2,4);
	//	Если Слово1=Слово2 тогда
	//		д=Картинка.Данные[ряд][слово1];
	//		м=65536*65536-Pow(2,(байт2+1)*8)+Pow(2,байт1*8)-1;
	//		д=ДвИ(д,м);
	//		ц=цвет;
	//		Для н=1 по байт1 Цикл
	//			ц=ц*256;
	//		КонецЦикла;
	//		ц2=ц;
	//		Для н=байт1+1 по байт2 Цикл
	//			ц=ц*256+ц2;
	//		КонецЦикла;
	//		Картинка.Данные[ряд][слово1]=д+ц;
	//	Иначе
	//		Если слово1+1<слово2 тогда
	//			ц=цвет+цвет*256+цвет*256*256+цвет*256*256*256;
	//		КонецЕсли;
	//		для н=слово1+1 по слово2-1 цикл
	//			Картинка.Данные[ряд][н]=ц;
	//		КонецЦикла;
	//		б1=Pow(2,байт1*8);
	//		м1=0;
	//		дд=0;
	//		д1=Картинка.Данные[ряд][слово1];
	//		д2=Картинка.Данные[ряд][слово1];
	//		д=цвет*б1;
	//		м1=б1-1;
	//		для н=байт1 по 3 цикл
	//			дд=дд*256+д;
	//		КонецЦикла;
	//		Картинка.Данные[ряд][слово1]=ДвИ(д1,м1)+дд;
	//		м=ДвНЕ(Pow(2,8*(байт2+1))-1,32);
	//		дд=0;
	//		для н=0 по байт2 цикл
	//			дд=дд*256+цвет;
	//		КонецЦикла;
	//		Картинка.Данные[ряд][слово2]=ДвИ(д2,м)+дд;
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры
//Рисование прямоугольника. Если указан ЦветФона происходит заливка
Процедура КартинкаПрямоугольник(картинка,знач столбец1,знач ряд1,знач столбец2,знач ряд2,знач ЦветГраницы,знач ЦветФона=Неопределено) Экспорт
//	Если ЦветФона=Неопределено тогда ЦветФона=ЦветГраницы; КонецЕсли;
	Если столбец1>столбец2 тогда
		т=столбец1;
		столбец1=столбец2;
		столбец2=т;
	КонецЕсли;
	Если ряд1>ряд2 тогда
		т=ряд1;
		ряд1=ряд2;
		ряд2=т;
	КонецЕсли;
	Если ЦветФона=ЦветГраницы тогда
		Для НН=ряд1 по ряд2	Цикл
			КартинкаГоризонтальнаяЛиния(картинка,столбец1,столбец2,НН,ЦветФона);
		КонецЦикла;
	Иначе
		КартинкаГоризонтальнаяЛиния(картинка,столбец1,столбец2,ряд1,ЦветГраницы);
		КартинкаГоризонтальнаяЛиния(картинка,столбец1,столбец2,ряд2,ЦветГраницы);
		КартинкаВертикальнаяЛиния(картинка,столбец1,ряд1,ряд2,ЦветГраницы);
		КартинкаВертикальнаяЛиния(картинка,столбец2,ряд1,ряд2,ЦветГраницы);
		Если (ЦветФона<>Неопределено)и(столбец2>столбец1+1)и(ряд2>ряд1+1) тогда
			КартинкаПрямоугольник(картинка,столбец1+1,ряд1+1,столбец2-1,ряд2-1,ЦветФона,ЦветФона);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
Функция ПолучитьПалитруПоУмолчанию(БитНаПиксель) Экспорт
	Если БитНаПиксель>8 тогда
		возврат Новый Массив;
	КонецЕсли;
	палитра=Новый Массив(Pow(2,БитНаПиксель));
	Если БитНаПиксель=1 тогда
		палитра[0]=Новый Цвет(0,0,0);
		палитра[1]=Новый Цвет(255,255,255);
	ИначеЕсли БитНаПиксель=4 тогда
		палитра[0]=Новый Цвет(0,0,0);
		палитра[1]=Новый Цвет(128,0,0);
		палитра[2]=Новый Цвет(0,128,0);
		палитра[3]=Новый Цвет(128,128,0);
		палитра[4]=Новый Цвет(0,0,128);
		палитра[5]=Новый Цвет(128,0,128);
		палитра[6]=Новый Цвет(0,128,128);
		палитра[7]=Новый Цвет(128,128,128);
		палитра[8]=Новый Цвет(192,192,192);
		палитра[9]=Новый Цвет(255,0,0);
		палитра[10]=Новый Цвет(0,255,0);
		палитра[11]=Новый Цвет(255,255,0);
		палитра[12]=Новый Цвет(0,0,255);
		палитра[13]=Новый Цвет(255,0,255);
		палитра[14]=Новый Цвет(0,255,255);
		палитра[15]=Новый Цвет(255,255,255);
	ИначеЕсли БитНаПиксель=8 тогда
		ц=0;
		Для ц1р=0 по 5 цикл
			Для ц2ж=0 по 5 цикл
				Для ц3б=0 по 5 цикл
					палитра[ц]=Новый Цвет(Окр(255*ц1р/5),Окр(255*ц2ж/5),Окр(255*ц3б/5));
					ц=ц+1;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		Для н=0 по 39 цикл
			т=Окр(255*н/39);
			палитра[ц]=Новый Цвет(т,т,т);
			ц=ц+1;
		КонецЦикла;
	КонецЕсли;
	Возврат палитра;
КонецФункции

//Инициализация данных "картинки"
//Возвращаемая структура содержит массив "данные" - набор векторных команд
//Каждая команда - структура с полями
// "Размер" - размер записи в 16-разрядных словах,
// "Команда" - идентификатор команды
// "Данные" - массив 16-разрядных слов, составляющих параметры команды
Функция СоздатьВекторнуюКартинку(Ширина,Высота) Экспорт
	рез=Новый Структура("Данные,Объекты,Размер,НаибольшийРазмер,Ширина,Высота",Новый Массив(),Новый Массив(),9+3,3,Ширина,Высота);
	ВекторнаяКартинкаSETWINDOWORG(рез,0,0);
	ВекторнаяКартинкаSETWINDOWEXT(рез,Ширина,Высота);
	Возврат рез;
КонецФункции
Процедура ВекторнаяКартинкаSETWINDOWEXT(картинка,х,у) Экспорт
	Картинка.Высота=Макс(Картинка.Высота,у);
	Картинка.Ширина=Макс(Картинка.Ширина,х);
	з=Новый Структура("Размер,Команда,Данные",5,Hex2Dec("020C"),Новый Массив(2));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=у;
	з.Данные[1]=х;
	Картинка.Данные.Добавить(з);
КонецПроцедуры
Процедура ВекторнаяКартинкаSETWINDOWORG(картинка,х,у) Экспорт
	//Картинка.Высота=Макс(Картинка.Высота,у);
	//Картинка.Ширина=Макс(Картинка.Ширина,х);
	з=Новый Структура("Размер,Команда,Данные",5,Hex2Dec("020B"),Новый Массив(2));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=у;
	з.Данные[1]=х;
	Картинка.Данные.Добавить(з);
КонецПроцедуры
Функция ВекторнаяКартинкаПолучитьМассив(Картинка);
	рез=Новый Массив(Картинка.Размер*2+22);
	рез[0]=215;
	рез[1]=205;
	рез[2]=198;
	рез[3]=154;
	рез[4]=0;
	рез[5]=0;
	рез[6]=0;
	рез[7]=0;
	рез[8]=0;
	рез[9]=0;
	рез[10]=Картинка.Ширина%256;
	рез[11]=Цел(Картинка.Ширина/256);
	рез[12]=Картинка.Высота%256;
	рез[13]=Цел(Картинка.Высота/256);
	рез[14]=1440%256;
	рез[15]=Цел(1440/256);
	рез[16]=0;
	рез[17]=0;
	рез[18]=0;
	рез[19]=0;
	р1=рез[0];р2=рез[1];
	Для н=1 по 9 цикл
		р1=ДвИсклИЛИ(р1,рез[н*2]);
		р2=ДвИсклИЛИ(р2,рез[н*2+1]);
	КонецЦикла;
	рез[20]=р1;
	рез[21]=р2;
	фх=22;
	рез[0+фх]=1;
	рез[1+фх]=0;
	рез[2+фх]=9;
	рез[3+фх]=0;
	рез[4+фх]=0;
	рез[5+фх]=3;
	м=Число32ВМассив(Картинка.Размер);
	рез[6+фх]=м[0];
	рез[7+фх]=м[1];
	рез[8+фх]=м[2];
	рез[9+фх]=м[3];
	рез[10+фх]=Картинка.Объекты.Количество()%256;
	рез[11+фх]=Цел(Картинка.Объекты.Количество()/256);
	м=Число32ВМассив(Картинка.НаибольшийРазмер);
	рез[12+фх]=м[0];
	рез[13+фх]=м[1];
	рез[14+фх]=м[2];
	рез[15+фх]=м[3];
	рез[16+фх]=0;
	рез[17+фх]=0;
	поз=18+фх;
	Для н=0 по картинка.Данные.ВГраница() цикл
		Запись=Картинка.Данные[н];
		м=Число32ВМассив(Запись.Размер);
		рез[поз]=м[0];
		рез[поз+1]=м[1];
		рез[поз+2]=м[2];
		рез[поз+3]=м[3];
		рез[поз+4]=Запись.Команда%256;
		рез[поз+5]=Цел(Запись.Команда/256);
		поз=поз+6;
		Для НН=0 по Запись.Данные.ВГраница() Цикл
			ч=(65536+Запись.Данные[НН])%65536;
			рез[поз]=ч % 256;
			рез[поз+1]=Цел(ч / 256);
			поз=поз+2;
		КонецЦикла;
	КонецЦикла;
	рез[поз]=3;
	рез[поз+1]=0;
	рез[поз+2]=0;
	рез[поз+3]=0;
	рез[поз+4]=0;
	рез[поз+5]=0;
	поз=поз+6;
	Возврат рез;
КонецФункции
	
//Сохранить подготовленную картинку в файл формата BMP
Процедура ВекторнаяКартинкаСохранитьВФайл(картинка,ИмяФайла) Экспорт
	ВекторнаяКартинкаСохранитьВДанные(Картинка).Записать(ИмяФайла);
КонецПроцедуры

//Сохранить подготовленную картинку в ДвоичныеДанные
Функция ВекторнаяКартинкаСохранитьВДанные(картинка) Экспорт
	возврат Base64Значение(КодироватьБ64(ВекторнаяКартинкаПолучитьМассив(Картинка)));
КонецФункции
Функция ВекторнаяКартинкаПолучитьОбъект(картинка)
	для Н=0 по картинка.Объекты.ВГраница() цикл
		Если Картинка.Объекты[Н]=Ложь тогда
			Картинка.Объекты[Н]=Истина;
			Возврат Н;
		КонецЕсли;
	КонецЦикла;
	Картинка.Объекты.Добавить(Истина);
	Возврат Картинка.Объекты.ВГраница();
КонецФункции
Функция ВекторнаяКартинкаОсвободитьбъект(картинка,объект)
	Картинка.Объекты[объект]=Ложь;
	Возврат Картинка.Объекты.ВГраница();
КонецФункции

//Использовать созданный объект типа PEN/BRUSH/FONT для рисования
Процедура ВекторнаяКартинкаSelectObject(картинка,объект) Экспорт
	з=Новый Структура("Размер,Команда,Данные",4,Hex2Dec("012D"),Новый Массив(1));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=объект;
	Картинка.Данные.Добавить(з);
КонецПроцедуры
//Уничтожить ранее созданный объект
Процедура ВекторнаяКартинкаDELETEObject(картинка,объект) Экспорт
	з=Новый Структура("Размер,Команда,Данные",4,Hex2Dec("01F0"),Новый Массив(1));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=объект;
	Картинка.Данные.Добавить(з);
	ВекторнаяКартинкаОсвободитьбъект(картинка,объект);
КонецПроцедуры
//Создать объект PEN для рисования линий
Функция ВекторнаяКартинкаCREATEPENINDIRECT(картинка,Стиль,Толщина,Цвет) Экспорт
	з=Новый Структура("Размер,Команда,Данные",8,Hex2Dec("02FA"),Новый Массив(5));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=Стиль;
	з.Данные[1]=Толщина;
	з.Данные[2]=0;
	з.Данные[3]=Цвет.Красный+256*Цвет.Зеленый;
	з.Данные[4]=Цвет.Синий;
	Картинка.Данные.Добавить(з);
	Возврат ВекторнаяКартинкаПолучитьОбъект(картинка);
КонецФункции
//Создать объект BRUSH для заливки
Функция ВекторнаяКартинкаCREATEBRUSHINDIRECT(картинка,Стиль,знач Цвет=Неопределено,знач Штриховка=0) Экспорт
	Если Цвет=Неопределено тогда 
		Цвет=Новый Цвет(0,0,0);
	КонецЕсли;
	з=Новый Структура("Размер,Команда,Данные",7,Hex2Dec("02FC"),Новый Массив(4));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=Стиль;
	з.Данные[1]=Цвет.Красный+256*Цвет.Зеленый;
	з.Данные[2]=Цвет.Синий;
	з.Данные[3]=Штриховка;
	Картинка.Данные.Добавить(з);
	Возврат ВекторнаяКартинкаПолучитьОбъект(картинка);
КонецФункции
//Создание объекта "Шрифт" в картинке
//@шрифт - объект Шрифт
//@Ширина - подбор ширины символов, 0 - авто
//@Поворот - угол наклона шрифта в градусах
//@ПоворотЗнаков - угол наклона символов. По умолчанию совпадает с наклоном шрифта
//@Кодировка - значение CharSet из стандарта WMF. 0 - Ansi, 1 - по умолчанию, 204 - русский
//@Подбор - значение OutPrecision Enumeration
//@ПодборОбрезания - значение ClipPrecision Flags
//@Качество - значение FontQuality Enumeration
//@Семейство - значение PitchAndFamily = FamilyFont + PitchFont*64
Функция ВекторнаяКартинкаCREATEFONTINDIRECT(картинка,шрифт,Ширина=0,Поворот=0,знач ПоворотЗнаков=Неопределено,Кодировка=1,Подбор=0,ПодборОбрезания=0,Качество=0,Семейство=0) Экспорт
	Если ПоворотЗнаков=Неопределено тогда 
		ПоворотЗнаков=Поворот;
	КонецЕсли;
	ИмяДлина=СтрДлина(шрифт.Имя);
	з=Новый Структура("Размер,Команда,Данные",3+9+Цел((ИмяДлина+2)/2),Hex2Dec("02FB"),Новый Массив(9+Цел((ИмяДлина+2)/2)));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=(65536+шрифт.Размер)%65536;
	з.Данные[1]=(65536+Ширина)%65536;
	з.Данные[2]=(65536+Цел(Поворот*10))%65536;
	з.Данные[3]=(65536+Цел(ПоворотЗнаков*10))%65536;
	з.Данные[4]=?(шрифт.Жирный,700,400);
	з.Данные[5]=Число(шрифт.Наклонный)+Число(шрифт.Подчеркивание)*256;
	з.Данные[6]=Число(шрифт.Зачеркивание)+Кодировка*256;
	з.Данные[7]=Подбор+ПодборОбрезания*256;
	з.Данные[8]=Качество+Семейство*256;
	Для Н=1 по Цел((ИмяДлина+2)/2) цикл
		С1=КодСимвола(Сред(шрифт.Имя,Н*2-1,1));С1=?(С1<0,0,С1);
		С2=КодСимвола(Сред(шрифт.Имя,Н*2-0,1));С2=?(С2<0,0,С2);
		з.Данные[8+Н]=С1+С2*256;
	КонецЦикла;
	Картинка.Данные.Добавить(з);
	Возврат ВекторнаяКартинкаПолучитьОбъект(картинка);
КонецФункции
//Рисование прямоугольника с заливкой
Процедура ВекторнаяКартинкаRECTANGLE(картинка,х1,у1,х2,у2) Экспорт
	з=Новый Структура("Размер,Команда,Данные",7,Hex2Dec("041B"),Новый Массив(4));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=у2;
	з.Данные[1]=х2;
	з.Данные[2]=у1;
	з.Данные[3]=х1;
	Картинка.Высота=Макс(Картинка.Высота,Макс(у1,у2)+1);
	Картинка.Ширина=Макс(Картинка.Ширина,Макс(х1,х2)+1);
	Картинка.Данные.Добавить(з);
КонецПроцедуры
//Вывод текста
Процедура ВекторнаяКартинкаTEXTOUT(картинка,х,у,текст) Экспорт
	Картинка.Высота=Макс(Картинка.Высота,у+1);
	Картинка.Ширина=Макс(Картинка.Ширина,х+1);
	Если ТипЗнч(текст)=Тип("Массив") тогда
		символов=текст.Количество();
		УказанМассив=Истина;
	Иначе
		символов=СтрДлина(текст);
		УказанМассив=Ложь;
	КонецЕсли;
	з=Новый Структура("Размер,Команда,Данные",6+Цел((символов+1)/2),Hex2Dec("0521"),Новый Массив(3+Цел((символов+1)/2)));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=символов;
	п=1;
	Если УказанМассив тогда
		Для Н=0 по Цел(символов/2) Цикл 
			з.Данные[п]=текст[Н*2]+текст[Н*2+1]*256;
			п=п+1;
		КонецЦикла;
		Если символов%2>0 тогда
			з.Данные[п]=текст[текст.ВГраница()];
			п=п+1;
		КонецЕсли;
	Иначе
		Для Н=1 по Цел(символов/2) Цикл 
			з.Данные[п]=КодСимволаANSI(текст,Н*2-1)+КодСимволаANSI(текст,Н*2)*256;
			п=п+1;
		КонецЦикла;
		Если символов%2>0 тогда
			з.Данные[п]=КодСимволаANSI(текст,символов);
			п=п+1;
		КонецЕсли;
	КонецЕсли;
	з.Данные[п]=у;
	з.Данные[п+1]=х;
	Картинка.Данные.Добавить(з);
КонецПроцедуры
//Вывод текста с возможностью обрезки и указания межсимвольных отступов
Процедура ВекторнаяКартинкаEXTTEXTOUT(картинка,х,у,текст,опции=0,ПрХ1=0,ПрУ1=0,ПрХ2=0,ПрУ2=0,отступы=Неопределено) Экспорт
	Картинка.Высота=Макс(Картинка.Высота,у+1);
	Картинка.Ширина=Макс(Картинка.Ширина,х+1);
	Если ТипЗнч(текст)=Тип("Массив") тогда
		символов=текст.Количество();
		УказанМассив=Истина;
	Иначе
		символов=СтрДлина(текст);
		УказанМассив=Ложь;
	КонецЕсли;
	ЕстьПрямоугольник=ДвИ(опции,ВыводТекста.Ограниченный+ВыводТекста.Непрозрачный)<>0;
	СОтступами=ДвИ(опции,ВыводТекста.СОтступами)<>0;
	з=Новый Структура("Размер,Команда,Данные",3+4+Цел((символов+1)/2)+?(ЕстьПрямоугольник,4,0)+?(СОтступами,символов,0),
		Hex2Dec("0a32"),Новый Массив(4+Цел((символов+1)/2)+?(ЕстьПрямоугольник,4,0)+?(СОтступами,символов,0)));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=у;
	з.Данные[1]=х;
	з.Данные[2]=символов;
	з.Данные[3]=опции;
	п=4;
	Если ЕстьПрямоугольник тогда
		з.Данные[п]=ПрХ1;
		з.Данные[п+1]=ПрУ1;
		з.Данные[п+2]=ПрХ2;
		з.Данные[п+3]=ПрУ2;
		п=п+4;
	КонецЕсли;
	Если УказанМассив тогда
		Для Н=0 по Цел(символов/2) Цикл 
			з.Данные[п]=текст[Н*2]+текст[Н*2+1]*256;
			п=п+1;
		КонецЦикла;
		Если символов%2>0 тогда
			з.Данные[п]=текст[текст.ВГраница()];
			п=п+1;
		КонецЕсли;
	Иначе
		Для Н=1 по Цел(символов/2) Цикл 
			з.Данные[п]=КодСимволаANSI(текст,Н*2-1)+КодСимволаANSI(текст,Н*2)*256;
			п=п+1;
		КонецЦикла;
		Если символов%2>0 тогда
			з.Данные[п]=КодСимволаANSI(текст,символов);
			п=п+1;
		КонецЕсли;
	КонецЕсли;
	Если СОтступами тогда
		Для Н=0 по символов-1 Цикл
			з.Данные[п+н]=отступы[н];
		КонецЦикла;
	КонецЕсли;
	Картинка.Данные.Добавить(з);
КонецПроцедуры
//Установить фоновый цвет
Процедура ВекторнаяКартинкаSETBKCOLOR(картинка,цвет) Экспорт
	з=Новый Структура("Размер,Команда,Данные",3+2,Hex2Dec("0201"),Новый Массив(2));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=Цвет.Красный+256*Цвет.Зеленый;
	з.Данные[1]=Цвет.Синий;
	Картинка.Данные.Добавить(з);
КонецПроцедуры
//Установить режим фона из ВыводФона
Процедура ВекторнаяКартинкаSETBKMODE(картинка,режим) Экспорт
	з=Новый Структура("Размер,Команда,Данные",3+2,Hex2Dec("0102"),Новый Массив(2));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=режим;
	з.Данные[1]=0;
	Картинка.Данные.Добавить(з);
КонецПроцедуры
//Установить режим выравнивания текста из ВыравниваниеТекста
Процедура ВекторнаяКартинкаSETTEXTALIGN(картинка,режим) Экспорт
	з=Новый Структура("Размер,Команда,Данные",3+2,Hex2Dec("012E"),Новый Массив(2));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=режим;
	з.Данные[1]=0;
	Картинка.Данные.Добавить(з);
КонецПроцедуры
//Установить цвет текста
Процедура ВекторнаяКартинкаSETTEXTCOLOR(картинка,цвет) Экспорт
	з=Новый Структура("Размер,Команда,Данные",3+2,Hex2Dec("0209"),Новый Массив(2));
	Картинка.Размер=Картинка.Размер+з.Размер;
	Картинка.НаибольшийРазмер=Макс(Картинка.НаибольшийРазмер,з.Размер);
	з.Данные[0]=Цвет.Красный+256*Цвет.Зеленый;
	з.Данные[1]=Цвет.Синий;
	Картинка.Данные.Добавить(з);
КонецПроцедуры

Функция hex2dec(с) Экспорт 
	рез=0;
	стр=ВРег(с);
	Для Н=1 по СтрДлина(стр) Цикл
		рез=рез*16+Найти(hex,Сред(стр,Н,1))-1;
	КонецЦикла;
	Возврат рез;
КонецФункции
Функция КодСимволаANSI(симв,НомерСимвола=1) Экспорт 
	рез=ю2анси[КодСимвола(симв,НомерСимвола)];
	возврат ?(рез=Неопределено,127,рез);
КонецФункции  

//Получает шрифт (ч/б картинку) заданного размера. Поддерживаются размеры 8,16,24,32 - ширина и высота в пикселях
Функция ПолучитьШрифт(размер,ЦветТекста=Неопределено,ЦветФона=Неопределено) Экспорт
	Попытка
		дв=ПолучитьМакет("font"+размер);
	Исключение
		возврат Неопределено;
	КонецПопытки;
	рез=СоздатьКартинкуИзКартинки(Новый Картинка(дв));
	Если (ЦветТекста<>Неопределено)или(ЦветФона<>Неопределено) тогда
		м=Новый Массив(2);
		м[0]=?(ЦветТекста=Неопределено,0,ЦветТекста);
		м[1]=?(ЦветФона=Неопределено,0,ЦветФона);
		Для ряд=0 по рез.данные.ВГраница() Цикл
			Для Столбец=0 по рез.Данные[ряд].ВГраница() Цикл 
				рез.данные[ряд][Столбец]=м[рез.данные[ряд][Столбец]];
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	возврат рез;
КонецФункции
//Создать внутренний объект из картинки 1С. Допускаются любые растровые изображения - перед работой конвертируются в BMP
Функция СоздатьКартинкуИзКартинки(картинка) Экспорт
	Параметры=Новый Структура("Ширина,Высота,БитНаПиксель");
	рез=Новый Структура("Параметры,Данные,Палитра",Параметры,Новый Массив,Новый Массив);
	к=картинка;
	Если к.Формат()<>ФорматКартинки.BMP тогда
		к=к.Преобразовать(ФорматКартинки.BMP);
	КонецЕсли;
	поток=к.ПолучитьДвоичныеДанные();
	д=ДекодироватьБ64(Base64Строка(поток));
	поток=Неопределено;
	к=Неопределено;
	Если (д[0]<>КодСимвола("B"))или(д[1]<>КодСимвола("M"))или(д.Количество()<>(д[2]+д[3]*256+д[4]*65536+д[5]*256*65536)) тогда
		Возврат Неопределено;
	КонецЕсли;
	смДанные=д[10]+д[11]*256+д[12]*65536+д[13]*256*65536;
	бмИХРазмер=д[14]+д[15]*256+д[16]*65536+д[17]*256*65536;
	Параметры.Ширина=д[18]+д[19]*256+д[20]*65536+д[21]*256*65536;
	Параметры.Высота=д[22]+д[23]*256+д[24]*65536+д[25]*256*65536;
	Параметры.БитНаПиксель=д[28]+д[29]*256;
	Если д[30]<>0 тогда
		Возврат Неопределено;//Сжатая!
	КонецЕсли;
	Цветов=д[46]+д[47]*256+д[48]*65536+д[49]*256*65536;
	Если Цветов=0 тогда Цветов=?(Параметры.БитНаПиксель>8,0,Pow(2,Параметры.БитНаПиксель));КонецЕсли;
	Если Параметры.БитНаПиксель<=8 тогда
		Для Н=0 по Pow(2,Параметры.БитНаПиксель)-1 Цикл
			рез.Палитра.Добавить(Новый Цвет(0,0,0));
		КонецЦикла;
	КонецЕсли;
	для Н=0 по Цветов-1 Цикл
		рез.Палитра[Н]=Новый Цвет(д[14+бмИХРазмер+Н*4+2],д[14+бмИХРазмер+Н*4+1],д[14+бмИХРазмер+Н*4+0]);
	КонецЦикла;
	строка=0;
	Если рез.Параметры.БитНаПиксель=1 тогда
		строка=Цел(рез.Параметры.Ширина/8)+?((рез.Параметры.Ширина%8)>0,1,0);
	ИначеЕсли рез.Параметры.БитНаПиксель=4 тогда
		строка=Цел(рез.Параметры.Ширина/2)+рез.Параметры.Ширина%2;
	ИначеЕсли рез.Параметры.БитНаПиксель=8 тогда
		строка=рез.Параметры.Ширина;
	ИначеЕсли рез.Параметры.БитНаПиксель=24 тогда
		строка=рез.Параметры.Ширина*3;
	КонецЕсли;
	Если (строка%4)>0 тогда
		строка=(Цел(строка/4)+1)*4;
	КонецЕсли;

	Для В=0 по Параметры.Высота-1 Цикл
		смСтроки=смДанные+(Параметры.Высота-1-В)*строка;
		рез.Данные.Вставить(В,Новый Массив(Параметры.Ширина));
		Если Параметры.БитНаПиксель=8 тогда
			для Ш=0 по Параметры.Ширина-1 Цикл 
				рез.Данные[В][Ш]=д[смСтроки+Ш];
			КонецЦикла;
		ИначеЕсли Параметры.БитНаПиксель=24 тогда
			для Ш=0 по Параметры.Ширина-1 Цикл 
				рез.Данные[В][Ш]=д[смСтроки+Ш*3]*65536+д[смСтроки+Ш*3+1]*256+д[смСтроки+Ш*3+2];
			КонецЦикла;
		ИначеЕсли Параметры.БитНаПиксель=1 тогда
			для Ш=0 по Параметры.Ширина-1 Цикл 
				рез.Данные[В][Ш]=Цел(д[смСтроки+Цел(Ш/8)]/Pow(2,7-Ш%8))%2;
			КонецЦикла;
		ИначеЕсли Параметры.БитНаПиксель=4 тогда
			для Ш=0 по Параметры.Ширина-1 Цикл 
				б=д[смСтроки+Цел(Ш/2)];ц2=0;ц1=ЦелДеление(б,16,ц2);
				рез.Данные[В][Ш]=?(Ш%2=0,ц1,ц2);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Возврат рез;
КонецФункции
//Возвращает массив чисел - байт, декодированных из Base64 строки
Функция ДекодироватьБ64(строка) Экспорт
	Рез=новый Массив;
	Для СтрИ=1 по СтрЧислоСтрок(строка) Цикл
		стр=СтрПолучитьСтроку(строка,СтрИ);
		Для Н=1 по Цел(СтрДлина(стр)/4) Цикл
			с1=Сред(стр,(Н-1)*4+1,1);
			с2=Сред(стр,(Н-1)*4+2,1);
			с3=Сред(стр,(Н-1)*4+3,1);
			с4=Сред(стр,(Н-1)*4+4,1);
			к1=Найти(Б64т,с1)-1;
			к2=Найти(Б64т,с2)-1;
			к3=Найти(Б64т,с3)-1;
			к4=Найти(Б64т,с4)-1;
			Если (к1<0)или(к2<0) тогда
				Возврат рез;
			КонецЕсли;
			Рез.Добавить(к1*4+цел(к2/16));
			Если к3>=0 тогда
				Рез.Добавить((к2%16)*16+цел(к3/4));
			Иначе
				Возврат Рез;
			КонецЕсли;
			Если к4>=0 тогда
				Рез.Добавить((к3%4)*64+к4);
			Иначе
				Возврат Рез;
			КонецЕсли;
		КонецЦикла;
		Если СтрДлина(стр)%4>0 тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Рез;
КонецФункции
//Вывести указанный символ в указанные координаты
Процедура КартинкаВывестиБукву(картинка,столбец,строка,буква,шрифт) Экспорт
	размерХ=шрифт.Параметры.Ширина/16;
	размерУ=шрифт.Параметры.Высота/16;
	код=КодСимволаANSI(буква);
	КартинкаКопироватьУчасток(картинка,шрифт,столбец,строка,(код%16)*размерХ,Цел(код/16)*размерУ,размерХ,размерУ);
КонецПроцедуры
//Вывести указанный текст в указанные координаты
Процедура КартинкаВывестиТекст(картинка,столбец,строка,текст,шрифт) Экспорт
	размерХ=шрифт.Параметры.Ширина/16;
	размерУ=шрифт.Параметры.Высота/16;
	Для н=1 по СтрДлина(текст) цикл
		код=КодСимволаANSI(текст,н);
		КартинкаКопироватьУчасток(картинка,шрифт,столбец+(н-1)*размерХ,строка,(код%16)*размерХ,Цел(код/16)*размерУ,размерХ,размерУ);
	КонецЦикла;
КонецПроцедуры
//Перенос фрагмента одной картинки в другую. Цвета не пересчитываются, т.е. картинки должны быть совместимы по палитрам или быть 24-бит
Процедура КартинкаКопироватьУчасток(картинка,КартинкаИсточник,знач Столбец,знач Ряд,знач СтолбецИсточника=0,знач РядИсточника=0,знач Ширина=0,знач Высота=0) Экспорт
	Если ширина=0 тогда ширина=КартинкаИсточник.Параметры.Ширина-СтолбецИсточника; КонецЕсли;
	Если высота=0 тогда высота=КартинкаИсточник.Параметры.Высота-РядИсточника; КонецЕсли;
	Для у=0 по Высота-1 цикл
		Для х=0 по Ширина-1 Цикл 
			КартинкаУстановитьПиксель(Картинка,столбец+х,ряд+у,КартинкаПолучитьПиксель(КартинкаИсточник,СтолбецИсточника+х,РядИсточника+у));
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры
//Установить значение пикселя по координатам
Процедура КартинкаУстановитьПиксель(картинка,столбец,ряд,цвет) Экспорт
	Если (столбец<0)или(ряд<0)или(столбец>=Картинка.Параметры.Ширина)или(ряд>=Картинка.Параметры.Высота) Тогда
		возврат;
	КонецЕсли;
	//Если Картинка.Параметры.БитНаПиксель=1 тогда
	//	слово=Цел(столбец/32);
	//	бит=31-Ост(столбец,32);
	//	Картинка.Данные[ряд][слово]=ДвИ(Картинка.Данные[ряд][слово],ДвНе(Pow(2,бит),32))+цвет;
	//ИначеЕсли Картинка.Параметры.БитНаПиксель=8 тогда
	//	слово=Цел(столбец/4);
	//	байт=3-Ост(столбец,4);
	//	Картинка.Данные[ряд][слово]=ДвИ(Картинка.Данные[ряд][слово],ДвНе(255*Pow(2,байт*8),32))+цвет;
	//КонецЕсли;
	Картинка.Данные[ряд][столбец]=Цвет;
КонецПроцедуры
//Получить значение пикселя
Функция КартинкаПолучитьПиксель(картинка,столбец,ряд) Экспорт
	Если (столбец<0)или(ряд<0)или(столбец>=Картинка.Параметры.Ширина)или(ряд>=Картинка.Параметры.Высота) Тогда
		ц=0;
		возврат ?(картинка.Параметры.Свойство("ЦветФона",ц),ц,0);
	КонецЕсли;
	Возврат Картинка.Данные[ряд][столбец];
КонецФункции

Процедура ИнициализироватьДанные()
	hex="0123456789ABCDEF";
	СтильКарандаш=Новый Структура("Сплошной,Штрих,Пунктир,ШтрихПунктир,ШтрихПунктирПунктир,Невидимый",0,1,2,3,4,5);
	СтильКисть=Новый Структура("Сплошной,Штриховка,Невидимый",0,2,1);//,Шаблон 3
	СтильШтриховки=Новый Структура("Горизонтальная,Вертикальная,НДиагональ,ВДиагональ,Крест,КосойКрест",0,1,2,3,4,5);
	ВыводТекста=Новый Структура("Непрозрачный,Ограниченный,СправаНаЛево,СОтступами",2,4,hex2dec("80"),hex2dec("2000"));
	ВыравниваниеТекста=Новый Структура("Лево,Право,Центр,Верх,Низ,Линия,ЛевоВерх,ЛевоНиз,ПравоВерх,ПравоНиз,ЛевоЛиния,ПравоЛиния,ЦентрВерх,ЦентрНиз,ЦентрЛиния",0,2,6,0,8,24,0,8,2,10,24,26,14,6,30);
	ВыводФона=Новый Структура("Непрозрачный,Прозрачный",2,1);
	
	Б64т="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
	Б64м=Новый Массив(64);
	Для НН=0 по 63 Цикл
		Б64м[НН]=Сред(Б64т,НН+1,1);
	КонецЦикла;
	
	анси2ю=Новый Массив(256);
	анси2ю[0]=0;
	анси2ю[1]=1;
	анси2ю[2]=2;
	анси2ю[3]=3;
	анси2ю[4]=4;
	анси2ю[5]=5;
	анси2ю[6]=6;
	анси2ю[7]=7;
	анси2ю[8]=8;
	анси2ю[9]=9;
	анси2ю[10]=10;
	анси2ю[11]=11;
	анси2ю[12]=12;
	анси2ю[13]=13;
	анси2ю[14]=14;
	анси2ю[15]=15;
	анси2ю[16]=16;
	анси2ю[17]=17;
	анси2ю[18]=18;
	анси2ю[19]=19;
	анси2ю[20]=20;
	анси2ю[21]=21;
	анси2ю[22]=22;
	анси2ю[23]=23;
	анси2ю[24]=24;
	анси2ю[25]=25;
	анси2ю[26]=26;
	анси2ю[27]=27;
	анси2ю[28]=28;
	анси2ю[29]=29;
	анси2ю[30]=30;
	анси2ю[31]=31;
	анси2ю[32]=32;
	анси2ю[33]=33;
	анси2ю[34]=34;
	анси2ю[35]=35;
	анси2ю[36]=36;
	анси2ю[37]=37;
	анси2ю[38]=38;
	анси2ю[39]=39;
	анси2ю[40]=40;
	анси2ю[41]=41;
	анси2ю[42]=42;
	анси2ю[43]=43;
	анси2ю[44]=44;
	анси2ю[45]=45;
	анси2ю[46]=46;
	анси2ю[47]=47;
	анси2ю[48]=48;
	анси2ю[49]=49;
	анси2ю[50]=50;
	анси2ю[51]=51;
	анси2ю[52]=52;
	анси2ю[53]=53;
	анси2ю[54]=54;
	анси2ю[55]=55;
	анси2ю[56]=56;
	анси2ю[57]=57;
	анси2ю[58]=58;
	анси2ю[59]=59;
	анси2ю[60]=60;
	анси2ю[61]=61;
	анси2ю[62]=62;
	анси2ю[63]=63;
	анси2ю[64]=64;
	анси2ю[65]=65;
	анси2ю[66]=66;
	анси2ю[67]=67;
	анси2ю[68]=68;
	анси2ю[69]=69;
	анси2ю[70]=70;
	анси2ю[71]=71;
	анси2ю[72]=72;
	анси2ю[73]=73;
	анси2ю[74]=74;
	анси2ю[75]=75;
	анси2ю[76]=76;
	анси2ю[77]=77;
	анси2ю[78]=78;
	анси2ю[79]=79;
	анси2ю[80]=80;
	анси2ю[81]=81;
	анси2ю[82]=82;
	анси2ю[83]=83;
	анси2ю[84]=84;
	анси2ю[85]=85;
	анси2ю[86]=86;
	анси2ю[87]=87;
	анси2ю[88]=88;
	анси2ю[89]=89;
	анси2ю[90]=90;
	анси2ю[91]=91;
	анси2ю[92]=92;
	анси2ю[93]=93;
	анси2ю[94]=94;
	анси2ю[95]=95;
	анси2ю[96]=96;
	анси2ю[97]=97;
	анси2ю[98]=98;
	анси2ю[99]=99;
	анси2ю[100]=100;
	анси2ю[101]=101;
	анси2ю[102]=102;
	анси2ю[103]=103;
	анси2ю[104]=104;
	анси2ю[105]=105;
	анси2ю[106]=106;
	анси2ю[107]=107;
	анси2ю[108]=108;
	анси2ю[109]=109;
	анси2ю[110]=110;
	анси2ю[111]=111;
	анси2ю[112]=112;
	анси2ю[113]=113;
	анси2ю[114]=114;
	анси2ю[115]=115;
	анси2ю[116]=116;
	анси2ю[117]=117;
	анси2ю[118]=118;
	анси2ю[119]=119;
	анси2ю[120]=120;
	анси2ю[121]=121;
	анси2ю[122]=122;
	анси2ю[123]=123;
	анси2ю[124]=124;
	анси2ю[125]=125;
	анси2ю[126]=126;
	анси2ю[127]=127;
	анси2ю[128]=1026;
	анси2ю[129]=1027;
	анси2ю[130]=8218;
	анси2ю[131]=1107;
	анси2ю[132]=8222;
	анси2ю[133]=8230;
	анси2ю[134]=8224;
	анси2ю[135]=8225;
	анси2ю[136]=8364;
	анси2ю[137]=8240;
	анси2ю[138]=1033;
	анси2ю[139]=8249;
	анси2ю[140]=1034;
	анси2ю[141]=1036;
	анси2ю[142]=1035;
	анси2ю[143]=1039;
	анси2ю[144]=1106;
	анси2ю[145]=8216;
	анси2ю[146]=8217;
	анси2ю[147]=8220;
	анси2ю[148]=8221;
	анси2ю[149]=8226;
	анси2ю[150]=8211;
	анси2ю[151]=8212;
	анси2ю[152]=152;
	анси2ю[153]=8482;
	анси2ю[154]=1113;
	анси2ю[155]=8250;
	анси2ю[156]=1114;
	анси2ю[157]=1116;
	анси2ю[158]=1115;
	анси2ю[159]=1119;
	анси2ю[160]=160;
	анси2ю[161]=1038;
	анси2ю[162]=1118;
	анси2ю[163]=1032;
	анси2ю[164]=164;
	анси2ю[165]=1168;
	анси2ю[166]=166;
	анси2ю[167]=167;
	анси2ю[168]=1025;
	анси2ю[169]=169;
	анси2ю[170]=1028;
	анси2ю[171]=171;
	анси2ю[172]=172;
	анси2ю[173]=173;
	анси2ю[174]=174;
	анси2ю[175]=1031;
	анси2ю[176]=176;
	анси2ю[177]=177;
	анси2ю[178]=1030;
	анси2ю[179]=1110;
	анси2ю[180]=1169;
	анси2ю[181]=181;
	анси2ю[182]=182;
	анси2ю[183]=183;
	анси2ю[184]=1105;
	анси2ю[185]=8470;
	анси2ю[186]=1108;
	анси2ю[187]=187;
	анси2ю[188]=1112;
	анси2ю[189]=1029;
	анси2ю[190]=1109;
	анси2ю[191]=1111;
	анси2ю[192]=1040;
	анси2ю[193]=1041;
	анси2ю[194]=1042;
	анси2ю[195]=1043;
	анси2ю[196]=1044;
	анси2ю[197]=1045;
	анси2ю[198]=1046;
	анси2ю[199]=1047;
	анси2ю[200]=1048;
	анси2ю[201]=1049;
	анси2ю[202]=1050;
	анси2ю[203]=1051;
	анси2ю[204]=1052;
	анси2ю[205]=1053;
	анси2ю[206]=1054;
	анси2ю[207]=1055;
	анси2ю[208]=1056;
	анси2ю[209]=1057;
	анси2ю[210]=1058;
	анси2ю[211]=1059;
	анси2ю[212]=1060;
	анси2ю[213]=1061;
	анси2ю[214]=1062;
	анси2ю[215]=1063;
	анси2ю[216]=1064;
	анси2ю[217]=1065;
	анси2ю[218]=1066;
	анси2ю[219]=1067;
	анси2ю[220]=1068;
	анси2ю[221]=1069;
	анси2ю[222]=1070;
	анси2ю[223]=1071;
	анси2ю[224]=1072;
	анси2ю[225]=1073;
	анси2ю[226]=1074;
	анси2ю[227]=1075;
	анси2ю[228]=1076;
	анси2ю[229]=1077;
	анси2ю[230]=1078;
	анси2ю[231]=1079;
	анси2ю[232]=1080;
	анси2ю[233]=1081;
	анси2ю[234]=1082;
	анси2ю[235]=1083;
	анси2ю[236]=1084;
	анси2ю[237]=1085;
	анси2ю[238]=1086;
	анси2ю[239]=1087;
	анси2ю[240]=1088;
	анси2ю[241]=1089;
	анси2ю[242]=1090;
	анси2ю[243]=1091;
	анси2ю[244]=1092;
	анси2ю[245]=1093;
	анси2ю[246]=1094;
	анси2ю[247]=1095;
	анси2ю[248]=1096;
	анси2ю[249]=1097;
	анси2ю[250]=1098;
	анси2ю[251]=1099;
	анси2ю[252]=1100;
	анси2ю[253]=1101;
	анси2ю[254]=1102;
	анси2ю[255]=1103;

	ю2анси=Новый Соответствие();
	Для н=0 по 255 цикл
		ю2анси.Вставить(анси2ю[н],н);
	КонецЦикла;
	
	codes = Новый Массив(108);
	с=
	"212222,222122,222221,121223,121322,131222,122213,122312,"+
	"132212,221213,221312,231212,112232,122132,122231,113222,"+
	"123122,123221,223211,221132,221231,213212,223112,312131,"+
	"311222,321122,321221,312212,322112,322211,212123,212321,"+
	"232121,111323,131123,131321,112313,132113,132311,211313,"+
	"231113,231311,112133,112331,132131,113123,113321,133121,"+
	"313121,211331,231131,213113,213311,213131,311123,311321,"+
	"331121,312113,312311,332111,314111,221411,431111,111224,"+
	"111422,121124,121421,141122,141221,112214,112412,122114,"+
	"122411,142112,142211,241211,221114,413111,241112,134111,"+
	"111242,121142,121241,114212,124112,124211,411212,421112,"+
	"421211,212141,214121,412121,111143,111341,131141,114113,"+
	"114311,411113,411311,113141,114131,311141,411131,211412,"+
	"211214,211232,2331112,";

	нн=1;
	пока найти(с,",")>0 цикл
		п=найти(с,",");
		код=лев(с,п-1);
		с=сред(с,п+1);
		codes[нн]=код;
		нн=нн+1;
	КонецЦикла;
	ean=Новый Массив(10);
	ean[0]="3211";
	ean[1]="2221";
	ean[2]="2122";
	ean[3]="1411";
	ean[4]="1132";
	ean[5]="1231";
	ean[6]="1114";
	ean[7]="1312";
	ean[8]="1213";
	ean[9]="3112";
	ean13m=Новый Массив(10);
	ean13m[0]="000000";
	ean13m[1]="001011";
	ean13m[2]="001101";
	ean13m[3]="001110";
	ean13m[4]="010011";
	ean13m[5]="011001";
	ean13m[6]="011100";
	ean13m[7]="010101";
	ean13m[8]="010110";
	ean13m[9]="011010";
КонецПроцедуры

ИнициализироватьДанные();

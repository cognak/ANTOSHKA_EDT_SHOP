#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

	Параметры.Свойство("Магазин", Магазин);
	Параметры.Свойство("Организация", Организация);

	ЗаполнитьСписокДокументами();

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Перем ДанныеВыборка;

	ЗакрытьФорму  = Истина;
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;

	Если НЕ ТекущиеДанные = Неопределено Тогда

		ТекстСообщения = "";

		Если ПроверитьСостояниеЗаявкиНаСервере(ТекущиеДанные.СчетНаОплатуПокупателю, ТекущиеДанные.УслугаБанка, ТекстСообщения) Тогда

			ДанныеВыборка = Новый Структура(
				"СчетНаОплатуПокупателю, УслугаБанка, УслугаБанкаПериодПредоставления, ДокументПродажи"
				, ТекущиеДанные.СчетНаОплатуПокупателю
				, ТекущиеДанные.УслугаБанка
				, ТекущиеДанные.УслугаБанкаПериодПредоставления
				, ТекущиеДанные.ДокументПродажи
			);

		Иначе

			ЗакрытьФорму = Ложь;

			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(
				НСтр("ru = 'Ошибка проверки кредита!'"),
				ТекстСообщения);

			ЗаполнитьСписокДокументами();	//	перезаполним.. вероятно, что-то изменилось.

		КонецЕсли;

	КонецЕсли;

	Если ЗакрытьФорму Тогда

		Закрыть(ДанныеВыборка);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДокументами()

	Список.Очистить();

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаРегистра.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю,
	|	ТаблицаРегистра.УслугаБанка КАК УслугаБанка,
	|	ТаблицаСчета.Дата КАК Дата,
	|	ТаблицаСчета.Номер КАК Номер,
	|	ТаблицаСчета.Контрагент КАК Контрагент,
	|	ТаблицаРегистра.СуммаДокумента КАК СуммаДокумента,
	|	ТаблицаРегистра.СуммаКредита КАК СуммаКредита,
	|	ТаблицаРегистра.ДокументПродажи КАК ДокументПродажи
	|ИЗ
	|	РегистрСведений.ДанныеКредитныхПрограмм КАК ТаблицаРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПокупателю КАК ТаблицаСчета
	|		ПО ТаблицаРегистра.СчетНаОплатуПокупателю = ТаблицаСчета.Ссылка
	|			И (ТаблицаСчета.Проведен)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ТаблицаРегистра.Интеграция = ИСТИНА
	|				ТОГДА ТаблицаРегистра.ГарантийноеПисьмоПодтверждено
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ТаблицаРегистра.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявкиНаОформлениеКредита.ОжидаетсяОтгрузка)
	|	И НЕ(ТаблицаРегистра.Отгружено
	|				ИЛИ ТаблицаРегистра.Отменить)
	|	И ТаблицаРегистра.Магазин = &Магазин
	|	И ТаблицаСчета.Организация = &Организация
	|	И ТаблицаРегистра.ДокументПродажи ССЫЛКА Документ.ЧекККМ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ,
	|	СчетНаОплатуПокупателю УБЫВ"
	);
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		СтрокаСписка = Список.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСписка, Выборка);

	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьСостояниеЗаявкиНаСервере(СчетНаОплатуПокупателю, УслугаБанка, ТекстСообщения)

	Если ТехническаяПоддержкаВызовСервера.ОтладочныйРежимРаботы() Тогда

		КредитСостояние = Новый Структура("Отказ", Ложь);

	Иначе

		ОбменСБанкамиСервер.ПроверитьСостояниеЗаявкиНаОформлениеКредита(СчетНаОплатуПокупателю, УслугаБанка, ТекстСообщения);
		КредитСостояние = ОбменСБанкамиСервер.ПолучитьСостояниеКредитнойПрограммы(СчетНаОплатуПокупателю, УслугаБанка);

		Если КредитСостояние.Отказ = Истина
		ИЛИ НЕ КредитСостояние.Статус = Перечисления.СтатусыЗаявкиНаОформлениеКредита.ОжидаетсяОтгрузка Тогда

			ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения), "", Символы.ПС)
			+ ?(КредитСостояние.Статус = Перечисления.СтатусыЗаявкиНаОформлениеКредита.ОжидаетсяОтгрузка
				, "Кредитная заявка НЕ находится в ожидании отгрузки."
				, КредитСостояние.Описание);

		КонецЕсли;

	КонецЕсли;

	Возврат НЕ КредитСостояние.Отказ = Истина;

КонецФункции













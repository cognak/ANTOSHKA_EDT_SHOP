
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЧекДляПросмотра = Параметры.ЧекДляПросмотра;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЧекККМТовары.Номенклатура,
	|	ЧекККМТовары.Цена,
	|	ЧекККМТовары.Сумма,
	|	ЧекККМТовары.КоличествоУпаковок КАК Количество,
	|	ЧекККМТовары.СуммаРучнойСкидки + ЧекККМТовары.СуммаАвтоматическойСкидки КАК Скидка
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК ЧекККМТовары
	|ГДЕ
	|	ЧекККМТовары.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",ЧекДляПросмотра);
	
	ТаблицаЧека.Загрузить(Запрос.Выполнить().Выгрузить());
	
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьДокумент(Команда)
	
	МассивСсылокЧеков = Новый Массив;
	МассивСсылокЧеков.Добавить(ЧекДляПросмотра);
	
	НапечататьЧекиККМ(МассивСсылокЧеков);
	
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьЧекиККМ(МассивСсылокЧеков)

	Если НЕ ТаблицаПечатныхФормыЗаполнена Тогда
		ЗаполнитьТаблицуПечатныхФорм();
	КонецЕсли;

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("АдресТаблицыПечатныхФорм", АдресТаблицыПечатныхФорм);
	
	Результат = ОткрытьФормуМодально("Обработка.РМК.Форма.ФормаВыбораПечатныхФорм", ПараметрыОткрытия, УникальныйИдентификатор);
	ПолноеИмяОбъектаМетаданных = "Документ.ЧекККМ";
	
	Если НЕ Результат = Неопределено Тогда
		
		СтрокаОбщейТаблицы = ТаблицаПечатныхФорм.НайтиПоИдентификатору(Результат.ИндексТаблицы);
		
		Если СтрокаОбщейТаблицы.ИменаМакетов  = "ПечатьТоварныйЧекаДляФР" Тогда
			НапечататьТоварныйЧекНаФР(МассивСсылокЧеков);
		ИначеЕсли Результат.Внешняя Тогда
		
			СтрокаВнешнихФорм = ДоступныеКомандыВнешнихФорм.НайтиПоИдентификатору(Результат.ИндексВнешнейТаблицы);
			
			ПараметрыОткрытия = Новый Структура("ИсточникДанных, ПараметрыИсточника");
			ПараметрыОткрытия.ИсточникДанных     = СтрокаВнешнихФорм.Ссылка;
			ПараметрыОткрытия.ПараметрыИсточника = Новый Структура("ИдентификаторКоманды, ОбъектыНазначения");
			ПараметрыОткрытия.ПараметрыИсточника.ИдентификаторКоманды = СтрокаВнешнихФорм.Идентификатор;
			ПараметрыОткрытия.ПараметрыИсточника.ОбъектыНазначения    = МассивСсылокЧеков;
			
			ОткрытьФорму("ОбщаяФорма.ПечатьДокументов", ПараметрыОткрытия);
			
		Иначе
			
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(ПолноеИмяОбъектаМетаданных,
					СтрокаОбщейТаблицы.ИменаМакетов,
					МассивСсылокЧеков,
					УникальныйИдентификатор,
					Неопределено);
					
			
		КонецЕсли;
		
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьТоварныйЧекНаФР(МассивСсылокЧеков)
	
	Для каждого ЧекККМСсылка Из МассивСсылокЧеков Цикл
	
		СтруктураПараметровПечати = СтруктураПараметровПечати(ЧекККМСсылка);
		
		Если НЕ ЗначениеЗаполнено(СтруктураПараметровПечати.ПодключаемоеОборудование) 
		 ИЛИ НЕ ЗначениеЗаполнено(СтруктураПараметровПечати.ШиринаЛенты)  Тогда
		 
			ЗаголовокИнформации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				"Перевірте налаштування каси ККМ %1",
				СтруктураПараметровПечати.Ссылка,
			);
			ТекстИнформации = "Не задана ширина стрічки або обладнання, що підключається"; 
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(ЗаголовокИнформации, ТекстИнформации);
			
			Продолжить;
		КонецЕсли;
		
		МассивПечати = Новый Массив;
		МассивПечати.Добавить(ЧекККМСсылка);
		
		СтрокаПечати = СтрокаПечатиНаФР(МассивПечати, СтруктураПараметровПечати.ШиринаЛенты);
		
		Если ПустаяСтрока(СтрокаПечати) Тогда
			ТекстСообщения = "Інформація для друку відсутня.";
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(ТекстСообщения);
			Продолжить;
		КонецЕсли;
		
		ИдентификаторУстройстваФР = СтруктураПараметровПечати.ПодключаемоеОборудование;
		
		Если ИдентификаторУстройстваФР <> Неопределено Тогда
			
			// Подключаем ФР
			
			ОписаниеОшибки = "";
			Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
			                                                                              ИдентификаторУстройстваФР,
			                                                                              ОписаниеОшибки);
			
			Если Результат Тогда
				
				
				// Готовим данные
				ВходныеПараметры  = Новый Массив();
				ВходныеПараметры.Добавить(СтрокаПечати);
				ВыходныеПараметры = Неопределено;
				
				РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
																		 "PrintText",
																		  ВходныеПараметры,
																		  ВыходныеПараметры);
				
				Если НЕ РезультатФР Тогда
					ЗаголовокИнформации = "Під час друку товарного чека сталася помилка.";
					
					ТекстСообщения = "Товарний чек не надруковано на фіскальному реєстраторі.
									|Додатковий опис:
									|%ДополнительноеОписание%";
					ТекстСообщения = СтрЗаменить(ТекстСообщения,
					                             "%ДополнительноеОписание%",
					                             ВыходныеПараметры[1]);
					ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(ЗаголовокИнформации, ТекстСообщения);
				КонецЕсли;
				
				// Отключаем ФР
				МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор, ИдентификаторУстройстваФР);
				
			Иначе
				ЗаголовокИнформации = "При підключенні пристрою сталася помилка.";
				ТекстСообщения = "Чек не надруковано на фіскальному реєстраторі.
								|Додатковий опис:
								|%ДополнительноеОписание%";
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ОписаниеОшибки);
				ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(ЗаголовокИнформации, ТекстСообщения);
			КонецЕсли;
			
		Иначе
			ЗаголовокИнформации = "Не обрано фіскального реєстратору";
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(ЗаголовокИнформации);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СтрокаПечатиНаФР(МассивОбъектов, ШиринаЛенты)
	
	Возврат Документы.ЧекККМ.ТекстПечатиЧекаНаФР(МассивОбъектов, ШиринаЛенты);
	
КонецФункции // СтрокаПечатинаФР()

&НаСервере
Функция СтруктураПараметровПечати(ЧекККМСсылка)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЧекККМСсылка.КассаККМ, "Ссылка, ПодключаемоеОборудование, ШиринаЛенты")
	
КонецФункции // ()

&НаСервере
Процедура ЗаполнитьТаблицуПечатныхФорм()
	
	СтрокаТаблицы = ТаблицаПечатныхФорм.Добавить();
	СтрокаТаблицы.ИменаМакетов = "ТоварныйЧек";
	СтрокаТаблицы.Представление = "Товарный чек";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры") Тогда
		СтрокаТаблицы = ТаблицаПечатныхФорм.Добавить();
		СтрокаТаблицы.ИменаМакетов = "ГарантийныйТалон";
		СтрокаТаблицы.Представление = "Гарантийный талон";
	КонецЕсли;
	
	СтрокаТаблицы = ТаблицаПечатныхФорм.Добавить();
	СтрокаТаблицы.ИменаМакетов = "ТоварныйЧекДляПД";
	СтрокаТаблицы.Представление = "Товарного чека для принтера документов";
	
	Если Истина Тогда
		СтрокаТаблицы = ТаблицаПечатныхФорм.Добавить();
		СтрокаТаблицы.ИменаМакетов = "ПечатьТоварныйЧекаДляФР";
		СтрокаТаблицы.Представление = "Товарный чек для фискального регистратора";
	КонецЕсли;
	
	ПолноеИмяОбъектаМетаданных = "Документ.ЧекККМ";
	
	Запрос = ДополнительныеОтчетыИОбработки.НовыйЗапросПоДоступнымКомандам(
							Перечисления.ВидыДополнительныхОтчетовИОбработок.ПечатнаяФорма,
							ПолноеИмяОбъектаМетаданных,
							Истина);
	
	ОбщегоНазначенияРТСервер.ЗагрузитьВТаблицуЗначений(Запрос.Выполнить().Выгрузить().Скопировать(), ДоступныеКомандыВнешнихФорм, Истина);
	
	Для каждого СтрокаДоступнойКоманды Из ДоступныеКомандыВнешнихФорм Цикл
	
		СтрокаТаблицы = ТаблицаПечатныхФорм.Добавить();
		СтрокаТаблицы.Представление = СтрокаДоступнойКоманды.Представление;
		СтрокаТаблицы.Внешняя = Истина;
		СтрокаТаблицы.ИндексВнешнейТаблицы = ДоступныеКомандыВнешнихФорм.Индекс(СтрокаДоступнойКоманды);
		
	КонецЦикла;
	
	ТаблицаПечатныхФормыЗаполнена = Истина;
	
	АдресТаблицыПечатныхФорм = ПоместитьВоВременноеХранилище(ТаблицаПечатныхФорм.Выгрузить(), УникальныйИдентификатор);
	
КонецПроцедуры



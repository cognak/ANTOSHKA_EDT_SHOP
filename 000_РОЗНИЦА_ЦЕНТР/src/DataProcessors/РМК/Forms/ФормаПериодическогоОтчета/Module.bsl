///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

	Параметры.Свойство("ТекКассаККМ", ТекКассаККМ);

	Магазин = ПараметрыСеанса.ТекущийМагазин;
	
	Если НЕ ЗначениеЗаполнено(Магазин) Тогда
		ПолучитьДоступныеМагазины();
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВыбораМагазина;
	КонецЕсли;
	
	Сокращенный = Истина;
	
	ИспользоватьПодключаемоеОборудование = ЗначениеНастроекПовтИсп.ИспользоватьПодключаемоеОборудование();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПериодическийОтчетПоДатам(Команда)

	НапечататьПериодическийОтчетПоДатам(ТекКассаККМ)

КонецПроцедуры

&НаКлиенте
Процедура КомандаПериодическийОтчетПоНомерам(Команда)

	НапечататьПериодическийОтчетПоНомерам(ТекКассаККМ)

КонецПроцедуры

&НаКлиенте
Процедура КомандаВыборПериода(Команда)
	ПолучитьИнтерактивноПериод("Визначте період звіту", ПериодПериодическогоОтчета);
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбораНачальногоНомера(Команда)
	ПолучитьИнтерактивноЧисло("Введіть початковий номер", НачальныйНомерПериодическогоОтчета, 0, Ложь, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбораКонечногоНомера(Команда)
	ПолучитьИнтерактивноЧисло("Введіть кінцевий номер", КонечныйНомерПериодическогоОтчета, 0, Ложь, Ложь);
КонецПроцедуры

&НаСервере
// Проверяет и заполняет необходимые параметры для работы
//
// Параметры
//  Отказ - Булево
//
Функция ПроверитьОбщуюВозможностьРаботы(ПараметрыИнформации)
	
	Если НЕ ЗначениеЗаполнено(РабочееМесто) Тогда

		ПараметрыИнформации.ЗаголовокИнформации	= "Помилка визначення робочого місця";
		ПараметрыИнформации.ТекстИнформации		= "Не вдалося визначити поточне робоче місце.
												|Зверніться до адміністратора системи.";
		Возврат Ложь;

	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КассыККМ.Ссылка КАК КассаККМ,
	|	КассыККМ.Магазин,
	|	КассыККМ.Владелец КАК Организация
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	(НЕ КассыККМ.ПометкаУдаления)
	|	И (НЕ КассыККМ.Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка))
	|	И (КассыККМ.ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ФискальныйРегистратор))
	|	И (КассыККМ.РабочееМесто = &РабочееМестоККМ)
	|	И (КассыККМ.Магазин = &Магазин)"
	);
	Запрос.УстановитьПараметр("Магазин"        , Магазин);
	Запрос.УстановитьПараметр("РабочееМестоККМ", РабочееМесто);
	
	Результат = Запрос.Выполнить();
	ТаблицаРезультатаЗапроса = Результат.Выгрузить();
	
	Если ТаблицаРезультатаЗапроса.Количество() = 0  Тогда

		ПараметрыИнформации.ЗаголовокИнформации = "Помилка визначення доступних кас ККМ";
		ПараметрыИнформации.ТекстИнформации		= "Не вдалося визначити доступні каси ККМ.
												|Зверніться до адміністратора системи.";
		Возврат Ложь;

	КонецЕсли;

	ТаблицаТаблицаРезультатаЗапросаСкопированная = ТаблицаРезультатаЗапроса.Скопировать();
	ТаблицаТаблицаРезультатаЗапросаСкопированная.Свернуть("КассаККМ");
	ДоступныеКассыККМ.ЗагрузитьЗначения(ТаблицаТаблицаРезультатаЗапросаСкопированная.ВыгрузитьКолонку("КассаККМ"));
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПроверитьВозможностьРегистрацииПродаж(ПараметрыИнформации)
	
	Если ПроверитьОбщуюВозможностьРаботы(ПараметрыИнформации) Тогда
		
		Дата = Дата('00010101');
		
		Для каждого ПроверяемаяКасса Из ДоступныеКассыККМ Цикл
		
			СтруктураСостояниеКассовойСмены = РозничныеПродажиСервер.ПолучитьСостояниеКассовойСмены(ПроверяемаяКасса.Значение);
			
			КассоваяСмена = СтруктураСостояниеКассовойСмены.КассоваяСмена;
			
			ТекстОшибкиЗаголовок = "Касова зміна не відкрита!";
			Если НЕ ЗначениеЗаполнено(Дата) Тогда
				Дата = ОбщегоНазначенияВызовСервера.ТекущаяДатаСервера(); // + HVOYA Mykhailo ТекущаяДата();
			КонецЕсли;
			
			Если НЕ РозничныеПродажиСервер.СменаОткрыта(КассоваяСмена, Дата, ТекстОшибкиЗаголовок) Тогда
				
				ПараметрыИнформации.ЗаголовокИнформации = ТекстОшибкиЗаголовок;
				
				ПараметрыИнформации.ТекстИнформации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"Каса ККМ №%1 - " + ТекстОшибкиЗаголовок,
					ПроверяемаяКасса.Значение
				);
				
				Дата = Дата('00010101');
				
				Возврат Ложь;
			КонецЕсли;
		КонецЦикла;
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьРабочееМесто()
	
	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда // Проверка на определенность рабочего места ВО
		РабочееМесто = МенеджерОборудованияКлиентПовтИсп.ПолучитьРабочееМестоКлиента();
	КонецЕсли;
	
	ОбновитьЗаголовокФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаголовокФормы()
	
	Если НЕ ЗначениеЗаполнено(РабочееМесто) Тогда
		Заголовок = "РМК: не указано рабочее место";
	Иначе
		Заголовок = "РМК: " + РабочееМесто;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДоступныеМагазины()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Магазины.Ссылка КАК Магазин
	|ИЗ
	|	Справочник.Магазины КАК Магазины
	|ГДЕ
	|	НЕ Магазины.ПометкаУдаления
	|	И НЕ Магазины.СкладУправляющейСистемы";
	
	Результат = Запрос.Выполнить();
	ТаблицаЗапроса = Результат.Выгрузить();
	
	Магазины.Загрузить(ТаблицаЗапроса);
	
КонецПроцедуры

// Процедура формирует массив касс с учетом открытия смен
//
// Параметры:
//  ПроверкаКассСОткрытымиСменами - Булево: 
//                                  Истина - формиируется список касс с открытыми сменами
//                                  Ложь   - формиируется список касс с закрытыми сменами
//
&НаСервере
Процедура ЗаполнитьДоступныеКассыСУчетомОткрытия(ПроверкаКассСОткрытымиСменами)
	
	Кассы.Очистить();
	
	Для каждого ЭлементМассива Из ДоступныеКассыККМ Цикл
		
		ПроверяемаяКасса = ЭлементМассива.Значение;
		
		СтруктураСостояниеКассовойСмены = РозничныеПродажиСервер.ПолучитьСостояниеКассовойСмены(ПроверяемаяКасса);
		
		Если СтруктураСостояниеКассовойСмены.СменаОткрыта = ПроверкаКассСОткрытымиСменами Тогда
			
			СтрокаКассы = Кассы.Добавить();
			СтрокаКассы.Касса = ПроверяемаяКасса;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеКассы()
	
	Кассы.Очистить();
	
	Для каждого ЭлементМассива Из ДоступныеКассыККМ Цикл
			
		СтрокаКассы = Кассы.Добавить();
		СтрокаКассы.Касса = ЭлементМассива.Значение;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСмену(КассаККМ)
	
	ОтветПользователя = ОбщегоНазначенияРТКлиент.ВывестиВопросДляРМК("Закрити зміну?");
	
	Если НЕ ВРЕГ(ОтветПользователя) = "ДА" Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("КассаККМ"                  , КассаККМ);
	ПараметрыЗаполнения.Вставить("ВыполнитьЗакрытиеСразу"    , Истина);
	
	ОткрытьФормуМодально("Обработка.ЗакрытиеКассовойСмены.Форма", ПараметрыЗаполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСмену(КассаККМ)

	Результат      = Ложь;
	ОписаниеОшибки = "";

	ПараметрыКассыККМ       = ЗначениеНастроекПовтИсп.ПолучитьПараметрыКассыККМ(КассаККМ);
	ИдентификаторУстройства = ПараметрыКассыККМ.ИдентификаторУстройства;
	
	ПараметрыИнформации = ОбщегоНазначенияРТКлиентСервер.ПолучитьСтруктуруВыводимойВРМКИнформации();
	ПараметрыИнформации.ЗаголовокИнформации = "Помилка відкриття зміни";

	Если НЕ РозничныеПродажиСервер.ПроверитьВозможностьОткрытияКассовойСмены(КассаККМ, ОписаниеОшибки) Тогда

		ПараметрыИнформации.ТекстИнформации = СтрЗаменить(
			"Відмовлено! Під час перевірки можливості відкриття зміни
            |виникла помилка. Зміна НЕ відкрита!
            |Додатковий опис:
            |%ДополнительноеОписание%"
			, "%ДополнительноеОписание%"
			, ОписаниеОшибки
			);
		ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

		Возврат;

	КонецЕсли;

	Если ИспользоватьПодключаемоеОборудование И ЗначениеЗаполнено(ИдентификаторУстройства)  Тогда

		// Подключение устройства
		Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда

			Если ИдентификаторУстройства <> Неопределено  Тогда

				ОписаниеОшибки = "";
				Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ЭтотОбъект,
				                                                                              ИдентификаторУстройства,
				                                                                              ОписаниеОшибки);
				Если Результат Тогда

					ВходныеПараметры  = Неопределено;
					ВыходныеПараметры = Неопределено;
					
					//Открыть смену на фискальном регистраторе
					Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
					                                                        "OpenDay",
					                                                        ВходныеПараметры,
					                                                        ВыходныеПараметры);
					
					Если Результат Тогда
						
						Результат = РозничныеПродажиСервер.ОткрытьКассовуюСмену(КассаККМ, ОписаниеОшибки);
						
						Если Не Результат Тогда
							
							ПараметрыИнформации.ТекстИнформации = СтрЗаменить(
								"При відкритті зміни сталася помилка.
								|Зміна не відкрита на фіскальному реєстраторі.
								|Додатковий опис:
								|%ДополнительноеОписание%"
								, "%ДополнительноеОписание%"
								, ОписаниеОшибки
							);
							ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);
							
						КонецЕсли;

					Иначе

						ПараметрыИнформации.ТекстИнформации = СтрЗаменить(
							"При відкритті зміни сталася помилка.
							|Зміна не відкрита на фіскальному реєстраторі.
							|Додатковий опис:
							|%ДополнительноеОписание%"
							, "%ДополнительноеОписание%"
							, ВыходныеПараметры[1]
						);
						ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

					КонецЕсли;
					
					МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ЭтотОбъект,
					                                                                 ИдентификаторУстройства);
					
				Иначе
					
					ПараметрыИнформации.ТекстИнформации = СтрЗаменить(
						"При підключенні пристрою сталася помилка.
	                    |Зміна не відкрита на фіскальному реєстраторі.
	                    |Додатковий опис:
	                    |%ДополнительноеОписание%"
						, "%ДополнительноеОписание%"
						, ОписаниеОшибки
					);
					ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);
					
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			ПараметрыИнформации.ТекстИнформации = "Попередньо потрібно вибрати робоче місце зовнішнього обладнання поточного сеансу.";
			ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);
			
		КонецЕсли;
	Иначе
		
		Результат = РозничныеПродажиСервер.ОткрытьКассовуюСмену(КассаККМ, ОписаниеОшибки);
		
		Если НЕ Результат Тогда
			
			ПараметрыИнформации.ТекстИнформации = СтрЗаменить(
				"При відкритті зміни сталася помилка.
				|Зміна не відкрита.
				|Додатковий опис:
				|%ДополнительноеОписание%"
				, "%ДополнительноеОписание%"
				, ОписаниеОшибки
			);
			ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НапечататьОтчетБезГашения(КассаККМ)

	Результат = Ложь;
	
	ПараметрыКассыККМ       = ЗначениеНастроекПовтИсп.ПолучитьПараметрыКассыККМ(КассаККМ);
	ИдентификаторУстройства = ПараметрыКассыККМ.ИдентификаторУстройства;
	
	ПараметрыИнформации = ОбщегоНазначенияРТКлиентСервер.ПолучитьСтруктуруВыводимойВРМКИнформации();
	ПараметрыИнформации.ЗаголовокИнформации = "Помилка друку звіту без гасіння";
	
	Если ЗначениеЗаполнено(ИдентификаторУстройства)  Тогда

		ОписаниеОшибки = "";

		Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
			// Подключение устройства

			Если ИдентификаторУстройства <> Неопределено Тогда
				Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ЭтотОбъект,
				                                                                              ИдентификаторУстройства, ОписаниеОшибки);

				Если Результат Тогда
					ВходныеПараметры  = Неопределено;
					ВыходныеПараметры = Неопределено;

					Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
					                                                        "PrintXReport",
					                                                        ВходныеПараметры,
					                                                        ВыходныеПараметры);

					Если НЕ Результат Тогда

						ТекстСообщения =
						ПараметрыИнформации.ТекстИнформации = СтрЗаменить(
							"Під час зняття звіту на фіскальному реєстраторі сталася помилка.
							|Додатковий опис:
							|%ОписаниеОшибки%
							|Звіт на фіскальному реєстраторі не сформовано."
							, "%ОписаниеОшибки%"
							, ВыходныеПараметры[1]
						);
						ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

					КонецЕсли;

					МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ЭтотОбъект,
					                                                                 ИдентификаторУстройства);
				Иначе

					ПараметрыИнформации.ТекстИнформации = "При підключенні пристрою сталася помилка!" + Символы.ПС + ОписаниеОшибки;
					ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

				КонецЕсли;

			КонецЕсли;

		Иначе

			ПараметрыИнформации.ТекстИнформации = "Попередньо необхідно вибрати робоче місце устаткування поточного сеансу, що підключається.";
			ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбменДаннымиСервер()
	
	Если ОбменДаннымиВызовСервера.ОбменДаннымиВключен("ПоРабочемуМесту") 
		И ПланыОбмена.ПоРабочемуМесту.ЭтоРабочееМесто() Тогда
		
		ВыборкаУзлов = ПланыОбмена.ПоРабочемуМесту.Выбрать();
		Пока ВыборкаУзлов.Следующий() Цикл
			Если ВыборкаУзлов.Ссылка <> ПланыОбмена.ПоРабочемуМесту.ЭтотУзел() Тогда
				ОбменДаннымиСервер.ВыполнитьОбменДаннымиДляУзлаИнформационнойБазы(Ложь, ВыборкаУзлов.Ссылка);			
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура НапечататьНулевойЧек(КассаККМ)

	Результат = Ложь;
	
	ПараметрыКассыККМ       = ЗначениеНастроекПовтИсп.ПолучитьПараметрыКассыККМ(КассаККМ);
	ИдентификаторУстройства = ПараметрыКассыККМ.ИдентификаторУстройства;
	
	ПараметрыИнформации = ОбщегоНазначенияРТКлиентСервер.ПолучитьСтруктуруВыводимойВРМКИнформации();
	ПараметрыИнформации.ЗаголовокИнформации = "Помилка друку нульового чеку.";
	
	Если ЗначениеЗаполнено(ИдентификаторУстройства)  Тогда
		ОписаниеОшибки = "";

		Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
			// Подключение устройства

			Если ИдентификаторУстройства <> Неопределено Тогда
				Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ЭтотОбъект,
				                                                                              ИдентификаторУстройства, ОписаниеОшибки);

				Если Результат Тогда
					ВходныеПараметры  = Неопределено;
					ВыходныеПараметры = Неопределено;

					Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
					                                                        "PrintNullReceipt",
					                                                        ВходныеПараметры,
					                                                        ВыходныеПараметры
					);
					Если НЕ Результат Тогда

						ПараметрыИнформации.ТекстИнформации = СтрЗаменить(
							"Під час друку нульового чека сталася помилка.
							|Додатковий опис:
							|%ОписаниеОшибки%
							|Чек не надруковано на фіскальному реєстраторі."
							, "%ОписаниеОшибки%"
							, ВыходныеПараметры[1]
						);
						ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

					КонецЕсли;

					МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ЭтотОбъект,
					                                                                 ИдентификаторУстройства);
				Иначе

					ПараметрыИнформации.ТекстИнформации = "При підключенні пристрою сталася помилка." + Символы.ПС + ОписаниеОшибки;
					ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

				КонецЕсли;

			КонецЕсли;

		Иначе

			ПараметрыИнформации.ТекстИнформации = "Попередньо необхідно вибрати робоче місце устаткування поточного сеансу, що підключається.";
			ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьОтчетОПроданныхТоварах(КассаККМ)

	Результат = Ложь;
	
	ПараметрыКассыККМ       = ЗначениеНастроекПовтИсп.ПолучитьПараметрыКассыККМ(КассаККМ);
	ИдентификаторУстройства = ПараметрыКассыККМ.ИдентификаторУстройства;
	
	ПараметрыИнформации = ОбщегоНазначенияРТКлиентСервер.ПолучитьСтруктуруВыводимойВРМКИнформации();
	ПараметрыИнформации.ЗаголовокИнформации = "Помилка друку звіту з проданих товарів";

	Если ЗначениеЗаполнено(ИдентификаторУстройства)  Тогда

		ОписаниеОшибки = "";

		Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
			// Подключение устройства

			Если НЕ ИдентификаторУстройства = Неопределено Тогда

				Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ЭтотОбъект,
				                                                                              ИдентификаторУстройства, ОписаниеОшибки
				);
				Если Результат Тогда

					ВходныеПараметры  = Неопределено;
					ВыходныеПараметры = Неопределено;

					Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
					                                                        "PrintSoldReport",
					                                                        ВходныеПараметры,
					                                                        ВыходныеПараметры
					);
					Если НЕ Результат Тогда

						ПараметрыИнформации.ТекстИнформации = СтрЗаменить(
							"Під час зняття звіту на фіскальному реєстраторі сталася помилка.
							|%ОписаниеОшибки%
							|Звіт на фіскальному реєстраторі не сформовано!"
							, "%ОписаниеОшибки%"
							, ВыходныеПараметры[1]
						);
						ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

					КонецЕсли;

					МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ЭтотОбъект,
					                                                                 ИдентификаторУстройства);
				Иначе

					ПараметрыИнформации.ТекстИнформации = "При підключенні пристрою сталася помилка." + Символы.ПС + ОписаниеОшибки;
					ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

				КонецЕсли;

			КонецЕсли;

		Иначе

			ПараметрыИнформации.ТекстИнформации = "Попередньо необхідно вибрати робоче місце устаткування поточного сеансу, що підключається.";
			ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НапечататьПериодическийОтчетПоДатам(КассаККМ)

	Результат = Ложь;
	
	ПараметрыКассыККМ       = ЗначениеНастроекПовтИсп.ПолучитьПараметрыКассыККМ(КассаККМ);
	ИдентификаторУстройства = ПараметрыКассыККМ.ИдентификаторУстройства;
	
	ПараметрыИнформации = ОбщегоНазначенияРТКлиентСервер.ПолучитьСтруктуруВыводимойВРМКИнформации();
	ПараметрыИнформации.ЗаголовокИнформации = "Помилка друку періодичного звіту";

	Если ЗначениеЗаполнено(ИдентификаторУстройства)  Тогда

		ОписаниеОшибки = "";

		Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда

		//	Подключение устройства

			Если НЕ ИдентификаторУстройства = Неопределено Тогда

				Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ЭтотОбъект,
				                                                                              ИдентификаторУстройства, ОписаниеОшибки
				);
				Если Результат Тогда

					ВходныеПараметры  = Новый Массив;
					ВыходныеПараметры = Неопределено;

					ВходныеПараметры.Добавить(ПериодПериодическогоОтчета.ДатаНачала);
					ВходныеПараметры.Добавить(ПериодПериодическогоОтчета.ДатаОкончания);
					
					Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
					                                                        "PrintPReportDate",
					                                                        ВходныеПараметры,
					                                                        ВыходныеПараметры
					);
					Если НЕ Результат Тогда

						ПараметрыИнформации.ТекстИнформации = СтрЗаменить(
							"Під час зняття звіту на фіскальному реєстраторі сталася помилка.
							|%ОписаниеОшибки%
							|Звіт на фіскальному реєстраторі не сформовано."
							, "%ОписаниеОшибки%"
							, ВыходныеПараметры[1]
						);
						ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

					КонецЕсли;

					МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ЭтотОбъект,
					                                                                 ИдентификаторУстройства);
				Иначе

					ПараметрыИнформации.ТекстИнформации = "При підключенні пристрою сталася помилка." + Символы.ПС + ОписаниеОшибки;
					ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

				КонецЕсли;

			КонецЕсли;

		Иначе

			ПараметрыИнформации.ТекстИнформации = "Попередньо необхідно вибрати робоче місце устаткування поточного сеансу, що підключається.";
			ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьПериодическийОтчетПоНомерам(КассаККМ)

	Результат = Ложь;
	
	ПараметрыКассыККМ       = ЗначениеНастроекПовтИсп.ПолучитьПараметрыКассыККМ(КассаККМ);
	ИдентификаторУстройства = ПараметрыКассыККМ.ИдентификаторУстройства;
	
	ПараметрыИнформации = ОбщегоНазначенияРТКлиентСервер.ПолучитьСтруктуруВыводимойВРМКИнформации();
	ПараметрыИнформации.ЗаголовокИнформации = "Помилка друку звіту за номерами";

	Если ЗначениеЗаполнено(ИдентификаторУстройства)  Тогда

		ОписаниеОшибки = "";

		Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда

		//	Подключение устройства

			Если НЕ ИдентификаторУстройства = Неопределено Тогда

				Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ЭтотОбъект,
				                                                                              ИдентификаторУстройства, ОписаниеОшибки
				);
				Если Результат Тогда

					ВходныеПараметры  = Новый Массив;
					ВыходныеПараметры = Неопределено;

					ВходныеПараметры.Добавить(НачальныйНомерПериодическогоОтчета);
					ВходныеПараметры.Добавить(КонечныйНомерПериодическогоОтчета);
					
					Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
					                                                        "PrintPReportNumber",
					                                                        ВходныеПараметры,
					                                                        ВыходныеПараметры
					);
					Если НЕ Результат Тогда

						ПараметрыИнформации.ТекстИнформации = СтрЗаменить(
							"Під час зняття звіту на фіскальному реєстраторі сталася помилка.
							|%ОписаниеОшибки%
							|Звіт на фіскальному реєстраторі не сформовано."
							, "%ОписаниеОшибки%"
							, ВыходныеПараметры[1]
						);
						ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

					КонецЕсли;

					МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ЭтотОбъект,
					                                                                 ИдентификаторУстройства
					);
				Иначе

					ПараметрыИнформации.ТекстИнформации = "При підключенні пристрою сталася помилка." + Символы.ПС + ОписаниеОшибки;
					ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

				КонецЕсли;

			КонецЕсли;

		Иначе

			ПараметрыИнформации.ТекстИнформации = "Попередньо необхідно вибрати робоче місце устаткування поточного сеансу, що підключається.";
			ОбщегоНазначенияРТКлиент.ОткрытьФормуИнформацииДляРМК(ПараметрыИнформации);

		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

// Получение  от пользователя числа 
//
// Параметры:
//  Заголовок - Строка;
//  ЧислоВвода - Число;
//  МаксимальноеЗначение - Число;
//
// Возвращаемое значение:
//   Булево
//
&НаКлиенте
Функция ПолучитьИнтерактивноЧисло(Заголовок, ЧислоВвода, МаксимальноеЗначение, Отрицательное, ВозвращатьЧислоСтрокой)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Заголовок"             , Заголовок);
	ПараметрыОткрытия.Вставить("МаксимальноеЗначение"  , МаксимальноеЗначение);
	ПараметрыОткрытия.Вставить("ЧислоВвода"            , ЧислоВвода);
	ПараметрыОткрытия.Вставить("Отрицательное"         , Отрицательное);
	ПараметрыОткрытия.Вставить("ВозвращатьЧислоСтрокой", ВозвращатьЧислоСтрокой);
	ПараметрыОткрытия.Вставить("КоличествоСимволовПослеЗапятой", 0);
	ПараметрыОткрытия.Вставить("ПрочитатьКарту"			, Ложь);	//	LNK 30.11.2022 15:47:23
	
	Результат = ОткрытьФормуМодально("Обработка.РМК.Форма.ФормаВводаЧисла", ПараметрыОткрытия, УникальныйИдентификатор);
	
	Если НЕ Результат = Неопределено Тогда
		ЗначениеВыбораЧисло = Результат.ВведенноеЧисло;
		Если ЗначениеЗаполнено(ЗначениеВыбораЧисло) Тогда
			ЧислоВвода = ЗначениеВыбораЧисло;
		Иначе
			ЧислоВвода = 0;
		КонецЕсли;
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	
КонецФункции // ПолучитьИнтерактивноЧисло()

&НаКлиенте
Функция ПолучитьИнтерактивноПериод(Заголовок, ПериодВвода)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Заголовок"             , Заголовок);
	ПараметрыОткрытия.Вставить("ВведенныйПериод"       , ПериодВвода);
	
	Результат = ОткрытьФормуМодально("Обработка.РМК.Форма.ФормаВводаПериода", ПараметрыОткрытия, УникальныйИдентификатор);
	
	Если НЕ Результат = Неопределено Тогда
		ЗначениеВыбора = Результат.ВведенныйПериод;
		Если ЗначениеЗаполнено(ЗначениеВыбора) Тогда
			ПериодВвода = ЗначениеВыбора;
		Иначе
			ПериодВвода = Новый СтандартныйПериод();
		КонецЕсли;
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	
КонецФункции // ПолучитьИнтерактивноЧисло()

&НаСервере
Процедура УдалитьСтрокуНаСервере()
	Попытка
		Объект.Товары.Удалить(Объект.Товары.Количество()-1);
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтроку(Команда)
	УдалитьСтрокуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыход(Команда)
	Закрыть();
КонецПроцедуры








 
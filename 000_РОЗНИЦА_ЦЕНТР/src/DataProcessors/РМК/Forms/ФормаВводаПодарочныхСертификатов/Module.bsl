&НаКлиенте
Перем ЗакрытиеСанкционировано;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

	ИспользоватьПодключаемоеОборудование = ЗначениеНастроекПовтИсп.ИспользоватьПодключаемоеОборудование();

//	Элементы.ГруппаПолеВвода.Видимость = ТехническаяПоддержкаВызовСервера.ОтладочныйРежимРаботы();

	Параметры.Свойство("Магазин", Магазин);
	Параметры.Свойство("Номенклатура", Номенклатура);
	Параметры.Свойство("ТоварыСерийныеНомера", ТоварыСерийныеНомера);
	Параметры.Свойство("Количество", Количество);	//	ограничение по количеству!

	Если Параметры.Свойство("СерийныеНомера") Тогда

		Для каждого СерийныйНомер Из Параметры.СерийныеНомера Цикл

			СерийныеНомера.Добавить().СерийныйНомер = СерийныйНомер;

		КонецЦикла;

	КонецЕсли;

	Заголовок = СокрЛП(Номенклатура);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ЗакрытиеСанкционировано = Ложь;

	// ПодключаемоеОборудование
	Если ИспользоватьПодключаемоеОборудование
	   И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда

		ОписаниеОшибки = "";

		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");

		Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда

			ЗаголовокИнформации = "При підключенні обладнання сталася помилка:";
			ТекстИнформации     = ОписаниеОшибки;
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(ЗаголовокИнформации, ТекстИнформации);

		КонецЕсли;

	КонецЕсли;
	// Конец ПодключаемоеОборудование

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если НЕ ЗавершениеРаботы Тогда

		Если НЕ ЗакрытиеСанкционировано = Истина Тогда

			Отказ = Истина;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если Источник = "ПодключаемоеОборудование" Тогда

		Если ИмяСобытия = "ScanData" Тогда

			Если СерийныеНомера.Количество() >= Количество Тогда

				ПоказатьОповещениеПользователя("Відмовлено!",, "Припустиму кількість серійних номерів досягнуто", БиблиотекаКартинок.Предупреждение32);

			Иначе

				Если Параметр[1] = Неопределено Тогда

						Штрихкод = Параметр[0];

				Иначе	Штрихкод = Параметр[1][1];

				КонецЕсли;

				ТекстСообщения = "";

			//	Проверяем номерной сертификат..
				МаскаСертификата = Лев(Штрихкод, ПодарочныеСертификатыПовтИсп.ДлинаМаски());

				Если ПодарочныеСертификатыПовтИсп.МаскиСертификатов().Получить(МаскаСертификата) = Истина Тогда

					СерийныйНомер = ПолучитьСерийныйНомерПоШтрихкоду(Штрихкод, ТекстСообщения);

					Если ЗначениеЗаполнено(СерийныйНомер) Тогда

						СтрокиСерийныеНомера = СерийныеНомера.НайтиСтроки(Новый Структура("СерийныйНомер", СерийныйНомер));

						Если СтрокиСерийныеНомера.Количество() = 0 Тогда

							СтрокаТаблицы = СерийныеНомера.Вставить(0);
							СтрокаТаблицы.СерийныйНомер = СерийныйНомер;

						Иначе

							Элементы.СерийныеНомера.ТекущаяСтрока = СтрокиСерийныеНомера[0].ПолучитьИдентификатор();

						КонецЕсли;

					КонецЕсли;

				Иначе

					ТекстСообщения = "Отримано неприпустимий код «" + Штрихкод + "»";

				КонецЕсли;

				Если НЕ ПустаяСтрока(ТекстСообщения) Тогда

					ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК("Відмова коду «" + Штрихкод + "»", ТекстСообщения);

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура СтрокаШтрихкодаПриИзменении(Элемент)

	Если НЕ ПустаяСтрока(СтрокаШтрихкода) Тогда

		МассивПараметр = Новый Массив(2);
		МассивПараметр[0] = СтрокаШтрихкода;

		ОбработкаОповещения("ScanData", МассивПараметр, "ПодключаемоеОборудование");

		СтрокаШтрихкода = "";

	КонецЕсли;

	ТекущийЭлемент = Элементы.СтрокаШтрихкода;

КонецПроцедуры
	
#КонецОбласти

#Область ПоддержкаФункционалаФормы

Функция ПолучитьСерийныйНомерПоШтрихкоду(Штрихкод, ТекстСообщения)

	СерийныйНомер = Справочники.СерийныеНомера.ПустаяСсылка();
	Отказ = Ложь;

	СоставОбъекта = ПодарочныеСертификатыСервер.ПолучитьСостояниеПодарочногоСертификатаКод(Штрихкод, РозничныеПродажиСлужебный.РесурсWebRetailДоступен());

	Если СоставОбъекта.Найден Тогда

		Если НЕ СоставОбъекта.Владелец = Номенклатура Тогда

			Отказ = Истина;
			ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения), "", Символы.ПС)
			+ "НЕ відповідає номінал отриманого серійного номера";

		КонецЕсли;

		Если НЕ СоставОбъекта.МагазинНаличия = Магазин Тогда

			Отказ = Истина;
			ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения), "", Символы.ПС)
			+ "Сертифікат знаходиться в іншому магазині «" + СоставОбъекта.МагазинНаличия + "»";

		КонецЕсли;

		Если ЗначениеЗаполнено(СоставОбъекта.Состояние) Тогда

			Отказ = Истина;
			ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения), "", Символы.ПС)
			+ "Сертифікат перебуває у стані «" + СоставОбъекта.Состояние + "»";

		КонецЕсли;

		Если НЕ СоставОбъекта.ДатаОкончанияДействия = '00010101' И СоставОбъекта.ДатаОкончанияДействия < ТекущаяДата() Тогда

			Отказ = Истина;
			ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения), "", Символы.ПС)
			+ "Сертифікат прострочений (діє до " + Формат(СоставОбъекта.ДатаОкончанияДействия, "ДФ=dd.MM.yyyy") + ").";

		КонецЕсли;

		Если НЕ ТоварыСерийныеНомера.НайтиПоЗначению(СоставОбъекта.СерийныйНомер) = Неопределено Тогда

			Отказ = Истина;
			ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения), "", Символы.ПС)
			+ "Сертифікат «" + СоставОбъекта.СерийныйНомер + "» ВЖЕ присутній у поточному чеку";

		КонецЕсли;

		Если НЕ Отказ Тогда

			СерийныйНомер = СоставОбъекта.СерийныйНомер;

		КонецЕсли;

	Иначе

		ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения), "", Символы.ПС)
		+ "Не знайдено сертифікат за кодом «" + Штрихкод + "»";

	КонецЕсли;

	Возврат СерийныйНомер;

КонецФункции
	
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаУдалить(Команда)

	Если НЕ Элементы.СерийныеНомера.ТекущиеДанные = Неопределено Тогда

		СерийныеНомера.Удалить(СерийныеНомера.НайтиПоИдентификатору(Элементы.СерийныеНомера.ТекущаяСтрока));

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаПринять(Команда)

	ЗакрытиеСанкционировано = Истина;

	СписокСерийныхНомеров = Новый Массив;

	Для каждого СтрокаТаблицы Из СерийныеНомера Цикл

		СписокСерийныхНомеров.Добавить(СтрокаТаблицы.СерийныйНомер);

	КонецЦикла;

	СтруктураОтвета = Новый Структура(
		"Номенклатура, СерийныеНомера"
		, Номенклатура
		, СписокСерийныхНомеров
	);
		
	Закрыть(СтруктураОтвета)

КонецПроцедуры

&НаКлиенте
Процедура КомандаОтменить(Команда)

	ЗакрытиеСанкционировано = Истина;
	Закрыть();

КонецПроцедуры
	
#КонецОбласти













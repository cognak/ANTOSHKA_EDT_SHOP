&НаКлиенте
Перем ЗакрытиеСанкционировано;

#Область ОбработчикиОсновныхСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

	Если Параметры.Свойство("АдресТаблицПодарки") Тогда

		ЗаполнитьСписокВыбора(Параметры.АдресТаблицПодарки);

	КонецЕсли;

	Параметры.Свойство("Магазин", Магазин);
	Параметры.Свойство("ТоварыСерийныеНомера", ТоварыСерийныеНомера);

	ИспользоватьПодключаемоеОборудование = ЗначениеНастроекПовтИсп.ИспользоватьПодключаемоеОборудование();

	Если Список.Количество() = 0 Тогда

		Отказ = Истина;

	Иначе

		НомерСтроки = 0;

		Для каждого СтрокаСписка Из Список Цикл

			НомерСтроки = НомерСтроки + 1;
			СтрокаСписка.КлючСвязиСерийныхНомеров = НомерСтроки;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ЗакрытиеСанкционировано = Ложь;

	УстановитьОбщуюИнформацию();

	// ПодключаемоеОборудование
	Если ИспользоватьПодключаемоеОборудование
	   И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда

		ОписаниеОшибки = "";

		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");

		Если НЕ МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда

			ЗаголовокИнформации = "При підключенні обладнання сталася помилка:";
			ТекстИнформации     = ОписаниеОшибки;
			ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(ЗаголовокИнформации, ТекстИнформации);

		КонецЕсли;

	КонецЕсли;
	// Конец ПодключаемоеОборудование

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если НЕ ЗавершениеРаботы Тогда

		Если НЕ ЗакрытиеСанкционировано = Истина Тогда

			Отказ = Истина;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)

	// ПодключаемоеОборудование
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	// Конец ПодключаемоеОборудование

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)


КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийПоляСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)

	УстановитьОбщуюИнформацию();

КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)


КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПлюс(Команда)

	Если НЕ Элементы.Список.ТекущиеДанные = Неопределено Тогда

		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		СтрокаСкидки  = НайтиСтрокуСкидки(ТекущиеДанные.СкидкаНаценка);

		Если НЕ СтрокаСкидки = Неопределено Тогда

			КоличествоИтог = ИтогПоСкидке(ТекущиеДанные.СкидкаНаценка);

			Если КоличествоИтог < СтрокаСкидки.КоличествоУпаковок Тогда

				Если ТекущиеДанные.ИспользоватьСерийныеНомера Тогда

					ВыполнитьВводСерийныхНомеров(ТекущиеДанные, СтрокаСкидки, КоличествоИтог);

				Иначе

					ТекущиеДанные.КоличествоУпаковокПринять = Мин(ТекущиеДанные.КоличествоУпаковокПринять + 1, ТекущиеДанные.КоличествоУпаковок);

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

		УстановитьОбщуюИнформацию();

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаМинус(Команда)

	Если НЕ Элементы.Список.ТекущиеДанные = Неопределено Тогда

		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		СтрокаСкидки  = НайтиСтрокуСкидки(ТекущиеДанные.СкидкаНаценка);

		Если НЕ СтрокаСкидки = Неопределено Тогда

			Если ТекущиеДанные.ИспользоватьСерийныеНомера Тогда

				Если ПолучитьМассивСерийныхНомеров(ТекущиеДанные.КлючСвязиСерийныхНомеров).Количество() > 0 Тогда

					ВыполнитьВводСерийныхНомеров(ТекущиеДанные, СтрокаСкидки, ИтогПоСкидке(ТекущиеДанные.СкидкаНаценка));

				КонецЕсли;

			Иначе

				ТекущиеДанные.КоличествоУпаковокПринять = Макс(ТекущиеДанные.КоличествоУпаковокПринять - 1, 0);

			КонецЕсли;

		КонецЕсли;

		УстановитьОбщуюИнформацию();

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбрать(Команда)

	ЗакрытиеСанкционировано = Истина;

	Если КоличествоУпаковокПринято = 0 Тогда

		Закрыть();

	Иначе

		СтруктураОтвета = Новый Массив;

		Для каждого СтрокаТаблицы Из Список Цикл

			Если НЕ СтрокаТаблицы.КоличествоУпаковокПринять = 0 Тогда

				СоставСтроки = Новый Структура;

				СтрокаСкидки = НайтиСтрокуСкидки(СтрокаТаблицы.СкидкаНаценка);

				СоставСтроки.Вставить("СкидкаНаценка"     , СтрокаТаблицы.СкидкаНаценка);
				СоставСтроки.Вставить("Код"  		      , СтрокаТаблицы.Код);
				СоставСтроки.Вставить("Номенклатура"      , СтрокаТаблицы.Номенклатура);
				СоставСтроки.Вставить("СерийныеНомера"    , ПолучитьМассивСерийныхНомеров(СтрокаТаблицы.КлючСвязиСерийныхНомеров));
				СоставСтроки.Вставить("Характеристика"    , СтрокаТаблицы.Характеристика);
				СоставСтроки.Вставить("Упаковка"          , СтрокаТаблицы.Упаковка);
				СоставСтроки.Вставить("КоличествоУпаковок", СтрокаТаблицы.КоличествоУпаковокПринять);
				СоставСтроки.Вставить("Количество"        , СтрокаТаблицы.КоличествоУпаковокПринять / СтрокаТаблицы.Коэффициент);
				СоставСтроки.Вставить("Цена"              , СтрокаСкидки.Цена);
				СоставСтроки.Вставить("Склад"             , СтрокаТаблицы.Склад);
				СоставСтроки.Вставить("ПродажаПодарка"    , СтрокаСкидки.УчитыватьКакПродажу);
				СоставСтроки.Вставить("СтавкаНДС"         , СтрокаТаблицы.СтавкаНДС);
				СоставСтроки.Вставить("ТипНоменклатуры"   , СтрокаТаблицы.ТипНоменклатуры);
				СоставСтроки.Вставить("Номинал"			  , СтрокаТаблицы.Номинал);
				СоставСтроки.Вставить("Получен", Истина);

				СтруктураОтвета.Добавить(СоставСтроки);

			КонецЕсли;

		КонецЦикла;
		
		Закрыть(СтруктураОтвета)

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаОтменить(Команда)

	ЗакрытиеСанкционировано = Истина;
	Закрыть();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокВыбора(АдресТаблицПодарки)

	ТаблицыПолучения = ПолучитьИзВременногоХранилища(АдресТаблицПодарки);
	Список.Загрузить(ТаблицыПолучения.ТаблицаПодарки);
	СкидкиНаценки.Загрузить(ТаблицыПолучения.ТаблицаСкидкиНаценки);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКнопок()

	СтрокаАктивна = НЕ Элементы.Список.ТекущиеДанные = Неопределено;

	Элементы.КомандаПлюс.Доступность  = СтрокаАктивна;
	Элементы.КомандаМинус.Доступность = СтрокаАктивна;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОбщуюИнформацию()

	ТекстЗаголовка = "";

	Если НЕ Элементы.Список.ТекущиеДанные = Неопределено Тогда

		ТекстЗаголовка = СокрЛП(Элементы.Список.ТекущиеДанные.СкидкаНаценка);

		СтрокаСкидки = НайтиСтрокуСкидки(Элементы.Список.ТекущиеДанные.СкидкаНаценка);

		Если НЕ СтрокаСкидки = Неопределено Тогда

			ТекстЗаголовка = "(" + Формат(СтрокаСкидки.КоличествоУпаковок, "ЧДЦ=; ЧН=0; ЧГ=") + ") «" + ТекстЗаголовка + "»";

		КонецЕсли;

	КонецЕсли;

	Элементы.ДекорацияСкидка.Заголовок = ТекстЗаголовка;
	КоличествоУпаковокПринято = Список.Итог("КоличествоУпаковокПринять");

	УстановитьДоступностьКнопок();

	ТекущийЭлемент = Элементы.СписокКоличествоУпаковок;

КонецПроцедуры

&НаКлиенте
Функция НайтиСтрокуСкидки(СкидкаНаценка)

	СтрокаСкидки = Неопределено;

	Для каждого СтрокаТаблицы Из СкидкиНаценки Цикл

		Если СтрокаТаблицы.СкидкаНаценка = СкидкаНаценка Тогда

			СтрокаСкидки = СтрокаТаблицы;
			Прервать;

		КонецЕсли;

	КонецЦикла;

	Возврат СтрокаСкидки;

КонецФункции

&НаКлиенте
Функция ИтогПоСкидке(СкидкаНаценка)

	КоличествоИтог = 0;

	Для каждого СтрокаТаблицы Из Список Цикл

		Если СтрокаТаблицы.СкидкаНаценка = СкидкаНаценка Тогда

			КоличествоИтог = КоличествоИтог + СтрокаТаблицы.КоличествоУпаковокПринять;

		КонецЕсли;

	КонецЦикла;

	Возврат КоличествоИтог;

КонецФункции

&НаКлиенте
Процедура ВыполнитьВводСерийныхНомеров(ТекущиеДанные, СтрокаСкидки, КоличествоИтог)

	ДополнительныеПараметры = Новый Структура("ТекущиеДанные", ТекущиеДанные);
	
	ПараметрыОткрытия = Новый Структура(
		"Магазин, Номенклатура, СерийныеНомера, ТоварыСерийныеНомера, Количество"
		, Магазин
		, ТекущиеДанные.Номенклатура
		, ПолучитьМассивСерийныхНомеров(ТекущиеДанные.КлючСвязиСерийныхНомеров)
		, ТоварыСерийныеНомера
		, Мин(ТекущиеДанные.КоличествоУпаковок, СтрокаСкидки.КоличествоУпаковок - КоличествоИтог)
	);

	ОписаниеОповещения = Новый ОписаниеОповещения("СерийныеНомераЗавершение", ЭтотОбъект, ДополнительныеПараметры);

	ОткрытьФорму(РМККлиент.КонтекстИмениФормы("Обработка.РМК.Форма.ФормаВводаПодарочныхСертификатов", Объект.ИмяВнешнейОбработки)
	, ПараметрыОткрытия, ЭтотОбъект, УникальныйИдентификатор,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте	//	LNK 12.05.2021 08:21:57
Процедура СерийныеНомераЗавершение(Результат, ДополнительныеПараметры)	Экспорт

	Если ТипЗнч(Результат) = Тип("Структура") Тогда

		ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;

	//	очистим связанные строки таблицы серийных номеров
		СтрокиТабличнойЧасти = СерийныеНомера.НайтиСтроки(Новый Структура("КлючСвязиСерийныхНомеров", ТекущиеДанные.КлючСвязиСерийныхНомеров));

		Для каждого СтрокаТабличнойЧасти Из СтрокиТабличнойЧасти Цикл

			СерийныеНомера.Удалить(СтрокаТабличнойЧасти);

		КонецЦикла;

	//	установим в таблице новые серийные номера... не забываем про ключ связи!
		Для каждого СерийныйНомер Из Результат.СерийныеНомера Цикл

			СтрокаТабличнойЧасти = СерийныеНомера.Добавить();
			СтрокаТабличнойЧасти.СерийныйНомер = СерийныйНомер;
			СтрокаТабличнойЧасти.КлючСвязиСерийныхНомеров = ТекущиеДанные.КлючСвязиСерийныхНомеров;

		КонецЦикла;

		ТекущиеДанные.КоличествоУпаковокПринять = Результат.СерийныеНомера.Количество();

	КонецЕсли;

	УстановитьОбщуюИнформацию();

КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивСерийныхНомеров(КлючСвязиСерийныхНомеров)

	МассивСерийныхНомеров = Новый Массив;
	
	СтрокиТабличнойЧасти = СерийныеНомера.НайтиСтроки(Новый Структура("КлючСвязиСерийныхНомеров", КлючСвязиСерийныхНомеров));

	Для каждого СтрокаТабличнойЧасти Из СтрокиТабличнойЧасти Цикл

		МассивСерийныхНомеров.Добавить(СтрокаТабличнойЧасти.СерийныйНомер);

	КонецЦикла;

	Возврат МассивСерийныхНомеров;

КонецФункции

#КонецОбласти










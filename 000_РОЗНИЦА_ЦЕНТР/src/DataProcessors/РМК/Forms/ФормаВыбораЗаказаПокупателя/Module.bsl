///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

	ЭтотОбъект().Журнал(ИмяФормы + ".ПриСозданииНаСервере");	//	LNK 02.08.2019 10:56:00
	
	Параметры.Свойство("Магазин", Магазин);
	
	СтрокаНомера = "";
	
КонецПроцедуры

&НаСервере	//	LNK 16.07.2019 11:09:02
Функция ЭтотОбъект(ТекущийОбъект = Неопределено) 

	Если ТекущийОбъект = Неопределено Тогда

		Возврат РеквизитФормыВЗначение("Объект");

	КонецЕсли;

	ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");

	Возврат Неопределено;

КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаOK(Команда)
	
	ТекстСообщения = "";
	ДанныеЗаказа = ПолучитьДанныеЗаказаПокупателя(СтрокаНомера, Магазин);
	
	Если ЗначениеЗаполнено(ДанныеЗаказа.Ссылка) Тогда

		Если НЕ ДанныеЗаказа.КоличествоЧеков = 0 Тогда

			ТекстСообщения = НСтр("ru = 'УЖЕ ОБРАБОТАН документ с номером «" + СокрЛП(СтрокаНомера) + "» для магазина «" + Магазин + "» (имеются учтённые чеки ККМ)'");

		ИначеЕсли НЕ ДанныеЗаказа.КоличествоПеремещений = 0 Тогда

			ТекстСообщения = НСтр("ru = 'УЖЕ ОБРАБОТАН документ с номером «" + СокрЛП(СтрокаНомера) + "» для магазина «" + Магазин + "» (имеются учтённые перемещения по этому заказу)'");

		ИначеЕсли ДанныеЗаказа.СтатусОплаты = ПредопределенноеЗначение("Перечисление.СтатусОплаты.Оплачен") Тогда

			ТекстСообщения = НСтр("ru = 'УЖЕ ОПЛАЧЕН документ по номеру «" + СокрЛП(СтрокаНомера) + "» для магазина «" + Магазин + "»'");

		ИначеЕсли ДанныеЗаказа.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПокупателей.Закрыт") Тогда

			ТекстСообщения = НСтр("ru = 'УЖЕ ЗАКРЫТ документ по номеру «" + СокрЛП(СтрокаНомера) + "» для магазина «" + Магазин + "»'");

		Иначе

			Закрыть(ДанныеЗаказа);

		КонецЕсли; 

	Иначе

		ТекстСообщения = НСтр("ru = 'НЕ НАЙДЕН документ по номеру «" + СокрЛП(СтрокаНомера) + "» для магазина «" + Магазин + "»'");

	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстСообщения) Тогда

		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(НСтр("ru = 'Ошибка поиска документа по номеру!'"), ТекстСообщения)

	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста	//	LNK 20.11.2021 18:34:54
Функция ПолучитьДанныеЗаказаПокупателя(НомерДокумента, Магазин)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаЗаказов.Дата, Ведущая.Дата) КАК Дата,
	|	ЕСТЬNULL(ТаблицаЗаказов.Ссылка, Ведущая.Ссылка) КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДАТАВРЕМЯ(1, 1, 1) КАК Дата,
	|		ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК Ссылка) КАК Ведущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ЗаказПокупателяТовары.Ссылка.Дата КАК Дата,
	|			ЗаказПокупателяТовары.Ссылка КАК Ссылка
	|		ИЗ
	|			Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	|		ГДЕ
	|			ЗаказПокупателяТовары.МагазинПолучатель = &Магазин
	|			И ЗаказПокупателяТовары.Ссылка.Номер = &Номер
	|			И ЗаказПокупателяТовары.Ссылка.Проведен
	|			И (ЗаказПокупателяТовары.Ссылка.ТипДоставки = ЗНАЧЕНИЕ(Перечисление.ТипДоставкиЗаказПокупателя.Самовывоз)
	|					ИЛИ ЗаказПокупателяТовары.Самовывоз)) КАК ТаблицаЗаказов
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка"
	);
	Запрос.УстановитьПараметр("Номер"  , СокрЛП(НомерДокумента));
	Запрос.УстановитьПараметр("Магазин", Магазин);

	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Возврат Документы.ЗаказПокупателя.РеквизитыДанныхВыбора(Выборка.Ссылка);

КонецФункции











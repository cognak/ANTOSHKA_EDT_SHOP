
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

	ЭтотОбъектФормы().Журнал(ИмяФормы + ".ПриСозданииНаСервере");	//	LNK 02.08.2019 10:56:00
	
	Параметры.Свойство("Магазин", Магазин);
	
	СтрокаНомера = "";
	
	УстановитьПараметры(Документы.ЗаказПокупателя.ПустаяСсылка());
	
	Элементы.ГруппаПервая.Видимость = Истина;
	Элементы.ГруппаВторая.Видимость = Ложь;
	ПервыйВызовКомандыОк = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаOK(Команда)
	
	ТекстСообщения = "";
	ДанныеЗаказа = ПолучитьДанныеЗаказаПокупателя(СтрокаНомера, Магазин);
	
	Если ЗначениеЗаполнено(ДанныеЗаказа.Ссылка) Тогда

		Если ДанныеЗаказа.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПокупателей.Отменён")
		ИЛИ	 ДанныеЗаказа.СтатусИМ = ПредопределенноеЗначение("Перечисление.СтатусыИнтернетМагазина.canceled")
		Тогда

			ТекстСообщения = "Відмовлено! Документ за номером «" + СокрЛП(СтрокаНомера) + "» в статусі «Скасовано».";

		ИначеЕсли НЕ ДанныеЗаказа.КоличествоЧеков = 0
				И Не ДанныеЗаказа.УчетнаяСистема = ПредопределенноеЗначение("Перечисление.УчетныеСистемыКомпании.Розница") Тогда

			ТекстСообщения = "ВЖЕ ОБРОБЛЕНО за документом із номером «" + СокрЛП(СтрокаНомера) + "» по магазину «" + Магазин + "» (є враховані чеки ККМ)";

		ИначеЕсли НЕ ДанныеЗаказа.КоличествоПеремещений = 0
				И Не ДанныеЗаказа.УчетнаяСистема = ПредопределенноеЗначение("Перечисление.УчетныеСистемыКомпании.Розница") Тогда

			ТекстСообщения = "ВЖЕ ОБРОБЛЕНО за документом із номером «" + СокрЛП(СтрокаНомера) + "» по магазину «" + Магазин + "» (є враховані переміщення на це замовлення)";

		ИначеЕсли ДанныеЗаказа.СтатусОплаты = ПредопределенноеЗначение("Перечисление.СтатусОплаты.Оплачен") Тогда

			ТекстСообщения = "ВЖЕ СПЛАЧЕНО за документом по номеру «" + СокрЛП(СтрокаНомера) + "» по магазину «" + Магазин + "»";

		ИначеЕсли ДанныеЗаказа.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаказовПокупателей.Закрыт") Тогда

			ТекстСообщения = "ВЖЕ ЗАКРИТИЙ за документом по номеру «" + СокрЛП(СтрокаНомера) + "» по магазину «" + Магазин + "»";

		Иначе
			
			Если состояниеЗаказа(ДанныеЗаказа.Ссылка) = 1 Или Не ПервыйВызовКомандыОк  Тогда
				
				Закрыть(ДанныеЗаказа);
				
			Иначе 
				
				УстановитьПараметры(ДанныеЗаказа.Ссылка);
				Элементы.ГруппаПервая.Видимость = Ложь;
				Элементы.ГруппаВторая.Видимость = Истина;
				ПервыйВызовКомандыОк = Ложь;
				
			КонецЕсли;

		КонецЕсли; 

	Иначе

		ТекстСообщения = "НЕ ЗНАЙДЕНО документ за номером «" + СокрЛП(СтрокаНомера) + "» по магазину «" + Магазин + "»";

	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстСообщения) Тогда

		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК("Помилка пошуку документа за номером!", ТекстСообщения)

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеЗаказаПокупателя(НомерДокумента, Магазин)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаЗаказов.Дата, Ведущая.Дата) КАК Дата,
	|	ЕСТЬNULL(ТаблицаЗаказов.Ссылка, Ведущая.Ссылка) КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДАТАВРЕМЯ(1, 1, 1) КАК Дата,
	|		ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) КАК Ссылка) КАК Ведущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ЗаказПокупателяТовары.Ссылка.Дата КАК Дата,
	|			ЗаказПокупателяТовары.Ссылка КАК Ссылка
	|		ИЗ
	|			Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	|		ГДЕ
	|			ЗаказПокупателяТовары.МагазинПолучатель = &Магазин
	|			И ЗаказПокупателяТовары.Ссылка.Номер = &Номер
	|			И ЗаказПокупателяТовары.Ссылка.Проведен
	|			И (ЗаказПокупателяТовары.Ссылка.ТипДоставки = ЗНАЧЕНИЕ(Перечисление.ТипДоставкиЗаказПокупателя.Самовывоз)
	|					ИЛИ ЗаказПокупателяТовары.Самовывоз)) КАК ТаблицаЗаказов
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка"
	);
	Запрос.УстановитьПараметр("Номер"  , СокрЛП(НомерДокумента));
	Запрос.УстановитьПараметр("Магазин", Магазин);

	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Возврат Документы.ЗаказПокупателя.РеквизитыДанныхВыбора(Выборка.Ссылка);

КонецФункции

&НаСервере
Функция ЭтотОбъектФормы(ТекущийОбъект = Неопределено) 

	Если ТекущийОбъект = Неопределено Тогда

		Возврат РеквизитФормыВЗначение("Объект");

	КонецЕсли;

	ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");

	Возврат Неопределено;

КонецФункции

&НаСервере
Функция состояниеЗаказа(ЗаказКлиента)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СостояниеСтрокЗаказаПокупателя.ЗаказПокупателя,
		|	СостояниеСтрокЗаказаПокупателя.ГотовКПродаже,
		|	СостояниеСтрокЗаказаПокупателя.Продано
		|ИЗ
		|	РегистрСведений.СостояниеСтрокЗаказаПокупателя КАК СостояниеСтрокЗаказаПокупателя
		|ГДЕ
		|	СостояниеСтрокЗаказаПокупателя.ЗаказПокупателя = &ЗаказПокупателя";
	
	Запрос.УстановитьПараметр("ЗаказПокупателя", ЗаказКлиента);

	Возврат Запрос.Выполнить().Выбрать().Количество();

КонецФункции

&НаСервере
Процедура УстановитьПараметры(ЗаказКлиента)
	
	ТоварыВДороге.Параметры.УстановитьЗначениеПараметра("Ссылка", ЗаказКлиента);
	ТоварыКПродаже.Параметры.УстановитьЗначениеПараметра("Ссылка", ЗаказКлиента);
	ТоварыПроданные.Параметры.УстановитьЗначениеПараметра("Ссылка", ЗаказКлиента);
	
КонецПроцедуры

#КонецОбласти

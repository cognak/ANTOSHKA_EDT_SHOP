&НаКлиенте
Процедура ПоискШтрихкодПриИзменении(Элемент)
	ПоискШтрихкодПриИзмененииНаСервере(ПоискШтрихкод);

	ПоискШтрихкод = "";
//	Элементы.ПоискШтрихкод.ОбновитьТекстРедактирования();
	УстановитьТекущийЭлемент(Элемент.Имя);

КонецПроцедуры

&НаСервере
Процедура ПоискШтрихкодПриИзмененииНаСервере(ШК)
	
	 Запрос = Новый Запрос;
	 Запрос.Текст =
	 "ВЫБРАТЬ
	 |	ЕСТЬNULL(ДействующиеЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
	 |	Штрихкоды.Владелец КАК Номенклатура,
	 |	Штрихкоды.Владелец.Код КАК Код,
	 |	Штрихкоды.Владелец.Артикул КАК Артикул,
	 |	Штрихкоды.Штрихкод
	 |ИЗ
	 |	РегистрСведений.Штрихкоды КАК Штрихкоды
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(, ОбъектЦенообразования = &Магазин) КАК ДействующиеЦеныНоменклатурыСрезПоследних
	 |		ПО Штрихкоды.Владелец = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура
	 |ГДЕ
	 |	Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	 |	И Штрихкоды.Штрихкод = &Штрихкод
	 |	И Штрихкоды.Владелец.ЭтоГруппа = ЛОЖЬ";
	 Запрос.УстановитьПараметр("Штрихкод",СокрЛП(ШК));
	 Запрос.УстановитьПараметр("Магазин",Магазин);
	 Найденные.Загрузить(Запрос.Выполнить().Выгрузить());
	 
КонецПроцедуры

&НаКлиенте
Процедура ПоискКодПриИзменении(Элемент)

	ПоискКодПриИзмененииНаСервере();

	ПоискКод = "";
//	Элементы.ПоискКод.ОбновитьТекстРедактирования();
	УстановитьТекущийЭлемент(Элемент.Имя);

КонецПроцедуры

&НаСервере
Процедура ПоискКодПриИзмененииНаСервере()
	
	 Запрос = Новый Запрос;
	 Запрос.Текст =
	 "ВЫБРАТЬ
	 |	Номенклатура.Ссылка КАК Ссылка,
	 |	ЕСТЬNULL(Штрихкоды.Штрихкод, 0) КАК Штрихкод
	 |ПОМЕСТИТЬ ТаблицаНоменклатуры
	 |ИЗ
	 |	Справочник.Номенклатура КАК Номенклатура
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	 |		ПО Номенклатура.Ссылка = Штрихкоды.Владелец
	 |ГДЕ
	 |	Номенклатура.Код = &Текст
	 |	И НЕ Номенклатура.ЭтоГруппа
	 |	И Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	 |	И НЕ Штрихкоды.Владелец.ЭтоГруппа
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |	ТаблицаНоменклатуры.Ссылка КАК Номенклатура,
	 |	ТаблицаНоменклатуры.Штрихкод,
	 |	ТаблицаНоменклатуры.Ссылка.Код КАК Код,
	 |	ТаблицаНоменклатуры.Ссылка.Артикул КАК Артикул,
	 |	ЕСТЬNULL(ДействующиеЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена
	 |ИЗ
	 |	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(, ОбъектЦенообразования = &Магазин) КАК ДействующиеЦеныНоменклатурыСрезПоследних
	 |		ПО ТаблицаНоменклатуры.Ссылка = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура";
	 Запрос.УстановитьПараметр("Текст",СокрЛП(ПоискКод));
	 Запрос.УстановитьПараметр("Магазин",Магазин);
	 Найденные.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

&НаКлиенте
Процедура ПоискАртикулПриИзменении(Элемент)

	ПоискАртикулПриИзмененииНаСервере();

	ПоискАртикул = "";
//	Элементы.ПоискАртикул.ОбновитьТекстРедактирования();
	УстановитьТекущийЭлемент(Элемент.Имя);

КонецПроцедуры

&НаСервере
Процедура ПоискАртикулПриИзмененииНаСервере()
	 Запрос = Новый Запрос;
	 Запрос.Текст =
	 "ВЫБРАТЬ
	 |	Номенклатура.Ссылка КАК Ссылка,
	 |	ЕСТЬNULL(Штрихкоды.Штрихкод, 0) КАК Штрихкод
	 |ПОМЕСТИТЬ ТаблицаНоменклатуры
	 |ИЗ
	 |	Справочник.Номенклатура КАК Номенклатура
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	 |		ПО Номенклатура.Ссылка = Штрихкоды.Владелец
	 |ГДЕ
	 |	Номенклатура.Артикул = &Текст
	 |	И НЕ Номенклатура.ЭтоГруппа
	 |	И Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	 |	И НЕ Штрихкоды.Владелец.ЭтоГруппа
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |	ТаблицаНоменклатуры.Ссылка КАК Номенклатура,
	 |	ТаблицаНоменклатуры.Штрихкод,
	 |	ТаблицаНоменклатуры.Ссылка.Код КАК Код,
	 |	ТаблицаНоменклатуры.Ссылка.Артикул КАК Артикул,
	 |	ЕСТЬNULL(ДействующиеЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена
	 |ИЗ
	 |	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(, ОбъектЦенообразования = &Магазин) КАК ДействующиеЦеныНоменклатурыСрезПоследних
	 |		ПО ТаблицаНоменклатуры.Ссылка = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура";
	 Запрос.УстановитьПараметр("Текст",СокрЛП(ПоискАртикул));
	 Запрос.УстановитьПараметр("Магазин",Магазин);
	 Найденные.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

&НаКлиенте
Процедура ПоискНаименованиеПриИзменении(Элемент)

	ПоискНаименованиеПриИзмененииНаСервере();

	ПоискНаименование = "";
//	Элементы.ПоискНаименование.ОбновитьТекстРедактирования();
	УстановитьТекущийЭлемент(Элемент.Имя);

КонецПроцедуры

&НаСервере
Процедура ПоискНаименованиеПриИзмененииНаСервере()
	
	 Запрос = Новый Запрос;
	 Запрос.Текст =
	 "ВЫБРАТЬ
	 |	Номенклатура.Ссылка КАК Ссылка,
	 |	ЕСТЬNULL(Штрихкоды.Штрихкод, 0) КАК Штрихкод
	 |ПОМЕСТИТЬ ТаблицаНоменклатуры
	 |ИЗ
	 |	Справочник.Номенклатура КАК Номенклатура
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	 |		ПО Номенклатура.Ссылка = Штрихкоды.Владелец
	 |ГДЕ
	 |	Номенклатура.Наименование ПОДОБНО &Текст
	 |	И НЕ Номенклатура.ЭтоГруппа
	 |	И Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	 |	И НЕ Штрихкоды.Владелец.ЭтоГруппа
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ РАЗЛИЧНЫЕ
	 |	ТаблицаНоменклатуры.Ссылка КАК Номенклатура,
	 |	ТаблицаНоменклатуры.Штрихкод,
	 |	ТаблицаНоменклатуры.Ссылка.Код КАК Код,
	 |	ТаблицаНоменклатуры.Ссылка.Артикул КАК Артикул,
	 |	ЕСТЬNULL(ДействующиеЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена
	 |ИЗ
	 |	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(, ОбъектЦенообразования = &Магазин) КАК ДействующиеЦеныНоменклатурыСрезПоследних
	 |		ПО ТаблицаНоменклатуры.Ссылка = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура";
	 Запрос.УстановитьПараметр("Текст","%"+СокрЛП(ПоискНаименование)+"%");
	 Запрос.УстановитьПараметр("Магазин",Магазин);
	 Найденные.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[1] = Неопределено Тогда
				ТекКод = Параметр[0];
			Иначе
				ТекКод = Параметр[1][1];
			КонецЕсли;
			ПоискШтрихкодПриИзмененииНаСервере(ТекКод)
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НайденныеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	//Закрыть(ВыбранноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура НайденныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Найденные.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Закрыть();
	Иначе
		Закрыть(ТекущиеДанные.Номенклатура)
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("Магазин") Тогда

		Магазин = Параметры.Магазин;

	КонецЕсли;

КонецПроцедуры

//	LNK 15.09.2017 13:06:55
&НаКлиенте
Процедура УстановитьТекущийЭлемент(ИмяЭлемента)

	ИмяТекущего = ИмяЭлемента;
	ПодключитьОбработчикОжидания("УстановитьТекущийЭлементЗавершение", 0.1, Истина);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущийЭлементЗавершение()

	Если НЕ ПустаяСтрока(ИмяТекущего) И НЕ ТекущийЭлемент = Элементы[ИмяТекущего] Тогда
		
		ТекущийЭлемент = Элементы[ИмяТекущего];

	КонецЕсли;

КонецПроцедуры




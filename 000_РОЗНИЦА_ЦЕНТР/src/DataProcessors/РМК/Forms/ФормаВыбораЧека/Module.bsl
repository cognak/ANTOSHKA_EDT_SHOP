///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

	Параметры.Свойство("ПробитиеНепробитого", ПробитиеНепробитого);
	Параметры.Свойство("НеДляВозврата"      , НеДляВозврата);

	Если Параметры.Свойство("Магазин") Тогда

			НомерМагазина = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Магазин, "НомерМагазина", 0, Ложь);

	Иначе	НомерМагазина = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Магазин, "НомерМагазина", 0, Ложь);

	КонецЕсли;

	Если Параметры.Свойство("МассивСтруктурОтбора") Тогда

		ПараметрСтруктурыОтбора.ЗагрузитьЗначения(Параметры.МассивСтруктурОтбора);

		ЗаполнитьСписокВыбора(ПараметрСтруктурыОтбора.ВыгрузитьЗначения());

		Если Параметры.Свойство("НадписьПустогоСписка") Тогда

			Элементы.ДекорацияСписокПуст.Заголовок = Параметры.НадписьПустогоСписка;

		КонецЕсли;

		Если Список.Количество() = 0 Тогда

			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСписокПуст;

		КонецЕсли;

	Иначе

		Отказ = Истина;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗафиксироватьВыборСтроки();
	
КонецПроцедуры

&НаКлиенте	//	LNK 01.02.2019 07:11:38
Процедура СписокПриАктивизацииСтроки(Элемент)

	Если НЕ Элемент.ТекущиеДанные = Неопределено Тогда

		НомерЧека = Элемент.ТекущиеДанные.Номер;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСписокПустНажатие(Элемент)
	
	Закрыть()
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаВниз(Команда)
	
	ПередвинутьПозицию(1)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВверх(Команда)
	
	ПередвинутьПозицию(-1)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	ЗафиксироватьВыборСтроки();
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьСписокВыбора(МассивСтруктурОтбора)
	
	Если ТипЗнч(МассивСтруктурОтбора) = Тип("Массив") Тогда

		СКД = РеквизитФормыВЗначение("Объект").ПолучитьМакет("МакетВыбораЧека");
		Настройки = СКД.НастройкиПоУмолчанию;

		Для каждого ЭлементМассива Из МассивСтруктурОтбора Цикл

			ОбщегоНазначенияРТКлиентСервер.ДобавитьОтбор(Настройки, 
														 Новый ПолеКомпоновкиДанных(ЭлементМассива.Поле), 
														 ЭлементМассива.Значение,
														 ЭлементМассива.ВидСравнения,
														 ЭлементМассива.Использование)
		КонецЦикла;
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		МакетКомпоновки   = КомпоновщикМакета.Выполнить(
			СКД, Настройки,,,
			Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")
		);
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
		ТаблицаЗначений = Новый ТаблицаЗначений;
		ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		ТаблицаЗначений.Сортировать("Дата Убыв");
		
		Список.Загрузить(ТаблицаЗначений);

	Иначе

		Список.Очистить();

	КонецЕсли;

КонецПроцедуры

// Передвинуть позицию в списке
//
// Параметры:
// Движение = 1 (вниз) или -1 (вверх)
// 
&НаКлиенте
Процедура ПередвинутьПозицию(Движение)
	// Вставить содержимое обработчика.
	Если Список.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено  Тогда
		ИндексСтроки = 0;
	Иначе
		ИндексСтроки = Список.Индекс(ТекущиеДанные);
	КонецЕсли;
	
	ИндексСтроки = ИндексСтроки + Движение;
	
	Если ИндексСтроки > (Список.Количество() - 1) Тогда
		ИндексСтроки = 0;
	ИначеЕсли ИндексСтроки < 0 Тогда
		ИндексСтроки = Список.Количество() - 1;
	КонецЕсли;
	
	ТекущиеДанные = Список[ИндексСтроки];
	Элементы.Список.ТекущаяСтрока = ТекущиеДанные.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьВыборСтроки()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;

	Если ТекущиеДанные = Неопределено Тогда

		Закрыть();

	Иначе

		СтруктураСтроки = Новый Структура(
			"ЧекККМ, КассаККМ, Организация"
			, ТекущиеДанные.Ссылка
			, ТекущиеДанные.КассаККМ
			, ТекущиеДанные.Организация
		);

		Закрыть(СтруктураСтроки)

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НомерЧекаПриИзменении(Элемент)
	
	ПроизвестиПоискЧекаНаСервере();
	
КонецПроцедуры

&НаСервере	//	LNK 05.02.2019 11:09:31
Процедура ПроизвестиПоискЧекаНаСервере() 

	НомерЧека = СокрЛП(НомерЧека);

	Если НЕ ПустаяСтрока(НомерЧека) Тогда

	//	Первым делом проведём контроль переданной строки, как номера чека.

		Если СтрНайти(НомерЧека, "-") = 0 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(НомерЧека) Тогда

			НомерЧека = Формат(НомерМагазина, "ЧЦ=4; ЧН=0000; ЧВН=; ЧГ=") + "-" + Формат(Число(НомерЧека), "ЧЦ=6; ЧН=000000; ЧВН=; ЧГ=");

		ИначеЕсли НЕ СтрДлина(НомерЧека) = Метаданные.Документы.ЧекККМ.ДлинаНомера Тогда

			НомерЧека = "";

		КонецЕсли;
		
		Если НЕ ПустаяСтрока(НомерЧека) Тогда

			МассивСтруктурОтбора = Новый Массив;
	
			СтруктураОтбора = ОбщегоНазначенияРТКлиентСервер.СтруктураОтбора();
			СтруктураОтбора.Поле          = "Номер";
			СтруктураОтбора.Значение      = НомерЧека;
			СтруктураОтбора.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
			СтруктураОтбора.Использование = Истина;
			МассивСтруктурОтбора.Добавить(СтруктураОтбора);

			Для каждого ЭлементСписка Из ПараметрСтруктурыОтбора Цикл

				Если НЕ (ЭлементСписка.Значение.Поле = "Дата" ИЛИ ЭлементСписка.Значение.Поле = "Номер") Тогда

					МассивСтруктурОтбора.Добавить(ЭлементСписка.Значение);

				КонецЕсли;

			КонецЦикла;

			ЗаполнитьСписокВыбора(МассивСтруктурОтбора);

			Если Список.Количество() = 0 Тогда

				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСписокПуст;

			Иначе

				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОбщая;

			КонецЕсли;

		Иначе

			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСписокПуст;

		КонецЕсли;

	Иначе

		ЗаполнитьСписокВыбора(ПараметрСтруктурыОтбора.ВыгрузитьЗначения());
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОбщая;

	КонецЕсли;

КонецПроцедуры





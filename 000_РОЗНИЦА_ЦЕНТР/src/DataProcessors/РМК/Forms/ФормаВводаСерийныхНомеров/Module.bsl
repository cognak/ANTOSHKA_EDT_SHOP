///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ЗаполнитьСписокВыбора(МассивСерийныхНомеров)
	
	Для Каждого ТекСерийныйНомер Из МассивСерийныхНомеров Цикл
		Список.Добавить().СерийныйНомер = ТекСерийныйНомер;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Номенклатура = Параметры.Номенклатура;
	
	// +HVOYA. 25.08.2016 12:17:16, Львова Е.А.
	Если Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.СкидочныйКупон Тогда
	    Заголовок = "Ввести купони для знижок для номенклатури «" + Параметры.ПредставлениеНоменклатуры + "»";
		Элементы.СерийныйНомер.Заголовок = "Номер купона знижок";
	КонецЕсли;
	// -HVOYA. 25.08.2016 12:17:20, Львова Е.А.
	
	// + HVOYA 30.11.2016 19:17:32, Латышев А.А.
	Если Параметры.УдалениеСертификата Тогда
		Элементы.КнопкаЗакрыть.Доступность = Ложь;
		Элементы.КомандаДобавить.Доступность = Ложь;
		Элементы.СерийныйНомер.Заголовок = "Видалити зайвий сертифікат";
	КонецЕсли;
	// - HVOYA 30.11.2016 19:17:32, Латышев А.А. 
	
	ЗаполнитьСписокВыбора(Параметры.МассивСерийныхНомеров)
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаВниз(Команда)
	
	ПередвинутьПозицию(1)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВверх(Команда)
	
	ПередвинутьПозицию(-1)
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	МассивСерийныхНомеров = Новый Массив;
	Для Каждого ТекСерийныйНомер Из Список Цикл
		Если ЗначениеЗаполнено(ТекСерийныйНомер.СерийныйНомер) Тогда
			МассивСерийныхНомеров.Добавить(ТекСерийныйНомер.СерийныйНомер);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивСерийныхНомеров.Количество() > 0 Тогда
		Закрыть(МассивСерийныхНомеров);
	Иначе
		Закрыть(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаДобавить(Команда)
	
	ТекущаяСтрока = Список.Добавить();
	
	ТекущийЭлемент = Элементы.Список;
	Элементы.Список.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
	Элементы.Список.ТекущийЭлемент = Элементы.СерийныйНомер;
	Элементы.Список.ИзменитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалить(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если Не ТекущиеДанные = Неопределено Тогда
		
		Список.Удалить(ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерийныйНомерПриИзменении(Элемент)
	
	Элементы.Список.ЗакончитьРедактированиеСтроки(Ложь);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Передвинуть позицию в списке
//
// Параметры:
// Движение = 1 (вниз) или -1 (вверх)
// 
&НаКлиенте
Процедура ПередвинутьПозицию(Движение)
	// Вставить содержимое обработчика.
	Если Список.Количество() < 2 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено  Тогда
		ИндексСтроки = 0;
	Иначе
		ИндексСтроки = Список.Индекс(ТекущиеДанные);
	КонецЕсли;
	
	ИндексСтроки = ИндексСтроки + Движение;
	
	Если ИндексСтроки > (Список.Количество() - 1) Тогда
		ИндексСтроки = 0;
	ИначеЕсли ИндексСтроки < 0 Тогда
		ИндексСтроки = Список.Количество() - 1;
	КонецЕсли;
	
	ТекущиеДанные = Список[ИндексСтроки];
	Элементы.Список.ТекущаяСтрока = ТекущиеДанные.ПолучитьИдентификатор();
	
КонецПроцедуры







#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

	ОграничитьОтгрузкуЗаказа = РозничныеПродажиСервер.ОграничитьОтгрузкуРеализованногоЗаказаПокупателя(Параметры.Магазин);

	УстановитьПараметрыДинамическогоСписка(Список, ПоказатьВсеЗаказы, ТолькоДоставкаОплачена, УказанаСуммаДоставки);

КонецПроцедуры

&НаКлиенте	//	LNK 04.10.2022 05:40:18
Процедура ПриОткрытии(Отказ)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличногоПоляСписок

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)

	РеквизитыВыбора = ПолучитьДанныеЗаказаПокупателя(Значение);

	Если РеквизитыВыбора.СтатусОплаты = ПредопределенноеЗначение("Перечисление.СтатусОплаты.НеОплачен")
	И	 РеквизитыВыбора.ТипДоставки = ПредопределенноеЗначение("Перечисление.ТипДоставкиЗаказПокупателя.Самовывоз")	Тогда
	//	МИШИНСКИЙ:	2. Заказы не оплаченные на сайте для самовывоза из магазина. Чеки по этим заказам печатает магазин.
	//				В интернет-магазине никаких чеков быть не должно.
	//				Контроль и запрет на печать чеков в интернет-магазине.

		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(
			  "Заказ No." + СокрЛП(РеквизитыВыбора.Номер) + " от " + Формат(РеквизитыВыбора.Дата, "ДЛФ=D")
			, "Чек по этому заказу может быть оформлен только в физическом магазине!"
			,
			, ЭтотОбъект
		);
		СтандартнаяОбработка = Ложь;

	ИначеЕсли ОграничитьОтгрузкуЗаказа И РеквизитыВыбора.Отгружен = Истина Тогда	//	Определяется в "УчетнаяПолитикаМагазинов"

		ОтветПользователя = ОбщегоНазначенияРТКлиент.ВывестиВопросДляРМК(
			  "Заказ No." + СокрЛП(РеквизитыВыбора.Номер) + " от " + Формат(РеквизитыВыбора.Дата, "ДЛФ=D")
			, "Выбранный заказ уже отгружен «" + РеквизитыВыбора.ОтгруженПредставление + "»
			  |Вы уверены, что хотите оформить повторную отгрузку?
			  |Подтвердите .."
		);

		Если НЕ ВРег(ОтветПользователя) = "ДА" Тогда

			СтандартнаяОбработка = Ложь;

		КонецЕсли;

	КонецЕсли;

	Если СтандартнаяОбработка Тогда

		Закрыть(РеквизитыВыбора);

	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста	//	LNK 21.11.2021 05:14:45
Функция ПолучитьДанныеЗаказаПокупателя(Значение)

	Возврат Документы.ЗаказПокупателя.РеквизитыДанныхВыбора(Значение);

КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте	//	LNK 29.07.2022 10:18:02
Процедура КомандаПоказатьВсеЗаказы(Команда)

	ПоказатьВсеЗаказы = НЕ ПоказатьВсеЗаказы;

	КомандыОтборовОбщиеКлиент();

КонецПроцедуры

&НаКлиенте	//	LNK 04.10.2022 05:35:51
Процедура КомандаДоставкаОплачена(Команда)

	ТолькоДоставкаОплачена = НЕ ТолькоДоставкаОплачена;

	КомандыОтборовОбщиеКлиент();

КонецПроцедуры

&НаКлиенте	//	LNK 04.10.2022 08:45:17
Процедура КомандаУказанаСуммаДоставки(Команда)

	УказанаСуммаДоставки = НЕ УказанаСуммаДоставки;

	КомандыОтборовОбщиеКлиент();

КонецПроцедуры

&НаКлиенте	//	LNK 04.10.2022 08:47:09
Процедура КомандыОтборовОбщиеКлиент()

	УстановитьПараметрыДинамическогоСписка(Список, ПоказатьВсеЗаказы, ТолькоДоставкаОплачена, УказанаСуммаДоставки);

	УстановитьОформлениеЭлементов();
	Элементы.Список.Обновить();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере	//	LNK 04.10.2022 05:41:06
Процедура УстановитьОформлениеЭлементов()

	Если ПоказатьВсеЗаказы Тогда

		Команды.КомандаПоказатьВсеЗаказы.Картинка  = БиблиотекаКартинок.ФлагУстановлен;
		Команды.КомандаПоказатьВсеЗаказы.Заголовок = "Только проведенные";
		Команды.КомандаПоказатьВсеЗаказы.Подсказка = "Показаны только проведенные заказы";

	Иначе

		Команды.КомандаПоказатьВсеЗаказы.Картинка  = БиблиотекаКартинок.ФлагНеУстановлен;
		Команды.КомандаПоказатьВсеЗаказы.Заголовок = "Все заказы";
		Команды.КомандаПоказатьВсеЗаказы.Подсказка = "Показаны все заказы, даже помеченные к удалению";

	КонецЕсли;

	Если ТолькоДоставкаОплачена Тогда

		Команды.КомандаДоставкаОплачена.Картинка  = БиблиотекаКартинок.ВыполнениеЗавершено32;
		Команды.КомандаДоставкаОплачена.Заголовок = "Доставка оплачена";
		Команды.КомандаДоставкаОплачена.Подсказка = "Показаны только с оплаченной доставкой";

	Иначе

		Команды.КомандаДоставкаОплачена.Картинка = БиблиотекаКартинок.ВыполнениеНеНачалось32;
		Команды.КомандаДоставкаОплачена.Заголовок = "Показано всё";
		Команды.КомандаДоставкаОплачена.Подсказка = "Показаны все заказы, независимо от оплаты доставки";

	КонецЕсли;

	Если УказанаСуммаДоставки Тогда

		Команды.КомандаУказанаСуммаДоставки.Картинка  = БиблиотекаКартинок.Маркер_Квадрат_Средний;
		Команды.КомандаУказанаСуммаДоставки.Заголовок = "Указана сумма доставки";
		Команды.КомандаУказанаСуммаДоставки.Подсказка = "Заказы с указанной суммой доставки (обязательства покупателя)";

	Иначе

		Команды.КомандаУказанаСуммаДоставки.Картинка  = БиблиотекаКартинок.Маркер_Точка;
		Команды.КомандаУказанаСуммаДоставки.Заголовок = "Показано всё";
		Команды.КомандаУказанаСуммаДоставки.Подсказка = "Показаны все заказы, независимо от указания сумм доставки";

	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста	//	LNK 29.07.2022 10:12:40
Процедура УстановитьПараметрыДинамическогоСписка(РеквизитСписок, ПоказатьВсеЗаказы, ТолькоДоставкаОплачена, УказанаСуммаДоставки)

	РеквизитСписок.Параметры.УстановитьЗначениеПараметра("ПоказатьВсеЗаказы"		, ПоказатьВсеЗаказы);
	РеквизитСписок.Параметры.УстановитьЗначениеПараметра("ТолькоДоставкаОплачена"	, ТолькоДоставкаОплачена);
	РеквизитСписок.Параметры.УстановитьЗначениеПараметра("УказанаСуммаДоставки"		, УказанаСуммаДоставки);

КонецПроцедуры
	
#КонецОбласти














///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДополнительныеКолонкиНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	
	ИспользоватьЦеновыеГруппы = ПолучитьФункциональнуюОпцию("ИспользоватьЦеновыеГруппы");
	
	Если НЕ ИспользоватьЦеновыеГруппы Тогда
		
		Элементы.ДобавитьПоЦеновымГруппам.Видимость = Ложь;
		
	КонецЕсли;
	
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	
	Если НЕ ИспользоватьХарактеристикиНоменклатуры Тогда
		
		Элементы.ТаблицаЦенХарактеристика.Видимость = Ложь;

	КонецЕсли;
	
	ИспользоватьУпаковкиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	
	Если НЕ ИспользоватьУпаковкиНоменклатуры Тогда
		
		Элементы.ТаблицаЦенУпаковка.Видимость = Ложь;
		
	КонецЕсли;
		
	СтруктураОбъектаЦенообразования                = ЦенообразованиеПереопределяемый.ИспользуемыйОбъектЦенообразования();
	ИмяОбъектаЦенообразования                      = СтруктураОбъектаЦенообразования.ПредставлениеОбъекта;
	МассивОграниченияТипов                         = Новый Массив;
	МассивОграниченияТипов.Добавить(ТипЗнч(СтруктураОбъектаЦенообразования.Ссылка));
	Элементы.ОбъектЦенообразования.ОграничениеТипа = Новый ОписаниеТипов(МассивОграниченияТипов);
	Элементы.ОбъектЦенообразования.Заголовок       = ИмяОбъектаЦенообразования;
	
	Объект.ДатаАнализа   = ТекущаяДатаСеанса();	
	Объект.Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		Если ТекущееДействиеЗаполнения = "ДобавитьПоЦеновымГруппам" Тогда
			
			ЗаполнитьПоЦеновымГруппам(ВыбранноеЗначение);
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Заполнение:'"),
				,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Добавлено %1 строк по ценовым группам в таблицу'"),
				КоличествоСтрок),
				БиблиотекаКартинок.Информация32);
			    			
		ИначеЕсли ТекущееДействиеЗаполнения = "ДобавитьПоГруппамНоменклатуры" Тогда
			
			ЗаполнитьПоГруппамНоменклатуры(ВыбранноеЗначение);
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Заполнение:'"),
				,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Добавлено %1 строк по группам номенклатуры в таблицу'"),
				КоличествоСтрок),
				БиблиотекаКартинок.Информация32);
									
		ИначеЕсли ТекущееДействиеЗаполнения = "ДобавитьПоДокументуУстановкиЦен" Тогда
			
			ЗаполнитьПоДокументуУстановкиЦен(ВыбранноеЗначение);
			ПоказатьОповещениеПользователя(
				НСтр("ru = 'Заполнение:'"),
				,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Добавлено %1 строк по документу %2 в таблицу'"),
				КоличествоСтрок,
				ВыбранноеЗначение),
				БиблиотекаКартинок.Информация32);
                			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Объект.ОбъектЦенообразования = Настройки.Получить("Объект.ОбъектЦенообразования");
	Если ЗначениеЗаполнено(Объект.ОбъектЦенообразования) Тогда
		
		ИспользоватьПрименение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ОбъектЦенообразования, "ИспользоватьПрименениеЦен");
		
		Если ИспользоватьПрименение Тогда
			УстановитьПравилоЦенообразования();
			ТекущееДействиеЗаполнения = "ДобавитьПоНазначеннымЦенам";
			ЗаполнитьПоНазначеннымЦенам();
		Иначе
			Объект.ОбъектЦенообразования = Справочники.Магазины.ПустаяСсылка();
			Настройки["Объект.ОбъектЦенообразования"] = Объект.ОбъектЦенообразования;
		КонецЕсли;
				
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ДатаАнализаПриИзменении(Элемент)
	
	ОчиститьТабличнуюЧасть(Ложь);
	
	Если ЗначениеЗаполнено(Объект.ОбъектЦенообразования)
		И ЗначениеЗаполнено(Объект.ДатаАнализа) Тогда

		ТекущееДействиеЗаполнения = "ДобавитьПоНазначеннымЦенам";
		ЗаполнитьПоНазначеннымЦенам();
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектЦенообразованияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ТаблицаЦен.ПолучитьЭлементы().Количество() > 0 Тогда
		Ответ = Вопрос(НСтр("ru = 'Табличная часть будет очищена.
			|Продолжить редактирование?'"), РежимДиалогаВопрос.ДаНет); 
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ОбъектЦенообразованияПриИзменении(Элемент)
	
	ОчиститьТабличнуюЧасть(Ложь);
	
	Если ЗначениеЗаполнено(Объект.ОбъектЦенообразования)
		И ЗначениеЗаполнено(Объект.ДатаАнализа) Тогда
		
		УстановитьПравилоЦенообразования(Истина);
		
	Иначе
		
		УстановитьПравилоЦенообразования();
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "ТаблицаЦен"

&НаКлиенте
Процедура ТаблицаЦенПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЦенПослеУдаления(Элемент)
	
	ЭлементыНоменклатура = ТаблицаЦен.ПолучитьЭлементы();
	Инд = ЭлементыНоменклатура.Количество();
	Если ИспользоватьХарактеристикиНоменклатуры Тогда
		
		Для каждого ЭлементНоменклатура Из ЭлементыНоменклатура Цикл
			
			ЭлементыХарактеристики = ЭлементНоменклатура.ПолучитьЭлементы();
			Инд = Инд + ЭлементыХарактеристики.Количество();
			
		КонецЦикла;	
		
		КоличествоСтрокКПрименению = Инд;
		
	Иначе
		
		КоличествоСтрокКПрименению = ЭлементыНоменклатура.Количество()-1;
		
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ДобавитьПоГруппамНоменклатуры(Команда)
	
	Если НЕ ПроверкаПередЗаполнениемНаКлиенте() Тогда 
		
		Возврат; 
		
	КонецЕсли;
	
	ТекущееДействиеЗаполнения = "ДобавитьПоГруппамНоменклатуры";
	ОткрытьФормуМодально("Справочник.Номенклатура.ФормаВыбораГруппы", Новый Структура("МножественныйВыбор", Истина), ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоДокументуУстановкиЦен(Команда)
	
	Если НЕ ПроверкаПередЗаполнениемНаКлиенте() Тогда 
		
		Возврат; 
		
	КонецЕсли;
	
	ТекущееДействиеЗаполнения = "ДобавитьПоДокументуУстановкиЦен";
	ОткрытьФормуМодально("Документ.УстановкаЦенНоменклатуры.ФормаВыбора",,ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоНазначеннымЦенам(Команда)
	
	Если НЕ ПроверкаПередЗаполнениемНаКлиенте() Тогда 
		
		Возврат; 
		
	КонецЕсли;
		
	ТекущееДействиеЗаполнения = "ДобавитьПоНазначеннымЦенам";
		
	ЗаполнитьПоНазначеннымЦенам();
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Заполнение:'"),
		,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Заполнено %1 строк по ценам номенклатуры в таблице'"),
		КоличествоСтрок),
		БиблиотекаКартинок.Информация32);

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоОтбору(Команда)
	
	Если НЕ ПроверкаПередЗаполнениемНаКлиенте() Тогда 
		
		Возврат; 
		
	КонецЕсли;

	АдресВоВременномХранилище = ОткрытьФормуМодально("Обработка.ПодборТоваровПоОтбору.Форма.Форма", , ЭтотОбъект);
	
	Если  АдресВоВременномХранилище <> Неопределено Тогда
		
		ТекущееДействиеЗаполнения = "ДобавитьПоОтбору";
		ЗаполнитьПоОтбору(АдресВоВременномХранилище);
				
		ПоказатьОповещениеПользователя(
			НСтр("ru = 'Заполнение:'"),
			,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Добавлено %1 строк по отбору в таблице'"),
			КоличествоСтрок),
			БиблиотекаКартинок.Информация32);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоЦеновымГруппам(Команда)
	
	Если НЕ ПроверкаПередЗаполнениемНаКлиенте() Тогда 
		
		Возврат; 
		
	КонецЕсли;
	
	Если ЦеновыеГруппы.Количество() = 0 Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'Нет ценовых групп для отбора'"));
		Возврат;
		
	КонецЕсли;	
	
	ТекущееДействиеЗаполнения = "ДобавитьПоЦеновымГруппам";
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Ссылка", ЦеновыеГруппы.ВыгрузитьЗначения());
	ОткрытьФормуМодально("Справочник.ЦеновыеГруппы.ФормаВыбора", Новый Структура("МножественныйВыбор, Отбор", Истина, СтруктураОтбора), ЭтотОбъект);
		    
КонецПроцедуры

// ЗАПОЛНЕНИЕ ТАБЛИЦЫ ЦЕН

&НаСервере
Процедура ЗаполнитьПоНазначеннымЦенам()
	
	Если ТекущееДействиеЗаполнения = "ДобавитьПоНазначеннымЦенам" Тогда
		
		Запрос = ИнициализироватьЗапрос();
		Запрос.Текст = ТекстЗапросаПоВТТаблицыЦен();
		Запрос.Текст = Запрос.Текст + ТекстЗапросаПоВТПравилаЦенообразования();
		Если ТипЗнч(Объект.ОбъектЦенообразования) = Тип("СправочникСсылка.Склады") Тогда
			Магазин = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ОбъектЦенообразования, "Магазин");
			ИспользоватьАссортимент = АссортиментСервер.ПолучитьФункциональнуюОпциюКонтроляАссортимента(Магазин);
		Иначе
			ИспользоватьАссортимент = АссортиментСервер.ПолучитьФункциональнуюОпциюКонтроляАссортимента(Объект.ОбъектЦенообразования);
		КонецЕсли;
		
		Если ИспользоватьАссортимент Тогда //Запросы дополняются данными по ассортименту
			Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Ассортимент.Номенклатура КАК Номенклатура,
			|	Ассортимент.ВидЦен КАК ВидЦен
			|ПОМЕСТИТЬ втАссортиментСВидомЦен
			|ИЗ
			|	РегистрСведений.Ассортимент.СрезПоследних(КОНЕЦПЕРИОДА(&Дата, ДЕНЬ), ОбъектПланирования = &ФорматОбъектаЦенообразования) КАК Ассортимент
			|	ГДЕ (Ассортимент.РазрешеныЗакупки
			|		ИЛИ Ассортимент.РазрешеныПродажи)
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	ВидЦен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	ВложенныйЗапрос.Характеристика КАК Характеристика,
			|	ВложенныйЗапрос.Упаковка КАК Упаковка,
			|	ВложенныйЗапрос.Цена КАК Цена0,
			|	ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) КАК Цена1,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) > 0
			|			ТОГДА (ВложенныйЗапрос.Цена / ДействующиеЦеныНоменклатуры.Цена - 1) * 100
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ОтношениеЦенВПроцентах,
			|	ВложенныйЗапрос.ВидЦены КАК ВидЦены,
			|	ВложенныйЗапрос.ДатаУстановки КАК ДатаУстановки,
			|	ДействующиеЦеныНоменклатуры.Период КАК ДатаПрименения
			|ПОМЕСТИТЬ ИтоговаяТаблица
			|ИЗ
			|	(ВЫБРАТЬ
			|		АссортиментСВидомЦен.Номенклатура КАК Номенклатура,
			|		ЦеныНоменклатурыПоАссортименту.Характеристика КАК Характеристика,
			|		ЦеныНоменклатурыПоАссортименту.Упаковка КАК Упаковка,
			|		ЦеныНоменклатурыПоАссортименту.Период КАК ДатаУстановки,
			|		ЦеныНоменклатурыПоАссортименту.Цена КАК Цена,
			|		ЦеныНоменклатурыПоАссортименту.ВидЦены КАК ВидЦены
			|	ИЗ
			|		втАссортиментСВидомЦен КАК АссортиментСВидомЦен
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|					&Дата,
			|					ВидЦены В
			|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|								Ц.ВидЦен
			|							ИЗ
			|								втАссортиментСВидомЦен КАК Ц)
			|						И Номенклатура В
			|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|								Т.Номенклатура
			|							ИЗ
			|								втАссортиментСВидомЦен КАК Т)) КАК ЦеныНоменклатурыПоАссортименту
			|			ПО (ЦеныНоменклатурыПоАссортименту.Номенклатура = АссортиментСВидомЦен.Номенклатура)
			|				И (ЦеныНоменклатурыПоАссортименту.ВидЦены = АссортиментСВидомЦен.ВидЦен)) КАК ВложенныйЗапрос
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&Дата, ОбъектЦенообразования = &ОбъектЦенообразования) КАК ДействующиеЦеныНоменклатуры
			|		ПО ВложенныйЗапрос.Номенклатура = ДействующиеЦеныНоменклатуры.Номенклатура
			|			И ВложенныйЗапрос.Характеристика = ДействующиеЦеныНоменклатуры.Характеристика
			|			И ВложенныйЗапрос.Упаковка = ДействующиеЦеныНоменклатуры.Упаковка
			|ГДЕ
			|	ВложенныйЗапрос.Цена <> ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.Номенклатура,
			|	ВложенныйЗапрос.Характеристика,
			|	ВложенныйЗапрос.Упаковка,
			|	ВложенныйЗапрос.Цена,
			|	ВложенныйЗапрос.ВидЦены,
			|	ВложенныйЗапрос.ДатаУстановки,
			|	ДействующиеЦеныНоменклатуры.Период,
			|	ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0),
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) > 0
			|			ТОГДА (ВложенныйЗапрос.Цена / ДействующиеЦеныНоменклатуры.Цена - 1) * 100
			|		ИНАЧЕ 0
			|	КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИтоговаяТаблица.Номенклатура КАК Номенклатура,
			|	ИтоговаяТаблица.Характеристика КАК Характеристика,
			|	ИтоговаяТаблица.Упаковка КАК Упаковка,
			|	ИтоговаяТаблица.Цена0 КАК Цена0,
			|	ИтоговаяТаблица.Цена1 КАК Цена1,
			|	ИтоговаяТаблица.ОтношениеЦенВПроцентах КАК ОтношениеЦенВПроцентах,
			|	ИтоговаяТаблица.ВидЦены КАК ВидЦены,
			|	ИтоговаяТаблица.ДатаУстановки КАК ДатаУстановки,
			|	ИтоговаяТаблица.ДатаПрименения КАК ДатаПрименения,
			|	ВЫБОР
			|		КОГДА ИтоговаяТаблица.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
			|			ТОГДА ИСТИНА
			|		КОГДА ИтоговаяТаблица.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ХарактеристикиИспользуются
			|ИЗ
			|	ИтоговаяТаблица КАК ИтоговаяТаблица
			|
			|УПОРЯДОЧИТЬ ПО
			|	Номенклатура,
			|	Характеристика
			|ИТОГИ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СправочникНоменклатура.ЦеноваяГруппа КАК ЦеноваяГруппа
			|ИЗ
			|	ИтоговаяТаблица КАК ЦеновыеГруппы
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО ЦеновыеГруппы.Номенклатура = СправочникНоменклатура.Ссылка
			|ГДЕ
			|	СправочникНоменклатура.ЦеноваяГруппа <> ЗНАЧЕНИЕ(Справочник.ЦеновыеГруппы.ПустаяСсылка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЦеноваяГруппа";
			ИндексРезультатаНоменклатуры=5;
			ИндексРезультатаЦеновыхГрупп=6;
			
		Иначе //запросы без учета ассортимента
			Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	ВложенныйЗапрос.Характеристика КАК Характеристика,
			|	ВложенныйЗапрос.Упаковка КАК Упаковка,
			|	ВложенныйЗапрос.Цена КАК Цена0,
			|	ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) КАК Цена1,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) > 0
			|			ТОГДА (ВложенныйЗапрос.Цена / ДействующиеЦеныНоменклатуры.Цена - 1) * 100
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ОтношениеЦенВПроцентах,
			|	ВложенныйЗапрос.ВидЦены КАК ВидЦены,
			|	ВложенныйЗапрос.ДатаУстановки КАК ДатаУстановки,
			|	ДействующиеЦеныНоменклатуры.Период КАК ДатаПрименения
			|ПОМЕСТИТЬ ИтоговаяТаблица
			|ИЗ
			|	(ВЫБРАТЬ
			|		ПодЗапрос.Номенклатура КАК Номенклатура,
			|		ПодЗапрос.Характеристика КАК Характеристика,
			|		ВЫБОР
			|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
			|				ТОГДА МАКСИМУМ(ПодЗапрос.УпаковкаПоЦеновымГруппам)
			|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.УпаковкаПоВидуЦен)
			|		КОНЕЦ КАК Упаковка,
			|		ВЫБОР
			|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
			|				ТОГДА МАКСИМУМ(ПодЗапрос.ДатаЦенПоЦеновымГруппам)
			|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ДатаЦенПоВидуЦен)
			|		КОНЕЦ КАК ДатаУстановки,
			|		ВЫБОР
			|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
			|				ТОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам)
			|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ЦенаПоВидуЦен)
			|		КОНЕЦ КАК Цена,
			|		ВЫБОР
			|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
			|				ТОГДА МАКСИМУМ(ПодЗапрос.ВидЦенПоЦеновымГруппам)
			|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ВидЦенПоВидуЦен)
			|		КОНЕЦ КАК ВидЦены
			|	ИЗ
			|		(ВЫБРАТЬ
			|			ЦеныНоменклатурыПоВидуЦен.Номенклатура КАК Номенклатура,
			|			ЦеныНоменклатурыПоВидуЦен.Характеристика КАК Характеристика,
			|			ЦеныНоменклатурыПоВидуЦен.Упаковка КАК УпаковкаПоВидуЦен,
			|			ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК УпаковкаПоЦеновымГруппам,
			|			ЦеныНоменклатурыПоВидуЦен.Период КАК ДатаЦенПоВидуЦен,
			|			ДАТАВРЕМЯ(1, 1, 1) КАК ДатаЦенПоЦеновымГруппам,
			|			ЦеныНоменклатурыПоВидуЦен.Цена КАК ЦенаПоВидуЦен,
			|			0 КАК ЦенаПоЦеновымГруппам,
			|			ЦеныНоменклатурыПоВидуЦен.ВидЦены КАК ВидЦенПоВидуЦен,
			|			ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка) КАК ВидЦенПоЦеновымГруппам
			|		ИЗ
			|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|					&Дата,
			|					ВидЦены В
			|							(ВЫБРАТЬ
			|								ВидЦеныПравила.ВидЦен
			|							ИЗ
			|								ВидЦеныПравила КАК ВидЦеныПравила)
			|						И (НЕ (Номенклатура, Характеристика) В
			|								(ВЫБРАТЬ
			|									Т.Номенклатура,
			|									Т.Характеристика
			|								ИЗ
			|									ТаблицаТовары КАК Т))) КАК ЦеныНоменклатурыПоВидуЦен
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			СправочникНоменклатура.Ссылка,
			|			ЦеныНоменклатурыПоЦеновымГруппам.Характеристика,
			|			ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка),
			|			ЦеныНоменклатурыПоЦеновымГруппам.Упаковка,
			|			ДАТАВРЕМЯ(1, 1, 1),
			|			ЦеныНоменклатурыПоЦеновымГруппам.Период,
			|			0,
			|			ЕСТЬNULL(ЦеныНоменклатурыПоЦеновымГруппам.Цена, 0),
			|			ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка),
			|			ЦеныНоменклатурыПоЦеновымГруппам.ВидЦены
			|		ИЗ
			|			ЦеновыеГруппыПравила КАК ЦеновыеГруппыПравила
			|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|				ПО ЦеновыеГруппыПравила.ЦеноваяГруппа = СправочникНоменклатура.ЦеноваяГруппа
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|						&Дата,
			|						ВидЦены В
			|								(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|									ЦеновыеГруппыПравила.ВидЦен
			|								ИЗ
			|									ЦеновыеГруппыПравила КАК ЦеновыеГруппыПравила)
			|							И (НЕ (Номенклатура, Характеристика) В
			|									(ВЫБРАТЬ
			|										Т.Номенклатура,
			|										Т.Характеристика
			|									ИЗ
			|										ТаблицаТовары КАК Т))) КАК ЦеныНоменклатурыПоЦеновымГруппам
			|				ПО (ЦеныНоменклатурыПоЦеновымГруппам.Номенклатура = СправочникНоменклатура.Ссылка)
			|					И (ЦеныНоменклатурыПоЦеновымГруппам.ВидЦены = ЦеновыеГруппыПравила.ВидЦен)) КАК ПодЗапрос
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ПодЗапрос.Номенклатура,
			|		ПодЗапрос.Характеристика) КАК ВложенныйЗапрос
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&Дата, ОбъектЦенообразования = &ОбъектЦенообразования) КАК ДействующиеЦеныНоменклатуры
			|		ПО ВложенныйЗапрос.Номенклатура = ДействующиеЦеныНоменклатуры.Номенклатура
			|			И ВложенныйЗапрос.Характеристика = ДействующиеЦеныНоменклатуры.Характеристика
			|			И ВложенныйЗапрос.Упаковка = ДействующиеЦеныНоменклатуры.Упаковка
			|ГДЕ
			|	ВложенныйЗапрос.Цена <> ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.Номенклатура,
			|	ВложенныйЗапрос.Характеристика,
			|	ВложенныйЗапрос.Упаковка,
			|	ВложенныйЗапрос.Цена,
			|	ВложенныйЗапрос.ВидЦены,
			|	ВложенныйЗапрос.ДатаУстановки,
			|	ДействующиеЦеныНоменклатуры.Период,
			|	ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0),
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) > 0
			|			ТОГДА (ВложенныйЗапрос.Цена / ДействующиеЦеныНоменклатуры.Цена - 1) * 100
			|		ИНАЧЕ 0
			|	КОНЕЦ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИтоговаяТаблица.Номенклатура КАК Номенклатура,
			|	ИтоговаяТаблица.Характеристика КАК Характеристика,
			|	ИтоговаяТаблица.Упаковка КАК Упаковка,
			|	ИтоговаяТаблица.Цена0 КАК Цена0,
			|	ИтоговаяТаблица.Цена1 КАК Цена1,
			|	ИтоговаяТаблица.ОтношениеЦенВПроцентах КАК ОтношениеЦенВПроцентах,
			|	ИтоговаяТаблица.ВидЦены КАК ВидЦены,
			|	ИтоговаяТаблица.ДатаУстановки КАК ДатаУстановки,
			|	ИтоговаяТаблица.ДатаПрименения КАК ДатаПрименения,
			|	ВЫБОР
			|		КОГДА ИтоговаяТаблица.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
			|			ТОГДА ИСТИНА
			|		КОГДА ИтоговаяТаблица.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ХарактеристикиИспользуются
			|ИЗ
			|	ИтоговаяТаблица КАК ИтоговаяТаблица
			|
			|УПОРЯДОЧИТЬ ПО
			|	Номенклатура,
			|	Характеристика
			|ИТОГИ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	СправочникНоменклатура.ЦеноваяГруппа КАК ЦеноваяГруппа
			|ИЗ
			|	ИтоговаяТаблица КАК ЦеновыеГруппы
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО ЦеновыеГруппы.Номенклатура = СправочникНоменклатура.Ссылка
			|ГДЕ
			|	СправочникНоменклатура.ЦеноваяГруппа <> ЗНАЧЕНИЕ(Справочник.ЦеновыеГруппы.ПустаяСсылка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЦеноваяГруппа";
			ИндексРезультатаНоменклатуры=4;
			ИндексРезультатаЦеновыхГрупп=5;
		КонецЕсли;
				
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		ВыборкаНоменклатура = РезультатЗапроса[ИндексРезультатаНоменклатуры].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ЗаполнитьДобавитьТаблицуЦенПоЗапросу(ВыборкаНоменклатура);
		ЦеновыеГруппы.ЗагрузитьЗначения(РезультатЗапроса[ИндексРезультатаЦеновыхГрупп].Выгрузить().ВыгрузитьКолонку("ЦеноваяГруппа"));
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЦенников(Команда)
	
	СтруктураПараметров = СтруктураПараметровПечатиЦенников();
	
	Если СтруктураПараметров.ПараметрыПодготовлены Тогда
		
		ЦенообразованиеКлиентПереопределяемый.ПечатьЭтикетокПрименениеЦенНоменклатуры(СтруктураПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЭтикеток(Команда)
	
	СтруктураПараметров = СтруктураПараметровПечатиЭтикеток();
	
	Если СтруктураПараметров.ПараметрыПодготовлены Тогда
		
		ЦенообразованиеКлиентПереопределяемый.ПечатьЭтикетокПрименениеЦенНоменклатуры(СтруктураПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьЦены(Команда)
	
	Отказ = Ложь;
	
	Отказ = НЕ ПроверкаПередЗаполнениемНаКлиенте(); 
	
	Если НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
		
		ТекстОшибки = НСтр("ru='Поле ""Ответственный"" не заполнено'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Ответственный","Объект",Отказ);
		
	КонецЕсли;
		
	Если ТаблицаЦен.ПолучитьЭлементы().Количество() = 0 Тогда
		
		ТекстОшибки = НСтр("ru='Нет строк в табличной части для применения цен'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"ТаблицаЦен",,Отказ);
		
	КонецЕсли;
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СформированныйДокумент =  СформироватьДокументПримененияЦенНоменклатуры();
	
	Если НЕ СформированныйДокумент.Пустая() Тогда
		
		ПоказатьОповещениеПользователя("Создан документ:",ПолучитьНавигационнуюСсылку(СформированныйДокумент),СформированныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьДобавитьТаблицуЦенПоЗапросу(ВыборкаНоменклатура)
	
	ДеревоЦенЗначение = РеквизитФормыВЗначение("ТаблицаЦен", Тип("ДеревоЗначений"));
	КоличествоСтрок = 0;
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		ПараметрыОтбора = Новый Структура("Номенклатура", ВыборкаНоменклатура.Номенклатура);
		НайденныеСтроки = ДеревоЦенЗначение.Строки.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			
			ЭлементНоменклатура = НайденныеСтроки[0];
			
		Иначе
			
			ЭлементНоменклатура = ДеревоЦенЗначение.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(ЭлементНоменклатура, ВыборкаНоменклатура);
			ЗаполнитьИндексКартинкиСтрокиДереваЦен(ЭлементНоменклатура);
			КоличествоСтрок = КоличествоСтрок + 1;
			
		КонецЕсли;
		
		ВыборкаХарактеристики = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаХарактеристики.Следующий() Цикл
			
			Если ЗначениеЗаполнено(ВыборкаХарактеристики.Характеристика) Тогда
				
				Если ИспользоватьХарактеристикиНоменклатуры Тогда
					
					ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика", ВыборкаХарактеристики.Номенклатура, ВыборкаХарактеристики.Характеристика);
					НайденныеСтроки = ЭлементНоменклатура.Строки.НайтиСтроки(ПараметрыОтбора);
					
					Если НайденныеСтроки.Количество() > 0 Тогда
						
						ЭлементХарактеристика = НайденныеСтроки[0];
						
					Иначе
						
						ЭлементХарактеристика = ЭлементНоменклатура.Строки.Добавить();
						ЗаполнитьЗначенияСвойств(ЭлементХарактеристика, ВыборкаХарактеристики);
						ЗаполнитьИндексКартинкиСтрокиДереваЦен(ЭлементХарактеристика);
						КоличествоСтрок = КоличествоСтрок + 1; 
						
					КонецЕсли;
					
				КонецЕсли;
				
			Иначе
				
				ЗаполнитьЗначенияСвойств(ЭлементНоменклатура, ВыборкаХарактеристики);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоЦенЗначение, "ТаблицаЦен");	
	ОбновитьКоличествоСтрок();	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоГруппамНоменклатуры(ОграниченияЗапроса)
	
	Если ТекущееДействиеЗаполнения = "ДобавитьПоГруппамНоменклатуры"	Тогда
		
		Запрос = ИнициализироватьЗапрос();
		Запрос.УстановитьПараметр("ОграниченияЗапроса", ОграниченияЗапроса);
		Запрос.Текст = ТекстЗапросаПоВТТаблицыЦен();	
		Запрос.Текст = Запрос.Текст + ТекстЗапросаПоВТПравилаЦенообразования();
		Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Упаковка КАК Упаковка,
		|	ВложенныйЗапрос.Цена КАК Цена0,
		|	ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) КАК Цена1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) > 0
		|			ТОГДА (ВложенныйЗапрос.Цена / ДействующиеЦеныНоменклатуры.Цена - 1) * 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОтношениеЦенВПроцентах,
		|	ВложенныйЗапрос.ВидЦены КАК ВидЦены,
		|	ВложенныйЗапрос.ДатаУстановки КАК ДатаУстановки,
		|	ДействующиеЦеныНоменклатуры.Период КАК ДатаПрименения,
		|	ВЫБОР
		|		КОГДА ВложенныйЗапрос.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
		|			ТОГДА ИСТИНА
		|		КОГДА ВложенныйЗапрос.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ХарактеристикиИспользуются
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПодЗапрос.Номенклатура КАК Номенклатура,
		|		ПодЗапрос.Характеристика КАК Характеристика,
		|		ВЫБОР
		|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
		|				ТОГДА МАКСИМУМ(ПодЗапрос.УпаковкаПоЦеновымГруппам)
		|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.УпаковкаПоВидуЦен)
		|		КОНЕЦ КАК Упаковка,
		|		ВЫБОР
		|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
		|				ТОГДА МАКСИМУМ(ПодЗапрос.ДатаЦенПоЦеновымГруппам)
		|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ДатаЦенПоВидуЦен)
		|		КОНЕЦ КАК ДатаУстановки,
		|		ВЫБОР
		|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
		|				ТОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам)
		|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ЦенаПоВидуЦен)
		|		КОНЕЦ КАК Цена,
		|		ВЫБОР
		|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
		|				ТОГДА МАКСИМУМ(ПодЗапрос.ВидЦенПоЦеновымГруппам)
		|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ВидЦенПоВидуЦен)
		|		КОНЕЦ КАК ВидЦены
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ЦеныНоменклатурыПоВидуЦен.Номенклатура КАК Номенклатура,
		|			ЦеныНоменклатурыПоВидуЦен.Характеристика КАК Характеристика,
		|			ЦеныНоменклатурыПоВидуЦен.Упаковка КАК УпаковкаПоВидуЦен,
		|			ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК УпаковкаПоЦеновымГруппам,
		|			ЦеныНоменклатурыПоВидуЦен.Период КАК ДатаЦенПоВидуЦен,
		|			ДАТАВРЕМЯ(1, 1, 1) КАК ДатаЦенПоЦеновымГруппам,
		|			ЦеныНоменклатурыПоВидуЦен.Цена КАК ЦенаПоВидуЦен,
		|			0 КАК ЦенаПоЦеновымГруппам,
		|			ЦеныНоменклатурыПоВидуЦен.ВидЦены КАК ВидЦенПоВидуЦен,
		|			ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка) КАК ВидЦенПоЦеновымГруппам
		|		ИЗ
		|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|					&Дата,
		|					ВидЦены В
		|							(ВЫБРАТЬ
		|								ВидЦеныПравила.ВидЦен
		|							ИЗ
		|								ВидЦеныПравила КАК ВидЦеныПравила)
		|						И (НЕ (Номенклатура, Характеристика) В
		|								(ВЫБРАТЬ
		|									Т.Номенклатура,
		|									Т.Характеристика
		|								ИЗ
		|									ТаблицаТовары КАК Т))) КАК ЦеныНоменклатурыПоВидуЦен
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СправочникНоменклатура.Ссылка,
		|			ЦеныНоменклатурыПоЦеновымГруппам.Характеристика,
		|			ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка),
		|			ЦеныНоменклатурыПоЦеновымГруппам.Упаковка,
		|			ДАТАВРЕМЯ(1, 1, 1),
		|			ЦеныНоменклатурыПоЦеновымГруппам.Период,
		|			0,
		|			ЕСТЬNULL(ЦеныНоменклатурыПоЦеновымГруппам.Цена, 0),
		|			ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка),
		|			ЦеныНоменклатурыПоЦеновымГруппам.ВидЦены
		|		ИЗ
		|			ЦеновыеГруппыПравила КАК ЦеновыеГруппыПравила
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|				ПО ЦеновыеГруппыПравила.ЦеноваяГруппа = СправочникНоменклатура.ЦеноваяГруппа
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|						&Дата,
		|						ВидЦены В
		|								(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|									ЦеновыеГруппыПравила.ВидЦен
		|								ИЗ
		|									ЦеновыеГруппыПравила КАК ЦеновыеГруппыПравила)
		|							И (НЕ (Номенклатура, Характеристика) В
		|									(ВЫБРАТЬ
		|										Т.Номенклатура,
		|										Т.Характеристика
		|									ИЗ
		|										ТаблицаТовары КАК Т))) КАК ЦеныНоменклатурыПоЦеновымГруппам
		|				ПО (ЦеныНоменклатурыПоЦеновымГруппам.Номенклатура = СправочникНоменклатура.Ссылка)
		|					И (ЦеныНоменклатурыПоЦеновымГруппам.ВидЦены = ЦеновыеГруппыПравила.ВидЦен)) КАК ПодЗапрос
		|	ГДЕ
		|		ПодЗапрос.Номенклатура В ИЕРАРХИИ(&ОграниченияЗапроса)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПодЗапрос.Номенклатура,
		|		ПодЗапрос.Характеристика) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&Дата, ОбъектЦенообразования = &ОбъектЦенообразования) КАК ДействующиеЦеныНоменклатуры
		|		ПО ВложенныйЗапрос.Номенклатура = ДействующиеЦеныНоменклатуры.Номенклатура
		|			И ВложенныйЗапрос.Характеристика = ДействующиеЦеныНоменклатуры.Характеристика
		|			И ВложенныйЗапрос.Упаковка = ДействующиеЦеныНоменклатуры.Упаковка
		|ГДЕ
		|	ВложенныйЗапрос.Цена <> ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	Характеристика
		|ИТОГИ ПО
		|	Номенклатура";
		ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ЗаполнитьДобавитьТаблицуЦенПоЗапросу(ВыборкаНоменклатура);	
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДокументуУстановкиЦен(ОграниченияЗапроса)
	
	Если ТекущееДействиеЗаполнения = "ДобавитьПоДокументуУстановкиЦен" Тогда
		
		Запрос = ИнициализироватьЗапрос();		
		Запрос.УстановитьПараметр("ОграниченияЗапроса", ОграниченияЗапроса);
		Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫРАЗИТЬ(ПодЗапрос.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
		|	ПодЗапрос.Характеристика КАК Характеристика,
		|	ПодЗапрос.Упаковка КАК Упаковка,
		|	ПодЗапрос.ВидЦен КАК ВидЦен,
		|	ПодЗапрос.Цена КАК Цена,
		|	ПодЗапрос.Номенклатура.ЦеноваяГруппа КАК ЦеноваяГруппа,
		|	ДокументыУстановкиЦен.Дата КАК Дата
		|ПОМЕСТИТЬ ТаблицаПодбора
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Номенклатура КАК Номенклатура,
		|		Товары.Характеристика КАК Характеристика,
		|		Товары.Упаковка КАК Упаковка,
		|		Товары.ВидЦены КАК ВидЦен,
		|		Товары.Цена КАК Цена,
		|		Товары.Номенклатура.ЦеноваяГруппа КАК ЦеноваяГруппа,
		|		Товары.Ссылка КАК УстановкаЦен
		|	ИЗ
		|		Документ.УстановкаЦенНоменклатуры.Товары КАК Товары
		|	ГДЕ
		|		Товары.Ссылка = &ОграниченияЗапроса) КАК ПодЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УстановкаЦенНоменклатуры КАК ДокументыУстановкиЦен
		|		ПО ПодЗапрос.УстановкаЦен = ДокументыУстановкиЦен.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	ВидЦен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаЦен.Номенклатура КАК Номенклатура,
		|	ТаблицаЦен.Характеристика КАК Характеристика,
		|	ТаблицаЦен.Упаковка КАК Упаковка
		|ПОМЕСТИТЬ ТаблицаЦен
		|ИЗ
		|	&ТаблицаЦен КАК ТаблицаЦен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПодбора.Номенклатура КАК Номенклатура,
		|	ТаблицаПодбора.Характеристика КАК Характеристика,
		|	ТаблицаПодбора.Упаковка КАК Упаковка,
		|	ТаблицаПодбора.ВидЦен КАК ВидЦен,
		|	ТаблицаПодбора.Цена КАК Цена,
		|	ТаблицаПодбора.ЦеноваяГруппа КАК ЦеноваяГруппа,
		|	ТаблицаПодбора.Дата КАК Дата
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	ТаблицаПодбора КАК ТаблицаПодбора
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЦен КАК ТаблицаЦен
		|		ПО ТаблицаПодбора.Номенклатура = ТаблицаЦен.Номенклатура
		|			И ТаблицаПодбора.Характеристика = ТаблицаЦен.Характеристика
		|ГДЕ
		|	ТаблицаЦен.Номенклатура ЕСТЬ NULL 
		|	И ТаблицаЦен.Характеристика ЕСТЬ NULL 
		|;";
		Запрос.Текст = Запрос.Текст + ТекстЗапросаПоВТПравилаЦенообразования();
		Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Упаковка КАК Упаковка,
		|	ВложенныйЗапрос.Цена КАК Цена0,
		|	ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) КАК Цена1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) > 0
		|			ТОГДА (ВложенныйЗапрос.Цена / ДействующиеЦеныНоменклатуры.Цена - 1) * 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОтношениеЦенВПроцентах,
		|	ВложенныйЗапрос.ВидЦены КАК ВидЦены,
		|	ВложенныйЗапрос.ДатаУстановки КАК ДатаУстановки,
		|	ДействующиеЦеныНоменклатуры.Период КАК ДатаПрименения,
		|	ВЫБОР
		|		КОГДА ВложенныйЗапрос.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
		|			ТОГДА ИСТИНА
		|		КОГДА ВложенныйЗапрос.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ХарактеристикиИспользуются
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПодЗапрос.Номенклатура КАК Номенклатура,
		|		ПодЗапрос.Характеристика КАК Характеристика,
		|		ПодЗапрос.ДатаУстановки КАК ДатаУстановки,
		|		ВЫБОР
		|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
		|				ТОГДА МАКСИМУМ(ПодЗапрос.УпаковкаПоЦеновымГруппам)
		|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.УпаковкаПоВидуЦен)
		|		КОНЕЦ КАК Упаковка,
		|		ВЫБОР
		|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
		|				ТОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам)
		|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ЦенаПоВидуЦен)
		|		КОНЕЦ КАК Цена,
		|		ВЫБОР
		|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
		|				ТОГДА МАКСИМУМ(ПодЗапрос.ВидЦенПоЦеновымГруппам)
		|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ВидЦенПоВидуЦен)
		|		КОНЕЦ КАК ВидЦены
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ТаблицаТовары.Номенклатура КАК Номенклатура,
		|			ТаблицаТовары.Характеристика КАК Характеристика,
		|			ТаблицаТовары.Упаковка КАК УпаковкаПоВидуЦен,
		|			ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК УпаковкаПоЦеновымГруппам,
		|			ТаблицаТовары.Дата КАК ДатаУстановки,
		|			ТаблицаТовары.Цена КАК ЦенаПоВидуЦен,
		|			0 КАК ЦенаПоЦеновымГруппам,
		|			ВидЦеныПравила.ВидЦен КАК ВидЦенПоВидуЦен,
		|			ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка) КАК ВидЦенПоЦеновымГруппам
		|		ИЗ
		|			ВидЦеныПравила КАК ВидЦеныПравила
		|				ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
		|				ПО ВидЦеныПравила.ВидЦен = ТаблицаТовары.ВидЦен
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ТаблицаТовары.Номенклатура,
		|			ТаблицаТовары.Характеристика,
		|			ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка),
		|			ТаблицаТовары.Упаковка,
		|			ТаблицаТовары.Дата,
		|			0,
		|			ТаблицаТовары.Цена,
		|			ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка),
		|			ЦеновыеГруппыПравила.ВидЦен
		|		ИЗ
		|			ЦеновыеГруппыПравила КАК ЦеновыеГруппыПравила
		|				ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
		|				ПО ЦеновыеГруппыПравила.ВидЦен = ТаблицаТовары.ВидЦен
		|					И ЦеновыеГруппыПравила.ЦеноваяГруппа = ТаблицаТовары.ЦеноваяГруппа) КАК ПодЗапрос
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПодЗапрос.Номенклатура,
		|		ПодЗапрос.Характеристика,
		|		ПодЗапрос.ДатаУстановки) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&Дата, ОбъектЦенообразования = &ОбъектЦенообразования) КАК ДействующиеЦеныНоменклатуры
		|		ПО ВложенныйЗапрос.Номенклатура = ДействующиеЦеныНоменклатуры.Номенклатура
		|			И ВложенныйЗапрос.Характеристика = ДействующиеЦеныНоменклатуры.Характеристика
		|			И ВложенныйЗапрос.Упаковка = ДействующиеЦеныНоменклатуры.Упаковка
		|ГДЕ
		|	ВложенныйЗапрос.Цена <> ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	Характеристика
		|ИТОГИ ПО
		|	Номенклатура";
		ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ЗаполнитьДобавитьТаблицуЦенПоЗапросу(ВыборкаНоменклатура);	
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОтбору(АдресВоВременномХранилище)
	
	Если ТекущееДействиеЗаполнения = "ДобавитьПоОтбору" Тогда
		
		ТаблицаПодбора = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
		
		Если ТаблицаПодбора.Количество() > 0 Тогда
			
			Запрос = ИнициализироватьЗапрос();
			Запрос.УстановитьПараметр("ТаблицаПодбора",             ТаблицаПодбора);
			Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ 
			|	Таблица.Номенклатура КАК Номенклатура,
			|	Таблица.Характеристика КАК Характеристика
			|ПОМЕСТИТЬ ТаблицаНоменклатура
			|ИЗ
			|	&ТаблицаПодбора КАК Таблица
			|;";
			
			Если ИспользоватьХарактеристикиНоменклатуры Тогда
				
				Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ
				|	Таблица.Номенклатура КАК Номенклатура,
				|	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика
				|ПОМЕСТИТЬ ТаблицаПодбора
				|ИЗ
				|	ТаблицаНоменклатура КАК Таблица
				|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
				|		ПО (ХарактеристикиНоменклатуры.Владелец = Таблица.Номенклатура
				|				ИЛИ ХарактеристикиНоменклатуры.Владелец = Таблица.Номенклатура.ВидНоменклатуры)
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	Таблица.Номенклатура,
				|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
				|ИЗ
				|	ТаблицаНоменклатура КАК Таблица
				|;";
				
			Иначе
				
				Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ 
				|	Таблица.Номенклатура КАК Номенклатура,
				|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика
				|ПОМЕСТИТЬ ТаблицаПодбора
				|ИЗ
				|	ТаблицаНоменклатура КАК Таблица
				|;";
				
			КонецЕсли;
			
			Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ 
			|	ТаблицаЦен.Номенклатура КАК Номенклатура,
			|	ТаблицаЦен.Характеристика КАК Характеристика,
			|	ТаблицаЦен.Упаковка КАК Упаковка
			|ПОМЕСТИТЬ ТаблицаЦен
			|ИЗ
			|	&ТаблицаЦен КАК ТаблицаЦен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаПодбора.Номенклатура,
			|	ТаблицаПодбора.Характеристика
			|ПОМЕСТИТЬ ТаблицаТовары
			|ИЗ
			|	ТаблицаПодбора КАК ТаблицаПодбора
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЦен КАК ТаблицаЦен
			|		ПО ТаблицаПодбора.Номенклатура = ТаблицаЦен.Номенклатура
			|			И ТаблицаПодбора.Характеристика = ТаблицаЦен.Характеристика
			|ГДЕ
			|	ТаблицаЦен.Номенклатура ЕСТЬ NULL 
			|	И ТаблицаЦен.Характеристика ЕСТЬ NULL 
			|;
			|УНИЧТОЖИТЬ ТаблицаНоменклатура
			|;";
			
			Запрос.Текст = Запрос.Текст + ТекстЗапросаПоВТПравилаЦенообразования();
			Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	ВложенныйЗапрос.Характеристика КАК Характеристика,
			|	ВложенныйЗапрос.Упаковка КАК Упаковка,
			|	ВложенныйЗапрос.Цена КАК Цена0,
			|	ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) КАК Цена1,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) > 0
			|			ТОГДА (ВложенныйЗапрос.Цена / ДействующиеЦеныНоменклатуры.Цена - 1) * 100
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ОтношениеЦенВПроцентах,
			|	ВложенныйЗапрос.ВидЦены КАК ВидЦены,
			|	ВложенныйЗапрос.ДатаУстановки КАК ДатаУстановки,
			|	ДействующиеЦеныНоменклатуры.Период КАК ДатаПрименения,
			|	ВЫБОР
			|		КОГДА ВложенныйЗапрос.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
			|			ТОГДА ИСТИНА
			|		КОГДА ВложенныйЗапрос.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ХарактеристикиИспользуются
			|ИЗ
			|	(ВЫБРАТЬ
			|		ПодЗапрос.Номенклатура КАК Номенклатура,
			|		ПодЗапрос.Характеристика КАК Характеристика,
			|		ВЫБОР
			|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
			|				ТОГДА МАКСИМУМ(ПодЗапрос.УпаковкаПоЦеновымГруппам)
			|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.УпаковкаПоВидуЦен)
			|		КОНЕЦ КАК Упаковка,
			|		ВЫБОР
			|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
			|				ТОГДА МАКСИМУМ(ПодЗапрос.ДатаЦенПоЦеновымГруппам)
			|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ДатаЦенПоВидуЦен)
			|		КОНЕЦ КАК ДатаУстановки,
			|		ВЫБОР
			|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
			|				ТОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам)
			|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ЦенаПоВидуЦен)
			|		КОНЕЦ КАК Цена,
			|		ВЫБОР
			|			КОГДА МАКСИМУМ(ПодЗапрос.ЦенаПоЦеновымГруппам) > 0
			|				ТОГДА МАКСИМУМ(ПодЗапрос.ВидЦенПоЦеновымГруппам)
			|			ИНАЧЕ МАКСИМУМ(ПодЗапрос.ВидЦенПоВидуЦен)
			|		КОНЕЦ КАК ВидЦены
			|	ИЗ
			|		(ВЫБРАТЬ
			|			ЦеныНоменклатурыПоВидуЦен.Номенклатура КАК Номенклатура,
			|			ЦеныНоменклатурыПоВидуЦен.Характеристика КАК Характеристика,
			|			ЦеныНоменклатурыПоВидуЦен.Упаковка КАК УпаковкаПоВидуЦен,
			|			ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК УпаковкаПоЦеновымГруппам,
			|			ЦеныНоменклатурыПоВидуЦен.Период КАК ДатаЦенПоВидуЦен,
			|			ДАТАВРЕМЯ(1, 1, 1) КАК ДатаЦенПоЦеновымГруппам,
			|			ЦеныНоменклатурыПоВидуЦен.Цена КАК ЦенаПоВидуЦен,
			|			0 КАК ЦенаПоЦеновымГруппам,
			|			ЦеныНоменклатурыПоВидуЦен.ВидЦены КАК ВидЦенПоВидуЦен,
			|			ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка) КАК ВидЦенПоЦеновымГруппам
			|		ИЗ
			|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|					&Дата,
			|					ВидЦены В
			|							(ВЫБРАТЬ
			|								ВидЦеныПравила.ВидЦен
			|							ИЗ
			|								ВидЦеныПравила КАК ВидЦеныПравила)
			|						И (Номенклатура, Характеристика) В
			|							(ВЫБРАТЬ
			|								Т.Номенклатура,
			|								Т.Характеристика
			|							ИЗ
			|								ТаблицаТовары КАК Т)) КАК ЦеныНоменклатурыПоВидуЦен
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			СправочникНоменклатура.Ссылка,
			|			ЦеныНоменклатурыПоЦеновымГруппам.Характеристика,
			|			ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка),
			|			ЦеныНоменклатурыПоЦеновымГруппам.Упаковка,
			|			ДАТАВРЕМЯ(1, 1, 1),
			|			ЦеныНоменклатурыПоЦеновымГруппам.Период,
			|			0,
			|			ЕСТЬNULL(ЦеныНоменклатурыПоЦеновымГруппам.Цена, 0),
			|			ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка),
			|			ЦеныНоменклатурыПоЦеновымГруппам.ВидЦены
			|		ИЗ
			|			ЦеновыеГруппыПравила КАК ЦеновыеГруппыПравила
			|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|				ПО ЦеновыеГруппыПравила.ЦеноваяГруппа = СправочникНоменклатура.ЦеноваяГруппа
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|						&Дата,
			|						ВидЦены В
			|								(ВЫБРАТЬ РАЗЛИЧНЫЕ
			|									ЦеновыеГруппыПравила.ВидЦен
			|								ИЗ
			|									ЦеновыеГруппыПравила КАК ЦеновыеГруппыПравила)
			|							И (Номенклатура, Характеристика) В
			|								(ВЫБРАТЬ
			|									Т.Номенклатура,
			|									Т.Характеристика
			|								ИЗ
			|									ТаблицаТовары КАК Т)) КАК ЦеныНоменклатурыПоЦеновымГруппам
			|				ПО (ЦеныНоменклатурыПоЦеновымГруппам.Номенклатура = СправочникНоменклатура.Ссылка)
			|					И (ЦеныНоменклатурыПоЦеновымГруппам.ВидЦены = ЦеновыеГруппыПравила.ВидЦен)) КАК ПодЗапрос
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ПодЗапрос.Номенклатура,
			|		ПодЗапрос.Характеристика) КАК ВложенныйЗапрос
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(
			|				&Дата,
			|				ОбъектЦенообразования = &ОбъектЦенообразования
			|					И (Номенклатура, Характеристика) В
			|						(ВЫБРАТЬ
			|							Т.Номенклатура,
			|							Т.Характеристика
			|						ИЗ
			|							ТаблицаТовары КАК Т)) КАК ДействующиеЦеныНоменклатуры
			|		ПО ВложенныйЗапрос.Номенклатура = ДействующиеЦеныНоменклатуры.Номенклатура
			|			И ВложенныйЗапрос.Характеристика = ДействующиеЦеныНоменклатуры.Характеристика
			|			И ВложенныйЗапрос.Упаковка = ДействующиеЦеныНоменклатуры.Упаковка
			|ГДЕ
			|	ВложенныйЗапрос.Цена <> ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Номенклатура,
			|	Характеристика
			|ИТОГИ ПО
			|	Номенклатура";
			ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ЗаполнитьДобавитьТаблицуЦенПоЗапросу(ВыборкаНоменклатура);	
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоЦеновымГруппам(ОграниченияЗапроса)
	
	Если ТекущееДействиеЗаполнения = "ДобавитьПоЦеновымГруппам" Тогда
		
		Запрос = ИнициализироватьЗапрос();
		Запрос.УстановитьПараметр("ОграниченияЗапроса",     ОграниченияЗапроса);
		Запрос.Текст = ТекстЗапросаПоВТТаблицыЦен();
		Запрос.Текст = Запрос.Текст + "ВЫБРАТЬ
		|	ЦеновыеГруппы.ЦеноваяГруппа КАК ЦеноваяГруппа,
		|	ЦеновыеГруппы.ВидЦен КАК ВидЦен
		|ПОМЕСТИТЬ ЦеновыеГруппыПравила
		|ИЗ
		|	Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ЦеновыеГруппы
		|ГДЕ
		|	ЦеновыеГруппы.Ссылка = &ПравилоЦенообразования
		|	И ЦеновыеГруппы.ЦеноваяГруппа В(&ОграниченияЗапроса)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидЦен,
		|	ЦеноваяГруппа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Упаковка КАК Упаковка,
		|	ВложенныйЗапрос.Цена КАК Цена0,
		|	ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) КАК Цена1,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0) > 0
		|			ТОГДА (ВложенныйЗапрос.Цена / ДействующиеЦеныНоменклатуры.Цена - 1) * 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОтношениеЦенВПроцентах,
		|	ВложенныйЗапрос.ВидЦены КАК ВидЦены,
		|	ВложенныйЗапрос.ДатаУстановки КАК ДатаУстановки,
		|	ДействующиеЦеныНоменклатуры.Период КАК ДатаПрименения,
		|	ВЫБОР
		|		КОГДА ВложенныйЗапрос.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
		|			ТОГДА ИСТИНА
		|		КОГДА ВложенныйЗапрос.Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ХарактеристикиИспользуются
		|ИЗ
		|	(ВЫБРАТЬ
		|		СправочникНоменклатура.Ссылка КАК Номенклатура,
		|		ЦеныНоменклатурыПоЦеновымГруппам.Характеристика КАК Характеристика,
		|		ЦеныНоменклатурыПоЦеновымГруппам.Упаковка КАК Упаковка,
		|		ЦеныНоменклатурыПоЦеновымГруппам.Период КАК ДатаУстановки,
		|		ЦеныНоменклатурыПоЦеновымГруппам.Цена КАК Цена,
		|		ЦеновыеГруппыПравила.ВидЦен КАК ВидЦены
		|	ИЗ
		|		ЦеновыеГруппыПравила КАК ЦеновыеГруппыПравила
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО ЦеновыеГруппыПравила.ЦеноваяГруппа = СправочникНоменклатура.ЦеноваяГруппа
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|					&Дата,
		|					ВидЦены В
		|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|								ЦеновыеГруппыПравила.ВидЦен
		|							ИЗ
		|								ЦеновыеГруппыПравила КАК ЦеновыеГруппыПравила)
		|						И (НЕ (Номенклатура, Характеристика) В
		|								(ВЫБРАТЬ
		|									Т.Номенклатура,
		|									Т.Характеристика
		|								ИЗ
		|									ТаблицаТовары КАК Т))) КАК ЦеныНоменклатурыПоЦеновымГруппам
		|			ПО (ЦеныНоменклатурыПоЦеновымГруппам.Номенклатура = СправочникНоменклатура.Ссылка)
		|				И (ЦеныНоменклатурыПоЦеновымГруппам.ВидЦены = ЦеновыеГруппыПравила.ВидЦен)) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(
		|				&Дата,
		|				ОбъектЦенообразования = &ОбъектЦенообразования
		|					И (НЕ (Номенклатура, Характеристика) В
		|							(ВЫБРАТЬ
		|								Т.Номенклатура,
		|								Т.Характеристика
		|							ИЗ
		|								ТаблицаТовары КАК Т))) КАК ДействующиеЦеныНоменклатуры
		|		ПО ВложенныйЗапрос.Номенклатура = ДействующиеЦеныНоменклатуры.Номенклатура
		|			И ВложенныйЗапрос.Характеристика = ДействующиеЦеныНоменклатуры.Характеристика
		|			И ВложенныйЗапрос.Упаковка = ДействующиеЦеныНоменклатуры.Упаковка
		|ГДЕ
		|	ВложенныйЗапрос.Цена <> ЕСТЬNULL(ДействующиеЦеныНоменклатуры.Цена, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	Характеристика
		|ИТОГИ ПО
		|	Номенклатура";
		
		ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ЗаполнитьДобавитьТаблицуЦенПоЗапросу(ВыборкаНоменклатура);	
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ИнициализироватьЗапрос()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПравилоЦенообразования",			Объект.ПравилоЦенообразования);
	Запрос.УстановитьПараметр("ОбъектЦенообразования",			Объект.ОбъектЦенообразования);
	Запрос.УстановитьПараметр("ФорматОбъектаЦенообразования",	Объект.ФорматМагазина);
	Запрос.УстановитьПараметр("Дата",                   		Объект.ДатаАнализа);
	ДеревоЦен = РеквизитФормыВЗначение("ТаблицаЦен",			Тип("ДеревоЗначений"));
	Запрос.УстановитьПараметр("ТаблицаЦен", 					ДеревоЦен);	

	Возврат Запрос;
	
КонецФункции

&НаСервере
Процедура ОбновитьКоличествоСтрок()
	
	ЭлементыНоменклатура = ТаблицаЦен.ПолучитьЭлементы();
	Инд = ЭлементыНоменклатура.Количество();
	Если ИспользоватьХарактеристикиНоменклатуры Тогда
		
		Для каждого ЭлементНоменклатура Из ЭлементыНоменклатура Цикл
			
			ЭлементыХарактеристики = ЭлементНоменклатура.ПолучитьЭлементы();
			Инд = Инд + ЭлементыХарактеристики.Количество();
			
		КонецЦикла;	
		
		КоличествоСтрокКПрименению = Инд;
		
	Иначе
		
		КоличествоСтрокКПрименению = ЭлементыНоменклатура.Количество()-1;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ОчиститьТабличнуюЧасть(Спрашивать = Истина)
	
	Если ТаблицаЦен.ПолучитьЭлементы().Количество() = 0 Тогда
		
		Возврат Истина;
		
	КонецЕсли; 
	
	Если Спрашивать Тогда
		
		Ответ = Вопрос(НСтр("ru = 'Табличная часть будет очищена! Продолжить выполнение операции?'"), РежимДиалогаВопрос.ДаНет, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			ТаблицаЦен.ПолучитьЭлементы().Очистить();
			Возврат Истина;
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	Иначе
		
		ТаблицаЦен.ПолучитьЭлементы().Очистить();
		
	КонецЕсли;

КонецФункции

&НаСервере
Функция СтруктураПараметровПечатиЦенников()
	
	Если ПроверитьЗаполнение() Тогда
		
		СтруктураПараметров = ЦенообразованиеПереопределяемый.ПодготовитьСтруктуруПечатиЦенников(ЭтотОбъект, Объект);
		СтруктураПараметров.Вставить("ПараметрыПодготовлены", Истина);
		
	Иначе
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ПараметрыПодготовлены", Ложь);
		
	КонецЕсли;
	
	Возврат СтруктураПараметров;
	
КонецФункции

//Функция вызывает переопредяемый обработчик печати этикеток
//
&НаСервере
Функция СтруктураПараметровПечатиЭтикеток()
	
	Если ПроверитьЗаполнение() Тогда
		
		СтруктураПараметров = ЦенообразованиеПереопределяемый.ПодготовитьСтруктуруПечатиЭтикеток(ЭтотОбъект, Объект);
		СтруктураПараметров.Вставить("ПараметрыПодготовлены", Истина);
		
	Иначе
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ПараметрыПодготовлены", Ложь);
        		
	КонецЕсли;
	
	Возврат СтруктураПараметров;
	
КонецФункции

//Осуществляет проверку заполнения реквизитов перед передачей управления на сервер
//
//Возвращаемое значение
//Булево - Проверка пройдена - Истина, проверка не пройдена - Ложь
&НаКлиенте
Функция ПроверкаПередЗаполнениемНаКлиенте()
	
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.ОбъектЦенообразования) Тогда
		
		ТекстОшибки = НСтр("ru='Поле ""Магазин (склад)"" не заполнено'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.ОбъектЦенообразования",,Отказ);
				
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаАнализа) Тогда
		
		ТекстОшибки = НСтр("ru='Поле ""Дата анализа"" не заполнено'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,"Объект.ДатаАнализа",,Отказ);
		
	КонецЕсли;	
			
	Возврат НЕ Отказ;
	
КонецФункции

//Формирует документ "ПрименениеЦенНоменклатуры" по данным таблицы ТаблицаЦен
//Пользователю после формирования документа выводится оповещение с навигационной ссылкой на документ
&НаСервере
Функция СформироватьДокументПримененияЦенНоменклатуры()
	
	ЭлементыНоменклатура = ТаблицаЦен.ПолучитьЭлементы();

	НомерСтроки = 0;
	Отказ = Ложь;
	
	
	Для Каждого ТекЭлементНоменклатура Из ЭлементыНоменклатура Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		Если ТекЭлементНоменклатура.ХарактеристикиИспользуются Тогда
			
			ДобавленыХарактеристики = Ложь;
			
			ЭлементыХарактеристики = ТекЭлементНоменклатура.ПолучитьЭлементы();
			Для Каждого ТекЭлементХарактеристика Из ЭлементыХарактеристики Цикл
				
				НомерСтроки = НомерСтроки + 1;
				ДобавленыХарактеристики = Истина;
				
			КонецЦикла;
			
			Если Не ДобавленыХарактеристики Тогда
				
				ТекстОшибки = НСтр("ru='Для номенклатуры ""%1"" в строке ""%2"" списка ""Таблица цен"" включено использование характеристик,
				                       |Но ни одной характеристики не указано. Добавьте характеристики и укажите их цены или удалите данную номенклатуру из списка.'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, ТекЭлементНоменклатура.Номенклатура, НомерСтроки);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстОшибки,
					,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТаблицаЦен", НомерСтроки, "Номенклатура"),
					,
					Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; 
	
	Если Отказ Тогда
		Возврат Документы.ПрименениеЦенНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	ВыполненоУспешно                                  = Ложь;
	ДокументОбъектПрименениеЦен                       = Документы.ПрименениеЦенНоменклатуры.СоздатьДокумент();
	ДокументОбъектПрименениеЦен.Дата                  = Объект.ДатаАнализа;
	ДокументОбъектПрименениеЦен.ОбъектЦенообразования = Объект.ОбъектЦенообразования;
	ДокументОбъектПрименениеЦен.Ответственный         = Объект.Ответственный;
	
	ДеревоЦенЗначение = РеквизитФормыВЗначение("ТаблицаЦен", Тип("ДеревоЗначений"));
	
	Для каждого СтрокаНоменклатура Из ДеревоЦенЗначение.Строки цикл
		
		Если НЕ СтрокаНоменклатура.ХарактеристикиИспользуются Тогда
			
			НовСтрокаТовары                = ДокументОбъектПрименениеЦен.Товары.Добавить();
			НовСтрокаТовары.Цена           = СтрокаНоменклатура.Цена0;
			НовСтрокаТовары.Номенклатура   = СтрокаНоменклатура.Номенклатура;
			НовСтрокаТовары.Упаковка       = СтрокаНоменклатура.Упаковка;
			
		КонецЕсли;
		
		Для каждого СтрокаХарактеристика Из СтрокаНоменклатура.Строки Цикл
			
			НовСтрокаТовары                = ДокументОбъектПрименениеЦен.Товары.Добавить();
			НовСтрокаТовары.Цена           = СтрокаХарактеристика.Цена0;
			НовСтрокаТовары.Номенклатура   = СтрокаХарактеристика.Номенклатура;
			НовСтрокаТовары.Характеристика = СтрокаХарактеристика.Характеристика;
			НовСтрокаТовары.Упаковка       = СтрокаХарактеристика.Упаковка;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ДокументОбъектПрименениеЦен.ПроверитьЗаполнение() Тогда
			
		Попытка
			
			ДокументОбъектПрименениеЦен.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
			ТаблицаЦен.ПолучитьЭлементы().Очистить();
			ТекущееДействиеЗаполнения = "ДобавитьПоНазначеннымЦенам";
			ЗаполнитьПоНазначеннымЦенам();
			
			ВыполненоУспешно = Истина;
			
		Исключение
			
			Инфо = ИнформацияОбОшибке();
			ТекстСообщенияОбОшибке = НСтр("ru = 'Ошибка при попытке проведения документа: %1'");
			ТекстСообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщенияОбОшибке, КраткоеПредставлениеОшибки(Инфо));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияОбОшибке);
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Ценообразование. Создание применения цен номенклатуры'"), УровеньЖурналаРегистрации.Ошибка,,Инфо);
			
		КонецПопытки;
		
		
	КонецЕсли;
	
	Значение = ?(ВыполненоУспешно,ДокументОбъектПрименениеЦен.Ссылка,Документы.ПрименениеЦенНоменклатуры.ПустаяСсылка());
	
	Возврат Значение;
	
КонецФункции

//ФОРМИРОВАНИЕ ОБЩИХ ЗАПРОСОВ, ТЕКСТОВ ЗАПРОСОВ

//Функция формирует текст запроса по временным таблицам, описывающим правило ценообразования
//Возвращаемое значение - Строка - Текст запроса 
&НаСервере
Функция ТекстЗапросаПоВТПравилаЦенообразования()
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦеновыеГруппы.ЦеноваяГруппа КАК ЦеноваяГруппа,
	|	ЦеновыеГруппы.ВидЦен КАК ВидЦен
	|ПОМЕСТИТЬ ЦеновыеГруппыПравила
	|ИЗ
	|	Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ЦеновыеГруппы
	|ГДЕ
	|	ЦеновыеГруппы.Ссылка = &ПравилоЦенообразования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЦен,
	|	ЦеноваяГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВидЦеныПравила.ВидЦен КАК ВидЦен
	|ПОМЕСТИТЬ ВидЦеныПравила
	|ИЗ
	|	Справочник.ПравилаЦенообразования КАК ВидЦеныПравила
	|ГДЕ
	|	ВидЦеныПравила.Ссылка = &ПравилоЦенообразования
	|;";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Функция формирует текст запроса по таблице цен
//Возвращаемое значение - Строка - Текст запроса 
&НаСервере
Функция ТекстЗапросаПоВТТаблицыЦен()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ТаблицаЦен.Номенклатура КАК Номенклатура,
	|	ТаблицаЦен.Характеристика КАК Характеристика,
	|	ТаблицаЦен.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаЦен КАК ТаблицаЦен
	|;";
	
	Возврат ТекстЗапроса;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Прочее

//Процедура устанвливает правило ценообразования при изменении поля "ОбъектЦенообразования"
//Параметры: ПерезаполнитьЦены - Булево, признак перезаполнения цен
&НаСервере
Процедура УстановитьПравилоЦенообразования(ПерезаполнитьЦены = Ложь)
	
	Объект.ПравилоЦенообразования = Объект.ОбъектЦенообразования.ПравилоЦенообразования;
	Объект.ФорматМагазина 		  = Объект.ОбъектЦенообразования.ФорматМагазина;
	
	Если ПерезаполнитьЦены Тогда
		
		ТекущееДействиеЗаполнения = "ДобавитьПоНазначеннымЦенам";
		ЗаполнитьПоНазначеннымЦенам();
		
	КонецЕсли;	
	
КонецПроцедуры


//Заполняет индекс картинки в дереве
//
&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьИндексКартинкиСтрокиДереваЦен(СтрокаДереваЦен)
	
	Если ТипЗнч(СтрокаДереваЦен) = Тип("ДанныеФормыЭлементДерева") Тогда
		Если СтрокаДереваЦен.ПолучитьРодителя() = Неопределено Тогда
			СтрокаДереваЦен.ИндексКартинки = 0;
		Иначе
			СтрокаДереваЦен.ИндексКартинки = 2;
		КонецЕсли;
	ИначеЕсли ТипЗнч(СтрокаДереваЦен) = Тип("СтрокаДереваЗначений") Тогда
		Если СтрокаДереваЦен.Родитель = Неопределено Тогда
			СтрокаДереваЦен.ИндексКартинки = 0;
		Иначе
			СтрокаДереваЦен.ИндексКартинки = 2;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

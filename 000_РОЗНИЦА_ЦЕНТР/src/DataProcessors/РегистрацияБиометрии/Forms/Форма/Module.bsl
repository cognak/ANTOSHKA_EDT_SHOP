
&НаСервере
Процедура МагазинПриИзмененииНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФизическиеЛица.Ссылка КАК Сотрудник,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(БиометрическиеДанные.Биометрия КАК СТРОКА(10)), 0) = 0
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК Зарегистрирован
	               |ИЗ
	               |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.БиометрическиеДанные КАК БиометрическиеДанные
	               |		ПО ФизическиеЛица.Ссылка = БиометрическиеДанные.ФизЛицо
	               |ГДЕ
	               |	ФизическиеЛица.Магазин = &Магазин
	               |	И ФизическиеЛица.Сотрудник = ИСТИНА
	               |	И ФизическиеЛица.Уволен = ЛОЖЬ"; 
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Сотрудники.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	МагазинПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗарегистрировать(Команда)
	ТекСтрока = Элементы.Сотрудники.ТекущиеДанные; 
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Сотрудник", ТекСтрока.Сотрудник);

	Если ТекСтрока.Зарегистрирован Тогда
		Оповещение_ = Новый ОписаниеОповещения("ИдентификацияЗавершение",ЭтаФорма,СтруктураПараметров);
		ФормаРегистрации = ОткрытьФормуМодально("Обработка.РегистрацияБиометрии.Форма.ФормаИдентификации",СтруктураПараметров,ЭтаФорма);
        ИдентификацияЗавершение(ФормаРегистрации,СтруктураПараметров);
	Иначе
		Оповещение_ = Новый ОписаниеОповещения("ЗарегистрироватьЗавершение",ЭтаФорма,СтруктураПараметров);
		ФормаРегистрации = ОткрытьФормуМодально("Обработка.РегистрацияБиометрии.Форма.ФормаРегистрация",СтруктураПараметров,ЭтаФорма);
        ЗарегистрироватьЗавершение(ФормаРегистрации,СтруктураПараметров);
	КонецЕсли;
	
	
КонецПроцедуры    

&НаКлиенте
Процедура  ЗарегистрироватьЗавершение(РезультатПараметры,ДопПараметры) Экспорт 
	Если Не ТипЗнч(РезультатПараметры) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;                  
	Если РезультатПараметры.Свойство("Успешно") И РезультатПараметры.Успешно = Истина Тогда        
		МагазинПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры      

&НаКлиенте
Процедура  ИдентификацияЗавершение(РезультатПараметры,ДопПараметры) Экспорт
	Если Не ТипЗнч(РезультатПараметры) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;                  
	Если РезультатПараметры.Свойство("Успешно") И РезультатПараметры.Успешно = Истина Тогда        
		УдалитьБиометрическиеДанныеСервер(РезультатПараметры.Сотрудник);
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Сотрудник", РезультатПараметры.Сотрудник);
		Оповещение_ = Новый ОписаниеОповещения("ЗарегистрироватьЗавершение",ЭтаФорма, Новый Структура);
		ФормаРегистрации = ОткрытьФормуМодально("Обработка.РегистрацияБиометрии.Форма.ФормаРегистрация",СтруктураПараметров,ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры      

&НаСервере
Процедура УдалитьБиометрическиеДанныеСервер(ТекСотрудник)
		РаботаСБиометричекимиДанными.УдалитьБиометриюСотруднику(ТекСотрудник);
КонецПроцедуры      

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЕстьПравоДоступаИзменятьБиометрическиеДанные() Тогда
		Отказ = Истина;
		ПоказатьОповещениеПользователя("Проверка возможности пользоваться обработкой"
		,, "У вас нет прав использовать обработку для регистрации биометрических данных!"
		, БиблиотекаКартинок.Ошибка32, СтатусОповещенияПользователя.Важное);
		
	КонецЕсли;   
	
	
КонецПроцедуры

&НаСервере
Функция  ЕстьПравоДоступаИзменятьБиометрическиеДанные()  
	Возврат РольДоступна("ДобавлениеИзменениеБиометрическихДанных");
КонецФункции

&НаСервереБезКонтекста
Функция  ПолучитьМагазиныИспользующиеБиометрику()  
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	УчетнаяПолитикаМагазиновСрезПоследних.Магазин КАК Магазин
	               |ИЗ
	               |	РегистрСведений.УчетнаяПолитикаМагазинов.СрезПоследних КАК УчетнаяПолитикаМагазиновСрезПоследних
	               |ГДЕ
	               |	УчетнаяПолитикаМагазиновСрезПоследних.ИспользоватьБиометрическийСканер = ИСТИНА
	               |	И УчетнаяПолитикаМагазиновСрезПоследних.Магазин.ПометкаУдаления = ЛОЖЬ
	               |	И УчетнаяПолитикаМагазиновСрезПоследних.Магазин.Блокирован = ЛОЖЬ";      
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Магазин");
	
	
КонецФункции


&НаКлиенте
Процедура МагазинНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("Отбор", Новый Структура("Ссылка", ПолучитьМагазиныИспользующиеБиометрику()));   
	Оповещение_ = Новый ОписаниеОповещения("МагазинЗавершениеВыбора",ЭтаФорма);
	ОткрытьФорму("Справочник.Магазины.ФормаВыбора", ПараметрыВыбора,ЭтаФорма,,,,Оповещение_);    
	
КонецПроцедуры

&НаКлиенте
Процедура МагазинЗавершениеВыбора(ДанныеВыбора, ДопПараметры) Экспорт
	Магазин = ДанныеВыбора; 
	МагазинПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	КомандаЗарегистрировать(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;
    МагазинПриИзмененииНаСервере();
КонецПроцедуры




&НаСервере
Процедура МагазинПриИзмененииНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	               |	РаботникиОрганизаций.Должность КАК Должность,
	               |	РаботникиОрганизаций.Магазин КАК Магазин
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		РаботникиОрганизаций.Организация КАК Организация,
	               |		РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	               |		МАКСИМУМ(РаботникиОрганизаций.ПериодНачала) КАК ПериодНачала
	               |	ИЗ
	               |		РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		РаботникиОрганизаций.Организация,
	               |		РаботникиОрганизаций.Сотрудник) КАК ВложенныйЗапрос1
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	               |				МАКСИМУМ(СостояниеРаботниковОрганизацийСрезПоследних.Период) КАК Период,
	               |				СостояниеРаботниковОрганизацийСрезПоследних.Организация КАК Организация
	               |			ИЗ
	               |				РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних КАК СостояниеРаботниковОрганизацийСрезПоследних
	               |			ГДЕ
	               |				СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник.Уволен = ЛОЖЬ
	       //        |				И СостояниеРаботниковОрганизацийСрезПоследних.Организация = &Организация
	               |				И СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник.Магазин = &Магазин
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник,
	               |				СостояниеРаботниковОрганизацийСрезПоследних.Организация) КАК ВложенныйЗапрос
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних КАК СостояниеРаботниковОрганизацийСрезПоследних
	               |				ПО ВложенныйЗапрос.Сотрудник = СостояниеРаботниковОрганизацийСрезПоследних.Сотрудник
	               |					И ВложенныйЗапрос.Период = СостояниеРаботниковОрганизацийСрезПоследних.Период
	               |			ПО РаботникиОрганизаций.Сотрудник = ВложенныйЗапрос.Сотрудник
	               |				И РаботникиОрганизаций.Организация = ВложенныйЗапрос.Организация
	               |		ПО ВложенныйЗапрос1.Организация = РаботникиОрганизаций.Организация
	               |			И ВложенныйЗапрос1.Сотрудник = РаботникиОрганизаций.Сотрудник
	               |			И ВложенныйЗапрос1.ПериодНачала = РаботникиОрганизаций.ПериодНачала
	               |ГДЕ
	               |	(ЕСТЬNULL(СостояниеРаботниковОрганизацийСрезПоследних.Состояние, 0) = 0
	               |			ИЛИ СостояниеРаботниковОрганизацийСрезПоследних.Состояние В (&СостоянияРаботающих)
	               |			ИЛИ СостояниеРаботниковОрганизацийСрезПоследних.ПериодЗавершения < &КонецПериода
	               |				И СостояниеРаботниковОрганизацийСрезПоследних.СостояниеЗавершения В (&СостоянияРаботающих))
	               |	И РаботникиОрганизаций.Сотрудник.Магазин = &Магазин
	               |	И РаботникиОрганизаций.Сотрудник.Уволен = ЛОЖЬ
	               //|	И РаботникиОрганизаций.Организация = &Организация
	               |	И РаботникиОрганизаций.ЗанимаемыхСтавок > 0";
   
	
	
	//2025-07-02 sa Нужно подсвечивать цветом уволенных сотрудников. для этого нужно определить в каком они состоянии находятся.
	МассивСостоянийРаботающихСотрудников = Новый Массив;
	МассивСостоянийРаботающихСотрудников.Добавить(Перечисления.СостоянияРаботникаОрганизации.Работает);
	МассивСостоянийРаботающихСотрудников.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускЕжегодный);
	МассивСостоянийРаботающихСотрудников.Добавить(Перечисления.СостоянияРаботникаОрганизации.ПриостановкаТрудовогоДоговора);
	МассивСостоянийРаботающихСотрудников.Добавить(Перечисления.СостоянияРаботникаОрганизации.ОтпускУчебный);
	
	Запрос.УстановитьПараметр("Магазин", Магазин);
	//Запрос.УстановитьПараметр("Организация", Магазин);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ТекущаяДата()));
	Запрос.УстановитьПараметр("СостоянияРаботающих", МассивСостоянийРаботающихСотрудников);
	Объект.Сотрудники.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	МагазинПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗарегистрировать(Команда)
	ТекСтрока = Элементы.Сотрудники.ТекущиеДанные; 
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Сотрудник", ТекСтрока.Сотрудник);

	Если ТекСтрока.Зарегистрирован Тогда
		Оповещение_ = Новый ОписаниеОповещения("ИдентификацияЗавершение",ЭтаФорма,СтруктураПараметров);
		ФормаРегистрации = ОткрытьФормуМодально("Обработка.РегистрацияБиометрии.Форма.ФормаИдентификации",СтруктураПараметров,ЭтаФорма);
        ИдентификацияЗавершение(ФормаРегистрации,СтруктураПараметров);
	Иначе
		Оповещение_ = Новый ОписаниеОповещения("ЗарегистрироватьЗавершение",ЭтаФорма,СтруктураПараметров);
		ФормаРегистрации = ОткрытьФормуМодально("Обработка.РегистрацияБиометрии.Форма.ФормаРегистрация",СтруктураПараметров,ЭтаФорма);
        ЗарегистрироватьЗавершение(ФормаРегистрации,СтруктураПараметров);
	КонецЕсли;
	
	
КонецПроцедуры    

&НаКлиенте
Процедура  ЗарегистрироватьЗавершение(РезультатПараметры,ДопПараметры) Экспорт 
	Если Не ТипЗнч(РезультатПараметры) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;                  
	Если РезультатПараметры.Свойство("Успешно") И РезультатПараметры.Успешно = Истина Тогда        
		МагазинПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры      

&НаКлиенте
Процедура  ИдентификацияЗавершение(РезультатПараметры,ДопПараметры) Экспорт
	Если Не ТипЗнч(РезультатПараметры) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;                  
	Если РезультатПараметры.Свойство("Успешно") И РезультатПараметры.Успешно = Истина Тогда        
		УдалитьБиометрическиеДанныеСервер(РезультатПараметры.Сотрудник);
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Сотрудник", РезультатПараметры.Сотрудник);
		Оповещение_ = Новый ОписаниеОповещения("ЗарегистрироватьЗавершение",ЭтаФорма, Новый Структура);
		ФормаРегистрации = ОткрытьФормуМодально("Обработка.РегистрацияБиометрии.Форма.ФормаРегистрация",СтруктураПараметров,ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры      

&НаСервере
Процедура УдалитьБиометрическиеДанныеСервер(ТекСотрудник)
		РаботаСБиометричекимиДанными.УдалитьБиометриюСотруднику(ТекСотрудник);
КонецПроцедуры      

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЕстьПравоДоступаИзменятьБиометрическиеДанные() Тогда
		Отказ = Истина;
		ПоказатьОповещениеПользователя("Перевірка можливості користування обробкою"
		,, "У вас немає права використовувати обробку для реєстрації біометричних даних!"
		, БиблиотекаКартинок.Ошибка32, СтатусОповещенияПользователя.Важное);
		
	КонецЕсли;   
	
	
КонецПроцедуры

&НаСервере
Функция  ЕстьПравоДоступаИзменятьБиометрическиеДанные()  
	Возврат РольДоступна("ДобавлениеИзменениеБиометрическихДанных");
КонецФункции

&НаСервереБезКонтекста
Функция  ПолучитьМагазиныИспользующиеБиометрику()  
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	УчетнаяПолитикаМагазиновСрезПоследних.Магазин КАК Магазин
	               |ИЗ
	               |	РегистрСведений.УчетнаяПолитикаМагазинов.СрезПоследних КАК УчетнаяПолитикаМагазиновСрезПоследних
	               |ГДЕ
	               |	УчетнаяПолитикаМагазиновСрезПоследних.ИспользоватьБиометрическийСканер = ИСТИНА
	               |	И УчетнаяПолитикаМагазиновСрезПоследних.Магазин.ПометкаУдаления = ЛОЖЬ
	               |	И УчетнаяПолитикаМагазиновСрезПоследних.Магазин.Блокирован = ЛОЖЬ";      
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Магазин");
	
	
КонецФункции


&НаКлиенте
Процедура МагазинНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("Отбор", Новый Структура("Ссылка", ПолучитьМагазиныИспользующиеБиометрику()));   
	Оповещение_ = Новый ОписаниеОповещения("МагазинЗавершениеВыбора",ЭтаФорма);
	ОткрытьФорму("Справочник.Магазины.ФормаВыбора", ПараметрыВыбора,ЭтаФорма,,,,Оповещение_);    
	
КонецПроцедуры

&НаКлиенте
Процедура МагазинЗавершениеВыбора(ДанныеВыбора, ДопПараметры) Экспорт
	Магазин = ДанныеВыбора; 
	МагазинПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	КомандаЗарегистрировать(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;
    МагазинПриИзмененииНаСервере();
КонецПроцедуры




&НаСервере
Процедура КомандаОтправитьКодПодтвержденияНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте	//	LNK 12.08.2019 12:40:27
Процедура Подключаемый_ДоступностьWebRetail()

	РесурсWebRetailДоступен = РозничныеПродажиСлужебный.РесурсWebRetailДоступен();

	Если РесурсWebRetailДоступен Тогда

			Элементы.ИндикаторПодключения.Картинка = БиблиотекаКартинок.RFDIОперацииВыполнены;

	Иначе	Элементы.ИндикаторПодключения.Картинка = БиблиотекаКартинок.RFDIЗапись;

	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Функция ПроверитьЗаполнениеТелефона()
	
	Возврат ЗначениеЗаполнено(НомерТелефона);
		
КонецФункции

&НаСервереБезКонтекста
Функция ОтправитьКодПодтвержденияSMSНаСервере(НомерТелефона, ИмяКлиентскогоКомпьютера, Контрагент)

	ДополнительныеПараметры = Новый Структура(
		"ИмяКомпьютера, Контрагент", ИмяКлиентскогоКомпьютера, Контрагент);

	Возврат ВерификацияКлиентовСервер.ОтправитьКодПодтверждения(ОтправкаSMS.ПодготовитьНомерТелефона(НомерТелефона), ДополнительныеПараметры, Истина);

КонецФункции


&НаКлиенте
Процедура ОтправитьКодПодтвержденияSMSЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ОтладочныйРежим = Ложь;
	
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда

		Если ОтладочныйРежим ИЛИ ОтправитьКодПодтвержденияSMSНаСервере(НомерТелефона, ИмяКомпьютера(), ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка")) Тогда

			ПодтверждениеОтправлено = Истина;
			ПоказатьОповещениеПользователя("Код успішно надіслано на телефон" + Символы.ПС + "«" + НомерТелефона + "»");

		КонецЕсли;


		ТекущийЭлемент = Элементы.КодПодтверждения;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправитьКодПодтверждения(Команда)
	Подключаемый_ДоступностьWebRetail();

	Если НЕ РесурсWebRetailДоступен Тогда
		ПоказатьОповещениеПользователя("SMS автентифікація"
			,, "Немає доступу до сервера ЦБ. Спробуйте виконати пізніше."
			, БиблиотекаКартинок.Ошибка32, СтатусОповещенияПользователя.Важное);

		Возврат;

	КонецЕсли;

	Если ПроверитьЗаполнениеТелефона() Тогда

		ПоказатьВопрос(Новый ОписаниеОповещения("ОтправитьКодПодтвержденияSMSЗавершение", ЭтотОбъект)
			, "Буде відправлено SMS за вказаним номером. Підтвердьте своє рішення:", РежимДиалогаВопрос.ОКОтмена
			, 60, КодВозвратаДиалога.ОК, "ИДЕНТИФИКАЦИЯ", КодВозвратаДиалога.Отмена);

	Иначе

		Сообщить("У дії відмовлено! Необхідно заповнити всі обов'язкові поля.");

	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция КодПодтвержденияПриИзмененииНаСервере(НомерТелефона)

	Возврат ВерификацияКлиентовСервер.ПолучитьКодПодтверждения(ОтправкаSMS.ПодготовитьНомерТелефона(НомерТелефона), Истина);

КонецФункции // КодПодтвержденияПриИзмененииНаСервере()


&НаКлиенте
Процедура КодПодтвержденияПриИзменении(Элемент)
	ПоказатьОповещениеПользователя("Перевірка номера телефону"
	,, "Надіслано запит на отримання останнього коду підтвердження..."
	, БиблиотекаКартинок.Вопрос32, СтатусОповещенияПользователя.Информация);

	ПодтверждениеПолучено = Ложь;	//	сбросим возможное подтверждение
	ОтладочныйРежим = Ложь;
	
	Если ОтладочныйРежим Тогда

		ДанныеКлиента = Новый Структура(
			"Указан, КодКлиента"
			, Истина
			, КодПодтверждения
		);

	Иначе

		ДанныеКлиента = КодПодтвержденияПриИзмененииНаСервере(НомерТелефона);

	КонецЕсли;

	Если ДанныеКлиента.Указан Тогда

		Если СокрЛП(ДанныеКлиента.КодКлиента) = СокрЛП(КодПодтверждения) Тогда

			ПодтверждениеПолучено = Истина;

			ПоказатьОповещениеПользователя("Перевірка номера телефону"
			,, "Вітаємо! Код підтвердження відповідає"
			, БиблиотекаКартинок.Информация32, СтатусОповещенияПользователя.Информация);

				ПоказатьОповещениеПользователя("Реєстрація відбитка"
					,, "Перереєстрація відбитка"
					, БиблиотекаКартинок.Вопрос32, СтатусОповещенияПользователя.Информация);

					ЭтаФорма.Закрыть(Новый Структура("Сотрудник,Успешно",Сотрудник,Истина));
//					СтруктураПараметров = Новый Структура;
//					СтруктураПараметров.Вставить("Сотрудник", Сотрудник);
//					Оповещение_ = Новый ОписаниеОповещения("ЗарегистрироватьЗавершение",ЭтаФорма,Новый Структура);
//					ФормаРегистрации = ОткрытьФормуМодально("ВнешняяОбработка.РегистрацияБиометрии.Форма.ФормаРегистрация",СтруктураПараметров,ЭтаФорма);
		Иначе

			ПоказатьОповещениеПользователя("Перевірка номера телефону"
			,, "Код підтвердження не співпадає з надісланим на номер телефону «" + НомерТелефона + "»"
			, БиблиотекаКартинок.Ошибка32, СтатусОповещенияПользователя.Важное);

			ТекущийЭлемент = Элементы.КодПодтверждения;

		КонецЕсли;

	Иначе

		ПоказатьОповещениеПользователя("Перевірка номера телефону"
		,, "Код підтвердження не отримано. Можливо, не відповідає номер телефону «" + НомерТелефона + "»"
		, БиблиотекаКартинок.Ошибка32, СтатусОповещенияПользователя.Важное);

		ТекущийЭлемент = Элементы.КодПодтверждения;
	
	КонецЕсли;

	

КонецПроцедуры

&НаСервере
Процедура УстановитьНомерТелефона()
	СтрокаТелефон = Сотрудник.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.Телефон,"Тип");
	Если СтрокаТелефон = Неопределено Тогда
		СообщениеПользователю = Новый СообщениеПользователю();
		СообщениеПользователю.Текст = "Контактний телефон не знайдено!";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	НомерТелефона = СтрокаТелефон.Представление;
	
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Сотрудник") Тогда
		Сотрудник = Параметры.Сотрудник;
		УстановитьНомерТелефона();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаТелефонаНеуспешноЗавершение(Параметр1,Параметр2)    Экспорт
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаТелефонаУспешноЗавершение(Параметр1,Параметр2)    Экспорт

КонецПроцедуры

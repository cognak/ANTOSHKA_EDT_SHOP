
&НаКлиенте
Процедура ПодключитьУстройство()
	ОписаниеОшибки = "";
			
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("БиометрическийСканер");
	
	МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки);				
	
	Если ОписаниеОшибки <> "" Тогда
		Предупреждение(ОписаниеОшибки);	
	Иначе  
		ИдентификаторУстройства = МенеджерОборудованияКлиент.ВыбратьУстройство("БиометрическийСканер","Выберите устройство","Устройство не подключено!"); 
		СтруктураПараметров = ПолучитьПараметрыУстройства(ИдентификаторУстройства);
		ВходныеПараметры  = Неопределено;
		ВыходныеПараметры = Неопределено;

		//мДрайвер = МенеджерОборудованияКлиент.ПолучитьОбъектДрайвера(СтруктураПараметров.ОбработчикДрайвера,"",СтруктураПараметров.Параметры);
		Успешно = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,"ПодключитьУстройство",ВходныеПараметры,ВыходныеПараметры,10);
		Если Успешно Тогда
			Элементы.СтатусСканера.Заголовок = "Подключен";
		Иначе                                                                                    
			Если ВыходныеПараметры <> Неопределено И ВыходныеПараметры.Количество() >= 3 Тогда         
				ОтветСканера = ВыходныеПараметры[2];
			Иначе
				ОтветСканера = "Неизвестная ошибка";
			КонецЕсли;                                                                         
			
			
			Элементы.СтатусСканера.Заголовок = "Не подключен: "+ОтветСканера;
		КонецЕсли;
		
	КонецЕсли;        
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыУстройства(ИдентификаторУстройства)
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("Параметры",ИдентификаторУстройства.Параметры.Получить());
	СтруктураПараметры.Вставить("ОбработчикДрайвера",ИдентификаторУстройства.ОбработчикДрайвера);
	
	Возврат СтруктураПараметры;
КонецФункции


&НаКлиенте
Процедура ТестУстройства(Команда)
	Результат = Ложь;
	ОписаниеОшибки = "";	

	Если Не ЗначениеЗаполнено(ИдентификаторУстройства) Тогда
		ИдентификаторУстройства = МенеджерОборудованияКлиент.ВыбратьУстройство("БиометрическийСканер","Выберите устройство","Устройство не подключено!");
	КонецЕсли;

	Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(ЭтотОбъект, ИдентификаторУстройства, ОписаниеОшибки);

	Если Результат Тогда

		ВходныеПараметры  = Неопределено;
		ВыходныеПараметры = Неопределено;

		Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
		                                                        "ТестУстройства",
		                                                        ВходныеПараметры,
		                                                        ВыходныеПараметры);

		Если НЕ Результат Тогда
			Предупреждение("Ошибка при тестировании устройства!");
		Иначе
			Предупреждение(ВыходныеПараметры[1]);
		КонецЕсли;

		МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(ЭтотОбъект,
		                                                                 ИдентификаторУстройства);

	Иначе

		Сообщить("При підключенні пристрою (Біосканер) сталася помилка." + Символы.ПС + ОписаниеОшибки);

	КонецЕсли;

	

КонецПроцедуры

&НаКлиенте
Процедура ОтключитьУстройство()
	Результат = Ложь;
	ОписаниеОшибки = "";	

	Если Не ЗначениеЗаполнено(ИдентификаторУстройства) Тогда
		ИдентификаторУстройства = МенеджерОборудованияКлиент.ВыбратьУстройство("БиометрическийСканер","Выберите устройство","Устройство не подключено!");
	КонецЕсли;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
	                                                        "ОтключитьУстройство",
	                                                        ВходныеПараметры,
	                                                        ВыходныеПараметры);

	Если НЕ Результат Тогда
		Предупреждение(ВыходныеПараметры[1]);
	Иначе
		Элементы.СтатусСканера.Заголовок = "Не подключен";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Сотрудник = Параметры.Сотрудник;
	
КонецПроцедуры


&НаКлиенте
Процедура Зарегистрировать(Команда)
	Результат = Ложь;
	ОписаниеОшибки = "";	

	
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		Предупреждение("Укажите сотрудника у которого снимается отпечаток!");
		Возврат;
	КонецЕсли;
	
	Элементы.СтатусСканера.Заголовок = "Регистрация";
	Если Не ЗначениеЗаполнено(ИдентификаторУстройства) Тогда
		ИдентификаторУстройства = МенеджерОборудованияКлиент.ВыбратьУстройство("БиометрическийСканер","Выберите устройство","Устройство не подключено!");
	КонецЕсли;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;
	
	//в х64 разрядной версии проблема с подключением к контексту 1С. Драйвер не может генерировать внешнее событие. Поэтому регистрация отпечатка будет происходить
	//по следующей схеме: снимаем 3 отпечатка, закидываем в библиотеку и получаем зарегистрированный вариант.
	//Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
	//                                                        "РегистрацияОтпечатка",
	//                                                        ВходныеПараметры,
	//                                                        ВыходныеПараметры);

	НомерРегистрации = 0;     
	ПредпоследнийОтпечаток = "";
	Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
	                                                        "ЗахватОтпечатка",
	                                                        ВходныеПараметры,
	                                                        ВыходныеПараметры);
	Если НЕ Результат Тогда
		Предупреждение(ВыходныеПараметры[1]);
	Иначе   
		ПодключитьОбработчикОжидания("РегистрацияОтпечаткаХ64",1);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияОтпечаткаХ64() Экспорт     
	
	ОтключитьОбработчикОжидания("РегистрацияОтпечаткаХ64");
	//Элементы.Информация.Заголовок = "Приложите палец к сенсору. Попытка №"+(НомерРегистрации+1);
	ЭтаФорма.Информация = "Приложите палец к сенсору. Попытка №"+(НомерРегистрации+1); 
	ЭтаФорма.ОбновитьОтображениеДанных(Элементы.Информация);
	Если Не ЗначениеЗаполнено(ИдентификаторУстройства) Тогда
		ИдентификаторУстройства = МенеджерОборудованияКлиент.ВыбратьУстройство("БиометрическийСканер","Выберите устройство","Устройство не подключено!");
	КонецЕсли;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;
	
	Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
	                                                        "ПоследнийОтпечаток",
	                                                        ВходныеПараметры,
	                                                        ВыходныеПараметры);
	Если НЕ Результат Тогда
		Предупреждение(ВыходныеПараметры[1]);
		Сообщить("Регистрация неуспешно!");
		Возврат;
	КонецЕсли;
	
	ПоследнийОтпечаток = ВыходныеПараметры[0];
	Если ((ПоследнийОтпечаток <> ПредпоследнийОтпечаток) И (ПоследнийОтпечаток <> "")) Тогда  
		//Элементы.Информация.Заголовок = "Зафиксировано!";  
		//проверим, что это не палец какого-то другого сотрудника
		Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
		                                                        "НайтиПоБД",
		                                                        ВходныеПараметры,
		                                                        ВыходныеПараметры);

		Если Не Результат Тогда      
			//Проверим что прикладывается один и тот же палец 
			РазрешаемРегистрироватьПопытку = Истина;
			Если НомерРегистрации > 0 Тогда
				ВходныеПараметры = Новый Массив;
				ВходныеПараметры.Добавить(ПоследнийОтпечаток);
				ВходныеПараметры.Добавить(ПредпоследнийОтпечаток);
				Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
			                                                        "СравнитьОтпечатки",
			                                                        ВходныеПараметры,
			                                                        ВыходныеПараметры);
				Если Результат Тогда
					Если ВыходныеПараметры[0]<90 Тогда
						РазрешаемРегистрироватьПопытку = Ложь;
						ЭтаФорма.Информация = "Нужно прикладывать один и тот же палец!";
					КонецЕсли;
				КонецЕсли;   
			КонецЕсли;                                                        
			
			Если РазрешаемРегистрироватьПопытку Тогда
				ЭтаФорма.Информация = "Зафиксировано";
				ПредпоследнийОтпечаток = ПоследнийОтпечаток;
				Если АдресРегистрации = "" Тогда
					МассивОтпечатков = Новый Массив;
				Иначе
					МассивОтпечатков  = ПолучитьИзВременногоХранилища(АдресРегистрации);
					Если МассивОтпечатков = Неопределено Тогда
						Сообщить("Почему-то в хранилище ничего нет");  
						МассивОтпечатков = Новый Массив;
					КонецЕсли;
				КонецЕсли;
				МассивОтпечатков.Добавить(ПоследнийОтпечаток);  
				НомерРегистрации = НомерРегистрации + 1;   
				
				АдресРегистрации = ПоместитьВоВременноеХранилище(МассивОтпечатков,ЭтаФорма.УникальныйИдентификатор);
			КонецЕсли;			
		Иначе          
			НомерСотрудника = ВыходныеПараметры[0]-1;
			//Сообщить("Номер сотрудника в БД "+НомерСотрудника);
			
			//СтрокаСотрудник = Сотрудники[НомерСотрудника];
			ЭтаФорма.Информация = "Пересадка пальца?"+Символы.ПС+"Данные уже зарегестрированы за другим сотрудником!";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НомерРегистрации < 3 Тогда
		Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
	                                                        "ЗахватОтпечатка",
	                                                        ВходныеПараметры,
	                                                        ВыходныеПараметры); 
															
		ПодключитьОбработчикОжидания("РегистрацияОтпечаткаХ64",1); 
	Иначе
        ВходныеПараметры = Новый Массив;
		ВходныеПараметры.Добавить(МассивОтпечатков);
		Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
	                                                        "РегистрацияПоДанным",
	                                                        ВходныеПараметры,
	                                                        ВыходныеПараметры);
		Если Результат Тогда
			СохранитьОтпечатокВБазе(ВыходныеПараметры[0]);
		Иначе
			ЭтаФорма.Информация = ""+ВыходныеПараметры[1];
		КонецЕсли;													

		ЭтаФорма.Информация = "";
		ЭтаФорма.ОбновитьОтображениеДанных(Элементы.Информация);
	КонецЕсли;
КонецПроцедуры

 &НаКлиенте
Процедура СохранитьОтпечатокВБазе(Отпечаток)
	Если СохранитьОтпечатокВБазеСервер(Отпечаток) Тогда
		Сообщить("Отпечаток сохранен в базе данных!");
		ЭтаФорма.Закрыть(Новый Структура("Успешно",Истина));
	Иначе
		Сообщить("Не удалось сохранить отпечаток в базе данных");
		ЭтаФорма.Закрыть(Новый Структура("Успешно",Ложь));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СохранитьОтпечатокВБазеСервер(Отпечаток)
	Возврат РаботаСБиометричекимиДанными.УстановитьБиометриюСотруднику(Сотрудник,Отпечаток);
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьУстройство();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	ОтключитьУстройство();
КонецПроцедуры




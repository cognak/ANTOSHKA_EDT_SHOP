#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	АдминистративныйРежим = РольДоступна(Метаданные.Роли.АдминистраторСистемы)
						И ТехническаяПоддержкаВызовСервера.ОтладочныйРежимРаботы();

	Элементы.ГруппаИнструментарийАдминистратора.Видимость = АдминистративныйРежим;

	Параметры.Свойство("КассаККМ"                  , Объект.КассаККМ);
	Параметры.Свойство("ВыполнитьЗакрытиеСразу"    , ВыполнитьЗакрытиеСразу);
	
	ИспользоватьПодключаемоеОборудование = ЗначениеНастроекПовтИсп.ИспользоватьПодключаемоеОборудование();
	
	Элементы.ВыполнитьСверкуИтоговПоПлатежнымКартам.Видимость = ИспользоватьПодключаемоеОборудование;
	Элементы.ЭквайринговыйТерминал.Видимость                  = ИспользоватьПодключаемоеОборудование;
	
	КассаККМПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Перем ВыполнениеПрервано;

	Если ВыполнитьЗакрытиеСразу Тогда

		ВыполнениеПрервано = Ложь;
		ВыполнитьЗакрытиеСмены(ВыполнениеПрервано);

		Если НЕ ВыполнениеПрервано Тогда

			Отказ = Истина;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаСервере	//	LNK 01.07.2021 05:28:05
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)

	Если Объект.КассаККМ.Пустая() И АдминистративныйРежим Тогда

		ПриИзмененииОтчетаОРозничныхПродажахНаСервере();

	ИначеЕсли НЕ АдминистративныйРежим Тогда

		ОтчетОРозничныхПродажах = Неопределено;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура КассаККМПриИзменении(Элемент)
	
	КассаККМПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ЭквайринговыйТерминалПриИзменении(Элемент)
	
	ЭквайринговыйТерминалПриИзмененииСевер();
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийКомандФормы

&НаКлиенте
Процедура ЗакрытьСмену(Команда)

	Отказ = Ложь;
	ВыполнитьЗакрытиеСмены(Отказ);

КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьДокумент(Команда)

	ПараметрыФормы = Новый Структура("Ключ", ОтчетОРозничныхПродажах);
	ФормаДокумента = ПолучитьФорму("Документ.ОтчетОРозничныхПродажах.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект, ОтчетОРозничныхПродажах);
	ДанныеФормы	   = ФормаДокумента.Объект;

	ПерезаполнитьДокументНаСервере(ДанныеФормы);

	КопироватьДанныеФормы(ДанныеФормы, ФормаДокумента.Объект);
	ФормаДокумента.Модифицированность = Истина;
	ФормаДокумента.ВыполнитьПодготовкуОбъектаПередОткрытиемФормы(Ложь);
	ФормаДокумента.ВыполнитьПодготовкуОбъектаПередОткрытиемФормы(Истина);
	ФормаДокумента.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура ОтчетОРозничныхПродажахНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Если НЕ Объект.КассаККМ.Пустая() Тогда

		СтандартнаяОбработка = Ложь;

		ПараметрыФормы = Новый Структура("Отбор", Новый Структура("КассаККМ", Объект.КассаККМ));
		ОткрытьФорму("Документ.ОтчетОРозничныхПродажах.ФормаВыбора"
			, ПараметрыФормы
			, Элемент
			, ЭтотОбъект
			,,,
			, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
		);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтчетОРозничныхПродажахПриИзменении(Элемент)

	ПриИзмененииОтчетаОРозничныхПродажахНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ОткатитьКассовуюСменуПоОтчетуОРозничныхПродажах(Команда)

	Если НЕ ОбщегоНазначенияКлиентСервер.СсылкаПустая(ОтчетОРозничныхПродажах) Тогда

		ОписаниеОповещения = Новый ОписаниеОповещения("ОткатитьКассовуюСменуПоОтчетуОРозничныхПродажахЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения
			, "Виконати відкат касової зміни?
			  |У В А Г А!
			  |Операцію неможливо скасувати, контроль обліку NAV не виконується!
			  |Буде знищено «" + ОтчетОРозничныхПродажах + "»!"
			, РежимДиалогаВопрос.ОКОтмена
			, 30
			, КодВозвратаДиалога.Отмена
			, "Небезпечна операція"
			, КодВозвратаДиалога.Отмена
		);

	Иначе

		ПоказатьОповещениеПользователя("Операція неможлива!",, "Не обрано документ «Звіт про роздрібні продажі»", БиблиотекаКартинок.Предупреждение32);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткатитьКассовуюСменуПоОтчетуОРозничныхПродажахЗавершение(КодВозврата, ДополнительныеПараметры)	Экспорт

	Если КодВозврата = КодВозвратаДиалога.ОК Тогда

		ОткатитьКассовуюСменуПоОтчетуОРозничныхПродажахНаСервере();

		Оповестить("ИзмененыДанныеКассовойСмены");	//	LNK 03.07.2021 06:38:19

	Иначе

		ПоказатьОповещениеПользователя("Скасування",, "Операцію скасовано користувачем", БиблиотекаКартинок.Предупреждение32);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура КассаККМПриИзмененииСервер()
	
	РеквизитыККМ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Объект.КассаККМ, "ПодключаемоеОборудование, Владелец, Магазин");

	ПодключаемоеОборудование = РеквизитыККМ.ПодключаемоеОборудование;
	Организация              = РеквизитыККМ.Владелец;
	
	Если ИспользоватьПодключаемоеОборудование Тогда
		
		ЭквайринговыйТерминал = ЭквайринговыйТерминалПоКассеККМ();
		
		ЭквайринговыйТерминалПриИзмененииСевер();
		
		Если ВыполнитьЗакрытиеСразу И ЗначениеЗаполнено(ЭквайринговыйТерминал) Тогда
			
			ВыполнитьСверкуИтоговПоПлатежнымКартам = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИспользоватьПрямуюИнкассацию = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыККМ.Магазин, "ИспользоватьПрямуюИнкассацию", Ложь, Ложь);
	УстановитьВидимостьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЭквайринговыйТерминалПриИзмененииСевер()
	
	ПодключаемоеОборудованиеЭТ = ЭквайринговыйТерминал.ПодключаемоеОборудование;
	
КонецПроцедуры
	
#КонецОбласти

#Область ПрочийФункционал

&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	Элементы.СуммаФактическойВыемки.Видимость	= ИспользоватьПрямуюИнкассацию;
	Если НЕ Элементы.СуммаФактическойВыемки.Видимость Тогда
		СуммаФактическойВыемки = 0;
	КонецЕсли;
	
	Элементы.ЗакрытьБезZОтчета.Видимость = ИспользоватьПодключаемоеОборудование И ЗначениеЗаполнено(ПодключаемоеОборудование);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗакрытиеСмены(Отказ)

	Перем СсылкаНаОтчет, НужноДополнительноеПредупреждение;
	
	ОчиститьСообщения();
	
	Если НЕ ЗначениеЗаполнено(Объект.КассаККМ)  Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		"Не обрано касу ККМ!",
		Объект,
		"Объект.КассаККМ",
		);
		
		Возврат;
	КонецЕсли;
	
	СтруктураСостояниеКассовойСмены = РозничныеПродажиСервер.ПолучитьСостояниеКассовойСмены(Объект.КассаККМ);
	
	Если НЕ СтруктураСостояниеКассовойСмены.СменаОткрыта Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Касову зміна не відкрито!",
			Объект
		);
		
		Возврат;

	КонецЕсли;
	
	Если УправлениеПользователями.ПолучитьБулевоЗначениеПраваПользователя(ПредопределенноеЗначение("ПланВидовХарактеристик.ПраваПользователей.ПроверятьНепробитыеЧекиПриЗакрытииСмены"), Ложь) Тогда
		
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("КассаККМ", Объект.КассаККМ);
		
		РезультатОткрытия = ОткрытьФормуМодально("Обработка.ЗакрытиеКассовойСмены.Форма.ПроверкаНепробитыхЧеков", ПараметрыЗаполнения);
		
		Если НЕ РезультатОткрытия = "Закрытие смены" Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Закриття касової зміни перервано користувачем.",
			Объект
			);
			
			Возврат;

		КонецЕсли;
		
	КонецЕсли;
	
//	LNK 08.02.2017 10:34:20 - Попытка
	Попытка
	
		ВыполнитьСверткуИтогов();
	
	Исключение

		ТекстОшибки = ОписаниеОшибки();
		ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Ошибка"
		,, Объект.КассаККМ,, "Помилка: " + ТекстОшибки,, Истина);

	КонецПопытки;
	
	СписокДокументов.Очистить();
	СуммаВыемки = 0.00;
	СсылкаНаОтчет = Неопределено;
	НужноДополнительноеПредупреждение = Ложь;
	
	ОбработатьЧекиККМСервер(Отказ, СуммаВыемки, СсылкаНаОтчет, НужноДополнительноеПредупреждение);
	
//	LNK 27.09.2016 10:26:21
	Если НЕ Отказ Тогда

		Если НЕ ИспользоватьПрямуюИнкассацию Тогда
			
			СуммаФактическойВыемки = СуммаВыемки;

		Иначе
			
			Ошибка = Истина;
			
			Пока Ошибка Цикл
				
				Если ВыполнитьЗакрытиеСразу Тогда
					
					ЗначениеВыбораСумма = 0;
					ПараметрыОткрытия = Новый Структура;
					ПараметрыОткрытия.Вставить("Заголовок"           , "Введення суми виїмки.");
					ПараметрыОткрытия.Вставить("МаксимальноеЗначение", 0);
					ПараметрыОткрытия.Вставить("ЧислоВвода"          , ЗначениеВыбораСумма);
					ПараметрыОткрытия.Вставить("Отрицательное"       , Ложь);
					ПараметрыОткрытия.Вставить("ПрочитатьКарту"		 , Ложь);	//	LNK 30.11.2022 15:47:23

					ИмяФормы = ?(ПустаяСтрока(ОбщегоНазначенияРТ.ИмяВнешнегоРМК())
							, "Обработка.РМК"
							, "ВнешняяОбработка." + ОбщегоНазначенияРТ.ИмяВнешнегоРМК()
						) + ".Форма.ФормаВводаЧисла";
					
					Результат = ОткрытьФормуМодально(ИмяФормы, ПараметрыОткрытия, УникальныйИдентификатор);
					
					Если НЕ Результат = Неопределено Тогда
						ЗначениеВыбораЧисло = Результат.ВведенноеЧисло;
						Если ЗначениеЗаполнено(ЗначениеВыбораЧисло) Тогда
							СуммаФактическойВыемки = ЗначениеВыбораЧисло;
						КонецЕсли;
					КонецЕсли;
				
				КонецЕсли;
				
				Если СуммаФактическойВыемки > СуммаВыемки Тогда
				
					ТекстВопроса = "Невірно вказано суму фактичної виїмки!" + Символы.ПС + Символы.ПС
								+ "«ОК» - виправити суму фактичної виїмки" + Символы.ПС
								+ "«Скасувати» - провести інкасацію «під нуль».";
					
					Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
					
					Если Ответ = КодВозвратаДиалога.Отмена Тогда
						СуммаФактическойВыемки = СуммаВыемки;
						Ошибка = Ложь;
					Конецесли;
				Иначе
				
					Ошибка = Ложь;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		СуммаВКассеНаРазмен = СуммаВыемки - СуммаФактическойВыемки;
		
		ОшибкаТранзакции = Ложь;
		ДокументВыемка = Неопределено;
		
		Если СуммаФактическойВыемки <> 0.00 Тогда

			ДенежныеСредстваКлиент.ВыемкаДенег(
				СуммаФактическойВыемки,
				Объект.КассаККМ,
				УникальныйИдентификатор,
				ОшибкаТранзакции,
				,
				ДокументВыемка,
				СсылкаНаОтчет
			);

			Если НЕ ОшибкаТранзакции Тогда

				СписокДокументов.Добавить(ДокументВыемка, "ВыемкаДенежныхСредствИзКассыККМ");

			КонецЕсли;

		КонецЕсли;

		ОшибкаТранзакции = Ложь;
		ДокументВыемкаРазмен = Неопределено;
		
		Если СуммаВКассеНаРазмен <> 0.00 Тогда

			ДенежныеСредстваКлиент.ВыемкаДенег(
				СуммаВКассеНаРазмен,
				Объект.КассаККМ,
				УникальныйИдентификатор,
				ОшибкаТранзакции,
				,
				ДокументВыемкаРазмен,
				СсылкаНаОтчет
			);

			Если НЕ ОшибкаТранзакции Тогда

				СписокДокументов.Добавить(ДокументВыемкаРазмен, "ВыемкаДенежныхСредствИзКассыККМ");

			КонецЕсли;

		КонецЕсли;

		ОписаниеОшибки = "";

		Если ИспользоватьПодключаемоеОборудование И ЗначениеЗаполнено(ПодключаемоеОборудование) И НЕ ЗакрытьБезZОтчета Тогда

			Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
				
				// Подключение устройства
				Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                              ПодключаемоеОборудование, ОписаниеОшибки);

				Если Результат Тогда

					ВыходныеПараметры	= Неопределено;
					ВходныеПараметры	= Новый Массив(3);
					ВходныеПараметры[2]	= Новый Массив(22);
					ВходныеПараметры[2][21] = ЗначениеНастроекПовтИсп.ПолучитьПараметрыКассыККМ(Объект.КассаККМ);

					Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ПодключаемоеОборудование,
					                                                        "PrintZReport",
					                                                        ВходныеПараметры,
					                                                        ВыходныеПараметры);

					Если НЕ Результат Тогда

						ТекстСообщения = СтрЗаменить(
							"Під час зняття звіту на фіскальному реєстраторі сталася помилка.
							|«%ОписаниеОшибки%»
							|Звіт на фіскальному реєстраторі не сформовано."
							, "%ОписаниеОшибки%"
							, ВыходныеПараметры[1]
						);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);

					Иначе
						
						Результат = РозничныеПродажиСервер.ЗакрытьКассовуюСмену(Объект.КассаККМ, ОписаниеОшибки, СсылкаНаОтчет);
						
						Если НЕ Результат Тогда
							
							ТекстСообщения = СтрЗаменить(
								"Під час закриття зміни сталася помилка.
	                            |Касову зміну не закрито.
	                            |Додатковий опис:
	                            |%ДополнительноеОписание%"
								, "%ДополнительноеОписание%"
								, ОписаниеОшибки
							);
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
							
						КонецЕсли;
						
					КонецЕсли;

					МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
					                                                                 ПодключаемоеОборудование);
				Иначе

					ТекстСообщения = "При підключенні пристрою [%1] виникла помилка." + Символы.ПС + ОписаниеОшибки;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СокрЛП(ПодключаемоеОборудование))
						,,,,Отказ
					);

				КонецЕсли;

			Иначе

				ТекстСообщения = "Попередньо необхідно вибрати робоче місце устаткування поточного сеансу, що підключається.";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);

			КонецЕсли;

		Иначе
			
			Результат = РозничныеПродажиСервер.ЗакрытьКассовуюСмену(Объект.КассаККМ, ОписаниеОшибки, СсылкаНаОтчет);
			
			Если Не Результат Тогда
				
				ТекстСообщения = СтрЗаменить(
					"Під час закриття зміни сталася помилка.
	                |Касову зміну не закрито.
	                |Додатковий опис:
	                |%ДополнительноеОписание%"
					, "%ДополнительноеОписание%"
					, ОписаниеОшибки
				);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если НужноДополнительноеПредупреждение И ВыполнитьЗакрытиеСразу Тогда
			
			ПоказатьОповещениеПользователя("КАСОВУ ЗМІНУ ЗАКРИТО"
				,
				, "Не вдалося провести документи руху товарів (ймовірно, це подарунки чи сертифікати)"
				, БиблиотекаКартинок.Предупреждение32
			);
			
		КонецЕсли;
		
		Если НЕ Отказ Тогда
			
			ОткрытьСписокДокументов();
			
		КонецЕсли;

	КонецЕсли;
	
	Оповестить("ИзмененыДанныеКассовойСмены");	//	LNK 15.09.2020 06:37:43

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСверткуИтогов()

	Если НЕ ВыполнитьСверкуИтоговПоПлатежнымКартам Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторУстройстваЭТ = ПодключаемоеОборудованиеЭТ;
	ИдентификаторУстройстваФР = ПодключаемоеОборудование;
	
	ОписаниеОшибки            = "";

	СуммаОперации       = 0;
	НомерКарты          = "";
	НомерСсылкиОперации = "";
	НомерЧека           = "";
	СтрокаСлипЧека      = "";

	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда

	//	LNK 08.02.2017 10:03:23
		ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Примечание"
		,, Объект.КассаККМ,, "1. Начало сверки итогов по платежным картам", СокрЛП(Объект.КассаККМ), Истина);

		Если ЗначениеЗаполнено(ИдентификаторУстройстваЭТ) Тогда

			Если ЗначениеЗаполнено(ИдентификаторУстройстваФР) Тогда

			//	LNK 08.02.2017 10:03:23
				ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Примечание"
				,, Объект.КассаККМ,, "2. Подключение устройства ЭТ", СокрЛП(ИдентификаторУстройстваЭТ), Истина);

				// Подключение устройства ЭТ
				РезультатЭТ = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                                ИдентификаторУстройстваЭТ,
				                                                                                ОписаниеОшибки);

				Если РезультатЭТ Тогда

				//	LNK 08.02.2017 10:03:23
					ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Примечание"
					,, Объект.КассаККМ,, "3. Подключение устройства ФР", СокрЛП(ИдентификаторУстройстваФР), Истина);
					
					// Подключение устройства ФР
					РезультатФР = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
					                                                                                ИдентификаторУстройстваФР,
					                                                                                ОписаниеОшибки);
					Если РезультатФР Тогда

						ВходныеПараметры  = Неопределено;
						ВыходныеПараметры = Неопределено;

					//	LNK 08.02.2017 10:03:23
						ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Примечание"
						,, Объект.КассаККМ,, "4. Выполнение операции на ЭТ - 'Settlement'", СокрЛП(ИдентификаторУстройстваЭТ), Истина);

						// Выполнение операции на ЭТ
						РезультатЭТ = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваЭТ,
						                                                          "Settlement",
						                                                          ВходныеПараметры,
						                                                          ВыходныеПараметры);

						Если НЕ РезультатЭТ Тогда

							ТекстСообщения = СтрЗаменить(
								"Під час виконання операції виникла помилка:
								|""%ОписаниеОшибки%"".
								|Операцію звірки підсумків не було проведено."
								, "%ОписаниеОшибки%"
								, ВыходныеПараметры[1]
							);
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

						//	LNK 08.02.2017 10:03:23
							ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Ошибка"
							,, Объект.КассаККМ,, "4. Ошибка выполнения операции на ЭТ - 'Settlement':" + Символы.ПС + ТекстСообщения, СокрЛП(ИдентификаторУстройстваЭТ), Истина);

						Иначе

							Если Не ПустаяСтрока(ВыходныеПараметры[0][1]) Тогда

								глПодключаемоеОборудование.Вставить("ПоследнийСлипЧек", ВыходныеПараметры[0][1]);

							КонецЕсли;

							НомерКарты          = "";
							НомерСсылкиОперации = "";
							НомерЧека           = "";
							СтрокаСлипЧека      = ВыходныеПараметры[0][1];

							Если НЕ ПустаяСтрока(СтрокаСлипЧека) Тогда

							//	LNK 08.02.2017 10:03:23
								ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Примечание"
								,, Объект.КассаККМ,, "5. Выполнение операции на ФР - 'PrintText'", СокрЛП(ИдентификаторУстройстваФР), Истина);

								ВходныеПараметры = Новый Массив();
								ВходныеПараметры.Добавить(СтрокаСлипЧека);
								ВыходныеПараметры = Неопределено;

								РезультатФР = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройстваФР,
								                                                          "PrintText",
								                                                          ВходныеПараметры,
								                                                          ВыходныеПараметры);
								Если НЕ РезультатФР Тогда

									ТекстСообщения = СтрЗаменить(
										"Під час друку сліп-чека виникла помилка:
										|""%ОписаниеОшибки%""."
										, "%ОписаниеОшибки%"
										, ВыходныеПараметры[1]
									);
									ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

								//	LNK 08.02.2017 10:03:23
									ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Ошибка"
									,, Объект.КассаККМ,, "5. Ошибка выполнения операции на ФР - 'PrintText':" + Символы.ПС + ТекстСообщения, СокрЛП(ИдентификаторУстройстваФР), Истина);

								КонецЕсли;

							Иначе

								ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Операцію звіряння підсумків успішно виконано!");

							//	LNK 08.02.2017 10:03:23
								ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Примечание"
								,, Объект.КассаККМ,, "6. УСПЕШНОЕ ЗАВЕРШЕНИЕ операции сверки итогов", "ЭТ:[" + СокрЛП(ИдентификаторУстройстваЭТ) + "], ФР:[" +  СокрЛП(ИдентификаторУстройстваФР) + "]", Истина);

							КонецЕсли;

						КонецЕсли;

					//	LNK 08.02.2017 10:03:23
						ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Примечание"
						,, Объект.КассаККМ,, "7. Начало процесса отключения устройств", "ЭТ:[" + СокрЛП(ИдентификаторУстройстваЭТ) + "], ФР:[" +  СокрЛП(ИдентификаторУстройстваФР) + "]", Истина);

						// Отключение устройства ФР
						МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
						                                                                 ИдентификаторУстройстваФР);

					//	LNK 08.02.2017 10:03:23
						ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Примечание"
						,, Объект.КассаККМ,, "8. Отключение устройства ФР завершено нормально", СокрЛП(ИдентификаторУстройстваФР), Истина);

						// Отключение устройства ЭТ
						МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
						                                                                 ИдентификаторУстройстваЭТ);
					//	LNK 08.02.2017 10:03:23
						ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Примечание"
						,, Объект.КассаККМ,, "9. Отключение устройства ЭТ завершено нормально", СокрЛП(ИдентификаторУстройстваЭТ), Истина);

					Иначе

						ТекстСообщения = СтрЗаменить(
							"Під час підключення фіскального реєстратора сталася помилка:
							|""%ОписаниеОшибки%"".
							|Операцію звірки підсумків не було проведено."
							, "%ОписаниеОшибки%"
							, ОписаниеОшибки
						);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

					//	LNK 08.02.2017 10:03:23
						ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Ошибка"
						,, Объект.КассаККМ,, "3. Ошибка подключения устройства ФР:" + Символы.ПС + ТекстСообщения, СокрЛП(ИдентификаторУстройстваФР), Истина);

					КонецЕсли;

				Иначе

					ТекстСообщения = СтрЗаменить(
						"Під час підключення еквайрингового терміналу сталася помилка:
						|""%ОписаниеОшибки%"".
						|Операцію звірки підсумків не було проведено."
						, "%ОписаниеОшибки%"
						, ОписаниеОшибки
					);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

				//	LNK 08.02.2017 10:03:23
					ЖурналСобытий.Регистрация("ЗакрытиеКассовойСмены.Эквайринг", "Ошибка"
					,, Объект.КассаККМ,, "2. Подключение устройства ЭТ:" + Символы.ПС + ТекстСообщения, СокрЛП(ИдентификаторУстройстваЭТ), Истина);

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	Иначе

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Попередньо необхідно вибрати робоче місце устаткування поточного сеансу, що підключається.");

	КонецЕсли;
	

КонецПроцедуры

&НаСервере
Процедура ОбработатьЧекиККМСервер(Отказ, СуммаВыемки, СсылкаНаОтчет, НужноДополнительноеПредупреждение)

	УстановитьПривилегированныйРежим(Истина);
	ПараметрыСеанса.ВыполняютсяСлужебныеДействия = Истина;
	УстановитьПривилегированныйРежим(Ложь);

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОбработатьЧекиКассовойСмены(СоздатьОтчетОРозничныхПродажах(), Отказ, СписокДокументов, СуммаВыемки, СсылкаНаОтчет, НужноДополнительноеПредупреждение);

	УстановитьПривилегированныйРежим(Истина);
	ПараметрыСеанса.ВыполняютсяСлужебныеДействия = Ложь;
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокДокументов()

	Для каждого ЭлементаСписка Из СписокДокументов Цикл

		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Ключ", ЭлементаСписка.Значение);
		ПараметрыОткрытия.Вставить("РежимЗакрытияСмены", Истина);

		ОткрытьФорму("Документ." + ЭлементаСписка.Представление + ".ФормаОбъекта"	//	LNK 08.04.2020 08:26:17
			, ПараметрыОткрытия
			, ?(ВладелецФормы = Неопределено, ЭтотОбъект, ВладелецФормы)
			, УникальныйИдентификатор
			,,
			,
			, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
		);

	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ЭквайринговыйТерминалПоКассеККМ()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЭквайринговыеТерминалы.Ссылка
	|ИЗ
	|	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|ГДЕ
	|	ЭквайринговыеТерминалы.Касса = &Касса
	|	И (НЕ ЭквайринговыеТерминалы.ПометкаУдаления)
	|	И (НЕ ЭквайринговыеТерминалы.ИспользоватьБезПодключенияОборудования)";
	
	Запрос.УстановитьПараметр("Касса", Объект.КассаККМ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Ссылка;
		
	Иначе
		Возврат Справочники.ЭквайринговыеТерминалы.ПустаяСсылка();
	КонецЕсли;
	

КонецФункции

&НаСервере
// Функция осуществляет создание нового документа "Отчёт о розничных продажах".
//
// Параметры:
//
// Возвращаемое значение:
//  <ДокументОбъект.ОтчетОРозничныхПродажах> - Созданный документ.
//
Функция СоздатьОтчетОРозничныхПродажах()

	ДокументОбъект = Документы.ОтчетОРозничныхПродажах.СоздатьДокумент();
	ДокументОбъект.Дата     = ТекущаяДата();
	ДокументОбъект.КассаККМ = Объект.КассаККМ;

	РеквизитыКассы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.КассаККМ, "Магазин, Владелец");

	ДокументОбъект.Магазин     = РеквизитыКассы.Магазин;
	ДокументОбъект.Организация = РеквизитыКассы.Владелец;
	
	СтруктураРеквизизитовМагазина = Новый Структура;
	СтруктураРеквизизитовМагазина.Вставить("ЦенаВключаетНДС", "ПравилоЦенообразования.ЦенаВключаетНДС");
	РеквизитыМагазина = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыКассы.Магазин, СтруктураРеквизизитовМагазина);
	
	ДокументОбъект.ЦенаВключаетНДС = РеквизитыМагазина.ЦенаВключаетНДС;
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ДокументОбъект.УчитыватьНДС  = Истина;
	ДокументОбъект.АвторасчетНДС = ПродажиПовтИсп.ПолучитьАвторасчетНДС(ДокументОбъект.Магазин, ДокументОбъект.Дата, Истина);

	Возврат ДокументОбъект;

КонецФункции

&НаСервере
Процедура ПриИзмененииОтчетаОРозничныхПродажахНаСервере()

	Если НЕ ОбщегоНазначенияКлиентСервер.СсылкаПустая(ОтчетОРозничныхПродажах) Тогда

		Объект.КассаККМ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтчетОРозничныхПродажах, "КассаККМ");

	КонецЕсли;

КонецПроцедуры
	
#КонецОбласти

#Область АдминистративныйИнструментарий

&НаСервере
Процедура ПерезаполнитьДокументНаСервере(ДанныеФормы)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");

	ДокументОбъект = ОтчетОРозничныхПродажах.ПолучитьОбъект();

	ОбработкаОбъект.ОбработатьЧекиКассовойСмены(ДокументОбъект, Ложь, Новый СписокЗначений,,,, Истина);

	ЗначениеВДанныеФормы(ДокументОбъект, ДанныеФормы);

КонецПроцедуры

&НаСервере	//	LNK 30.06.2021 09:50:01
Процедура ОткатитьКассовуюСменуПоОтчетуОРозничныхПродажахНаСервере()

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ВыполнитьОткатКассовойСменыПоДокументу(ОтчетОРозничныхПродажах, ОткатОткрываетКассовуюСмену);

КонецПроцедуры

#КонецОбласти






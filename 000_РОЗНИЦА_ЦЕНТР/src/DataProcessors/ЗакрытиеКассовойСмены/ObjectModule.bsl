#Область ПрограммныйИнтерфейсОбработки

//	LNK 24.09.2016 12:04:35
Процедура ОбработатьЧекиКассовойСмены(ОтчетОРозничныхПродажах, Отказ, СписокДокументов, СуммаВыемки, СсылкаНаОтчет, НужноДополнительноеПредупреждение, РежимПерезаполнения = Ложь)	Экспорт

	Перем КэшированныеЗначения;

	#Если _ Тогда
	ОтчетОРозничныхПродажах = Документы.ОтчетОРозничныхПродажах.СоздатьДокумент();
	#КонецЕсли

	КрайнийПериод	= ОтчетОРозничныхПродажах.Дата;
	РежимПроведения = РежимПроведенияДокумента.Оперативный;

	МассивДокументовКПроведению = Новый Массив;

	ЗапросПоддержка = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЧекККМ КАК ТаблицаДокументы
	|ГДЕ
	|	ТаблицаДокументы.КассаККМ = &КассаККМ
	|	И ТаблицаДокументы.Проведен
	|	И ВЫБОР
	|			КОГДА &РежимПерезаполнения = ИСТИНА
	|				ТОГДА ТаблицаДокументы.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|						И ТаблицаДокументы.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|			ИНАЧЕ ТаблицаДокументы.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробитый)
	|		КОНЕЦ
	|	И ТаблицаДокументы.Дата <= &КрайнийПериод
	|
	|ДЛЯ ИЗМЕНЕНИЯ
	|	Документ.ЧекККМ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КассыККМ.Владелец КАК Организация,
	|	КассыККМ.Ссылка КАК КассаККМ,
	|	КассыККМ.Магазин КАК Магазин,
	|	КассыККМ.Магазин.СкладПродажи КАК Склад
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.Ссылка = &КассаККМ"
	);
//	Эта таблица нужна только для установки статуса "Архивный" в чеке. Таким образом, при перезаполнении
//	пусть работает, как и при первичном заполнении ...
	ЗапросПоддержка.УстановитьПараметр("КассаККМ"	  , КассаККМ);
	ЗапросПоддержка.УстановитьПараметр("КрайнийПериод", КрайнийПериод);
	ЗапросПоддержка.УстановитьПараметр("РежимПерезаполнения"	, РежимПерезаполнения);
	ЗапросПоддержка.УстановитьПараметр("ОтчетОРозничныхПродажах", ОтчетОРозничныхПродажах.Ссылка);

	ЗапросПоПродажам = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка,
	|	ТаблицаДокументы.ЧекККМПродажа КАК ЧекККМПродажа,
	|	ТаблицаДокументы.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ Ведущая
	|ИЗ
	|	Документ.ЧекККМ КАК ТаблицаДокументы
	|ГДЕ
	|	ТаблицаДокументы.КассаККМ = &КассаККМ
	|	И ТаблицаДокументы.Дата <= &КрайнийПериод
	|	И ТаблицаДокументы.Проведен
	|	И ВЫБОР
	|			КОГДА &РежимПерезаполнения = ИСТИНА
	|				ТОГДА ТаблицаДокументы.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|						И ТаблицаДокументы.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|			ИНАЧЕ ТаблицаДокументы.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробитый)
	|		КОНЕЦ
	|	И (ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|			ИЛИ ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|				И ТаблицаДокументы.ЧекККМПродажа.КассаККМ = &КассаККМ
	|				И ВЫБОР
	|					КОГДА &РежимПерезаполнения = ИСТИНА
	|						ТОГДА ТаблицаДокументы.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|								И ТаблицаДокументы.ЧекККМПродажа.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|					ИНАЧЕ ТаблицаДокументы.ЧекККМПродажа.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробитый)
	|				КОНЕЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ЧекККМПродажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Возвраты.ЧекККМПродажа КАК СсылкаПродажа,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.КлючСвязиБонусныхБаллов КАК КлючСвязиБонусныхБаллов
	|ПОМЕСТИТЬ ОснованияВозвратов
	|ИЗ
	|	(ВЫБРАТЬ
	|		Ведущая.Ссылка КАК Ссылка,
	|		Ведущая.ЧекККМПродажа КАК ЧекККМПродажа,
	|		Ведущая.ВидОперации КАК ВидОперации,
	|		ТоварыВозврата.Номенклатура КАК Номенклатура,
	|		ТоварыВозврата.Упаковка КАК Упаковка
	|	ИЗ
	|		Ведущая КАК Ведущая
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТоварыВозврата
	|			ПО Ведущая.Ссылка = ТоварыВозврата.Ссылка
	|	ГДЕ
	|		Ведущая.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)) КАК Возвраты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТаблицаТовары
	|		ПО Возвраты.ЧекККМПродажа = ТаблицаТовары.Ссылка
	|			И Возвраты.Номенклатура = ТаблицаТовары.Номенклатура
	|			И Возвраты.Упаковка = ТаблицаТовары.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СсылкаПродажа,
	|	Номенклатура,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ВидОперации КАК ВидОперации,
	|	ТаблицаТовары.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|	ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.УслугаБанка КАК УслугаБанка,
	|	ТаблицаТовары.УслугаБанкаПериодПредоставления КАК УслугаБанкаПериодПредоставления,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ТаблицаТовары.ДополнительнаяАналитика КАК ДополнительнаяАналитика,
	|	ТаблицаТовары.ПодакцизныеТоварыДляКоммерческогоИспользования КАК ПодакцизныеТоварыДляКоммерческогоИспользования,
	|	ТаблицаТовары.ПодакцизныйТовар КАК ПодакцизныйТовар,
	|	ТаблицаТовары.Маржинальность КАК Маржинальность,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СуммаОкругления КАК СуммаОкругления,
	|	ТаблицаТовары.СуммаБонусныхБалловНачислено КАК СуммаБонусныхБалловНачислено,
	|	ТаблицаТовары.СуммаБонусныхБалловСписано КАК СуммаБонусныхБалловСписано,
	|	ТаблицаТовары.СсылкаДляСерийныхСертификатов КАК СсылкаДляСерийныхСертификатов,
	|	ВЫБОР
	|		КОГДА &ИспользоватьБонуснуюСистему = ИСТИНА
	|			ТОГДА ЕСТЬNULL(ТаблицаПоддержкаВозврата.СсылкаПродажа, ТаблицаТовары.СсылкаДляОплатыБонуснымиБаллами)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|	КОНЕЦ КАК СсылкаДляОплатыБонуснымиБаллами,
	|	ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ВЫБОР
	|		КОГДА &ИспользоватьБонуснуюСистему = ИСТИНА
	|			ТОГДА ЕСТЬNULL(ТаблицаПоддержкаВозврата.КлючСвязиБонусныхБаллов, ТаблицаТовары.КлючСвязиБонусныхБаллов)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КлючСвязиБонусныхБаллов,
	|	ТаблицаТовары.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.КлючПорядка КАК КлючПорядка
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДокументы.ВидОперации КАК ВидОперации,
	|		ТаблицаДокументы.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|		ТаблицаДокументы.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|		ТаблицаТовары.Склад КАК Склад,
	|		ТаблицаДокументы.УслугаБанка КАК УслугаБанка,
	|		ТаблицаДокументы.УслугаБанкаПериодПредоставления КАК УслугаБанкаПериодПредоставления,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Упаковка КАК Упаковка,
	|		ТаблицаТовары.Продавец КАК Продавец,
	|		ВЫБОР
	|			КОГДА ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|				ТОГДА ВЫБОР
	|						КОГДА ТаблицаДокументы.ЧекККМПродажа.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|							ТОГДА НЕОПРЕДЕЛЕНО
	|						ИНАЧЕ ТаблицаДокументы.ЧекККМПродажа.ЗаказПокупателя
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТаблицаДокументы.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|						ТОГДА НЕОПРЕДЕЛЕНО
	|					ИНАЧЕ ТаблицаДокументы.ЗаказПокупателя
	|				КОНЕЦ
	|		КОНЕЦ КАК ДополнительнаяАналитика,
	|		ТаблицаДокументы.ПодакцизныеТоварыДляКоммерческогоИспользования КАК ПодакцизныеТоварыДляКоммерческогоИспользования,
	|		ТаблицаСправочник.ПодакцизныйТовар КАК ПодакцизныйТовар,
	|		ТаблицаСправочник.Маржинальность КАК Маржинальность,
	|		ВЫБОР
	|			КОГДА ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ТаблицаТовары.Количество
	|			ИНАЧЕ -ТаблицаТовары.Количество
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР
	|			КОГДА ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ТаблицаТовары.КоличествоУпаковок
	|			ИНАЧЕ -ТаблицаТовары.КоличествоУпаковок
	|		КОНЕЦ КАК КоличествоУпаковок,
	|		ТаблицаТовары.Цена КАК Цена,
	|		ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|		ВЫБОР
	|			КОГДА ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ТаблицаТовары.Сумма
	|			ИНАЧЕ -ТаблицаТовары.Сумма
	|		КОНЕЦ КАК Сумма,
	|		ВЫБОР
	|			КОГДА ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ТаблицаТовары.СуммаНДС
	|			ИНАЧЕ -ТаблицаТовары.СуммаНДС
	|		КОНЕЦ КАК СуммаНДС,
	|		ВЫБОР
	|			КОГДА ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ТаблицаТовары.СуммаОкругления
	|			ИНАЧЕ -ТаблицаТовары.СуммаОкругления
	|		КОНЕЦ КАК СуммаОкругления,
	|		ВЫБОР
	|			КОГДА ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ТаблицаТовары.СуммаБонусныхБалловНачислено
	|			ИНАЧЕ -ТаблицаТовары.СуммаБонусныхБалловНачислено
	|		КОНЕЦ КАК СуммаБонусныхБалловНачислено,
	|		ВЫБОР
	|			КОГДА ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ТаблицаТовары.СуммаБонусныхБалловСписано
	|			ИНАЧЕ -ТаблицаТовары.СуммаБонусныхБалловСписано
	|		КОНЕЦ КАК СуммаБонусныхБалловСписано,
	|		ВЫБОР
	|			КОГДА ТаблицаСправочник.ИспользоватьСерийныеНомера = ИСТИНА
	|				ТОГДА ТаблицаДокументы.Ссылка
	|			ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|		КОНЕЦ КАК СсылкаДляСерийныхСертификатов,
	|		ВЫБОР
	|			КОГДА НЕ ТаблицаТовары.СуммаБонусныхБалловСписано = 0
	|				ТОГДА ТаблицаДокументы.Ссылка
	|			ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|		КОНЕЦ КАК СсылкаДляОплатыБонуснымиБаллами,
	|		ВЫБОР
	|			КОГДА ТаблицаСправочник.ИспользоватьСерийныеНомера = ИСТИНА
	|				ТОГДА ТаблицаТовары.КлючСвязиСерийныхНомеров
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КлючСвязиСерийныхНомеров,
	|		ВЫБОР
	|			КОГДА НЕ ТаблицаТовары.СуммаБонусныхБалловСписано = 0
	|				ТОГДА ТаблицаТовары.КлючСвязиБонусныхБаллов
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КлючСвязиБонусныхБаллов,
	|		ТаблицаСправочник.ТипНоменклатуры КАК ТипНоменклатуры,
	|		ТаблицаСправочник.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
	|		ТаблицаДокументы.ЧекККМПродажа КАК СсылкаПродажа,
	|		ТаблицаСправочник.Наименование КАК КлючПорядка
	|	ИЗ
	|		Ведущая КАК Ведущая
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ КАК ТаблицаДокументы
	|			ПО Ведущая.Ссылка = ТаблицаДокументы.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТаблицаТовары
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|				ПО ТаблицаТовары.Номенклатура = ТаблицаСправочник.Ссылка
	|			ПО Ведущая.Ссылка = ТаблицаТовары.Ссылка
	|	ГДЕ
	|		ТаблицаДокументы.КассаККМ = &КассаККМ
	|		И ТаблицаДокументы.Проведен
	|		И ВЫБОР
	|				КОГДА &РежимПерезаполнения = ИСТИНА
	|					ТОГДА ТаблицаДокументы.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|				ИНАЧЕ ТаблицаДокументы.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробитый)
	|			КОНЕЦ
	|		И (ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ИЛИ ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|					И ТаблицаДокументы.ЧекККМПродажа.КассаККМ = &КассаККМ
	|					И ВЫБОР
	|						КОГДА &РежимПерезаполнения = ИСТИНА
	|							ТОГДА ТаблицаДокументы.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|									И ТаблицаДокументы.ЧекККМПродажа.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|									И ТаблицаДокументы.ЧекККМПродажа.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|						ИНАЧЕ ТаблицаДокументы.ЧекККМПродажа.СтатусЧекаККМ <> ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|					КОНЕЦ)) КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОснованияВозвратов КАК ТаблицаПоддержкаВозврата
	|		ПО ТаблицаТовары.СсылкаПродажа = ТаблицаПоддержкаВозврата.СсылкаПродажа
	|			И ТаблицаТовары.Номенклатура = ТаблицаПоддержкаВозврата.Номенклатура
	|			И ТаблицаТовары.Упаковка = ТаблицаПоддержкаВозврата.Упаковка
	|			И ТаблицаТовары.КлючСвязиБонусныхБаллов = ТаблицаПоддержкаВозврата.КлючСвязиБонусныхБаллов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Ведущая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОснованияВозвратов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|	ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.УслугаБанка КАК УслугаБанка,
	|	ТаблицаТовары.УслугаБанкаПериодПредоставления КАК УслугаБанкаПериодПредоставления,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаТовары.Сумма) КАК Сумма,
	|	СУММА(ТаблицаТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаТовары.СуммаОкругления) КАК СуммаОкругления,
	|	СУММА(ТаблицаТовары.СуммаБонусныхБалловНачислено) КАК СуммаБонусныхБалловНачислено,
	|	СУММА(ТаблицаТовары.СуммаБонусныхБалловСписано) КАК СуммаБонусныхБалловСписано,
	|	ТаблицаТовары.ДополнительнаяАналитика КАК ДополнительнаяАналитика,
	|	ТаблицаТовары.ПодакцизныеТоварыДляКоммерческогоИспользования КАК ПодакцизныеТоварыДляКоммерческогоИспользования,
	|	ТаблицаТовары.ПодакцизныйТовар КАК ПодакцизныйТовар,
	|	ТаблицаТовары.Маржинальность КАК Маржинальность,
	|	ТаблицаТовары.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.СсылкаДляОплатыБонуснымиБаллами КАК СсылкаДляОплатыБонуснымиБаллами,
	|	ТаблицаТовары.КлючСвязиБонусныхБаллов КАК КлючСвязиБонусныхБаллов,
	|	ТаблицаТовары.КлючПорядка КАК КлючПорядка
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.ВладелецДисконтнойКарты,
	|	ТаблицаТовары.ДисконтнаяКарта,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.УслугаБанка,
	|	ТаблицаТовары.УслугаБанкаПериодПредоставления,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.Продавец,
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.ДополнительнаяАналитика,
	|	ТаблицаТовары.ПодакцизныеТоварыДляКоммерческогоИспользования,
	|	ТаблицаТовары.ПодакцизныйТовар,
	|	ТаблицаТовары.Маржинальность,
	|	ТаблицаТовары.КлючПорядка,
	|	ТаблицаТовары.СсылкаДляОплатыБонуснымиБаллами,
	|	ТаблицаТовары.КлючСвязиБонусныхБаллов
	|
	|ИМЕЮЩИЕ
	|	НЕ СУММА(ТаблицаТовары.КоличествоУпаковок) = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	СерийныеНомера.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|	СерийныеНомера.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	СерийныеНомера.Склад КАК Склад,
	|	СерийныеНомера.Номенклатура КАК Номенклатура,
	|	СерийныеНомера.Характеристика КАК Характеристика,
	|	СерийныеНомера.Упаковка КАК Упаковка,
	|	СерийныеНомера.Продавец КАК Продавец,
	|	СерийныеНомера.Цена КАК Цена,
	|	СерийныеНомера.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|		ТаблицаТовары.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|		ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|		ТаблицаТовары.Склад КАК Склад,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Упаковка КАК Упаковка,
	|		ТаблицаТовары.Продавец КАК Продавец,
	|		ТаблицаТовары.Цена КАК Цена,
	|		ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|		СУММА(ВЫБОР
	|				КОГДА ТаблицаТовары.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|					ТОГДА -1
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Количество
	|	ИЗ
	|		ТаблицаТовары КАК ТаблицаТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.СерийныеНомера КАК ТаблицаСерийныеНомера
	|			ПО ТаблицаТовары.СсылкаДляСерийныхСертификатов = ТаблицаСерийныеНомера.Ссылка
	|				И ТаблицаТовары.КлючСвязиСерийныхНомеров = ТаблицаСерийныеНомера.КлючСвязиСерийныхНомеров
	|	ГДЕ
	|		ТаблицаТовары.ИспользоватьСерийныеНомера
	|		И ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаСерийныеНомера.СерийныйНомер,
	|		ТаблицаТовары.ВладелецДисконтнойКарты,
	|		ТаблицаТовары.ДисконтнаяКарта,
	|		ТаблицаТовары.Склад,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ТаблицаТовары.Упаковка,
	|		ТаблицаТовары.Продавец,
	|		ТаблицаТовары.Цена,
	|		ТаблицаТовары.СтавкаНДС) КАК СерийныеНомера
	|ГДЕ
	|	НЕ СерийныеНомера.Количество = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТовары"
	);
	ЗапросПоПродажам.УстановитьПараметр("КассаККМ"		, КассаККМ);
	ЗапросПоПродажам.УстановитьПараметр("КрайнийПериод"	, КрайнийПериод);
	ЗапросПоПродажам.УстановитьПараметр("РежимПерезаполнения", РежимПерезаполнения);
	ЗапросПоПродажам.УстановитьПараметр("ОтчетОРозничныхПродажах", ОтчетОРозничныхПродажах.Ссылка);
	ЗапросПоПродажам.УстановитьПараметр("ИспользоватьБонуснуюСистему", БонусныеБаллыПовтИсп.ИспользоватьБонуснуюСистему(ОтчетОРозничныхПродажах.Дата));
	
	ЗапросПоВозвратам = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТовары.ВидОперации КАК ВидОперации,
	|	ТаблицаТовары.ВозвратНеЭтойСмены КАК ВозвратНеЭтойСмены,
	|	ТаблицаТовары.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|	ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.УслугаБанка КАК УслугаБанка,
	|	ТаблицаТовары.УслугаБанкаПериодПредоставления КАК УслугаБанкаПериодПредоставления,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ТаблицаТовары.ДополнительнаяАналитика КАК ДополнительнаяАналитика,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТаблицаТовары.ПодакцизныеТоварыДляКоммерческогоИспользования КАК ПодакцизныеТоварыДляКоммерческогоИспользования,
	|	ТаблицаТовары.ПодакцизныйТовар КАК ПодакцизныйТовар,
	|	ТаблицаТовары.Маржинальность КАК Маржинальность,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СуммаОкругления КАК СуммаОкругления,
	|	ТаблицаТовары.СуммаБонусныхБалловНачислено КАК СуммаБонусныхБалловНачислено,
	|	ТаблицаТовары.СуммаБонусныхБалловСписано КАК СуммаБонусныхБалловСписано,
	|	ТаблицаТовары.СсылкаДляСерийныхСертификатов КАК СсылкаДляСерийныхСертификатов,
	|	ТаблицаТовары.СсылкаДляОплатыБонуснымиБаллами КАК СсылкаДляОплатыБонуснымиБаллами,
	|	ТаблицаТовары.КлючСвязиСерийныхНомеров КАК КлючСвязиСерийныхНомеров,
	|	ТаблицаТовары.КлючСвязиБонусныхБаллов КАК КлючСвязиБонусныхБаллов,
	|	ТаблицаТовары.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.КлючПорядка КАК КлючПорядка
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДокументы.ВидОперации КАК ВидОперации,
	|		ВЫБОР
	|			КОГДА &РежимПерезаполнения = ИСТИНА
	|				ТОГДА ВЫБОР
	|						КОГДА ТаблицаДокументы.ЧекККМПродажа = ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|								ИЛИ НЕ ТаблицаДокументы.ЧекККМПродажа.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|								ИЛИ НЕ ТаблицаДокументы.ЧекККМПродажа.КассаККМ = &КассаККМ
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТаблицаДокументы.ЧекККМПродажа = ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|							ИЛИ ТаблицаДокументы.ЧекККМПродажа.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|							ИЛИ НЕ ТаблицаДокументы.ЧекККМПродажа.КассаККМ = &КассаККМ
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ КАК ВозвратНеЭтойСмены,
	|		ТаблицаДокументы.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|		ТаблицаДокументы.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|		ТаблицаТовары.Склад КАК Склад,
	|		ТаблицаДокументы.УслугаБанка КАК УслугаБанка,
	|		ТаблицаДокументы.УслугаБанкаПериодПредоставления КАК УслугаБанкаПериодПредоставления,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Упаковка КАК Упаковка,
	|		ТаблицаТовары.Продавец КАК Продавец,
	|		ВЫБОР
	|			КОГДА ТаблицаДокументы.ЧекККМПродажа.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ТаблицаДокументы.ЧекККМПродажа.ЗаказПокупателя
	|		КОНЕЦ КАК ДополнительнаяАналитика,
	|		ТаблицаДокументы.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|		ТаблицаДокументы.ПодакцизныеТоварыДляКоммерческогоИспользования КАК ПодакцизныеТоварыДляКоммерческогоИспользования,
	|		ТаблицаСправочник.ПодакцизныйТовар КАК ПодакцизныйТовар,
	|		ТаблицаТовары.Маржинальность КАК Маржинальность,
	|		ТаблицаТовары.Количество КАК Количество,
	|		ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|		ТаблицаТовары.Цена КАК Цена,
	|		ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаТовары.Сумма КАК Сумма,
	|		ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|		ТаблицаТовары.СуммаОкругления КАК СуммаОкругления,
	|		ТаблицаТовары.СуммаБонусныхБалловНачислено КАК СуммаБонусныхБалловНачислено,
	|		ТаблицаТовары.СуммаБонусныхБалловСписано КАК СуммаБонусныхБалловСписано,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаСправочник.ИспользоватьСерийныеНомера, ЛОЖЬ) = ИСТИНА
	|				ТОГДА ТаблицаДокументы.Ссылка
	|			ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|		КОНЕЦ КАК СсылкаДляСерийныхСертификатов,
	|		ВЫБОР
	|			КОГДА НЕ ТаблицаТовары.СуммаБонусныхБалловСписано = 0
	|				ТОГДА ТаблицаДокументы.Ссылка
	|			ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка)
	|		КОНЕЦ КАК СсылкаДляОплатыБонуснымиБаллами,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ТаблицаСправочник.ИспользоватьСерийныеНомера, ЛОЖЬ) = ИСТИНА
	|				ТОГДА ТаблицаТовары.КлючСвязиСерийныхНомеров
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КлючСвязиСерийныхНомеров,
	|		ВЫБОР
	|			КОГДА НЕ ТаблицаТовары.СуммаБонусныхБалловСписано = 0
	|				ТОГДА ТаблицаТовары.КлючСвязиБонусныхБаллов
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК КлючСвязиБонусныхБаллов,
	|		ТаблицаСправочник.ТипНоменклатуры КАК ТипНоменклатуры,
	|		ТаблицаСправочник.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
	|		ТаблицаСправочник.Наименование КАК КлючПорядка
	|	ИЗ
	|		Документ.ЧекККМ КАК ТаблицаДокументы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТаблицаТовары
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|				ПО ТаблицаТовары.Номенклатура = ТаблицаСправочник.Ссылка
	|			ПО ТаблицаДокументы.Ссылка = ТаблицаТовары.Ссылка
	|	ГДЕ
	|		ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|		И ТаблицаДокументы.КассаККМ = &КассаККМ
	|		И ТаблицаДокументы.Проведен
	|		И ВЫБОР
	|				КОГДА &РежимПерезаполнения = ИСТИНА
	|					ТОГДА ТаблицаДокументы.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|							И ТаблицаДокументы.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|				ИНАЧЕ ТаблицаДокументы.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробитый)
	|			КОНЕЦ) КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ВидОперации КАК ВидОперации,
	|	ТаблицаТовары.ВозвратНеЭтойСмены КАК ВозвратНеЭтойСмены,
	|	ТаблицаТовары.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|	ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.УслугаБанка КАК УслугаБанка,
	|	ТаблицаТовары.УслугаБанкаПериодПредоставления КАК УслугаБанкаПериодПредоставления,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	ТаблицаТовары.ДополнительнаяАналитика КАК ДополнительнаяАналитика,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации КАК АналитикаХозяйственнойОперации,
	|	ТаблицаТовары.ПодакцизныеТоварыДляКоммерческогоИспользования КАК ПодакцизныеТоварыДляКоммерческогоИспользования,
	|	ТаблицаТовары.ПодакцизныйТовар КАК ПодакцизныйТовар,
	|	ТаблицаТовары.Маржинальность КАК Маржинальность,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаТовары.Сумма) КАК Сумма,
	|	СУММА(ТаблицаТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаТовары.СуммаОкругления) КАК СуммаОкругления,
	|	СУММА(ТаблицаТовары.СуммаБонусныхБалловНачислено) КАК СуммаБонусныхБалловНачислено,
	|	СУММА(ТаблицаТовары.СуммаБонусныхБалловСписано) КАК СуммаБонусныхБалловСписано,
	|	ТаблицаТовары.СсылкаДляСерийныхСертификатов КАК СсылкаДляСерийныхСертификатов,
	|	ТаблицаТовары.СсылкаДляОплатыБонуснымиБаллами КАК СсылкаДляОплатыБонуснымиБаллами,
	|	ТаблицаТовары.КлючСвязиБонусныхБаллов КАК КлючСвязиБонусныхБаллов,
	|	ТаблицаТовары.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.КлючПорядка КАК КлючПорядка
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ВладелецДисконтнойКарты,
	|	ТаблицаТовары.ДисконтнаяКарта,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Продавец,
	|	ТаблицаТовары.ВидОперации,
	|	ТаблицаТовары.УслугаБанка,
	|	ТаблицаТовары.УслугаБанкаПериодПредоставления,
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.ДополнительнаяАналитика,
	|	ТаблицаТовары.ПодакцизныеТоварыДляКоммерческогоИспользования,
	|	ТаблицаТовары.ПодакцизныйТовар,
	|	ТаблицаТовары.Маржинальность,
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.ВозвратНеЭтойСмены,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.СсылкаДляСерийныхСертификатов,
	|	ТаблицаТовары.КлючПорядка,
	|	ТаблицаТовары.ТипНоменклатуры,
	|	ТаблицаТовары.ИспользоватьСерийныеНомера,
	|	ТаблицаТовары.АналитикаХозяйственнойОперации,
	|	ТаблицаТовары.СсылкаДляОплатыБонуснымиБаллами,
	|	ТаблицаТовары.КлючСвязиБонусныхБаллов
	|
	|ИМЕЮЩИЕ
	|	НЕ СУММА(ТаблицаТовары.Сумма) = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|	СерийныеНомера.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|	СерийныеНомера.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|	СерийныеНомера.Склад КАК Склад,
	|	СерийныеНомера.Номенклатура КАК Номенклатура,
	|	СерийныеНомера.Характеристика КАК Характеристика,
	|	СерийныеНомера.Упаковка КАК Упаковка,
	|	СерийныеНомера.Продавец КАК Продавец,
	|	СерийныеНомера.Цена КАК Цена,
	|	СерийныеНомера.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСерийныеНомера.СерийныйНомер КАК СерийныйНомер,
	|		ТаблицаТовары.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
	|		ТаблицаТовары.ДисконтнаяКарта КАК ДисконтнаяКарта,
	|		ТаблицаТовары.Склад КАК Склад,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Упаковка КАК Упаковка,
	|		ТаблицаТовары.Продавец КАК Продавец,
	|		ТаблицаТовары.Цена КАК Цена,
	|		ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|		СУММА(ВЫБОР
	|				КОГДА ТаблицаТовары.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат)
	|					ТОГДА -1
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК Количество
	|	ИЗ
	|		ТаблицаТовары КАК ТаблицаТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.СерийныеНомера КАК ТаблицаСерийныеНомера
	|			ПО ТаблицаТовары.СсылкаДляСерийныхСертификатов = ТаблицаСерийныеНомера.Ссылка
	|				И ТаблицаТовары.КлючСвязиСерийныхНомеров = ТаблицаСерийныеНомера.КлючСвязиСерийныхНомеров
	|	ГДЕ
	|		ТаблицаТовары.ИспользоватьСерийныеНомера
	|		И ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаСерийныеНомера.СерийныйНомер,
	|		ТаблицаТовары.ВладелецДисконтнойКарты,
	|		ТаблицаТовары.ДисконтнаяКарта,
	|		ТаблицаТовары.Склад,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ТаблицаТовары.Упаковка,
	|		ТаблицаТовары.Продавец,
	|		ТаблицаТовары.Цена,
	|		ТаблицаТовары.СтавкаНДС) КАК СерийныеНомера
	|ГДЕ
	|	НЕ СерийныеНомера.Количество = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТовары"
	);
	ЗапросПоВозвратам.УстановитьПараметр("КассаККМ"		, КассаККМ);
	ЗапросПоВозвратам.УстановитьПараметр("КрайнийПериод", КрайнийПериод);
	ЗапросПоВозвратам.УстановитьПараметр("РежимПерезаполнения"    , РежимПерезаполнения);
	ЗапросПоВозвратам.УстановитьПараметр("ОтчетОРозничныхПродажах", ОтчетОРозничныхПродажах.Ссылка);
	ЗапросПоВозвратам.УстановитьПараметр("ИспользоватьБонуснуюСистему", БонусныеБаллыПовтИсп.ИспользоватьБонуснуюСистему(ОтчетОРозничныхПродажах.Дата));
	
	ЗапросПоОплате = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабличнаяЧасть.ВидОплаты.ТипОплаты КАК ТипОплаты,
	|	ТабличнаяЧасть.ВидОплаты КАК ВидОплаты,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ТабличнаяЧасть.Сумма
	|			ИНАЧЕ -ТабличнаяЧасть.Сумма
	|		КОНЕЦ) КАК Сумма,
	|	ТабличнаяЧасть.ПроцентТорговойУступки КАК ПроцентТорговойУступки,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ТабличнаяЧасть.СуммаТорговойУступки
	|			ИНАЧЕ -ТабличнаяЧасть.СуммаТорговойУступки
	|		КОНЕЦ) КАК СуммаТорговойУступки,
	|	ТабличнаяЧасть.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал
	|ИЗ
	|	Документ.ЧекККМ КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Оплата КАК ТабличнаяЧасть
	|		ПО ТаблицаДокумента.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.КассаККМ = &КассаККМ
	|	И ТаблицаДокумента.Проведен
	|	И НЕ ТабличнаяЧасть.ВидОплаты.ТипОплаты = ЗНАЧЕНИЕ(Перечисление.ТипыОплатЧекаККМ.Наличные)
	|	И ВЫБОР
	|			КОГДА &РежимПерезаполнения = ИСТИНА
	|				ТОГДА ТаблицаДокумента.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|						И ТаблицаДокумента.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|			ИНАЧЕ ТаблицаДокумента.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробитый)
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.ВидОплаты.ТипОплаты,
	|	ТабличнаяЧасть.ПроцентТорговойУступки,
	|	ТабличнаяЧасть.ВидОплаты,
	|	ТабличнаяЧасть.ЭквайринговыйТерминал"
	);	//	LNK 01.10.2021 06:37:15
	ЗапросПоОплате.УстановитьПараметр("КассаККМ"	 , КассаККМ);
	ЗапросПоОплате.УстановитьПараметр("КрайнийПериод", КрайнийПериод);
	ЗапросПоОплате.УстановитьПараметр("РежимПерезаполнения"    , РежимПерезаполнения);
	ЗапросПоОплате.УстановитьПараметр("ОтчетОРозничныхПродажах", ОтчетОРозничныхПродажах.Ссылка);

	ЗапросПоПогашениеПодарочныхСертификатов = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабличнаяЧасть.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ТабличнаяЧасть.СерийныйНомер КАК СерийныйНомер,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ТаблицаПогашения
	|ИЗ
	|	Документ.ЧекККМ КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.ПогашениеПодарочныхСертификатов КАК ТабличнаяЧасть
	|		ПО ТаблицаДокумента.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.КассаККМ = &КассаККМ
	|	И ТаблицаДокумента.Проведен
	|	И ВЫБОР
	|			КОГДА &РежимПерезаполнения = ИСТИНА
	|				ТОГДА ТаблицаДокумента.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|						И ТаблицаДокумента.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|			ИНАЧЕ ТаблицаДокумента.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробитый)
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.ПодарочныйСертификат,
	|	ТабличнаяЧасть.СерийныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПогашения.ПодарочныйСертификат КАК ПодарочныйСертификат,
	|	ТаблицаПогашения.СерийныйНомер КАК СерийныйНомер,
	|	СУММА(ТаблицаПогашения.Количество) КАК Количество
	|ИЗ
	|	ТаблицаПогашения КАК ТаблицаПогашения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПогашения.ПодарочныйСертификат,
	|	ТаблицаПогашения.СерийныйНомер"
	);
	ЗапросПоПогашениеПодарочныхСертификатов.УстановитьПараметр("КассаККМ"	 , КассаККМ);
	ЗапросПоПогашениеПодарочныхСертификатов.УстановитьПараметр("КрайнийПериод", КрайнийПериод);
	ЗапросПоПогашениеПодарочныхСертификатов.УстановитьПараметр("РежимПерезаполнения"    , РежимПерезаполнения);
	ЗапросПоПогашениеПодарочныхСертификатов.УстановитьПараметр("ОтчетОРозничныхПродажах", ОтчетОРозничныхПродажах.Ссылка);

	ЗапросПоПодаркам = Новый Запрос(
	"ВЫБРАТЬ
	|	СуществующиеСписания.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ТаблицаУчета.Объект ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УчтенNavision,
	|	СуществующиеСписания.Склад КАК Склад,
	|	ТоварыСписаний.Номенклатура КАК Номенклатура,
	|	ТоварыСписаний.Характеристика КАК Характеристика,
	|	ТоварыСписаний.Упаковка КАК Упаковка,
	|	ТоварыСписаний.Количество КАК Количество,
	|	ТоварыСписаний.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТоварыСписаний.Цена КАК Цена,
	|	ТоварыСписаний.Сумма КАК Сумма
	|ПОМЕСТИТЬ УчтеноРанее
	|ИЗ
	|	Документ.СписаниеТоваров КАК СуществующиеСписания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров.Товары КАК ТоварыСписаний
	|		ПО СуществующиеСписания.Ссылка = ТоварыСписаний.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчета
	|		ПО СуществующиеСписания.Ссылка = ТаблицаУчета.Объект
	|			И СуществующиеСписания.Магазин = ТаблицаУчета.Магазин
	|ГДЕ
	|	СуществующиеСписания.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаПодарки.Склад КАК Склад,
	|	ТаблицаПодарки.Проект КАК Проект,
	|	ТаблицаПодарки.Номенклатура КАК Номенклатура,
	|	ТаблицаПодарки.Характеристика КАК Характеристика,
	|	ТаблицаПодарки.Упаковка КАК Упаковка,
	|	ТаблицаПодарки.Количество КАК Количество,
	|	ТаблицаПодарки.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаПодарки.Цена КАК Цена,
	|	ТаблицаПодарки.Сумма КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаПодарки.Склад КАК Склад,
	|		ТаблицаПодарки.Номенклатура.ВидНоменклатуры КАК Проект,
	|		ТаблицаПодарки.Номенклатура КАК Номенклатура,
	|		ТаблицаПодарки.Характеристика КАК Характеристика,
	|		ТаблицаПодарки.Упаковка КАК Упаковка,
	|		СУММА(ВЫБОР
	|				КОГДА ТаблицаПодарки.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|					ТОГДА ТаблицаПодарки.Количество
	|				ИНАЧЕ -1 * ТаблицаПодарки.Количество
	|			КОНЕЦ) КАК Количество,
	|		СУММА(ВЫБОР
	|				КОГДА ТаблицаПодарки.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|					ТОГДА ТаблицаПодарки.КоличествоУпаковок
	|				ИНАЧЕ -1 * ТаблицаПодарки.КоличествоУпаковок
	|			КОНЕЦ) КАК КоличествоУпаковок,
	|		ТаблицаПодарки.Цена КАК Цена,
	|		СУММА(ВЫБОР
	|				КОГДА ТаблицаПодарки.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|					ТОГДА ТаблицаПодарки.Сумма
	|				ИНАЧЕ -1 * ТаблицаПодарки.Сумма
	|			КОНЕЦ) КАК Сумма
	|	ИЗ
	|		Документ.ЧекККМ.Подарки КАК ТаблицаПодарки
	|	ГДЕ
	|		ТаблицаПодарки.Ссылка.КассаККМ = &КассаККМ
	|		И ТаблицаПодарки.Ссылка.Проведен
	|		И ВЫБОР
	|				КОГДА &РежимПерезаполнения = ИСТИНА
	|					ТОГДА ТаблицаПодарки.Ссылка.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|							И ТаблицаПодарки.Ссылка.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|				ИНАЧЕ ТаблицаПодарки.Ссылка.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробитый)
	|			КОНЕЦ
	|		И НЕ(ТаблицаПодарки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|					И ТаблицаПодарки.Номенклатура.ИспользоватьСерийныеНомера)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаПодарки.Номенклатура,
	|		ТаблицаПодарки.Характеристика,
	|		ТаблицаПодарки.Склад,
	|		ТаблицаПодарки.Цена,
	|		ТаблицаПодарки.Упаковка,
	|		ТаблицаПодарки.Номенклатура.ВидНоменклатуры) КАК ТаблицаПодарки
	|ГДЕ
	|	ТаблицаПодарки.Количество <> 0
	|ИТОГИ ПО
	|	Склад,
	|	Проект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УчтеноРанее.Ссылка КАК Ссылка
	|ИЗ
	|	УчтеноРанее КАК УчтеноРанее
	|ГДЕ
	|	УчтеноРанее.УчтенNavision = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УчтеноРанее"
	);
	ЗапросПоПодаркам.УстановитьПараметр("КассаККМ"		, КассаККМ);
	ЗапросПоПодаркам.УстановитьПараметр("КрайнийПериод"	, КрайнийПериод);
	ЗапросПоПодаркам.УстановитьПараметр("РежимПерезаполнения"    , РежимПерезаполнения);
	ЗапросПоПодаркам.УстановитьПараметр("ОтчетОРозничныхПродажах", ОтчетОРозничныхПродажах.Ссылка);
	
	ЗапросПоСериям = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Док.Ссылка КАК Ссылка,
	|	Док.ВидОперации
	|ПОМЕСТИТЬ ТаблицаЧеков
	|ИЗ
	|	Документ.ЧекККМ КАК Док
	|ГДЕ
	|	Док.КассаККМ = &КассаККМ
	|	И Док.Ссылка.Проведен
	|	И (Док.Ссылка.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробитый)
	|			ИЛИ &РежимПерезаполнения = ИСТИНА
	|				И Док.Ссылка.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЧекККМСерии.Серия,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЧеков.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ЧекККМСерии.Количество
	|			ИНАЧЕ -ЧекККМСерии.Количество
	|		КОНЕЦ) КАК Количество,
	|	ЧекККМСерии.Номенклатура,
	|	ЧекККМСерии.Характеристика
	|ИЗ
	|	Документ.ЧекККМ.Серии КАК ЧекККМСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЧеков КАК ТаблицаЧеков
	|		ПО ЧекККМСерии.Ссылка = ТаблицаЧеков.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ЧекККМСерии.Серия,
	|	ЧекККМСерии.Номенклатура,
	|	ЧекККМСерии.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаЧеков.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|				ТОГДА ЧекККМСерии.Количество
	|			ИНАЧЕ -ЧекККМСерии.Количество
	|		КОНЕЦ) > 0"
	);
	ЗапросПоСериям.УстановитьПараметр("КассаККМ"	 , КассаККМ);
	ЗапросПоСериям.УстановитьПараметр("КрайнийПериод", КрайнийПериод);
	ЗапросПоСериям.УстановитьПараметр("РежимПерезаполнения", РежимПерезаполнения);
	ЗапросПоСериям.УстановитьПараметр("ОтчетОРозничныхПродажах", ОтчетОРозничныхПродажах.Ссылка);

	ЗапросНачислениеБонусов = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокументы.ВладелецДисконтнойКарты КАК Контрагент,
	|	ТабличнаяЧасть.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	ТаблицаДокументы.Ссылка КАК ДокументПродажи,
	|	ТаблицаДокументы.ЧекККМПродажа КАК ДокументОснование,
	|	ТабличнаяЧасть.ДатаНачисления КАК ДатаНачисления,
	|	ТабличнаяЧасть.ДатаСписания КАК ДатаСписания,
	|	ТабличнаяЧасть.СуммаБонусныхБаллов * ВЫБОР
	|		КОГДА ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК СуммаБонусныхБаллов
	|ИЗ
	|	Документ.ЧекККМ КАК ТаблицаДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.НачислениеБонусныхБаллов КАК ТабличнаяЧасть
	|		ПО ТаблицаДокументы.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.КассаККМ = &КассаККМ
	|	И ТаблицаДокументы.Проведен
	|	И ТаблицаДокументы.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат))
	|	И ТаблицаДокументы.ВладелецДисконтнойКарты ССЫЛКА Справочник.Контрагенты
	|	И НЕ ТаблицаДокументы.ВладелецДисконтнойКарты = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И ВЫБОР
	|			КОГДА &РежимПерезаполнения = ИСТИНА
	|				ТОГДА ТаблицаДокументы.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|						И ТаблицаДокументы.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|			ИНАЧЕ ТаблицаДокументы.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробитый)
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	ДокументПродажи"
	);
	ЗапросНачислениеБонусов.УстановитьПараметр("КассаККМ"		, КассаККМ);
	ЗапросНачислениеБонусов.УстановитьПараметр("РежимПерезаполнения"	, РежимПерезаполнения);
	ЗапросНачислениеБонусов.УстановитьПараметр("ОтчетОРозничныхПродажах", ОтчетОРозничныхПродажах.Ссылка);

	ЗапросОплатаБонусами = Новый Запрос(	//	LNK 24.06.2021 08:42:21
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Дата КАК ДатаОплаты,
	|	ТаблицаДокументы.Ссылка КАК ДокументПродажи,
	|	ТаблицаДокументы.ЧекККМПродажа КАК ДокументОснование,
	|	ТаблицаДокументы.ЧекККМПродажа.Дата КАК ДокументОснованиеДатаОплаты,
	|	ТаблицаДокументы.ВидОперации КАК ВидОперации,
	|	ТабличнаяЧасть.КлючСвязиБонусныхБаллов КАК КлючСвязиБонусныхБаллов,
	|	ТаблицаДокументы.ВладелецДисконтнойКарты КАК Контрагент,
	|	ТабличнаяЧасть.ПрограммаЛояльности КАК ПрограммаЛояльности,
	|	ТабличнаяЧасть.СуммаБонусныхБаллов * ВЫБОР
	|		КОГДА ТаблицаДокументы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК СуммаБонусныхБаллов,
	|	ТабличнаяЧасть.ТипБонусов КАК ТипБонусов
	|ИЗ
	|	Документ.ЧекККМ КАК ТаблицаДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.ОплатаБонуснымиБаллами КАК ТабличнаяЧасть
	|		ПО ТаблицаДокументы.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.КассаККМ = &КассаККМ
	|	И ТаблицаДокументы.Проведен
	|	И ТаблицаДокументы.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Продажа), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЧекККМ.Возврат))
	|	И ТаблицаДокументы.ВладелецДисконтнойКарты ССЫЛКА Справочник.Контрагенты
	|	И НЕ ТаблицаДокументы.ВладелецДисконтнойКарты = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И ВЫБОР
	|			КОГДА &РежимПерезаполнения = ИСТИНА
	|				ТОГДА ТаблицаДокументы.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|						И ТаблицаДокументы.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|			ИНАЧЕ ТаблицаДокументы.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробитый)
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	ДокументПродажи"
	);
	ЗапросОплатаБонусами.УстановитьПараметр("КассаККМ"		, КассаККМ);
	ЗапросОплатаБонусами.УстановитьПараметр("КрайнийПериод"	, КрайнийПериод);
	ЗапросОплатаБонусами.УстановитьПараметр("РежимПерезаполнения"	 , РежимПерезаполнения);
	ЗапросОплатаБонусами.УстановитьПараметр("ОтчетОРозничныхПродажах", ОтчетОРозничныхПродажах.Ссылка);
	
	ОтменитьТранзакцию = Ложь;
	НачатьТранзакцию();

	РезультатыЗапросаПоддержки = ЗапросПоддержка.ВыполнитьПакет();
	РеквизитыКассыККМ		   = РезультатыЗапросаПоддержки[1].Выбрать();
	РеквизитыКассыККМ.Следующий();

	РезультатыЗапросаПоПродажам    = ЗапросПоПродажам.ВыполнитьПакет();
	РезультатыЗапросаПоВозвратам   = ЗапросПоВозвратам.ВыполнитьПакет();	//	LNK 11.02.2020 13:13:01

	РезультатЗапросаПоОплате       = ЗапросПоОплате.Выполнить();
	РезультатЗапросаПоСериям       = ЗапросПоСериям.Выполнить();
	РезультатПодарочныеСертификаты = ЗапросПоПогашениеПодарочныхСертификатов.Выполнить();

	РезультатНачислениеБонусов = ЗапросНачислениеБонусов.Выполнить();
	РезультатОплатаБонусами    = ЗапросОплатаБонусами.Выполнить();
	
	РезультатыЗапросаПоПодаркам = ЗапросПоПодаркам.ВыполнитьПакет();

	ТаблицаОплатПлатежныеКарты = ОбщегоНазначенияРТ.ОтобратьСтрокиПоКритериям(РезультатЗапросаПоОплате,
		Новый Структура("ТипОплаты", Перечисления.ТипыОплатЧекаККМ.ПлатежнаяКарта)).Выгрузить();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(
		ОбщегоНазначенияРТ.ОтобратьСтрокиПоКритериям(РезультатЗапросаПоОплате,
			Новый Структура("ТипОплаты", Перечисления.ТипыОплатЧекаККМ.Послеплата)).Выгрузить(),
		ТаблицаОплатПлатежныеКарты
	);	//	LNK 28.02.2021 13:29:09
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(
		ОбщегоНазначенияРТ.ОтобратьСтрокиПоКритериям(РезультатЗапросаПоОплате,
			Новый Структура("ТипОплаты", Перечисления.ТипыОплатЧекаККМ.Предоплата)).Выгрузить(),
		ТаблицаОплатПлатежныеКарты
	);	//	LNK 04.10.2022 04:32:54

	ТаблицаОплатБанковскиеКредиты = ОбщегоНазначенияРТ.ОтобратьСтрокиПоКритериям(РезультатЗапросаПоОплате,
		Новый Структура("ТипОплаты", Перечисления.ТипыОплатЧекаККМ.БанковскийКредит)).Выгрузить();

	ТаблицаОплатСертификатом      = ОбщегоНазначенияРТ.ОтобратьСтрокиПоКритериям(РезультатЗапросаПоОплате,
		Новый Структура("ВидОплаты", Справочники.ВидыОплатЧекаККМ.ОплатаПодарочнымСертификатом)).Выгрузить();

	ОплатаПодарочнымиСертификатами = ТаблицаОплатСертификатом.Итог("Сумма");
	
	Если РезультатыЗапросаПоПродажам[5].Пустой() И РезультатыЗапросаПоВозвратам[1].Пустой() Тогда

		ОтменитьТранзакцию = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"За поточну касову зміну не продано жодного товару по обраній касі ККМ.",
			ЭтотОбъект);
		ОтменитьТранзакцию();

	Иначе

		КэшированныеЗначения = Новый Структура;
		
		СтруктураДействий = Новый Структура;
 		СтруктураДействий.Вставить("ПересчитатьСуммуНДСиАкцизногоНалога", ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(ОтчетОРозничныхПродажах));

		ОтчетОРозничныхПродажах.Товары.Очистить();
		ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами.Очистить();
		ОтчетОРозничныхПродажах.ОплатаБанковскимиКредитами.Очистить();
		ОтчетОРозничныхПродажах.ПродажиПоДисконтнымКартам.Очистить();
		ОтчетОРозничныхПродажах.ВозвращенныеТовары.Очистить();
		ОтчетОРозничныхПродажах.СерийныеНомера.Очистить();
		ОтчетОРозничныхПродажах.ПогашениеПодарочныхСертификатов.Очистить();
		ОтчетОРозничныхПродажах.Серии.Очистить();

		ОтчетОРозничныхПродажах.НачислениеБонусныхБаллов.Очистить();
		ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами.Очистить();

		ВыборкаПоПродажам = РезультатыЗапросаПоПродажам[5].Выбрать();
		ТаблицаСерийныеНомера = РезультатыЗапросаПоПродажам[6].Выгрузить();
		ТаблицаОплатаБонусами = РезультатОплатаБонусами.Выгрузить();

		ТекущийКлючСерийныеСертификатов	= 0;
		ТекущийКлючОплатыБонусами		= 0;

		Пока ВыборкаПоПродажам.Следующий() Цикл

			Если НЕ ОтменитьТранзакцию Тогда

				СтрокаТабличнойЧасти = ОтчетОРозничныхПродажах.Товары.Добавить();
				ЗаполнитьСтрокуТабличнойЧастиПоВыборке(СтрокаТабличнойЧасти, ВыборкаПоПродажам, СтруктураДействий, КэшированныеЗначения);

				Если НЕ СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС И НЕ ОтчетОРозничныхПродажах.УчитыватьНДС = Истина Тогда

					ОтчетОРозничныхПродажах.УчитыватьНДС = Истина;

				КонецЕсли;
				
				Если ВыборкаПоПродажам.ИспользоватьСерийныеНомера Тогда
					
					СтруктраПоиска = Новый Структура;
					СтруктраПоиска.Вставить("ВладелецДисконтнойКарты", ВыборкаПоПродажам.ВладелецДисконтнойКарты);
					СтруктраПоиска.Вставить("ДисконтнаяКарта", ВыборкаПоПродажам.ДисконтнаяКарта);
					СтруктраПоиска.Вставить("Склад"          , ВыборкаПоПродажам.Склад);
					СтруктраПоиска.Вставить("Номенклатура"   , ВыборкаПоПродажам.Номенклатура);
					СтруктраПоиска.Вставить("Характеристика" , ВыборкаПоПродажам.Характеристика);
					СтруктраПоиска.Вставить("Продавец"       , ВыборкаПоПродажам.Продавец);
					СтруктраПоиска.Вставить("Цена"           , ВыборкаПоПродажам.Цена);
					СтруктраПоиска.Вставить("СтавкаНДС"      , ВыборкаПоПродажам.СтавкаНДС);
					СтруктраПоиска.Вставить("Упаковка"       , ВыборкаПоПродажам.Упаковка);
					
					ТекущийКлючСерийныеСертификатов = ТекущийКлючСерийныеСертификатов + 1;
					
					СтрокаТабличнойЧасти.КлючСвязиСерийныхНомеров = ТекущийКлючСерийныеСертификатов;
					
					СтрокиТаблицаСерийныхНомеров = ТаблицаСерийныеНомера.НайтиСтроки(СтруктраПоиска);

					Для каждого СтрокаТаблицыСерийныхНомеров Из СтрокиТаблицаСерийныхНомеров Цикл

						СтрокаСерийныхНомеров = ОтчетОРозничныхПродажах.СерийныеНомера.Добавить();
						СтрокаСерийныхНомеров.СерийныйНомер = СтрокаТаблицыСерийныхНомеров.СерийныйНомер;
						СтрокаСерийныхНомеров.КлючСвязиСерийныхНомеров = СтрокаТабличнойЧасти.КлючСвязиСерийныхНомеров;
						СтрокаСерийныхНомеров.ИмяТаблицы = "Товары";

					КонецЦикла;

				КонецЕсли;

			//	LNK 24.06.2021 09:39:31
				ТекущийКлючОплатыБонусами = ТекущийКлючОплатыБонусами + 1;
				СтрокаТабличнойЧасти.КлючСвязиБонусныхБаллов = ТекущийКлючОплатыБонусами;

				Если НЕ СтрокаТабличнойЧасти.СуммаБонусныхБалловСписано = 0 Тогда

					СтруктраПоиска = Новый Структура(
						"ВидОперации, ДокументПродажи, Контрагент, КлючСвязиБонусныхБаллов"
						, Перечисления.ВидыОперацийЧекККМ.Продажа
						, ВыборкаПоПродажам.СсылкаДляОплатыБонуснымиБаллами
						, ВыборкаПоПродажам.ВладелецДисконтнойКарты
						, ВыборкаПоПродажам.КлючСвязиБонусныхБаллов
					);
					СтрокиТаблицыОплатаБонусами = ТаблицаОплатаБонусами.НайтиСтроки(СтруктраПоиска);

					Для каждого СтрокаТаблицыОплатаБонусами Из СтрокиТаблицыОплатаБонусами Цикл

					//	Оплата продажи бонусными баллами
						СтрокаОплатаБонуснымиБаллами = ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаОплатаБонуснымиБаллами, СтрокаТаблицыОплатаБонусами);
						СтрокаОплатаБонуснымиБаллами.КлючСвязиБонусныхБаллов = СтрокаТабличнойЧасти.КлючСвязиБонусныхБаллов;

					КонецЦикла;

				КонецЕсли;
				
				СкидкиНаценкиКлиентСервер.РасчитатьПроцентСкидкиДляСтроки(СтрокаТабличнойЧасти, ОтчетОРозничныхПродажах.УчитыватьНДС, ОтчетОРозничныхПродажах.ЦенаВключаетНДС);

			КонецЕсли;

		КонецЦикла;
		
		ВыборкаПоВозвратам = РезультатыЗапросаПоВозвратам[1].Выбрать();
		ТаблицаСерийныеНомера = РезультатыЗапросаПоВозвратам[2].Выгрузить();

		ТекущийКлючСерийныеСертификатов = ТекущийКлючСерийныеСертификатов + 100;	//	"разносим" ключи на всякий случай
		ТекущийКлючОплатыБонусами		= ТекущийКлючОплатыБонусами + 100;

		Пока ВыборкаПоВозвратам.Следующий() Цикл

			Если НЕ ОтменитьТранзакцию Тогда

				СтрокаТабличнойЧасти = ОтчетОРозничныхПродажах.ВозвращенныеТовары.Добавить();
				ЗаполнитьСтрокуТабличнойЧастиПоВыборке(СтрокаТабличнойЧасти, ВыборкаПоВозвратам, СтруктураДействий, КэшированныеЗначения);
				
				Если ВыборкаПоВозвратам.ИспользоватьСерийныеНомера Тогда
					
					СтруктраПоиска = Новый Структура;
					СтруктраПоиска.Вставить("ВладелецДисконтнойКарты", ВыборкаПоВозвратам.ВладелецДисконтнойКарты);
					СтруктраПоиска.Вставить("ДисконтнаяКарта", ВыборкаПоВозвратам.ДисконтнаяКарта);
					СтруктраПоиска.Вставить("Склад"          , ВыборкаПоВозвратам.Склад);
					СтруктраПоиска.Вставить("Номенклатура"   , ВыборкаПоВозвратам.Номенклатура);
					СтруктраПоиска.Вставить("Характеристика" , ВыборкаПоВозвратам.Характеристика);
					СтруктраПоиска.Вставить("Продавец"       , ВыборкаПоВозвратам.Продавец);
					СтруктраПоиска.Вставить("Цена"           , ВыборкаПоВозвратам.Цена);
					СтруктраПоиска.Вставить("СтавкаНДС"      , ВыборкаПоВозвратам.СтавкаНДС);
					СтруктраПоиска.Вставить("Упаковка"       , ВыборкаПоВозвратам.Упаковка);
					
					ТекущийКлючСерийныеСертификатов = ТекущийКлючСерийныеСертификатов + 1;
					
					СтрокаТабличнойЧасти.КлючСвязиСерийныхНомеров = ТекущийКлючСерийныеСертификатов;
					
					СтрокиТаблицаСерийныхНомеров = ТаблицаСерийныеНомера.НайтиСтроки(СтруктраПоиска);

					Для каждого СтрокаТаблицыСерийныхНомеров Из СтрокиТаблицаСерийныхНомеров Цикл

						СтрокаСерийныхНомеров = ОтчетОРозничныхПродажах.СерийныеНомера.Добавить();
						СтрокаСерийныхНомеров.СерийныйНомер = СтрокаТаблицыСерийныхНомеров.СерийныйНомер;
						СтрокаСерийныхНомеров.КлючСвязиСерийныхНомеров = СтрокаТабличнойЧасти.КлючСвязиСерийныхНомеров;
						СтрокаСерийныхНомеров.ИмяТаблицы = "ВозвращенныеТовары";

					КонецЦикла;

				КонецЕсли;

			//	LNK 24.06.2021 09:39:31
				ТекущийКлючОплатыБонусами = ТекущийКлючОплатыБонусами + 1;
				СтрокаТабличнойЧасти.КлючСвязиБонусныхБаллов = ТекущийКлючОплатыБонусами;

				Если НЕ СтрокаТабличнойЧасти.СуммаБонусныхБалловСписано = 0 Тогда

					СтруктраПоиска = Новый Структура(
						"ВидОперации, ДокументПродажи, Контрагент, КлючСвязиБонусныхБаллов"
						, Перечисления.ВидыОперацийЧекККМ.Возврат
						, ВыборкаПоВозвратам.СсылкаДляОплатыБонуснымиБаллами
						, ВыборкаПоВозвратам.ВладелецДисконтнойКарты
						, ВыборкаПоВозвратам.КлючСвязиБонусныхБаллов
					);
					СтрокиТаблицыОплатаБонусами = ТаблицаОплатаБонусами.НайтиСтроки(СтруктраПоиска);

					Для каждого СтрокаТаблицыОплатаБонусами Из СтрокиТаблицыОплатаБонусами Цикл

					//	Возврат оплаты бонусными баллами
						СтрокаОплатаБонуснымиБаллами = ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаОплатаБонуснымиБаллами, СтрокаТаблицыОплатаБонусами);

						СтрокаОплатаБонуснымиБаллами.КлючСвязиБонусныхБаллов = СтрокаТабличнойЧасти.КлючСвязиБонусныхБаллов;

						Если НЕ СтрокаТабличнойЧасти.ВозвратНеЭтойСмены Тогда

						//	В "Товары" нет строки этой продажи.. она свёрнута!
							СтрокаОплатаБонуснымиБаллами = ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаОплатаБонуснымиБаллами, СтрокаТаблицыОплатаБонусами);

							СтрокаОплатаБонуснымиБаллами.КлючСвязиБонусныхБаллов = СтрокаТабличнойЧасти.КлючСвязиБонусныхБаллов;
							СтрокаОплатаБонуснымиБаллами.СуммаБонусныхБаллов	 = -СтрокаОплатаБонуснымиБаллами.СуммаБонусныхБаллов;
							СтрокаОплатаБонуснымиБаллами.ДокументПродажи		 = СтрокаТаблицыОплатаБонусами.ДокументОснование;
							СтрокаОплатаБонуснымиБаллами.ДатаОплаты				 = СтрокаТаблицыОплатаБонусами.ДокументОснованиеДатаОплаты;

						КонецЕсли;

					КонецЦикла;

				КонецЕсли;

				СкидкиНаценкиКлиентСервер.РасчитатьПроцентСкидкиДляСтроки(СтрокаТабличнойЧасти, ОтчетОРозничныхПродажах.УчитыватьНДС, ОтчетОРозничныхПродажах.ЦенаВключаетНДС);

			КонецЕсли;

		КонецЦикла;

		Если НЕ ОтменитьТранзакцию Тогда

		//	В этой таблице не требуется приязка к таблицам "Товары" или "ВозвращенныеТовары".
		//	Поэтому загружаем как есть.
			ОтчетОРозничныхПродажах.НачислениеБонусныхБаллов.Загрузить(РезультатНачислениеБонусов.Выгрузить());

		КонецЕсли;

		Если НЕ ОтменитьТранзакцию 
		     И (ОтчетОРозничныхПродажах.Товары.Количество() > 0) Тогда
			
			ОтчетОРозничныхПродажах.Серии.Загрузить(РезультатЗапросаПоСериям.Выгрузить());
			
			ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(Документы.ОтчетОРозничныхПродажах.ПараметрыУказанияСерий(ЭтотОбъект));
			ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьСтатусыУказанияСерий(ОтчетОРозничныхПродажах,ПараметрыУказанияСерий);
			
		КонецЕсли;

		Если НЕ ОтменитьТранзакцию
		     И (ОтчетОРозничныхПродажах.Товары.Количество() > 0 
		   Или ОтчетОРозничныхПродажах.ВозвращенныеТовары.Количество() > 0) Тогда
			
		//	Оплаты

			ОтчетОРозничныхПродажах.ОплатаПодарочнымиСертификатами = ОплатаПодарочнымиСертификатами;
			
			Для Каждого СтрокаОплаты Из ТаблицаОплатПлатежныеКарты Цикл

				НоваяСтрока = ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОплаты);

			КонецЦикла;

			Для Каждого Оплата Из ТаблицаОплатБанковскиеКредиты Цикл

				НоваяСтрока           = ОтчетОРозничныхПродажах.ОплатаБанковскимиКредитами.Добавить();
				НоваяСтрока.ВидОплаты = Оплата.ВидОплаты;
				НоваяСтрока.Сумма     = Оплата.Сумма;
				НоваяСтрока.БанкКредитор              = НоваяСтрока.ВидОплаты.БанкКредитор;
				НоваяСтрока.ПроцентБанковскойКомиссии = НоваяСтрока.ВидОплаты.ПроцентБанковскойКомиссии;
				НоваяСтрока.СуммаБанковскойКомиссии   = НоваяСтрока.Сумма * НоваяСтрока.ПроцентБанковскойКомиссии / 100;
				
			КонецЦикла;
			
			ТаблицаПогашения = РезультатПодарочныеСертификаты.Выгрузить();

			Для каждого СтрокаПогашения Из ТаблицаПогашения Цикл

				СтрокаДокумента = ОтчетОРозничныхПродажах.ПогашениеПодарочныхСертификатов.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокаПогашения);

			КонецЦикла;

		//	Подарки
			УстановитьПривилегированныйРежим(Истина);

		//	LNK 24.09.2016 15:19:45
			Если РежимПерезаполнения = Истина Тогда

				УдалитьСуществующиеСписанияПодарков(РезультатыЗапросаПоПодаркам[2].Выбрать(), ОтчетОРозничныхПродажах.Ссылка);

			КонецЕсли;

			МассивСписанийТоваров = Новый Массив;
			ВыборкаПоПодаркамСклад = РезультатыЗапросаПоПодаркам[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоПодаркамСклад.Следующий() Цикл

				ВыборкаПоПодаркамПроект = ВыборкаПоПодаркамСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

				Пока ВыборкаПоПодаркамПроект.Следующий() Цикл

					СписаниеТоваров = СоздатьСписаниеТоваров(ВыборкаПоПодаркамСклад.Склад, РеквизитыКассыККМ);

					ВыборкаПоПодаркамНоменклатура = ВыборкаПоПодаркамПроект.Выбрать();

					Пока ВыборкаПоПодаркамНоменклатура.Следующий() Цикл

						Если НЕ ВыборкаПоПодаркамНоменклатура.Количество = 0 Тогда

							СтрокаСписанияТоваров = СписаниеТоваров.Товары.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаСписанияТоваров, ВыборкаПоПодаркамНоменклатура);

						КонецЕсли;

					КонецЦикла;

					Если СписаниеТоваров.Товары.Количество() > 0 Тогда

						МассивСписанийТоваров.Добавить(СписаниеТоваров)

					КонецЕсли;

				КонецЦикла;

			КонецЦикла;

			УстановитьПривилегированныйРежим(Ложь);

			Попытка

				Если РежимПерезаполнения = Истина Тогда

				//	Устанавливаем "метку" перезаполнения..
					ТекстМетки = "“Модификация объекта” [";	//	без даты.
					ТекстДаты  = Формат(ТекущаяДата(), "ДФ='dd.MM.yyyy ЧЧ:мм:сс'") + "]";

					ПозицияМетки = СтрНайти(ОтчетОРозничныхПродажах.Комментарий, ТекстМетки);

					Если ПозицияМетки = 0 Тогда

						ОтчетОРозничныхПродажах.Комментарий = ТекстМетки + ТекстДаты;

					Иначе

						ОтчетОРозничныхПродажах.Комментарий = СтрЗаменить(ОтчетОРозничныхПродажах.Комментарий
							, Сред(ОтчетОРозничныхПродажах.Комментарий, ПозицияМетки, СтрДлина(ТекстМетки + ТекстДаты))
							, ТекстМетки + ТекстДаты
						);

					КонецЕсли;

				Иначе

				//	Записываем ОтчетОРозничныхПродажах.
					ОтчетОРозничныхПродажах.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
					ОтчетОРозничныхПродажах.Записать(РежимЗаписиДокумента.Запись);
					МассивДокументовКПроведению.Добавить(ОтчетОРозничныхПродажах);

				КонецЕсли;

				СсылкаНаОтчет = ОтчетОРозничныхПродажах.Ссылка;

				УстановитьПривилегированныйРежим(Истина);

				Для каждого СписаниеТоваров Из МассивСписанийТоваров Цикл

					СписаниеТоваров.ОтчетОРозничныхПродажах = СсылкаНаОтчет;
					СписаниеТоваров.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
					СписаниеТоваров.Записать(РежимЗаписиДокумента.Запись);
					МассивДокументовКПроведению.Добавить(СписаниеТоваров);

				КонецЦикла;

				УстановитьПривилегированныйРежим(Ложь);

			//	Архивация чеков происходит только после записи отчета ККМ.
				Если НЕ ОтменитьТранзакцию И НЕ РежимПерезаполнения = Истина Тогда

					Попытка

						МассивСсылокЧекиККМ = РезультатыЗапросаПоддержки[0].Выгрузить().ВыгрузитьКолонку("Ссылка");

						Для Каждого АрхивныйЧек Из МассивСсылокЧекиККМ Цикл

							ДокументОбъект = АрхивныйЧек.ПолучитьОбъект();
							#Если _ Тогда
							ДокументОбъект = Документы.ЧекККМ.СоздатьДокумент();
							#КонецЕсли

							ДокументОбъект.СтатусЧекаККМ = Перечисления.СтатусыЧековККМ.Архивный;
							ДокументОбъект.ОтчетОРозничныхПродажах = ОтчетОРозничныхПродажах.Ссылка;
							ДокументОбъект.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);

							ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);

						//	врукопашную поддерживаем наличие таких движений.
							Документы.ЧекККМ.ВыполнитьДвиженияСостояниеСерийныхНомеров(ДокументОбъект.Ссылка);	//	LNK 20.02.2020 15:20:32

						КонецЦикла;

					Исключение

						ОтменитьТранзакцию = Истина;

						Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							"Не вдалося заархівувати чеки ККМ! %1",
							ОписаниеОшибки()
							);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							Текст,
							ЭтотОбъект);

					КонецПопытки;

				КонецЕсли;

			Исключение

				ОтменитьТранзакцию = Истина;
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					"Не вдалося записати документ «Звіт ККМ про роздрібні продажі!» %1",
					ОписаниеОшибки()
					);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					Текст,
					ЭтотОбъект);

			КонецПопытки;

		КонецЕсли;

		Если ОтменитьТранзакцию Тогда

			ОтменитьТранзакцию();
			Отказ = Истина;

		Иначе

			ЗафиксироватьТранзакцию();
			УстановитьПривилегированныйРежим(Истина);

			Для Каждого ДокументКПроведению Из МассивДокументовКПроведению Цикл

				Попытка

					РезультатПроверки = ДокументКПроведению.ПроверитьЗаполнение();
					ДокументКПроведению.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);

					Если РезультатПроверки Тогда

							ДокументКПроведению.Записать(РежимЗаписиДокумента.Проведение, РежимПроведения);

					Иначе	ДокументКПроведению.Записать(РежимЗаписиДокумента.Запись);

					КонецЕсли;

				Исключение

					НужноДополнительноеПредупреждение = Истина;
					
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"Під час проведення документу «%1» сталася помилка.",
						Строка(ДокументКПроведению)
						);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						Текст + Символы.ПС + ОписаниеОшибки(),
						ЭтотОбъект);
					
				КонецПопытки;

				СписокДокументов.Добавить(ДокументКПроведению.Ссылка, ДокументКПроведению.Ссылка.Метаданные().Имя);

			КонецЦикла;

			УстановитьПривилегированныйРежим(Ложь);

		КонецЕсли;

	КонецЕсли;

	Если НЕ Отказ И НЕ РежимПерезаполнения = Истина Тогда

		ЗапросОстатокДСвКассе = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаРегистра.СуммаОстаток КАК СуммаВыемки
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваККМ.Остатки(&КрайнийПериод, КассаККМ = &КассаККМ) КАК ТаблицаРегистра
		|ГДЕ
		|	ТаблицаРегистра.СуммаОстаток > 0"
		);
		ЗапросОстатокДСвКассе.УстановитьПараметр("КассаККМ"		, КассаККМ);
		ЗапросОстатокДСвКассе.УстановитьПараметр("КрайнийПериод", КрайнийПериод + 1);	//	.Остатки на начало секунды

		ВыборкаОстатокДСвКассе = ЗапросОстатокДСвКассе.Выполнить().Выбрать();

		Если ВыборкаОстатокДСвКассе.Следующий() Тогда

				СуммаВыемки = ВыборкаОстатокДСвКассе.СуммаВыемки;

		Иначе   СуммаВыемки = 0.00;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеМетодыТекущегоКонтекста

//	Создает списание товаров
//
// Параметры
//  Склад  - СправочникСсылка.Склады
//           Склад, по которому создается документ
//
// Возвращаемое значение:
//  ДокументОбъект.СписаниеТоваров
//
Функция СоздатьСписаниеТоваров(Склад, РеквизитыКассыККМ)

	ДокументОбъект = Документы.СписаниеТоваров.СоздатьДокумент();
	ДокументОбъект.Дата			 = КонецДня(ТекущаяДата());
	ДокументОбъект.Склад		 = Склад;
	ДокументОбъект.Магазин		 = РеквизитыКассыККМ.Магазин;
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ДокументОбъект.Организация	 = РеквизитыКассыККМ.Организация;
	
	ДокументОбъект.АналитикаХозяйственнойОперации = Справочники.АналитикаХозяйственныхОпераций.СкидкиПодарки;
	ДокументОбъект.АналитикаРасходов			  = Справочники.СтатьиРасходов.МаркетингИвенты;

	Возврат ДокументОбъект;

КонецФункции

//	Процедура заполняет строку отчета о розничных продажах по выборке и пересчитывает суммы НДС и Акциза
Процедура ЗаполнитьСтрокуТабличнойЧастиПоВыборке(СтрокаТабличнойЧасти, Выборка, СтруктураДействий, КэшированныеЗначения)
	
	СтруктураПолейТЧ = Новый Структура;
	СтруктураПолейТЧ.Вставить("Сумма"    , 0);
	СтруктураПолейТЧ.Вставить("СтавкаНДС", 0);
	СтруктураПолейТЧ.Вставить("СуммаНДС" , 0);
	СтруктураПолейТЧ.Вставить("СуммаАкцизногоНалога",0);
	СтруктураПолейТЧ.Вставить("ПодакцизныеТоварыДляКоммерческогоИспользования");
	СтруктураПолейТЧ.Вставить("ПодакцизныйТовар");

	ЗаполнитьЗначенияСвойств(СтруктураПолейТЧ, Выборка);
	
	ОбработкаТабличнойЧастиТоварыСервер.ПересчитатьСуммуНДСиАкцизногоНалогаВСтрокеТЧСервер(СтруктураПолейТЧ, СтруктураДействий, КэшированныеЗначения);

	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтруктураПолейТЧ, "СуммаАкцизногоНалога");
	
КонецПроцедуры

Процедура УдалитьСуществующиеСписанияПодарков(ВыборкаСписаний, ОтчетОРозничныхПродажахСсылка)

	Если НЕ ОбщегоНазначенияКлиентСервер.СсылкаПустая(ОтчетОРозничныхПродажахСсылка) Тогда	//	на всякий случай

		УстановитьПривилегированныйРежим(Истина);

		Пока ВыборкаСписаний.Следующий() Цикл

			ДокументОбъект = ВыборкаСписаний.Ссылка.ПолучитьОбъект();
			ДокументОбъект.ДополнительныеСвойства.Вставить("СлужебныйРежимЗаписи", Истина);

			ДокументОбъект.Удалить();

		КонецЦикла;

		УстановитьПривилегированныйРежим(Ложь);

	КонецЕсли;

КонецПроцедуры
	
#КонецОбласти

#Область ФункционалАдминистративногоВоздействия

Процедура ВыполнитьОткатКассовойСменыПоДокументу(ОтчетОРозничныхПродажахСсылка, ОткатОткрываетКассовуюСмену)	Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаЧеки.Дата КАК Дата,
	|	ТаблицаЧеки.Ссылка КАК Ссылка,
	|	ТаблицаЧеки.Проведен КАК Проведен,
	|	0 КАК КлючПорядка
	|ИЗ
	|	Документ.ЧекККМ КАК ТаблицаЧеки
	|ГДЕ
	|	ТаблицаЧеки.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|	И ТаблицаЧеки.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Архивный)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСписания.Дата,
	|	ТаблицаСписания.Ссылка,
	|	ТаблицаСписания.Проведен,
	|	1
	|ИЗ
	|	Документ.СписаниеТоваров КАК ТаблицаСписания
	|ГДЕ
	|	ТаблицаСписания.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВыемки.Дата,
	|	ТаблицаВыемки.Ссылка,
	|	ТаблицаВыемки.Проведен,
	|	1
	|ИЗ
	|	Документ.ВыемкаДенежныхСредствИзКассыККМ КАК ТаблицаВыемки
	|ГДЕ
	|	ТаблицаВыемки.ОтчетОРозничныхПродажах = &ОтчетОРозничныхПродажах
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОтчеты.Дата,
	|	ТаблицаОтчеты.Ссылка,
	|	ТаблицаОтчеты.Проведен,
	|	2
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ТаблицаОтчеты
	|ГДЕ
	|	ТаблицаОтчеты.Ссылка = &ОтчетОРозничныхПродажах
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОтчеты.КассоваяСмена.Дата,
	|	ТаблицаОтчеты.КассоваяСмена,
	|	ТаблицаОтчеты.КассоваяСмена.Проведен,
	|	3
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ТаблицаОтчеты
	|ГДЕ
	|	ТаблицаОтчеты.Ссылка = &ОтчетОРозничныхПродажах
	|	И &ОткатОткрываетКассовуюСмену = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка,
	|	Дата,
	|	Ссылка"
	);
	Запрос.УстановитьПараметр("ОтчетОРозничныхПродажах"		, ОтчетОРозничныхПродажахСсылка);
	Запрос.УстановитьПараметр("ОткатОткрываетКассовуюСмену"	, ОткатОткрываетКассовуюСмену);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НачатьТранзакцию();

	Попытка

		Пока Выборка.Следующий() Цикл

			Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ЧекККМ") ИЛИ ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.КассоваяСмена") Тогда

				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				ДокументОбъект.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
				ДокументОбъект.ДополнительныеСвойства.Вставить("СлужебныйРежимЗаписи", Истина);

				Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ЧекККМ") Тогда

					ДокументОбъект.СтатусЧекаККМ = Перечисления.СтатусыЧековККМ.Пробитый;
					ДокументОбъект.ОтчетОРозничныхПродажах = Неопределено;

				Иначе

					ДокументОбъект.СтатусКассовойСмены	  = Перечисления.СтатусыКассовойСмены.Открыта;
					ДокументОбъект.ОкончаниеКассовойСмены = '00010101';

				КонецЕсли;

				Если Выборка.Проведен Тогда

					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);

				Иначе

					ДокументОбъект.ОбменДанными.Загрузка = Истина;
					ДокументОбъект.Записать();

				КонецЕсли;

			Иначе	//	все остальные удаляем физически

				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				ДокументОбъект.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
				ДокументОбъект.ДополнительныеСвойства.Вставить("СлужебныйРежимЗаписи", Истина);

				Если Выборка.Проведен Тогда

					ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);

				КонецЕсли;

				ДокументОбъект.ОбменДанными.Загрузка = Истина;
				ДокументОбъект.Удалить();

			КонецЕсли;

		КонецЦикла;

		ЗафиксироватьТранзакцию();
		Сообщить("Відкат касової зміни виконано!");

	Исключение

		ОтменитьТранзакцию();
		ТекстОшибки = ОписаниеОшибки();
		Сообщить(ТекстОшибки);

	КонецПопытки;

КонецПроцедуры

#КонецОбласти














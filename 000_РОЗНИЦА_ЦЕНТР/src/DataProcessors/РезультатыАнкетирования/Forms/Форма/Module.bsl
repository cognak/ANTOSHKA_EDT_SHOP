&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	РежимЗагрузки = Элементы.РежимЗагрузки.СписокВыбора[1].Значение;

	Если НЕ УправлениеПользователями.ПолучитьБулевоЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьЗагрузкуРезультатовАнкетирования, Ложь) Тогда

		Отказ = Истина;
		Сообщить("Отказано! Доступ не предоставлен.");
		Возврат;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПрименитьПолученныеДанныеНаСервере()

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПрименитьПолученныеДанные();

	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура ПрименитьПолученныеДанные(Команда)

	ПрименитьПолученныеДанныеНаСервере();

	ОповеститьОбИзменении(Тип("СправочникСсылка.Контрагенты"));

КонецПроцедуры

&НаКлиенте
Процедура ПолноеИмяИмпортируемогоФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ОписаниеОповещения = Новый ОписаниеОповещения("ПолноеИмяИмпортируемогоФайлаЗавершение", ЭтотОбъект);
	ДиалогВыбораФайла  = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.ПолноеИмяФайла = ПолноеИмяИмпортируемогоФайла;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;

	Если РежимЗагрузки = Элементы.РежимЗагрузки.СписокВыбора[1].Значение Тогда

		ДиалогВыбораФайла.Заголовок = "Выберите лист Excel";
		ДиалогВыбораФайла.Фильтр = НСтр("ru = 'Лист Excel'") + " (*.xls)|*.xls|" + НСтр("ru = 'Лист Excel2007-...'") + " (*.xlsx)|*.xlsx";

	Иначе

		ДиалогВыбораФайла.Заголовок = "Выберите текстовый файл";
		ДиалогВыбораФайла.Фильтр = НСтр("ru = 'Текстовый файл'") + " (*.txt)|*.txt|" + НСтр("ru = 'Файл с разделителями CSV'") + " (*.csv)|*.csv";

	КонецЕсли;

	ДиалогВыбораФайла.Показать(ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ПолноеИмяИмпортируемогоФайлаЗавершение(СписокФайлов, ДополнительныеПараметры)	Экспорт

	Если НЕ СписокФайлов = Неопределено И НЕ СписокФайлов.Количество() = 0 Тогда

		ПолноеИмяИмпортируемогоФайла = СписокФайлов[0];

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РежимЗагрузкиПриИзменении(Элемент)

	ПолноеИмяИмпортируемогоФайла = "";

КонецПроцедуры

&НаСервере
Процедура ВыполнитьИмпортДанныхАнкетированияНаСервере()

	ТаблицаКонтакты = Справочники.Контрагенты.СоздатьЭлемент().КонтактнаяИнформация.ВыгрузитьКолонки();
	ТаблицаКонтакты.Колонки.Добавить("Обработан", Новый ОписаниеТипов("Булево"));

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВходящиеДанные.НомерСтроки КАК НомерСтроки,
	|	ВходящиеДанные.НомерКарты КАК НомерКарты,
	|	ВходящиеДанные.Имя КАК Имя,
	|	ВходящиеДанные.ИмяРебенка_1 КАК ИмяРебенка_1,
	|	ВходящиеДанные.ИмяРебенка_2 КАК ИмяРебенка_2,
	|	ВходящиеДанные.ИмяРебенка_3 КАК ИмяРебенка_3,
	|	ВходящиеДанные.ПолКонтрагента КАК ПолКонтрагента,
	|	ВходящиеДанные.ПолРебенка_1 КАК ПолРебенка_1,
	|	ВходящиеДанные.ПолРебенка_2 КАК ПолРебенка_2,
	|	ВходящиеДанные.ПолРебенка_3 КАК ПолРебенка_3,
	|	ВходящиеДанные.НомерМагазина КАК НомерМагазина
	|ПОМЕСТИТЬ ТабличнаяЧасть
	|ИЗ
	|	&ВходящиеДанные КАК ВходящиеДанные
	|ГДЕ
	|	НЕ (ВЫРАЗИТЬ(ВходящиеДанные.НомерКарты КАК СТРОКА(3))) = ""   ""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерКарты,
	|	НомерМагазина
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ведущая.НомерСтроки КАК НомерСтроки,
	|	Ведущая.НомерКарты КАК НомерКарты,
	|	Ведущая.НомерМагазина КАК НомерМагазина,
	|	ЕСТЬNULL(ТаблицаКарты.Ссылка, ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)) КАК ИнформационнаяКарта,
	|	ЕСТЬNULL(ТаблицаКарты.ВидДисконтнойКарты, ЗНАЧЕНИЕ(Справочник.ВидыДисконтныхКарт.ПустаяСсылка)) КАК ВидДисконтнойКарты,
	|	ТаблицаКарты.ВладелецКарты КАК Контрагент,
	|	ЕСТЬNULL(ТаблицаМагазины.Ссылка, ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)) КАК Магазин,
	|	ТаблицаИмена.ИмяЭквивалент КАК ИмяЭквивалент,
	|	ТаблицаИмена.ИмяРебенкаЭквивалент_1 КАК ИмяРебенкаЭквивалент_1,
	|	ТаблицаИмена.ИмяРебенкаЭквивалент_2 КАК ИмяРебенкаЭквивалент_2,
	|	ТаблицаИмена.ИмяРебенкаЭквивалент_3 КАК ИмяРебенкаЭквивалент_3,
	|	Ведущая.Имя КАК Имя,
	|	Ведущая.ИмяРебенка_1 КАК ИмяРебенка_1,
	|	Ведущая.ИмяРебенка_2 КАК ИмяРебенка_2,
	|	Ведущая.ИмяРебенка_3 КАК ИмяРебенка_3
	|ИЗ
	|	ТабличнаяЧасть КАК Ведущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИнформационныеКарты КАК ТаблицаКарты
	|		ПО (ТаблицаКарты.ВладелецКарты ССЫЛКА Справочник.Контрагенты
	|				ИЛИ ТаблицаКарты.ВладелецКарты В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|					И ТаблицаКарты.ВидДисконтнойКарты = ЗНАЧЕНИЕ(Справочник.ВидыДисконтныхКарт.ПредварительныеКартыЛояльности))
	|			И Ведущая.НомерКарты = ТаблицаКарты.КодКарты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Магазины КАК ТаблицаМагазины
	|		ПО Ведущая.НомерМагазина = ТаблицаМагазины.НомерМагазина
	|			И (НЕ Ведущая.НомерМагазина = 0)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			Ведущая.НомерСтроки КАК НомерСтроки,
	|			ЕСТЬNULL(ТаблицаИмя_0.НаименованиеУкраинское, """") КАК ИмяЭквивалент,
	|			ЕСТЬNULL(ТаблицаИмя_1.НаименованиеУкраинское, """") КАК ИмяРебенкаЭквивалент_1,
	|			ЕСТЬNULL(ТаблицаИмя_2.НаименованиеУкраинское, """") КАК ИмяРебенкаЭквивалент_2,
	|			ЕСТЬNULL(ТаблицаИмя_3.НаименованиеУкраинское, """") КАК ИмяРебенкаЭквивалент_3
	|		ИЗ
	|			ТабличнаяЧасть КАК Ведущая
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИменаЛюдей КАК ТаблицаИмя_0
	|				ПО (Ведущая.ПолКонтрагента = ТаблицаИмя_0.Пол
	|						И (Ведущая.Имя = ТаблицаИмя_0.Наименование
	|							ИЛИ Ведущая.Имя = ТаблицаИмя_0.НаименованиеУкраинское))
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИменаЛюдей КАК ТаблицаИмя_1
	|				ПО (Ведущая.ПолРебенка_1 = ТаблицаИмя_1.Пол
	|						И (Ведущая.ИмяРебенка_1 = ТаблицаИмя_1.Наименование
	|							ИЛИ Ведущая.ИмяРебенка_1 = ТаблицаИмя_1.НаименованиеУкраинское))
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИменаЛюдей КАК ТаблицаИмя_2
	|				ПО (Ведущая.ПолРебенка_2 = ТаблицаИмя_2.Пол
	|						И (Ведущая.ИмяРебенка_2 = ТаблицаИмя_2.Наименование
	|							ИЛИ Ведущая.ИмяРебенка_2 = ТаблицаИмя_2.НаименованиеУкраинское))
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИменаЛюдей КАК ТаблицаИмя_3
	|				ПО (Ведущая.ПолРебенка_3 = ТаблицаИмя_3.Пол
	|						И (Ведущая.ИмяРебенка_3 = ТаблицаИмя_3.Наименование
	|							ИЛИ Ведущая.ИмяРебенка_3 = ТаблицаИмя_3.НаименованиеУкраинское))) КАК ТаблицаИмена
	|		ПО Ведущая.НомерСтроки = ТаблицаИмена.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки"
	);
	Запрос.УстановитьПараметр("ВходящиеДанные", Объект.ВходящиеДанные.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл

		СтрокаТабличнойЧасти = Объект.ВходящиеДанные[Выборка.НомерСтроки - 1];

		СтрокаТабличнойЧасти.ИнформационнаяКарта = Выборка.ИнформационнаяКарта;
		СтрокаТабличнойЧасти.ВидДисконтнойКарты  = Выборка.ВидДисконтнойКарты;
		СтрокаТабличнойЧасти.Контрагент = Выборка.Контрагент;
		СтрокаТабличнойЧасти.Магазин = Выборка.Магазин;

		СтрокаТабличнойЧасти.ИмяЭквивалент = ?(ПустаяСтрока(Выборка.ИмяЭквивалент), "", Выборка.Имя);
		СтрокаТабличнойЧасти.ИмяРебенкаЭквивалент_1 = ?(ПустаяСтрока(Выборка.ИмяРебенкаЭквивалент_1), "", Выборка.ИмяРебенка_1);
		СтрокаТабличнойЧасти.ИмяРебенкаЭквивалент_2 = ?(ПустаяСтрока(Выборка.ИмяРебенкаЭквивалент_2), "", Выборка.ИмяРебенка_2);
		СтрокаТабличнойЧасти.ИмяРебенкаЭквивалент_3 = ?(ПустаяСтрока(Выборка.ИмяРебенкаЭквивалент_3), "", Выборка.ИмяРебенка_3);

		СформироватьДанныеТелефона(СтрокаТабличнойЧасти, ТаблицаКонтакты);

		ДанныеАдреса = Новый Структура(
			"Индекс, Область, Город, Район, Улица, Дом, Корпус, Квартира"
			, СокрЛП(СтрокаТабличнойЧасти.Индекс)
			, СокрЛП(СтрокаТабличнойЧасти.Область)
			, СокрЛП(СтрокаТабличнойЧасти.Город)
			, СокрЛП(СтрокаТабличнойЧасти.Район)
			, СокрЛП(СтрокаТабличнойЧасти.Улица)
			, СокрЛП(СтрокаТабличнойЧасти.Дом)
			, СокрЛП(СтрокаТабличнойЧасти.Корпус)
			, СокрЛП(СтрокаТабличнойЧасти.Квартира));

		СтрокаТабличнойЧасти.ДанныеАдрес = КонтактнаяИнформацияСлужебный.СформироватьДанныеАдреса(ДанныеАдреса, СтрокаТабличнойЧасти.Адрес);

	//	Контроль корректности
		СтрокаТабличнойЧасти.Пометка = КонтактнаяИнформацияКлиентСервер.ДанныеАнкетыПрименимы(СтрокаТабличнойЧасти);

	КонецЦикла;

КонецПроцедуры

&НаСервере	//	LNK 31.07.2019 09:28:41
Процедура УстановитьЭквивалентИмени(ИмяЭлемента, ИдентификаторСтроки)

	СоответствиеЭлементов = Новый Соответствие;
	СоответствиеЭлементов.Вставить("ВходящиеДанныеИмя"         , Новый Структура("Оригинал, Эквивалент, Пол", "Имя", "ИмяЭквивалент", "ПолКонтрагента"));
	СоответствиеЭлементов.Вставить("ВходящиеДанныеИмяРебенка_1", Новый Структура("Оригинал, Эквивалент, Пол", "ИмяРебенка_1", "ИмяРебенкаЭквивалент_1", "ПолРебенка_1"));
	СоответствиеЭлементов.Вставить("ВходящиеДанныеИмяРебенка_2", Новый Структура("Оригинал, Эквивалент, Пол", "ИмяРебенка_2", "ИмяРебенкаЭквивалент_2", "ПолРебенка_2"));
	СоответствиеЭлементов.Вставить("ВходящиеДанныеИмяРебенка_3", Новый Структура("Оригинал, Эквивалент, Пол", "ИмяРебенка_3", "ИмяРебенкаЭквивалент_3", "ПолРебенка_3"));

	СоставИмени = СоответствиеЭлементов.Получить(ИмяЭлемента);

	СтрокаТабличнойЧасти = Объект.ВходящиеДанные.НайтиПоИдентификатору(ИдентификаторСтроки);

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаИмена.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ИменаЛюдей КАК ТаблицаИмена
	|ГДЕ
	|	ТаблицаИмена.Пол = &Пол
	|	И &Имя В (ТаблицаИмена.Наименование, ТаблицаИмена.НаименованиеУкраинское)"
	);
	Запрос.УстановитьПараметр("Имя", СтрокаТабличнойЧасти[СоставИмени.Оригинал]);
	Запрос.УстановитьПараметр("Пол", СтрокаТабличнойЧасти[СоставИмени.Пол]);

	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда

		СтрокаТабличнойЧасти[СоставИмени.Эквивалент] = СтрокаТабличнойЧасти[СоставИмени.Оригинал];

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СформироватьДанныеТелефона(СтрокаТабличнойЧасти, ТаблицаКонтакты)

	Если ПустаяСтрока(СтрокаТабличнойЧасти.Телефон) Тогда

		СтрокаТабличнойЧасти.НомерТелефонаБезКодов = "";
		СтрокаТабличнойЧасти.ДанныеТелефон = "";

	Иначе

		ТаблицаКонтакты.Очистить();
		СтрокаТаблицы = ТаблицаКонтакты.Добавить();
		СтрокаТаблицы.Представление = СтрокаТабличнойЧасти.Телефон;
		КонтактнаяИнформацияВызовСервера.ПарсерНомераТелефона(СтрокаТаблицы, ТаблицаКонтакты.Колонки);

		СтрокаТабличнойЧасти.Телефон = СтрокаТаблицы.НомерТелефона;
		СтрокаТабличнойЧасти.НомерТелефонаБезКодов = СтрокаТаблицы.НомерТелефонаБезКодов;
		СтрокаТабличнойЧасти.ДанныеТелефон = СтрокаТаблицы.ЗначенияПолей;

		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТаблицаКонтакты.Ссылка КАК Контрагент
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК ТаблицаКонтакты
		|ГДЕ
		|	НЕ ТаблицаКонтакты.Ссылка = &Контрагент
		|	И ТаблицаКонтакты.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
		|	И ТаблицаКонтакты.НомерТелефона = &НомерТелефона"
		);
		Запрос.УстановитьПараметр("Контрагент"   , СтрокаТабличнойЧасти.Контрагент);
		Запрос.УстановитьПараметр("НомерТелефона", СтрокаТабличнойЧасти.Телефон);

		Выборка = Запрос.Выполнить().Выбрать();

		Если Выборка.Следующий() Тогда

			СтрокаТабличнойЧасти.КонтрагентПоНомеруТелефона = Выборка.Контрагент;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СформироватьДанныеТелефона_УДАЛИТЬ(ПредставлениеТефона, НомерТелефонаБезКодов)

	Если ПустаяСтрока(ПредставлениеТефона) Тогда
		
		НомерТелефонаБезКодов = "";
		Возврат "";

	КонецЕсли;

	ПространствоИмен = КонтактнаяИнформацияКлиентСерверПовтИсп.ПространствоИмен();
	
	Результат = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(ПространствоИмен, "КонтактнаяИнформация"));
	Результат.Комментарий = "Данные анкетирования";
	
	Результат.Состав = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(ПространствоИмен, "НомерТелефона"));

	ДанныеТелефона = ОбщегоНазначенияКлиентСервер.lx_FillValueList(, ПредставлениеТефона,, " ", 5, Ложь, Новый ОписаниеТипов("Строка"));

	Результат.Состав.КодСтраны  = СокрЛП(ДанныеТелефона[0]);
	Результат.Состав.КодГорода  = СокрЛП(ДанныеТелефона[1]);
	Результат.Состав.Номер      = СокрЛП(ДанныеТелефона[2]) + СокрЛП(ДанныеТелефона[3]) + СокрЛП(ДанныеТелефона[4]);
	Результат.Состав.Добавочный = "";

//	Представление
	Результат.Представление = КонтактнаяИнформацияСлужебный.ПредставлениеТелефона(Результат.Состав);
//	Только для отображения в таблице этой формы
	ПредставлениеТефона   = Результат.Представление;
	НомерТелефонаБезКодов = Результат.Состав.Номер;

	Возврат КонтактнаяИнформацияСлужебный.СериализацияКонтактнойИнформации(Результат);

КонецФункции // СформироватьДанныеТелефона()

&НаКлиенте
Процедура ВыполнитьИмпортДанныхАнкетирования(Команда)

	ТекстСообщения = "";

	ЖурналСобытий.Регистрация("РезультатыАнкетирования.Чтение", "Примечание"
	,,,, "1. Начало чтения «" + ПолноеИмяИмпортируемогоФайла + "»", ИмяКомпьютера(), Истина);

	Если РежимЗагрузки = Элементы.РежимЗагрузки.СписокВыбора[1].Значение Тогда

		ФайлОбъект = Новый Файл(ПолноеИмяИмпортируемогоФайла);

		ВыполнитьИмпортДанныхАнкетирования_EXCEL(
			ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ФайлОбъект.ПолноеИмя), УникальныйИдентификатор),
			ФайлОбъект.Расширение,
			ТекстСообщения);
	Иначе

		ВыполнитьИмпортДанныхАнкетирования_CSV();

	КонецЕсли;

	ЖурналСобытий.Регистрация("РезультатыАнкетирования.Чтение", "Примечание"
	,,,, "2. Файл прочитан (" + Формат(Объект.ВходящиеДанные.Количество(), "ЧДЦ=; ЧН=0; ЧГ=") + "), подготовка данных ...", ИмяКомпьютера(), Истина);

	ВыполнитьИмпортДанныхАнкетированияНаСервере();

	ОповеститьОбИзменении(Тип("СправочникСсылка.Контрагенты"));

	ЖурналСобытий.Регистрация("РезультатыАнкетирования.Чтение", "Примечание"
	,,,, "3. Данные подготовлены.", ИмяКомпьютера(), Истина);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИмпортДанныхАнкетирования_CSV()

	НомерСтроки  = 0;
	ЧтениеТекста = Новый ЧтениеТекста(ПолноеИмяИмпортируемогоФайла, КодировкаТекста.UTF8,,, Ложь);

	Объект.ВходящиеДанные.Очистить();

	Пока Истина Цикл

		СтрокаТекста = ЧтениеТекста.ПрочитатьСтроку();

		Если ПустаяСтрока(СтрокаТекста) Тогда

			Прервать;

		КонецЕсли;

		НомерСтроки  = НомерСтроки + 1;
		ДанныеСтроки = ОбщегоНазначенияКлиентСервер.lx_FillValueList(, СтрокаТекста,, ";", 28, Ложь, Новый ОписаниеТипов("Строка"));

		Если ДанныеСтроки.Количество() = 28 Тогда

			СтрокаДанных = Объект.ВходящиеДанные.Добавить();
			СтрокаДанных.НомерКарты = СокрЛП(ДанныеСтроки[0]);
			СтрокаДанных.Фамилия    = СокрЛП(ДанныеСтроки[1]);
			СтрокаДанных.Имя        = СокрЛП(ДанныеСтроки[2]);
			СтрокаДанных.Отчество   = СокрЛП(ДанныеСтроки[3]);
			СтрокаДанных.ПолКонтрагента = ПолучитьПолНаКлиенте(ДанныеСтроки[4]);
			СтрокаДанных.ДатаРожденияКонтрагента = ПолучитьДатуНаКлиенте(ДанныеСтроки[5]);

			СтрокаДанных.Индекс   = СокрЛП(ДанныеСтроки[ 6]);
			СтрокаДанных.Область  = СокрЛП(ДанныеСтроки[ 7]);
			СтрокаДанных.Город    = СокрЛП(ДанныеСтроки[ 8]);
			СтрокаДанных.Район    = СокрЛП(ДанныеСтроки[ 9]);
			СтрокаДанных.Улица    = СокрЛП(ДанныеСтроки[10]);
			СтрокаДанных.Дом      = СокрЛП(ДанныеСтроки[11]);
			СтрокаДанных.Корпус   = СокрЛП(ДанныеСтроки[12]);
			СтрокаДанных.Квартира = СокрЛП(ДанныеСтроки[13]);

			СтрокаДанных.Телефон      = СокрЛП(ДанныеСтроки[14]);
			СтрокаДанных.Электропочта = СокрЛП(ДанныеСтроки[15]);

			СтрокаДанных.ИмяРебенка_1          = СокрЛП(ДанныеСтроки[16]);
			СтрокаДанных.ДатаРожденияРебенка_1 = ПолучитьДатуНаКлиенте(ДанныеСтроки[17]);
			СтрокаДанных.ПолРебенка_1          = ПолучитьПолНаКлиенте(ДанныеСтроки[18]);

			СтрокаДанных.ИмяРебенка_2          = СокрЛП(ДанныеСтроки[19]);
			СтрокаДанных.ДатаРожденияРебенка_2 = ПолучитьДатуНаКлиенте(ДанныеСтроки[20]);
			СтрокаДанных.ПолРебенка_2          = ПолучитьПолНаКлиенте(ДанныеСтроки[21]);

			СтрокаДанных.ИмяРебенка_3          = СокрЛП(ДанныеСтроки[22]);
			СтрокаДанных.ДатаРожденияРебенка_3 = ПолучитьДатуНаКлиенте(ДанныеСтроки[23]);
			СтрокаДанных.ПолРебенка_3          = ПолучитьПолНаКлиенте(ДанныеСтроки[24]);

			СтрокаДанных.НомерМагазина   = СокрЛП(ДанныеСтроки[25]);
			СтрокаДанных.ДатаВыдачиКарты = Мин(ПолучитьДатуНаКлиенте(ДанныеСтроки[26]), ТекущаяДата());

			СтрокаДанных.ШБМ = ?(СокрЛП(ДанныеСтроки[27]) = "1", Истина, Ложь);

			Если НомерСтроки % 100 = 0 Тогда

				ПоказатьОповещениеПользователя("Прочитано " + Формат(НомерСтроки, "ЧДЦ=; ЧГ="));

			КонецЕсли;

		Иначе

			Сообщить("Отказано! В строке №" + Формат(НомерСтроки, "ЧГ=") + " недопустимые данные [" + СтрокаТекста + "]" + Символы.ПС + "СТРОКА ПРОПУЩЕНА!");

		КонецЕсли;

	КонецЦикла;

	ЧтениеТекста.Закрыть();

КонецПроцедуры

&НаСервере
Процедура ВыполнитьИмпортДанныхАнкетирования_EXCEL(АдресВХранилище, Расширение, ТекстСообщения)

	Объект.ВходящиеДанные.Очистить();

	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	МассивДанных      = Новый Массив;
//	В файле ёкселя могут быть пустые строки. Пустые могут быть как среди заполненных,
//	так и в конце фала (при этом объект возвращает общее количество строк!).
//	Прерываем чтение, если количество строк превысило некую цифру - примем число 10.
	СчётчикПустых = 0;

	ТабличныйДокумент.Прочитать(ИмяВременногоФайла, СпособЧтенияЗначенийТабличногоДокумента.Значение);

	Попытка

		УдалитьФайлы(ИмяВременногоФайла);

	Исключение	КонецПопытки;

	Для НомерСтроки = 3 По ТабличныйДокумент.ВысотаТаблицы Цикл

		СтрокаТабличнойЧасти = Объект.ВходящиеДанные.Добавить();

		Для каждого Колонка Из ПолучитьСоставКолонокExcel() Цикл

			ТекущаяОбласть = ТабличныйДокумент.ПолучитьОбласть(
				"R" + Формат(НомерСтроки, "ЧДЦ=; ЧН=0; ЧГ=") +
				"C" + Формат(Колонка.Номер, "ЧДЦ=; ЧН=0; ЧГ=")).ТекущаяОбласть;

			Попытка

						ЗначениеЯчейки = ТекущаяОбласть.Значение;

			Исключение	ЗначениеЯчейки = ТекущаяОбласть.Текст;

			КонецПопытки;

			УстановитьЗначение(ЗначениеЯчейки, Колонка, СтрокаТабличнойЧасти);

		КонецЦикла;

		Если ПустаяСтрока(СтрокаТабличнойЧасти.НомерКарты)
		ИЛИ ПустаяСтрока(СтрокаТабличнойЧасти.Телефон) И ПустаяСтрока(СтрокаТабличнойЧасти.Фамилия) И ПустаяСтрока(СтрокаТабличнойЧасти.Имя) И ПустаяСтрока(СтрокаТабличнойЧасти.Отчество)	Тогда
		//	LNK 12.02.2019 14:56:11

			Объект.ВходящиеДанные.Удалить(Объект.ВходящиеДанные.Индекс(СтрокаТабличнойЧасти));
			СчётчикПустых = СчётчикПустых + 1;

		Иначе

		//	при первой же "допустимой" строке счётчик сбрасываем!
			СчётчикПустых = 0;

		КонецЕсли;

		Если СчётчикПустых >= 10 Тогда

			Прервать;

		КонецЕсли;

	КонецЦикла;

	ТабличныйДокумент = Неопределено;
	ТекстСообщения    = "";

КонецПроцедуры

&НаСервере
Процедура УстановитьЗначение(ЗначениеЯчейки, Колонка, СтрокаТабличнойЧасти)

	Если Колонка.Имя = "НомерКарты" ИЛИ Колонка.Имя = "Телефон" Тогда

		ЗначениеЯчейки = СтрЗаменить(Формат(ЗначениеЯчейки, "ЧДЦ=; ЧГ="), " ", "");

		Если Колонка.Имя = "Телефон" Тогда

			Если Найти(ЗначениеЯчейки, "000000000") > 0 Тогда

				ЗначениеЯчейки = "";

			КонецЕсли;

		КонецЕсли;

	Иначе

		Если Колонка.Тип = Новый ОписаниеТипов("Дата") И ТипЗнч(ЗначениеЯчейки) = Тип("Строка") И ЗначениеЗаполнено(ЗначениеЯчейки) Тогда

			ЗначениеЯчейки = ПолучитьДатуНаСервере(СтрЗаменить(СтрЗаменить(ЗначениеЯчейки, ".", "-"), ",", "-"));

		КонецЕсли;

		ЗначениеЯчейки = Колонка.Тип.ПривестиЗначение(ЗначениеЯчейки);

		Если Колонка.Имя = "ПолКонтрагента" ИЛИ Лев(Колонка.Имя, 10) = "ПолРебенка" Тогда

			ЗначениеЯчейки = ПолучитьПолНаСервере(ЗначениеЯчейки);

		КонецЕсли;

	КонецЕсли;

	Если Колонка.ТРег Тогда

		ЗначениеЯчейки = ТРег(ЗначениеЯчейки);

	КонецЕсли;

	СтрокаТабличнойЧасти[Колонка.Имя] = ЗначениеЯчейки;

КонецПроцедуры

&НаСервере
Функция ПолучитьСоставКолонокExcel()

	СоставКолонок = Новый Массив;
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "НомерКарты"             ,  1, Ложь  , Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Фамилия"                ,  2, Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Имя"                    ,  3, Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Отчество"               ,  4, Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ПолКонтрагента"         ,  5, Ложь  , Новый ОписаниеТипов("Число")));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ДатаРожденияКонтрагента",  6, Ложь  , Новый ОписаниеТипов("Дата")));

	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Индекс"                 ,  7, Ложь  , Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Область"                ,  8, Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Город"                  ,  9, Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Район"                  , 10, Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Улица"                  , 11, Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Дом"                    , 12, Ложь  , Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Корпус"                 , 13, Ложь  , Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Квартира"               , 14, Ложь  , Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));

	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Телефон"                , 15, Ложь  , Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "Электропочта"           , 16, Ложь  , Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));

	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ИмяРебенка_1"           , 17, Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ДатаРожденияРебенка_1"  , 18, Ложь  , Новый ОписаниеТипов("Дата")));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ПолРебенка_1"           , 19, Ложь  , Новый ОписаниеТипов("Число")));

	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ИмяРебенка_2"           , 20, Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ДатаРожденияРебенка_2"  , 21, Ложь  , Новый ОписаниеТипов("Дата")));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ПолРебенка_2"           , 22, Ложь  , Новый ОписаниеТипов("Число")));

	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ИмяРебенка_3"           , 23, Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ДатаРожденияРебенка_3"  , 24, Ложь  , Новый ОписаниеТипов("Дата")));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ПолРебенка_3"           , 25, Ложь  , Новый ОписаниеТипов("Число")));

	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "НомерМагазина"          , 26, Ложь  , Новый ОписаниеТипов("Число")));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ДатаВыдачиКарты"        , 27, Ложь  , Новый ОписаниеТипов("Дата")));
	СоставКолонок.Добавить(Новый Структура("Имя, Номер, ТРег, Тип", "ШБМ"                    , 28, Ложь  , Новый ОписаниеТипов("Число")));

	Возврат СоставКолонок;

КонецФункции // ПолучитьСоставКолонокExcel()

&НаКлиенте
Функция ПолучитьПолНаКлиенте(Ключ)

	Возврат   ?(Ключ = "0" ИЛИ Ключ = 0
				, ПредопределенноеЗначение("Перечисление.ПолФизическогоЛица.Женский")
			, ?(Ключ = "1" ИЛИ Ключ = 1
				, ПредопределенноеЗначение("Перечисление.ПолФизическогоЛица.Мужской")
				, Неопределено));

КонецФункции // ПолучитьПолНаКлиенте()

&НаСервере
Функция ПолучитьПолНаСервере(Ключ)

	Возврат   ?(Ключ = "0" ИЛИ Ключ = 0
				, ПредопределенноеЗначение("Перечисление.ПолФизическогоЛица.Женский")
			, ?(Ключ = "1" ИЛИ Ключ = 1
				, ПредопределенноеЗначение("Перечисление.ПолФизическогоЛица.Мужской")
				, Неопределено));

КонецФункции // ПолучитьПолНаСервере()

&НаКлиенте
Функция ПолучитьДатуНаКлиенте(ДатаСтрока)

	СоставДаты = ОбщегоНазначенияКлиентСервер.lx_FillValueList(, ДатаСтрока,, "-",,, Новый ОписаниеТипов("Число"));

	Попытка
		
		ЗначениеДаты = Дата(Макс(СоставДаты[2], 1), Макс(СоставДаты[1], 1), Макс(СоставДаты[0], 1));
	
	Исключение

		ЗначениеДаты = '00010101';

	КонецПопытки;

	Возврат ЗначениеДаты;

КонецФункции // ПолучитьДатуНаКлиенте()

&НаСервере
Функция ПолучитьДатуНаСервере(ДатаСтрока)

	СоставДаты = ОбщегоНазначенияКлиентСервер.lx_FillValueList(, ДатаСтрока,, "-",,, Новый ОписаниеТипов("Число"));

	Попытка
		
		ЗначениеДаты = Дата(Макс(СоставДаты[2], 1), Макс(СоставДаты[1], 1), Макс(СоставДаты[0], 1));
	
	Исключение

		ЗначениеДаты = '00010101';

	КонецПопытки;

	Возврат ЗначениеДаты;

КонецФункции // ПолучитьДатуНаСервере()

#Область РаботаСЭквивалентамиИмен

&НаКлиенте
Процедура ВходящиеДанныеИмяПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ВходящиеДанные.ТекущиеДанные;

	Если НЕ ТекущиеДанные = Неопределено Тогда

		УстановитьЭквивалентИмени(Элемент.Имя, ТекущиеДанные.ПолучитьИдентификатор());

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область РаботаСПометкамиТабличныхЧастей

&НаКлиенте
Процедура ВыбратьВсеСтроки(Команда)

	ИзменитьПометкуСтрок(Объект.ВходящиеДанные, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВсеСтроки(Команда)

	ИзменитьПометкуСтрок(Объект.ВходящиеДанные, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСтрокиВыделенные(Команда)

	ИзменитьПометкуСтрок(Элементы.ВходящиеДанные.ВыделенныеСтроки, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ИсключитьСтрокиВыделенные(Команда)

	ИзменитьПометкуСтрок(Элементы.ВходящиеДанные.ВыделенныеСтроки, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПометкуСтрок(Коллекция, Пометка)

	Для каждого СтрокаКоллекции Из Коллекция Цикл

		Если ТипЗнч(СтрокаКоллекции) = Тип("Число") Тогда

			СтрокаКоллекции = Объект.ВходящиеДанные.НайтиПоИдентификатору(СтрокаКоллекции);

		КонецЕсли;

		СтрокаКоллекции.Пометка = Пометка;

	КонецЦикла;

КонецПроцедуры
	
#КонецОбласти

//	\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\/
//Тип файла: CSV
//Кодировка: UTF8
//Разделитель: символ "точка с запятой"
//1.  Номер карты дисконта: Только цифры без любых разделителей.
//2.  Фамилия
//3.  Имя
//4.  Отчество
//5.  Пол (анкетируемого): число 1 или 0 (1 - муж, 0 - жен)
//6.  Дата рождения: ДД-ММ-ГГГГ (например 22-06-1812)
//7.  Адрес.Индекс
//8.  Адрес.Область
//9.  Адрес.Город
//10. Адрес.Район
//11. Адрес.Улица
//12. Адрес.Дом
//13. Адрес.Корпус
//14. Адрес.Квартира
//15. Телефон: +38 ХХХ ХХХ ХХ ХХ (разделитель пробел chr(32))
//16. Эл.почта
//17. Имя ребёнка 1
//18. Дата рождения ребёнка 1: ДД-ММ-ГГГГ (например 22-06-1812) 
//19. Пол ребёнка 1: число 1 или 0 (1 - муж, 0 - жен)
//20. Имя ребёнка 2
//21. Дата рождения ребёнка 2: ДД-ММ-ГГГГ (например 22-06-1812) 
//22. Пол ребёнка 2: число 1 или 0 (1 - муж, 0 - жен)
//23. Имя ребёнка 3
//24. Дата рождения ребёнка 3: ДД-ММ-ГГГГ (например 22-06-1812) 
//25. Пол ребёнка 3: число 1 или 0 (1 - муж, 0 - жен)
//26. Номер магазина выдачи карты: только цифры без любых разделителей.
//27. Дата выдачи карты: ДД-ММ-ГГГГ (например 22-06-1812)
//28. ШБМ: цифра 1 или 0 (1 - да, 0 - нет)





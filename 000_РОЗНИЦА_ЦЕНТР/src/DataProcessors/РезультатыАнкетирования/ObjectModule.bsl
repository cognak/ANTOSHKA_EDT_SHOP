Процедура ПрименитьПолученныеДанные()	Экспорт

	УстановитьПривилегированныйРежим(Истина);

	ЖурналСобытий.Регистрация("РезультатыАнкетирования.Применение", "Примечание"
	,,,, "4. Начало записи.", ИмяКомпьютера(), Истина);

	Счётчик = 0;

	Для каждого СтрокаТабличнойЧасти Из ВходящиеДанные Цикл

		Если НЕ СтрокаТабличнойЧасти.Пометка Тогда

			Продолжить;

		КонецЕсли;

		Если НЕ КонтактнаяИнформацияКлиентСервер.ДанныеАнкетыПрименимы(СтрокаТабличнойЧасти) Тогда

			СтрокаТабличнойЧасти.Пометка = Ложь;
			Продолжить;

		КонецЕсли;

		НачатьТранзакцию();

		Попытка

			УстановитьДанныеКонтрагента(СтрокаТабличнойЧасти);
			ВерификацияКлиентовСервер.УстановитьДанныеИнформационнойКарты(СтрокаТабличнойЧасти);

			ВерификацияКлиентовСервер.УстановитьСобытиеВерификации(
				СтрокаТабличнойЧасти.Контрагент,
				СтрокаТабличнойЧасти.ИнформационнаяКарта,
				Перечисления.СобытияВерификацииПокупателей.Выполнено,
				СтрокаТабличнойЧасти.ДатаВыдачиКарты
			);

			СтрокаТабличнойЧасти.Применено = Истина;
			Счётчик = Счётчик + 1;

			ЗафиксироватьТранзакцию();
	
		Исключение

			ТекстОшибки = ОписаниеОшибки();
			ОтменитьТранзакцию();

			ЖурналСобытий.Регистрация("РезультатыАнкетирования.Применение", "Ошибка"
			,,,, "4.1. Ошибка (" + Формат(Счётчик, "ЧДЦ=; ЧН=0; ЧГ=") + " эл.):" + Символы.ПС + ТекстОшибки, ИмяКомпьютера(), Ложь);

			ВызватьИсключение "ОШИБКА СИСТЕМЫ:" + Символы.ПС + ТекстОшибки;

		КонецПопытки;

	КонецЦикла;

	ЖурналСобытий.Регистрация("РезультатыАнкетирования.Применение", "Примечание"
	,,,, "5. Запись завершена. Всего записано " + Формат(Счётчик, "ЧДЦ=; ЧН=0; ЧГ=") + " эл.", ИмяКомпьютера(), Истина);

КонецПроцедуры

Процедура УстановитьДанныеКонтрагента(СтрокаТабличнойЧасти)

	Если НЕ СтрокаТабличнойЧасти.Контрагент.Пустая() Тогда

		КонтрагентОбъект = СтрокаТабличнойЧасти.Контрагент.ПолучитьОбъект();

		Если ПустаяСтрока(КонтрагентОбъект.IDN) Тогда

			КонтрагентОбъект.IDN = КонтрагентОбъект.Код;

		КонецЕсли;

	Иначе

		КонтрагентОбъект = Справочники.Контрагенты.СоздатьЭлемент();
		КонтрагентОбъект.УстановитьНовыйКод();
		КонтрагентОбъект.IDN = КонтрагентОбъект.Код;
		КонтрагентОбъект.Родитель = Справочники.Контрагенты.Покупатели;

		КонтрагентОбъект.УстановитьСсылкуНового(Справочники.Контрагенты.ПолучитьСсылку());
		СтрокаТабличнойЧасти.Контрагент = КонтрагентОбъект.ПолучитьСсылкуНового();

	КонецЕсли;

	КонтрагентОбъект.Покупатель      = Истина;
	КонтрагентОбъект.ПометкаУдаления = Ложь;
	КонтрагентОбъект.ЮрФизЛицо    = Перечисления.ЮрФизЛицо.ФизЛицо;
	КонтрагентОбъект.Пол          = СтрокаТабличнойЧасти.ПолКонтрагента;
	КонтрагентОбъект.ДатаРождения = СтрокаТабличнойЧасти.ДатаРожденияКонтрагента;
//	---------------------------------------------------------------------------------------

	СтроковыеФункцииКлиентСервер.ПривестиНаименование(СтрокаТабличнойЧасти.Фамилия, Истина, Истина);
	СтроковыеФункцииКлиентСервер.ПривестиНаименование(СтрокаТабличнойЧасти.Имя, Истина, Истина);
	СтроковыеФункцииКлиентСервер.ПривестиНаименование(СтрокаТабличнойЧасти.Отчество, Истина, Истина);

//	Выполним минимальную нормализацию наименования..
	КонтрагентОбъект.Наименование = СтроковыеФункцииКлиентСервер.ПривестиНаименование(
		СтрокаТабличнойЧасти.Фамилия + " " + СтрокаТабличнойЧасти.Имя + " " + СтрокаТабличнойЧасти.Отчество
		, Ложь, Истина
	);
	КонтрагентОбъект.НаименованиеПолное = КонтрагентОбъект.Наименование;

	ДатаСеансаТекущая = ТекущаяДатаСеанса();

	СтруктураЗаписи = РегистрыСведений.ФИОФизЛиц.ПолучитьПоследнее(ДатаСеансаТекущая, Новый Структура("ФизЛицо", СтрокаТабличнойЧасти.Контрагент));

	Если 	НЕ СтруктураЗаписи.Фамилия = СтрокаТабличнойЧасти.Фамилия
		ИЛИ НЕ СтруктураЗаписи.Отчество = СтрокаТабличнойЧасти.Отчество
		ИЛИ НЕ СтруктураЗаписи.Имя = СтрокаТабличнойЧасти.Имя Тогда

		МенеджерЗаписи = РегистрыСведений.ФИОФизЛиц.СоздатьМенеджерЗаписи();

		МенеджерЗаписи.ФизЛицо  = СтрокаТабличнойЧасти.Контрагент;
		МенеджерЗаписи.Период   = ДатаСеансаТекущая;
		МенеджерЗаписи.Фамилия  = СтрокаТабличнойЧасти.Фамилия;
		МенеджерЗаписи.Имя      = СтрокаТабличнойЧасти.Имя;
		МенеджерЗаписи.Отчество = СтрокаТабличнойЧасти.Отчество;

		МенеджерЗаписи.Записать(Истина);

	КонецЕсли;

//	ТЕЛЕФОН
//	---------------------------------------------------------------------------------------
	СтрокаКонтакта = КонтактнаяИнформацияСлужебный.ПолучитьСтрокуКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента, КонтрагентОбъект.КонтактнаяИнформация);

	Если ПустаяСтрока(СтрокаТабличнойЧасти.Телефон) Тогда

		КонтрагентОбъект.КонтактнаяИнформация.Удалить(КонтрагентОбъект.КонтактнаяИнформация.Индекс(СтрокаКонтакта));

	Иначе

		СтрокаКонтакта.Представление = СокрЛП(СтрокаТабличнойЧасти.Телефон);
		СтрокаКонтакта.НомерТелефона = СокрЛП(СтрокаТабличнойЧасти.Телефон);
		СтрокаКонтакта.НомерТелефонаБезКодов = СокрЛП(СтрокаТабличнойЧасти.НомерТелефонаБезКодов);
		СтрокаКонтакта.ЗначенияПолей = СтрокаТабличнойЧасти.ДанныеТелефон;

	КонецЕсли;

//	ЭЕКТРОПОЧТА
//	---------------------------------------------------------------------------------------
	СтрокаКонтакта = КонтактнаяИнформацияСлужебный.ПолучитьСтрокуКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.EmailКонтрагента, КонтрагентОбъект.КонтактнаяИнформация);

	Если ПустаяСтрока(СтрокаТабличнойЧасти.Электропочта) Тогда

		КонтрагентОбъект.КонтактнаяИнформация.Удалить(КонтрагентОбъект.КонтактнаяИнформация.Индекс(СтрокаКонтакта));

	Иначе

		СтрокаКонтакта.Представление = СокрЛП(СтрокаТабличнойЧасти.Электропочта);
		СтрокаКонтакта.АдресЭП       = СокрЛП(СтрокаТабличнойЧасти.Электропочта);

	КонецЕсли;

//	АДРЕС ПОЧТОВЫЙ
//	---------------------------------------------------------------------------------------
	СтрокаКонтакта = КонтактнаяИнформацияСлужебный.ПолучитьСтрокуКонтактнойИнформации(Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента, КонтрагентОбъект.КонтактнаяИнформация);

	Если ПустаяСтрока(СтрокаТабличнойЧасти.Адрес) Тогда

		КонтрагентОбъект.КонтактнаяИнформация.Удалить(КонтрагентОбъект.КонтактнаяИнформация.Индекс(СтрокаКонтакта));

	Иначе

		СтрокаКонтакта.Страна  = "УКРАИНА";
		СтрокаКонтакта.Область = СокрЛП(СтрокаТабличнойЧасти.Область);
		СтрокаКонтакта.Город   = СокрЛП(СтрокаТабличнойЧасти.Город);

		СтрокаКонтакта.Представление = СтрокаТабличнойЧасти.Адрес;
		СтрокаКонтакта.ЗначенияПолей = СтрокаТабличнойЧасти.ДанныеАдрес;

	КонецЕсли;

//	ДЕТИ
//	---------------------------------------------------------------------------------------
	КонтрагентОбъект.Дети.Очистить();
	УстановитьДанныеРебёнка("1", СтрокаТабличнойЧасти, КонтрагентОбъект.Дети);
	УстановитьДанныеРебёнка("2", СтрокаТабличнойЧасти, КонтрагентОбъект.Дети);
	УстановитьДанныеРебёнка("3", СтрокаТабличнойЧасти, КонтрагентОбъект.Дети);


//	\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\/

	КонтрагентОбъект.ОбменДанными.Загрузка = Истина;
	КонтрагентОбъект.Записать();

КонецПроцедуры

Процедура УстановитьДанныеРебёнка(НомерЗаписи, СтрокаТабличнойЧасти, ТаблицаДети)

	РеквизитИмя  = "ИмяРебенка_" + НомерЗаписи;
	РеквизитПол  = "ПолРебенка_" + НомерЗаписи;
	РеквизитДата = "ДатаРожденияРебенка_" + НомерЗаписи;

	Если НЕ ПустаяСтрока(СтрокаТабличнойЧасти[РеквизитИмя]) Тогда

		ДанныеРебёнка = ТаблицаДети.Добавить();
		ДанныеРебёнка.Имя = СокрЛП(СтрокаТабличнойЧасти[РеквизитИмя]);
		ДанныеРебёнка.ДатаРождения = СтрокаТабличнойЧасти[РеквизитДата];
		ДанныеРебёнка.Пол = СтрокаТабличнойЧасти[РеквизитПол];

		ДанныеРебёнка.Комментарий = "Данные анкетирования";

	КонецЕсли;

КонецПроцедуры













&НаКлиенте
Перем ОбновитьИнтерфейс;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Значения реквизитов формы
	РежимРаботы = ОбщегоНазначенияПовтИсп.РежимРаботыПрограммы();
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	// Настройки видимости при запуске
	
	// Обновление состояния элементов
	УстановитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбработчикОповещений(ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Если НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ОтображатьАртикул = Истина;
	ИначеЕсли НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		ОтображатьКод = Истина;
	ИначеЕсли НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.КодАртикул Тогда
		ОтображатьКод = Истина;
		ОтображатьАртикул = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ЕдиницаИзмеренияВесаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияОбъемаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьХарактеристикиНоменклатурыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУпаковкиНоменклатурыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСерииНоменклатурыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПолнотекстовыйПоискПриПодбореТоваровПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНеуникальныеШтрихкодыПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксШтрихкодаУзлаРИБПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксВнутреннегоШтрихкодаШтучногоТовараПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьКодПриИзменении(Элемент)
	
	УстановитьДополнительнуюКолонкуНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьАртикулПриИзменении(Элемент)
	
	УстановитьДополнительнуюКолонкуНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксВнутреннегоШтрихкодаВесовогоТовараПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовараПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура SKUУстанавливаетсяВГлавномУзлеРИБПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьДиапазонГенерацииSKU(Команда)
	ОткрытьФорму("Обработка.ПанельАдминистрированияРТ.Форма.ВводДиапазонаГенерацииSKU", , ЭтотОбъект);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	Результат = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		#Если НЕ ВебКлиент Тогда
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
		ОбновитьИнтерфейс = Истина;
		#КонецЕсли
	КонецЕсли;
	
	Если Результат.Свойство("ОповещениеФорм") Тогда
		Оповестить(Результат.ОповещениеФорм.ИмяСобытия, Результат.ОповещениеФорм.Параметр, Результат.ОповещениеФорм.Источник);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	#Если НЕ ВебКлиент Тогда
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбновитьИнтерфейс();
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

// Обработка оповещений от других открытых форм.
//
// Пример:
//   Если ИмяСобытия = "НаборКонстант.ПрефиксУзлаРаспределеннойИнформационнойБазы" Тогда
//     НаборКонстант.ПрефиксУзлаРаспределеннойИнформационнойБазы = Параметр;
//   КонецЕсли;
//
&НаКлиенте
Процедура ОбработчикОповещений(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Тогда
		УстановитьДоступность();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	Результат = Новый Структура;
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УстановитьДополнительнуюКолонкуНоменклатуры()
		
	Если НЕ ОтображатьКод И ОтображатьАртикул Тогда
		НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул;
	ИначеЕсли ОтображатьКод И НЕ ОтображатьАртикул Тогда
		НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код;
	ИначеЕсли ОтображатьКод И ОтображатьАртикул Тогда
		НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.КодАртикул;
	ИначеЕсли НЕ ОтображатьКод И НЕ ОтображатьАртикул Тогда
		НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
	
	Результат = Новый Структура;
	
	СохранитьЗначениеРеквизита("НаборКонстант.ДополнительнаяКолонкаПриОтображенииНоменклатуры", Результат);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Сервер

&НаСервере
Процедура СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат;
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
		ОповещениеФорм = Новый Структура("ИмяСобытия, Параметр, Источник", "Запись_НаборКонстант", Новый Структура, КонстантаИмя);
		Результат.Вставить("ОповещениеФорм", ОповещениеФорм);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	ИспользоватьПодключаемоеОборудование = Константы.ИспользоватьПодключаемоеОборудование.Получить();
	ИспользоватьОбменСПодключаемымОборудованиемOffline = Константы.ИспользоватьОбменСПодключаемымОборудованиемOffline.Получить();
	ИспользоватьСинхронизациюДанных = Константы.ИспользоватьСинхронизациюДанных.Получить();
	
	Если РеквизитПутьКДанным = "" Тогда
		
		ИспользоватьПолнотекстовыйПоиск = Константы.ИспользоватьПолнотекстовыйПоиск.Получить();
		
		Элементы.ИспользоватьПолнотекстовыйПоискПриПодбореТоваров.Доступность = ИспользоватьПолнотекстовыйПоиск;
		Элементы.ГруппаКомментарийИспользоватьПолнотекстовыйПоискПриПодбореТоваров.Видимость = НЕ ИспользоватьПолнотекстовыйПоиск;
		
		Если НЕ ИспользоватьПодключаемоеОборудование Тогда
			КомментарийОбменомСПодключаемымОборудованием = НСтр("ru = 'Настройка штрихкодирования товара на весах недоступна, потому что:
			|- выключено использование подключаемого оборудования
			|- выключен обмен с подключаемым оборудованием Offline
			|в разделе «Настройки подключаемого оборудования».'");
			
			Элементы.КомментарийОбменомСПодключаемымОборудованием.Заголовок = КомментарийОбменомСПодключаемымОборудованием;
			Элементы.ГруппаКомментарийОбменомСПодключаемымОборудованием.Видимость = Истина;
		ИначеЕсли ИспользоватьПодключаемоеОборудование И НЕ ИспользоватьОбменСПодключаемымОборудованиемOffline Тогда
			
			КомментарийОбменомСПодключаемымОборудованием = НСтр("ru = 'Настройка штрихкодирования товара на весах недоступна, потому что:
			|- выключен обмен с подключаемым оборудованием Offline
			|в разделе «Настройки подключаемого оборудования».'");
			
			Элементы.КомментарийОбменомСПодключаемымОборудованием.Заголовок = КомментарийОбменомСПодключаемымОборудованием;
			Элементы.ГруппаКомментарийОбменомСПодключаемымОборудованием.Видимость = Истина;
		Иначе
			Элементы.ГруппаКомментарийОбменомСПодключаемымОборудованием.Видимость = Ложь;
		КонецЕсли;
		
		Элементы.ПрефиксВнутреннегоШтрихкодаВесовогоТовара.Доступность = ИспользоватьПодключаемоеОборудование И ИспользоватьОбменСПодключаемымОборудованиемOffline;
		Элементы.ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара.Доступность = ИспользоватьПодключаемоеОборудование И ИспользоватьОбменСПодключаемымОборудованиемOffline;
		
		Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.Доступность 					  = ИспользоватьОбменСПодключаемымОборудованиемOffline И ИспользоватьСинхронизациюДанных;
		Элементы.ОткрытьДиапазонГенерацииSKU.Доступность 						  = ИспользоватьОбменСПодключаемымОборудованиемOffline;
		
		Элементы.ГруппаКомментарийДополнительныеРеквизитыИСведения.Доступность 	  = ИспользоватьОбменСПодключаемымОборудованиемOffline;
		Элементы.ГруппаКомментарийДополнительныеРеквизитыИСведения.Видимость 	= НЕ ИспользоватьСинхронизациюДанных;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "" Тогда
		
		Если НаборКонстант.ИспользоватьСинхронизациюДанных Тогда
			Если ПараметрыСеанса.ИспользуемыеПланыОбмена.Найти("ПоМагазину") <> Неопределено
				И ОбменДаннымиПовтИсп.ГлавныйУзел() <> Неопределено Тогда
				
				Элементы.ИспользоватьХарактеристикиНоменклатуры.ТолькоПросмотр 	= Истина;
				Элементы.ИспользоватьУпаковкиНоменклатуры.ТолькоПросмотр 		= Истина;
				Элементы.ЕдиницаИзмеренияВеса.ТолькоПросмотр 					= Истина;
				Элементы.ЕдиницаИзмеренияОбъема.ТолькоПросмотр 					= Истина;
				Элементы.ИспользоватьНеуникальныеШтрихкоды.ТолькоПросмотр 		= Истина;
				Элементы.ИспользоватьСерииНоменклатуры.ТолькоПросмотр 			= Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаВесовогоТовара.Доступность  = Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара.Доступность = Истина;
				
				Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.ТолькоПросмотр                    = Истина;
				Элементы.ОткрытьДиапазонГенерацииSKU.Доступность = ИспользоватьОбменСПодключаемымОборудованиемOffline И НЕ НаборКонстант.SKUУстанавливаетсяВГлавномУзлеРИБ;
				
				
			ИначеЕсли ПараметрыСеанса.ИспользуемыеПланыОбмена.Найти("ПоРабочемуМесту") <> Неопределено
			И ОбменДаннымиПовтИсп.ГлавныйУзел() <> Неопределено Тогда
			
				Элементы.ИспользоватьХарактеристикиНоменклатуры.ТолькоПросмотр 	= Истина;
				Элементы.ИспользоватьУпаковкиНоменклатуры.ТолькоПросмотр 		= Истина;
				Элементы.ЕдиницаИзмеренияВеса.ТолькоПросмотр 					= Истина;
				Элементы.ЕдиницаИзмеренияОбъема.ТолькоПросмотр 					= Истина;
				Элементы.ИспользоватьСерииНоменклатуры.ТолькоПросмотр 			= Истина;
				Элементы.ИспользоватьНеуникальныеШтрихкоды.ТолькоПросмотр 		= Истина;
				Элементы.ИспользоватьСерииНоменклатуры.ТолькоПросмотр 			= Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаВесовогоТовара.Доступность  = Истина;
				Элементы.ПрефиксВнутреннегоШтрихкодаШтучногоФасованногоТовара.Доступность = Истина;
				
				Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.ТолькоПросмотр                    = Истина;
				Элементы.ОткрытьДиапазонГенерацииSKU.Доступность = ИспользоватьОбменСПодключаемымОборудованиемOffline И НЕ НаборКонстант.SKUУстанавливаетсяВГлавномУзлеРИБ;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации() Тогда
		Элементы.SKUУстанавливаетсяВГлавномУзлеРИБ.Доступность    = Ложь;
	КонецЕсли;
	
КонецПроцедуры




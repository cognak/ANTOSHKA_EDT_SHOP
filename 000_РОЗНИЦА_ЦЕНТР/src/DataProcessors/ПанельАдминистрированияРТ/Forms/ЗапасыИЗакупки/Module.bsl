&НаКлиенте
Перем ОбновитьИнтерфейс;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Значения реквизитов формы
	РежимРаботы = ОбщегоНазначенияПовтИсп.РежимРаботыПрограммы();
	РежимРаботы = Новый ФиксированнаяСтруктура(РежимРаботы);
	
	// Настройки видимости при запуске
	
	// Обновление состояния элементов
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбработчикОповещений(ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИспользоватьУчетСебестоимостиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СпособУчетаСебестоимостиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СебестоимостьВключаетНДСПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьПередачиТоваровМеждуОрганизациямиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПараметрыАнализаПересортицы(Команда)
	
	ОткрытьФормуМодально("ОбщаяФорма.ПараметрыАнализаПересортицы");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУстановкиСебестоимости(Команда)
	ОткрытьФорму("Документ.УстановкаСебестоимости.ФормаСписка");
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	Результат = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		#Если НЕ ВебКлиент Тогда
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
		ОбновитьИнтерфейс = Истина;
		#КонецЕсли
	КонецЕсли;
	
	Если Результат.Свойство("ОповещениеФорм") Тогда
		Оповестить(Результат.ОповещениеФорм.ИмяСобытия, Результат.ОповещениеФорм.Параметр, Результат.ОповещениеФорм.Источник);
	КонецЕсли;
	
КонецПроцедуры

// Обработка оповещений от других открытых форм.
//
// Пример:
//   Если ИмяСобытия = "НаборКонстант.ПрефиксУзлаРаспределеннойИнформационнойБазы" Тогда
//     НаборКонстант.ПрефиксУзлаРаспределеннойИнформационнойБазы = Параметр;
//   КонецЕсли;
//
&НаКлиенте
Процедура ОбработчикОповещений(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Тогда
		УстановитьДоступность();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	#Если НЕ ВебКлиент Тогда
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбновитьИнтерфейс();
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	Результат = Новый Структура;
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Сервер

&НаСервере
Процедура СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат;
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
		УстановитьЗначенияЗависимыхКонстант(КонстантаИмя, Результат);
		
		ОповещениеФорм = Новый Структура("ИмяСобытия, Параметр, Источник", "Запись_НаборКонстант", Новый Структура, КонстантаИмя);
		Результат.Вставить("ОповещениеФорм", ОповещениеФорм);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если РеквизитПутьКДанным = "НаборКонстант.ИспользоватьУчетСебестоимости" ИЛИ РеквизитПутьКДанным = "" Тогда
		
		Элементы.СпособУчетаСебестоимости.Доступность = НаборКонстант.ИспользоватьУчетСебестоимости;
		Элементы.СебестоимостьВключаетНДС.Доступность = НаборКонстант.ИспользоватьУчетСебестоимости;
		Элементы.ОткрытьУстановкиСебестоимости.Доступность = НаборКонстант.ИспользоватьУчетСебестоимости;
		
		Если НаборКонстант.ИспользоватьУчетСебестоимости Тогда
			
			Если НЕ Константы.ИспользоватьСинхронизациюДанных.Получить() Тогда
				
				КомментарийСпособУчетаСебестоимости = НСтр("ru = 'Не возможен выбор ""Принимать из управляющей системы"", потому что:
				|- выключена синхронизация данных в разделе ""Синхронизация данных""
				|- нет действующих обменов с ""УТ для Украины, ред. 3.0"".'");
				
				Элементы.КомментарийСпособУчетаСебестоимости.Заголовок 		 = КомментарийСпособУчетаСебестоимости;
				Элементы.КомментарийСпособУчетаСебестоимости.Высота 		 = 5;
				Элементы.СпособУчетаСебестоимости.ТолькоПросмотр 			 = Истина;
				Элементы.ГруппаКомментарийСпособУчетаСебестоимости.Видимость = Истина;
				
			ИначеЕсли Константы.ИспользоватьСинхронизациюДанных.Получить() И НЕ НаборКонстант.ИспользуетсяОбменСУправлениемТорговлей Тогда
				
				КомментарийСпособУчетаСебестоимости = НСтр("ru = 'Не возможен выбор ""Принимать из управляющей системы"", потому что:
				|- нет действующих обменов с ""УТ для Украины, ред. 3.0"".'");
				
				Элементы.КомментарийСпособУчетаСебестоимости.Заголовок 		 = КомментарийСпособУчетаСебестоимости;
				Элементы.КомментарийСпособУчетаСебестоимости.Высота 		 = 3;
				Элементы.СпособУчетаСебестоимости.ТолькоПросмотр 			 = Истина;
				Элементы.ГруппаКомментарийСпособУчетаСебестоимости.Видимость = Истина;
				
			Иначе
				Элементы.ГруппаКомментарийСпособУчетаСебестоимости.Видимость = Ложь;
				Элементы.СпособУчетаСебестоимости.ТолькоПросмотр 			 = Ложь;
			КонецЕсли;
			
		Иначе
			Элементы.ГруппаКомментарийСпособУчетаСебестоимости.Видимость = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "" Тогда
		
		Если НаборКонстант.ИспользоватьСинхронизациюДанных Тогда
			Если ПараметрыСеанса.ИспользуемыеПланыОбмена.Найти("ПоМагазину") <> Неопределено
				И ОбменДаннымиПовтИсп.ГлавныйУзел() <> Неопределено Тогда
				
				Элементы.ИспользоватьУчетСебестоимости.ТолькоПросмотр 					= Истина;
				Элементы.СебестоимостьВключаетНДС.ТолькоПросмотр 						= Истина;
				Элементы.СпособУчетаСебестоимости.ТолькоПросмотр 						= Истина;
				Элементы.ИспользоватьПередачиТоваровМеждуОрганизациями.ТолькоПросмотр 	= Истина;
				
			ИначеЕсли ПараметрыСеанса.ИспользуемыеПланыОбмена.Найти("ПоРабочемуМесту") <> Неопределено
				И ОбменДаннымиПовтИсп.ГлавныйУзел() <> Неопределено Тогда
				
				Элементы.ИспользоватьУчетСебестоимости.ТолькоПросмотр 					= Истина;
				Элементы.СебестоимостьВключаетНДС.ТолькоПросмотр 						= Истина;
				Элементы.СпособУчетаСебестоимости.ТолькоПросмотр 						= Истина;
				Элементы.ИспользоватьПередачиТоваровМеждуОрганизациями.ТолькоПросмотр 	= Истина;

			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации() Тогда
		Элементы.ИспользоватьПередачиТоваровМеждуОрганизациями.ТолькоПросмотр = Истина;
		Элементы.ИспользоватьПередачиТоваровМеждуОрганизациями.Доступность    = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияЗависимыхКонстант(ИмяРодительскойКонстанты, Результат)
	
	Если ИмяРодительскойКонстанты = "ИспользоватьУчетСебестоимости" Тогда
		
		НаборКонстант.СебестоимостьВключаетНДС = НаборКонстант.ИспользоватьУчетСебестоимости;
		СохранитьЗначениеРеквизита("НаборКонстант.СебестоимостьВключаетНДС", Результат);
		
		Если НаборКонстант.ИспользоватьУчетСебестоимости Тогда
			НаборКонстант.СпособУчетаСебестоимости = Перечисления.СпособыУчетаСебестоимости.АвтономныйУчет;
		Иначе
			НаборКонстант.СпособУчетаСебестоимости = Перечисления.СпособыУчетаСебестоимости.ПустаяСсылка();
		КонецЕсли;
		
		СохранитьЗначениеРеквизита("НаборКонстант.СпособУчетаСебестоимости", Результат);
		
	КонецЕсли;
	
КонецПроцедуры






&НаСервере
Процедура НастройкаОборудованияДляРабочегоМестаНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура НастройкаОборудованияДляРабочегоМеста(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.РабочееМесто) Тогда
		Сообщить("Рабочее место НЕ определено");
		Возврат;
	КонецЕсли; 

	
	ПараметрыФормы = Новый Структура();
	ОткрытьФормуМодально("Справочник.ПодключаемоеОборудование.ФормаСписка", ПараметрыФормы);

	Объект.ФР = ПолучитьТекущийФР(Объект.РабочееМесто);
    Объект.СШ = ПолучитьТекущийСШ(Объект.РабочееМесто);
    Объект.БТ = ПолучитьТекущийБТ(Объект.РабочееМесто);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекущийФР(РабМесто)
	
	Рез = Справочники.ПодключаемоеОборудование.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПодключаемоеОборудование.Ссылка
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.ПометкаУдаления = ЛОЖЬ
	|	И ПодключаемоеОборудование.УстройствоИспользуется = ИСТИНА
	|	И ПодключаемоеОборудование.УстройствоОтключено = ЛОЖЬ
	|	И ПодключаемоеОборудование.РабочееМесто = &РабочееМесто
	|	И ПодключаемоеОборудование.ТипОборудования = &ТипОборудования";
	Запрос.УстановитьПараметр("ТипОборудования",Перечисления.ТипыПодключаемогоОборудования.ФискальныйРегистратор);
	Запрос.УстановитьПараметр("РабочееМесто",РабМесто);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	    Рез = Выборка.Ссылка;
	КонецЦикла; 

	Возврат Рез;
	

КонецФункции // ПолучитьТекущийФР()

&НаСервере
Функция ПолучитьТекущийСШ(РабМесто)
	
	Рез = Справочники.ПодключаемоеОборудование.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПодключаемоеОборудование.Ссылка
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.ПометкаУдаления = ЛОЖЬ
	|	И ПодключаемоеОборудование.УстройствоИспользуется = ИСТИНА
	|	И ПодключаемоеОборудование.УстройствоОтключено = ЛОЖЬ
	|	И ПодключаемоеОборудование.РабочееМесто = &РабочееМесто
	|	И ПодключаемоеОборудование.ТипОборудования = &ТипОборудования";
	Запрос.УстановитьПараметр("ТипОборудования",Перечисления.ТипыПодключаемогоОборудования.СканерШтрихкода);
	Запрос.УстановитьПараметр("РабочееМесто",РабМесто);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	    Рез = Выборка.Ссылка;
	КонецЦикла; 

	Возврат Рез;
	

КонецФункции // ПолучитьТекущийФР()

&НаСервере
Функция ПолучитьТекущийБТ(РабМесто)
	
	Рез = Справочники.ПодключаемоеОборудование.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПодключаемоеОборудование.Ссылка
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|ГДЕ
	|	ПодключаемоеОборудование.ПометкаУдаления = ЛОЖЬ
	|	И ПодключаемоеОборудование.УстройствоИспользуется = ИСТИНА
	|	И ПодключаемоеОборудование.УстройствоОтключено = ЛОЖЬ
	|	И ПодключаемоеОборудование.РабочееМесто = &РабочееМесто
	|	И ПодключаемоеОборудование.ТипОборудования = &ТипОборудования";
	Запрос.УстановитьПараметр("ТипОборудования",Перечисления.ТипыПодключаемогоОборудования.ЭквайринговыйТерминал);
	Запрос.УстановитьПараметр("РабочееМесто",РабМесто);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	    Рез = Выборка.Ссылка;
	КонецЦикла; 

	Возврат Рез;
	

КонецФункции // ПолучитьТекущийФР()

&НаСервере
Функция ПолучитьТекущуюКассуККМ(РабМесто)
	
	Рез = Справочники.КассыККМ.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КассыККМ.Ссылка
	|ИЗ
	|	Справочник.КассыККМ КАК КассыККМ
	|ГДЕ
	|	КассыККМ.РабочееМесто = &РабочееМесто";
	Запрос.УстановитьПараметр("РабочееМесто",РабМесто);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	    Рез = Выборка.Ссылка;
	КонецЦикла; 

	Возврат Рез;
	

КонецФункции // ПолучитьТекущийФР()


&НаСервере
Процедура ОпределитьРабочееМестоНаСервере(МассивРабочихМест)
	// определяем ИД компьютера
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ИД = СистемнаяИнформация.ИдентификаторКлиента;
	
		
	Если МассивРабочихМест.Количество() = 0 Тогда
	    // создаем рабочее место
		Параметры1 = Новый Структура;
		Параметры1.Вставить("ИмяКомпьютера");
		Параметры1.Вставить("ИдентификаторКлиента");
		Параметры1.Вставить("СетевойПорт");
		
		#Если Не ВебКлиент Тогда
			Параметры1.ИмяКомпьютера = ИмяКомпьютера();
		#КонецЕсли
		
		Параметры1.ИдентификаторКлиента = ВРег(СистемнаяИнформация.ИдентификаторКлиента);
		Параметры1.СетевойПорт          = МенеджерОборудованияКлиентСервер.ПолучитьСетевойПортПоУмолчанию();
		Объект.РабочееМесто = МенеджерОборудованияСервер.СоздатьРабочееМестоКлиента(Параметры1);

	Иначе
		// одно назначаем главным, остальные помечаем на удаление
		ГлавноеРМ = МассивРабочихМест[0];
		Для каждого РМ Из МассивРабочихМест Цикл
			Если НЕ РМ = ГлавноеРМ Тогда
				РМ_Об = РМ.ПолучитьОбъект();
				РМ_Об.ПометкаУдаления = Истина;
				РМ_Об.Записать();
			КонецЕсли; 
		КонецЦикла; 
	    Объект.РабочееМесто = ГлавноеРМ;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьРабочееМесто(Команда)
	Если ЗначениеЗаполнено(Объект.РабочееМесто) Тогда
		Сообщить("Рабочее место определено");
		Возврат;
	Иначе
		СистемнаяИнформация = Новый СистемнаяИнформация();
		ИД = СистемнаяИнформация.ИдентификаторКлиента;
		МРМ = НайтиРабочиеМестаПоИД(ИД);
		ОпределитьРабочееМестоНаСервере(МРМ);
	КонецЕсли; 
	УстановкаРМ();	
КонецПроцедуры

&НаСервере 
Процедура УстановкаРМ()

	Попытка
		ПараметрыСеанса.РабочееМестоКлиента = Объект.РабочееМесто;
	Исключение
	КонецПопытки;
	
КонецПроцедуры
 

&НаСервере
Функция НайтиРабочиеМестаПоИД(ИдентификаторКлиента)

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	РабочиеМеста.Ссылка
	|ИЗ
	|	Справочник.РабочиеМеста КАК РабочиеМеста
	|ГДЕ
	|	РабочиеМеста.Код = &Код
	|	И РабочиеМеста.ПометкаУдаления = ЛОЖЬ
	|");

	Запрос.УстановитьПараметр("Код", Строка(ИдентификаторКлиента));

	СписокКомпьютеров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

	Возврат СписокКомпьютеров;

	

КонецФункции // НайтиРабочиеМестаПоИД(ИД)()
 

&НаСервере
Процедура СоздатьСтандартныеНастройкиРМКНаСервере()
	
	Для каждого Стр Из Объект.Пользователи Цикл
		//создаем основные настройки
		НоваяНастройка = РегистрыСведений.НастройкиПользователей.СоздатьМенеджерЗаписи();
		НоваяНастройка.Магазин = Объект.Магазин;
		НоваяНастройка.Пользователь = Стр.Пользователь;
		НоваяНастройка.Настройка = ПланыВидовХарактеристик.НастройкиПользователей.ОсновнаяОрганизация;
		НоваяНастройка.Значение = Объект.КассаККМ.Владелец;
		НоваяНастройка.Записать();
		
		// создаем дополнительные права пользователей
		СписокИсключений = Новый Массив;
		СписокИсключений.Добавить(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьНастройкуРМК);

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаПрава.Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.ПраваПользователей КАК ТаблицаПрава
		|ГДЕ
		|	НЕ ТаблицаПрава.ЭтоГруппа
		|	И ТаблицаПрава.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПраваПользователей.УправлениеРабочимМестомКассира))
		|	И НЕ ТаблицаПрава.Ссылка В (&СписокИсключений)
		|	И НЕ ТаблицаПрава.ПометкаУдаления"
		);
		Запрос.УстановитьПараметр("СписокИсключений", СписокИсключений);

		ВыборкаПрав = Запрос.Выполнить().Выбрать();

	//	ВыборкаПрав = ПланыВидовХарактеристик.ПраваПользователей.Выбрать();	LNK 04.01.2017 13:44:09
		Пока ВыборкаПрав.Следующий() Цикл
			НоваяНастройка = РегистрыСведений.ЗначенияДополнительныхПравПользователя.СоздатьМенеджерЗаписи();   
		//	Если НЕ ВыборкаПрав.Ссылка = ПланыВидовХарактеристик.ПраваПользователей.ИзменятьИспользоватьПодключаемоеОборудование Тогда
				НоваяНастройка.Право = ВыборкаПрав.Ссылка;
				НоваяНастройка.Пользователь = Стр.Пользователь;
				НоваяНастройка.Значение = Истина;
				НоваяНастройка.Записать();
		//	КонецЕсли; 
		КонецЦикла; 
		
	КонецЦикла; 
	
	Сообщить("Настройки созданы");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСтандартныеНастройкиРМК(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.РабочееМесто) Тогда
	    Сообщить("Не заполнено Рабочее место");
		Возврат;
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.КассаККМ) Тогда
	    Сообщить("Не заполнен Касса ККМ");
		Возврат;
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.ФР) Тогда
	    Сообщить("Не заполнен ФР");
		Возврат;
	КонецЕсли; 

	
	СоздатьСтандартныеНастройкиРМКНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.РабочееМесто = ПараметрыСеанса.РабочееМестоКлиента;
	Объект.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	Объект.Магазин = Объект.Пользователь.Магазин;
	Объект.ФР = ПолучитьТекущийФР(Объект.РабочееМесто);
	Объект.СШ = ПолучитьТекущийСШ(Объект.РабочееМесто);
	Объект.БТ = ПолучитьТекущийБТ(Объект.РабочееМесто);
	Объект.КассаККМ = ПолучитьТекущуюКассуККМ(Объект.РабочееМесто);
    ЗаполнитьДействующихПользователей(Объект.РабочееМесто);
	ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьБТ(Магазин,КассаККМ)

	Если НЕ ЗначениеЗаполнено(Объект.Банк1) Тогда
		Объект.Банк1 = Справочники.Контрагенты.НайтиПоКоду("20-000001");
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.Банк2) Тогда
		Объект.Банк2 = Справочники.Контрагенты.НайтиПоКоду("20-000004");
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.Банк3) Тогда
		Объект.Банк3 = Справочники.Контрагенты.НайтиПоКоду("027-00001");
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.Банк4) Тогда
		Объект.Банк4 = Справочники.Контрагенты.НайтиПоКоду("000-06007");
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.Банк5) Тогда
		Объект.Банк5 = Справочники.Контрагенты.НайтиПоКоду("000-06096");
	КонецЕсли; 

	
	Если НЕ ЗначениеЗаполнено(Объект.Договор1) Тогда
		Объект.Договор1 = Справочники.ДоговорыЭквайринга.НайтиПоКоду("20-000001");
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.Договор2) Тогда
	    Объект.Договор2 = Справочники.ДоговорыЭквайринга.НайтиПоКоду("20-000004");
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.Договор3) Тогда
		Объект.Договор3 = Справочники.ДоговорыЭквайринга.НайтиПоКоду("11-000002");
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.Договор4) Тогда
	    Объект.Договор4 = Справочники.ДоговорыЭквайринга.НайтиПоКоду("20-000005");
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.Договор5) Тогда
	    Объект.Договор5 = Справочники.ДоговорыЭквайринга.НайтиПоКоду("00-000002");
	КонецЕсли; 

	
	// ищем приватовский терминал
    	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭквайринговыеТерминалы.Наименование КАК ИмяБанка,
	|	ЭквайринговыеТерминалы.Владелец КАК ДоговорЭквайринга,
	|	ИСТИНА КАК Создан,
	|	ЭквайринговыеТерминалы.ИспользоватьБезПодключенияОборудования КАК ИспользоватьПО,
	|	ЭквайринговыеТерминалы.Ссылка
	|ИЗ
	|	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|ГДЕ
	|	ЭквайринговыеТерминалы.Касса = &Касса
	|	И ЭквайринговыеТерминалы.Магазин = &Магазин
	|	И ЭквайринговыеТерминалы.ПометкаУдаления = ЛОЖЬ
	|	И ЭквайринговыеТерминалы.Владелец = &Владелец";
	//|	И ЭквайринговыеТерминалы.ПодключаемоеОборудование = &ПодключаемоеОборудование"
	Запрос.УстановитьПараметр("Касса",КассаККМ);
	Запрос.УстановитьПараметр("Магазин",Магазин);
	Запрос.УстановитьПараметр("Владелец",Объект.Договор1);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();

	Попытка
		Если Выгрузка.Количество() <> 0 Тогда
			Объект.Терминал1 = Выгрузка[0].Ссылка;
		КонецЕсли; 
	Исключение
	КонецПопытки;
	
	// ищем аваль терминал
    Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭквайринговыеТерминалы.Наименование КАК ИмяБанка,
	|	ЭквайринговыеТерминалы.Владелец КАК ДоговорЭквайринга,
	|	ИСТИНА КАК Создан,
	|	ЭквайринговыеТерминалы.ИспользоватьБезПодключенияОборудования КАК ИспользоватьПО,
	|	ЭквайринговыеТерминалы.Ссылка
	|ИЗ
	|	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|ГДЕ
	|	ЭквайринговыеТерминалы.Касса = &Касса
	|	И ЭквайринговыеТерминалы.Магазин = &Магазин
	|	И ЭквайринговыеТерминалы.ПометкаУдаления = ЛОЖЬ
	|	И ЭквайринговыеТерминалы.Владелец = &Владелец";
	//|	И ЭквайринговыеТерминалы.ПодключаемоеОборудование = &ПодключаемоеОборудование"
	Запрос.УстановитьПараметр("Касса",КассаККМ);
	Запрос.УстановитьПараметр("Магазин",Магазин);
	Запрос.УстановитьПараметр("Владелец",Объект.Договор2);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();

	Попытка
		Если Выгрузка.Количество() <> 0 Тогда
			Объект.Терминал2 = Выгрузка[0].Ссылка;
		КонецЕсли; 
	Исключение
	КонецПопытки;

	// ищем марфинбанк терминал
    Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭквайринговыеТерминалы.Наименование КАК ИмяБанка,
	|	ЭквайринговыеТерминалы.Владелец КАК ДоговорЭквайринга,
	|	ИСТИНА КАК Создан,
	|	ЭквайринговыеТерминалы.ИспользоватьБезПодключенияОборудования КАК ИспользоватьПО,
	|	ЭквайринговыеТерминалы.Ссылка
	|ИЗ
	|	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|ГДЕ
	|	ЭквайринговыеТерминалы.Касса = &Касса
	|	И ЭквайринговыеТерминалы.Магазин = &Магазин
	|	И ЭквайринговыеТерминалы.ПометкаУдаления = ЛОЖЬ
	|	И ЭквайринговыеТерминалы.Владелец = &Владелец";
	//|	И ЭквайринговыеТерминалы.ПодключаемоеОборудование = &ПодключаемоеОборудование"
	Запрос.УстановитьПараметр("Касса",КассаККМ);
	Запрос.УстановитьПараметр("Магазин",Магазин);
	Запрос.УстановитьПараметр("Владелец",Объект.Договор3);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();

	Попытка
		Если Выгрузка.Количество() <> 0 Тогда
			Объект.Терминал3 = Выгрузка[0].Ссылка;
		КонецЕсли; 
	Исключение
	КонецПопытки;

	// ищем восток терминал
    Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭквайринговыеТерминалы.Наименование КАК ИмяБанка,
	|	ЭквайринговыеТерминалы.Владелец КАК ДоговорЭквайринга,
	|	ИСТИНА КАК Создан,
	|	ЭквайринговыеТерминалы.ИспользоватьБезПодключенияОборудования КАК ИспользоватьПО,
	|	ЭквайринговыеТерминалы.Ссылка
	|ИЗ
	|	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|ГДЕ
	|	ЭквайринговыеТерминалы.Касса = &Касса
	|	И ЭквайринговыеТерминалы.Магазин = &Магазин
	|	И ЭквайринговыеТерминалы.ПометкаУдаления = ЛОЖЬ
	|	И ЭквайринговыеТерминалы.Владелец = &Владелец";
	//|	И ЭквайринговыеТерминалы.ПодключаемоеОборудование = &ПодключаемоеОборудование"
	Запрос.УстановитьПараметр("Касса",КассаККМ);
	Запрос.УстановитьПараметр("Магазин",Магазин);
	Запрос.УстановитьПараметр("Владелец",Объект.Договор4);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();

	Попытка
		Если Выгрузка.Количество() <> 0 Тогда
			Объект.Терминал4 = Выгрузка[0].Ссылка;
		КонецЕсли; 
	Исключение
	КонецПопытки;

	// ищем ощадбанк терминал
    Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭквайринговыеТерминалы.Наименование КАК ИмяБанка,
	|	ЭквайринговыеТерминалы.Владелец КАК ДоговорЭквайринга,
	|	ИСТИНА КАК Создан,
	|	ЭквайринговыеТерминалы.ИспользоватьБезПодключенияОборудования КАК ИспользоватьПО,
	|	ЭквайринговыеТерминалы.Ссылка
	|ИЗ
	|	Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|ГДЕ
	|	ЭквайринговыеТерминалы.Касса = &Касса
	|	И ЭквайринговыеТерминалы.Магазин = &Магазин
	|	И ЭквайринговыеТерминалы.ПометкаУдаления = ЛОЖЬ
	|	И ЭквайринговыеТерминалы.Владелец = &Владелец";
	//|	И ЭквайринговыеТерминалы.ПодключаемоеОборудование = &ПодключаемоеОборудование"
	Запрос.УстановитьПараметр("Касса",КассаККМ);
	Запрос.УстановитьПараметр("Магазин",Магазин);
	Запрос.УстановитьПараметр("Владелец",Объект.Договор5);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();

	Попытка
		Если Выгрузка.Количество() <> 0 Тогда
			Объект.Терминал5 = Выгрузка[0].Ссылка;
		КонецЕсли; 
	Исключение
	КонецПопытки;

	
КонецПроцедуры
 


&НаСервере
Процедура ЗаполнитьДействующихПользователей(РабМесто)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СвязьПользователейИРабочихМест.Пользователь
	|ИЗ
	|	РегистрСведений.СвязьПользователейИРабочихМест КАК СвязьПользователейИРабочихМест
	|ГДЕ
	|	СвязьПользователейИРабочихМест.РабочееМесто = &РабочееМесто";
	Запрос.УстановитьПараметр("РабочееМесто",РабМесто);
	УжеРаботают.Загрузить(Запрос.Выполнить().Выгрузить());
	

КонецПроцедуры
 

&НаКлиенте
Процедура КассаККМНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

   СтандартнаяОбработка = Ложь;
   
   ЗначениеОтбора = Новый Структура("Магазин", Объект.Магазин);
   ПараметрыВыбора = Новый Структура("Отбор", ЗначениеОтбора);
   ОткрытьФормуМодально("Справочник.КассыККМ.ФормаВыбора", ПараметрыВыбора, Элемент);
	
КонецПроцедуры

&НаСервере
Процедура СвязатьНаСервере()
	
	Для каждого Стр Из Объект.Пользователи Цикл
		НС = РегистрыСведений.СвязьПользователейИРабочихМест.СоздатьМенеджерЗаписи();
		НС.Пользователь = Стр.Пользователь;
		НС.РабочееМесто = Объект.РабочееМесто;
		НС.Записать();
	КонецЦикла; 

	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Связать(Команда)
	
	НеЗаполнено = Ложь;
	Если НЕ ЗначениеЗаполнено(Объект.РабочееМесто) Тогда
	    Сообщить("Не заполнено Рабочее место");
	    НеЗаполнено = Истина;
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.КассаККМ) Тогда
	    Сообщить("Не заполнен Касса ККМ");
	    НеЗаполнено = Истина;
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.ФР) Тогда
	    Сообщить("Не заполнен ФР");
	    НеЗаполнено = Истина;
	КонецЕсли; 

	Если НеЗаполнено Тогда
		Возврат;
	КонецЕсли; 
	
	СвязатьНаСервере();
	ЗаполнитьПользователейПоМагазинуИРабочемуМесту();

КонецПроцедуры

&НаКлиенте
Процедура ЗАВЕРШИТЬ(Команда)
	ЗавершитьРаботуЭтогоСеанса(Ложь);
	Закрыть("ЗавершитьРаботуСистемы");
КонецПроцедуры

&НаСервере
Процедура ПереименоватьРабочееМестоНаСервере()
	
	 Попытка
	 
	 	РабМестоОб = Объект.РабочееМесто.ПолучитьОбъект();
		РабМестоОб.Наименование = СокрЛП(Объект.ИмяРабочегоМеста);
		РабМестоОб.Записать();
		//Объект.РабочееМесто = РабМестоОб.Ссылка;
		//Сообщить("Рабочее место переименовано");
	 
	 Исключение
	    Сообщить("Не удалось переименовать!");
	КонецПопытки;
	

	Объект.РабочееМесто = Справочники.РабочиеМеста.НайтиПоНаименованию(СокрЛП(Объект.ИмяРабочегоМеста));

	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьМесто()

	 Об = Объект.РабочееМесто.ПолучитьОбъект();
	 Об.Записать();


КонецПроцедуры
 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ЭтотОбъект.ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
   
   ЗначениеОтбора = Новый Структура("Магазин", Объект.Магазин);
   ПараметрыВыбора = Новый Структура("Отбор", ЗначениеОтбора);
   ОткрытьФормуМодально("Справочник.Пользователи.ФормаВыбора", ПараметрыВыбора, Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
                                

КонецПроцедуры


&НаКлиенте
Процедура ПользователиПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
   // 
   //СтандартнаяОбработка = Ложь;
   //ЗначениеОтбора = Новый Структура("Магазин", Объект.Магазин);
   //ПараметрыВыбора = Новый Структура("Отбор", ЗначениеОтбора);
   //ОткрытьФормуМодально("Справочник.Пользователи.ФормаВыбора", ПараметрыВыбора, Элемент);

КонецПроцедуры


&НаСервере
Процедура ПривязатьКассуНаСервере()
	
	КассаОб = Объект.КассаККМ.ПолучитьОбъект();
	КассаОб.Магазин = Объект.Магазин;
	КассаОб.РабочееМесто = Объект.РабочееМесто;
	КассаОб.ШиринаЛенты = 24;
	КассаОб.ПодключаемоеОборудование = Объект.ФР;
	Попытка
		КассаОб.Записать();
		Сообщить("Касса записана!");
	Исключение
		Сообщить("Не удалось записать кассу!");
	КонецПопытки;
	
КонецПроцедуры


&НаКлиенте
Процедура ПривязатьКассу(Команда)
	
	Возвращать = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Магазин) Тогда
		Сообщить("Магазин не заполнен! Обязательно заполните поле МАГАЗИН");
		Возвращать = Истина;
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.КассаККМ) Тогда
		Сообщить("Касса ККМ не заполнена! Обязательно заполните поле КАССА ККМ");
		Возвращать = Истина;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.ФР) Тогда
		Сообщить("Фискальный регистратор (ФР) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СШ) Тогда
		Сообщить("Сканер штрихкода (СШ) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.БТ) Тогда
		Сообщить("Банковский терминал (БТ) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;

	Если Возвращать Тогда
		Возврат;
	КонецЕсли; 
	
	ПривязатьКассуНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	
	ЗаполнитьПользователейПоМагазинуИРабочемуМесту();
	ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПользователейПоМагазинуИРабочемуМесту()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СвязьПользователейИРабочихМест.Пользователь
	|ИЗ
	|	РегистрСведений.СвязьПользователейИРабочихМест КАК СвязьПользователейИРабочихМест
	|ГДЕ
	|	СвязьПользователейИРабочихМест.РабочееМесто = &РабочееМесто
	|	И СвязьПользователейИРабочихМест.Пользователь.Магазин = &Магазин
	|	И СвязьПользователейИРабочихМест.Пользователь.Недействителен = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	СвязьПользователейИРабочихМест.Пользователь";
	Запрос.УстановитьПараметр("Магазин",Объект.Магазин);
	Запрос.УстановитьПараметр("РабочееМесто",Объект.РабочееМесто);
	
	УжеРаботают.Загрузить(Запрос.Выполнить().Выгрузить());

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СвязьПользователейИРабочихМест.Пользователь
	|ИЗ
	|	РегистрСведений.СвязьПользователейИРабочихМест КАК СвязьПользователейИРабочихМест
	|ГДЕ
	|	НЕ СвязьПользователейИРабочихМест.РабочееМесто = &РабочееМесто
	|	И СвязьПользователейИРабочихМест.Пользователь.Магазин = &Магазин
	|	И СвязьПользователейИРабочихМест.Пользователь.Недействителен = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	СвязьПользователейИРабочихМест.Пользователь";
	Запрос.УстановитьПараметр("Магазин",Объект.Магазин);
	Запрос.УстановитьПараметр("РабочееМесто",Объект.РабочееМесто);
	
	Объект.Пользователи.Загрузить(Запрос.Выполнить().Выгрузить());

	
КонецПроцедуры

&НаСервере
Процедура СоздатьБанкиНаСервере(КодБанка)
	
	Константы.ИспользоватьОплатуПлатежнымиКартами.Установить(Истина);
	
	Если КодБанка = 1 Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Терминал1) Тогда
			// СОЗДАЕМ ПРИВАТБАНК
			ЭКВ = Справочники.ЭквайринговыеТерминалы.СоздатьЭлемент();
			ЭКВ.Владелец = Объект.Договор1;
			ЭКВ.Наименование = Объект.Договор1.Эквайрер.Наименование;
			ЭКВ.ИспользоватьБезПодключенияОборудования =Ложь;
			ЭКВ.Магазин = Объект.Магазин;
			ЭКВ.Касса = Объект.КассаККМ;
			ЭКВ.Организация = Объект.КассаККМ.Владелец;
			Если НЕ ЭКВ.ИспользоватьБезПодключенияОборудования Тогда
				ЭКВ.ПодключаемоеОборудование = Объект.БТ;
			КонецЕсли; 
			Попытка
				ЭКВ.Записать();
				Сообщить(ЭКВ.Наименование + " создан успешно");
			Исключение
				Сообщить(ЭКВ.Наименование + " произошла ошибка");
			КонецПопытки;
		Иначе
			Сообщить("Приватбанк уже создан!");
		КонецЕсли; 
	КонецЕсли; 
	
	Если КодБанка = 2 Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Терминал2) Тогда
			// СОЗДАЕМ РАЙФАЙЗЕН
			ЭКВ = Справочники.ЭквайринговыеТерминалы.СоздатьЭлемент();
			ЭКВ.Владелец = Объект.Договор2;
			ЭКВ.Наименование = Объект.Договор2.Эквайрер.Наименование;
			ЭКВ.ИспользоватьБезПодключенияОборудования =Истина;
			ЭКВ.Магазин = Объект.Магазин;
			ЭКВ.Касса = Объект.КассаККМ;
			ЭКВ.Организация = Объект.КассаККМ.Владелец;
			Если НЕ ЭКВ.ИспользоватьБезПодключенияОборудования Тогда
				ЭКВ.ПодключаемоеОборудование = Объект.БТ;
			КонецЕсли; 
			Попытка
				ЭКВ.Записать();
				Сообщить(ЭКВ.Наименование + " создан успешно");
			Исключение
				Сообщить(ЭКВ.Наименование + " произошла ошибка");
			КонецПопытки;
			
		Иначе
			Сообщить("Райфайзен-Аваль уже создан!");
		КонецЕсли; 	
	КонецЕсли; 	
	
	Если КодБанка = 3 Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Терминал3) Тогда
			// СОЗДАЕМ МАРФИНБАНК
			ЭКВ = Справочники.ЭквайринговыеТерминалы.СоздатьЭлемент();
			ЭКВ.Владелец = Объект.Договор3;
			ЭКВ.Наименование = Объект.Договор3.Эквайрер.Наименование;
			ЭКВ.ИспользоватьБезПодключенияОборудования =Истина;
			ЭКВ.Магазин = Объект.Магазин;
			ЭКВ.Касса = Объект.КассаККМ;
			ЭКВ.Организация = Объект.КассаККМ.Владелец;
			Если НЕ ЭКВ.ИспользоватьБезПодключенияОборудования Тогда
				ЭКВ.ПодключаемоеОборудование = Объект.БТ;
			КонецЕсли; 
			Попытка
				ЭКВ.Записать();
				Сообщить(ЭКВ.Наименование + " создан успешно");
			Исключение
				Сообщить(ЭКВ.Наименование + " произошла ошибка");
			КонецПопытки;
			
		Иначе
			Сообщить("Марфинбанк уже создан!");
		КонецЕсли; 	
	КонецЕсли; 	
	
	Если КодБанка = 4 Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Терминал4) Тогда
			// СОЗДАЕМ ВОСТОК
			ЭКВ = Справочники.ЭквайринговыеТерминалы.СоздатьЭлемент();
			ЭКВ.Владелец = Объект.Договор4;
			ЭКВ.Наименование = Объект.Договор4.Эквайрер.Наименование;
			ЭКВ.ИспользоватьБезПодключенияОборудования =Истина;
			ЭКВ.Магазин = Объект.Магазин;
			ЭКВ.Касса = Объект.КассаККМ;
			ЭКВ.Организация = Объект.КассаККМ.Владелец;
			Если НЕ ЭКВ.ИспользоватьБезПодключенияОборудования Тогда
				ЭКВ.ПодключаемоеОборудование = Объект.БТ;
			КонецЕсли; 
			Попытка
				ЭКВ.Записать();
				Сообщить(ЭКВ.Наименование + " создан успешно");
			Исключение
				Сообщить(ЭКВ.Наименование + " произошла ошибка");
			КонецПопытки;
			
		Иначе
			Сообщить("Восток уже создан!");
		КонецЕсли; 	
	КонецЕсли; 	
	
	Если КодБанка = 5 Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Терминал5) Тогда
			// СОЗДАЕМ ОЩАДБАНК
			ЭКВ = Справочники.ЭквайринговыеТерминалы.СоздатьЭлемент();
			ЭКВ.Владелец = Объект.Договор5;
			ЭКВ.Наименование = Объект.Договор5.Эквайрер.Наименование;
			ЭКВ.ИспользоватьБезПодключенияОборудования =Истина;
			ЭКВ.Магазин = Объект.Магазин;
			ЭКВ.Касса = Объект.КассаККМ;
			ЭКВ.Организация = Объект.КассаККМ.Владелец;
			Если НЕ ЭКВ.ИспользоватьБезПодключенияОборудования Тогда
				ЭКВ.ПодключаемоеОборудование = Объект.БТ;
			КонецЕсли; 
			Попытка
				ЭКВ.Записать();
				Сообщить(ЭКВ.Наименование + " создан успешно");
			Исключение
				Сообщить(ЭКВ.Наименование + " произошла ошибка");
			КонецПопытки;
		Иначе
			Сообщить("Ощадбанк уже создан!");
		КонецЕсли; 	
	КонецЕсли; 	

	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБанки(Команда)
	
	//Если НЕ ЗначениеЗаполнено(Объект.Банк1) ИЛИ НЕ ЗначениеЗаполнено(Объект.Банк2)
	//	ИЛИ НЕ ЗначениеЗаполнено(Объект.Договор1) ИЛИ НЕ ЗначениеЗаполнено(Объект.Договор2) Тогда
	//	Сообщить("Заполните банки и договора эквайринга");
	//	Возврат;	
	//КонецЕсли; 
	//ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);
	//СоздатьБанкиНаСервере();
	//ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);
КонецПроцедуры

&НаКлиенте
Процедура БанковскиеТерминалыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	//Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КассаККМПриИзменении(Элемент)
	ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПриват(Команда)
	
	Возвращать = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Магазин) Тогда
		Сообщить("Магазин не заполнен! Обязательно заполните поле МАГАЗИН");
		Возвращать = Истина;
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.КассаККМ) Тогда
		Сообщить("Касса ККМ не заполнена! Обязательно заполните поле КАССА ККМ");
		Возвращать = Истина;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.ФР) Тогда
		Сообщить("Фискальный регистратор (ФР) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СШ) Тогда
		Сообщить("Сканер штрихкода (СШ) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.БТ) Тогда
		Сообщить("Банковский терминал (БТ) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;

	Если Возвращать Тогда
		Возврат;
	КонецЕсли; 

	
	Если НЕ ЗначениеЗаполнено(Объект.Банк1) 
		ИЛИ НЕ ЗначениеЗаполнено(Объект.Договор1) Тогда
		Сообщить("Заполните банки и договора эквайринга");
		Возврат;	
	КонецЕсли; 
	Ответ = Вопрос("Вы используете Приватбанк?",РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 
	
    ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);
	СоздатьБанкиНаСервере(1);
	ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьРайфайзен(Команда)
	
	Возвращать = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Магазин) Тогда
		Сообщить("Магазин не заполнен! Обязательно заполните поле МАГАЗИН");
		Возвращать = Истина;
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.КассаККМ) Тогда
		Сообщить("Касса ККМ не заполнена! Обязательно заполните поле КАССА ККМ");
		Возвращать = Истина;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.ФР) Тогда
		Сообщить("Фискальный регистратор (ФР) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СШ) Тогда
		Сообщить("Сканер штрихкода (СШ) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.БТ) Тогда
		Сообщить("Банковский терминал (БТ) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;

	Если Возвращать Тогда
		Возврат;
	КонецЕсли; 

	
	Если НЕ ЗначениеЗаполнено(Объект.Банк2) 
		ИЛИ НЕ ЗначениеЗаполнено(Объект.Договор2) Тогда
		Сообщить("Заполните банки и договора эквайринга");
		Возврат;	
	КонецЕсли; 
	Ответ = Вопрос("Вы используете Райфайзен?",РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 
	
    ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);
	СоздатьБанкиНаСервере(2);
	ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьМарфинбанк(Команда)
	
	Возвращать = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Магазин) Тогда
		Сообщить("Магазин не заполнен! Обязательно заполните поле МАГАЗИН");
		Возвращать = Истина;
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.КассаККМ) Тогда
		Сообщить("Касса ККМ не заполнена! Обязательно заполните поле КАССА ККМ");
		Возвращать = Истина;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.ФР) Тогда
		Сообщить("Фискальный регистратор (ФР) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СШ) Тогда
		Сообщить("Сканер штрихкода (СШ) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.БТ) Тогда
		Сообщить("Банковский терминал (БТ) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;

	Если Возвращать Тогда
		Возврат;
	КонецЕсли; 

	
	Если НЕ ЗначениеЗаполнено(Объект.Банк3) 
		ИЛИ НЕ ЗначениеЗаполнено(Объект.Договор3) Тогда
		Сообщить("Заполните банки и договора эквайринга");
		Возврат;	
	КонецЕсли; 
	Ответ = Вопрос("Вы используете Марфинбанк?",РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 
	
    ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);
	СоздатьБанкиНаСервере(3);
	ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);


КонецПроцедуры

&НаКлиенте
Процедура СоздатьВосток(Команда)
	
	Возвращать = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Магазин) Тогда
		Сообщить("Магазин не заполнен! Обязательно заполните поле МАГАЗИН");
		Возвращать = Истина;
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.КассаККМ) Тогда
		Сообщить("Касса ККМ не заполнена! Обязательно заполните поле КАССА ККМ");
		Возвращать = Истина;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.ФР) Тогда
		Сообщить("Фискальный регистратор (ФР) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СШ) Тогда
		Сообщить("Сканер штрихкода (СШ) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.БТ) Тогда
		Сообщить("Банковский терминал (БТ) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;

	Если Возвращать Тогда
		Возврат;
	КонецЕсли; 

	
	Если НЕ ЗначениеЗаполнено(Объект.Банк4) 
		ИЛИ НЕ ЗначениеЗаполнено(Объект.Договор4) Тогда
		Сообщить("Заполните банки и договора эквайринга");
		Возврат;	
	КонецЕсли; 
	Ответ = Вопрос("Вы используете Восток?",РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 
	
    ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);
	СоздатьБанкиНаСервере(4);
	ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьОщадбанк(Команда)
	
	Возвращать = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Магазин) Тогда
		Сообщить("Магазин не заполнен! Обязательно заполните поле МАГАЗИН");
		Возвращать = Истина;
	КонецЕсли; 

	Если НЕ ЗначениеЗаполнено(Объект.КассаККМ) Тогда
		Сообщить("Касса ККМ не заполнена! Обязательно заполните поле КАССА ККМ");
		Возвращать = Истина;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.ФР) Тогда
		Сообщить("Фискальный регистратор (ФР) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СШ) Тогда
		Сообщить("Сканер штрихкода (СШ) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Объект.БТ) Тогда
		Сообщить("Банковский терминал (БТ) не заполнен! Войдите в настройку оборудования");
		Возвращать = Истина;
	КонецЕсли;

	Если Возвращать Тогда
		Возврат;
	КонецЕсли; 

	
	Если НЕ ЗначениеЗаполнено(Объект.Банк5) 
		ИЛИ НЕ ЗначениеЗаполнено(Объект.Договор5) Тогда
		Сообщить("Заполните банки и договора эквайринга");
		Возврат;	
	КонецЕсли; 
	Ответ = Вопрос("Вы используете Ощадбанк?",РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли; 
	
	ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);
	СоздатьБанкиНаСервере(5);
	ЗаполнитьБТ(Объект.Магазин,Объект.КассаККМ);

КонецПроцедуры
 


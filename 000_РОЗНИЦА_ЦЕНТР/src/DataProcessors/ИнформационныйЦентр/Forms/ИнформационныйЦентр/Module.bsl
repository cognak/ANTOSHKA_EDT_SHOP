////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ИспользоватьРазделениеПоОбластямДанных = ОбщегоНазначенияПовтИсп.РазделениеВключено()
		И ОбщегоНазначенияПовтИсп.ДоступноИспользованиеРазделенныхДанных();
	
	СсылкаПоискаИнформации = "http://its.1c.ru/db/alldb#search:";
	
	Если ИспользоватьРазделениеПоОбластямДанных Тогда // для модели сервиса
		
		// Домашняя страница
		ГлавнаяСтраница                     = Справочники.ИнформационныеСсылкиДляФорм.ДомашняяСтраница;
		ДомашняяСтраница                    = Новый Структура("Имя, Адрес", ГлавнаяСтраница.Наименование, ГлавнаяСтраница.Адрес);
		Элементы.ДомашняяСтраница.Заголовок = ДомашняяСтраница.Имя;
		Элементы.ДомашняяСтраница.Видимость = ?(ПустаяСтрока(ДомашняяСтраница.Адрес), Ложь, Истина);
		
		// Форум
		ФорумСсылка                     = Справочники.ИнформационныеСсылкиДляФорм.Форум;
		Форум                           = Новый Структура("Имя, Адрес", ФорумСсылка.Наименование, ФорумСсылка.Адрес);
		Элементы.ГруппаФорума.Видимость = ?(ПустаяСтрока(ФорумСсылка.Адрес), Ложь, Истина);
		
		// Поиск информации
		ИнформационныйЦентрСерверПереопределяемый.ОпределитьСсылкуПоискаИнформации(СсылкаПоискаИнформации);
		
	Иначе // для локального режима
		
		Элементы.ГруппаСтартовыхСтраниц.Видимость    = Ложь;
		Элементы.ГруппаВзаимодействия.Видимость      = Ложь;
		
	КонецЕсли;
	
	ИнформационныйЦентрСервер.ВывестиКонтекстныеСсылки(ЭтотОбъект, Элементы.ИнформационныеСсылки, 1, 5, Ложь);
	
	СформироватьСписокНовостей();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура НажатиеНаНовость(Элемент)
	
	МассивНовостей = ТаблицаНовостей.НайтиСтроки(Новый Структура("ИмяНовости", Элемент.Имя));
	Если МассивНовостей.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Идентификатор = МассивНовостей.Получить(0).Идентификатор;
	ВнешняяСсылка = МассивНовостей.Получить(0).ВнешняяСсылка;
	ИнформационныйЦентрКлиент.ПоказатьНовость(ВнешняяСсылка, Идентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура НажатиеЕщеСообщения(Элемент)
	
	ИнформационныйЦентрКлиент.ПоказатьВсеСообщения();
	
КонецПроцедуры

&НаКлиенте
Процедура НаписатьВТехПоддержкуНажатие(Элемент)
	
	ПараметрыСообщения = СформироватьПараметрыСообщения();
	ИнформационныйЦентрКлиент.ОткрытьФормуОтправкиСообщенияВТехподдержку(ИспользоватьРазделениеПоОбластямДанных, ПараметрыСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодатьИдеюНажатие(Элемент)
	
	ОткрытьФорму("Обработка.ИнформационныйЦентр.Форма.ПожеланияПользователей");
	
КонецПроцедуры

&НаКлиенте
Процедура ДомашняяСтраницаНажатие1(Элемент)
	
	Если Не ДомашняяСтраница.Свойство("Адрес") Тогда 
		Возврат;
	КонецЕсли;
	
	ПерейтиПоНавигационнойСсылке(ДомашняяСтраница.Адрес);
	
КонецПроцедуры

&НаКлиенте
Процедура ФорумНажатие(Элемент)
	
	Если Не Форум.Свойство("Адрес") Тогда 
		Возврат;
	КонецЕсли;
	
	ПерейтиПоНавигационнойСсылке(Форум.Адрес);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура НайтиОтветНаВопрос(Команда)
	
	ПоискОтветаНаВопрос();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НажатиеНаИнформационнуюСсылку(Команда)
	
	ИнформационныйЦентрКлиент.НажатиеНаИнформационнуюСсылку(ЭтотОбъект, Команда);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура СформироватьСписокНовостей()
	
	УстановитьПривилегированныйРежим(Истина);
	ИнформационныйЦентрСервер.СформироватьСписокНовостейНаРабочийСтол(ТаблицаНовостей);
	
	Если ТаблицаНовостей.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;	
	
	ГруппаНовостей = Элементы.ГруппаНовостей;
	
	Для Итерация = 0 По ТаблицаНовостей.Количество() - 1 Цикл
		
		Критичность  = ТаблицаНовостей.Получить(Итерация).Критичность;
		Наименование = ТаблицаНовостей.Получить(Итерация).Наименование;
		Картинка     = ?(Критичность > 5, БиблиотекаКартинок.УведомлениеСервиса, БиблиотекаКартинок.СообщениеСервиса);
		
		ГруппаНовости                     = Элементы.Добавить("ГруппаНовости" + Строка(Итерация), Тип("ГруппаФормы"), ГруппаНовостей);
		ГруппаНовости.Вид                 = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаНовости.ОтображатьЗаголовок = Ложь;
		ГруппаНовости.Группировка         = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаНовости.Отображение         = ОтображениеОбычнойГруппы.Нет;
		
		КартинкаНовости                = Элементы.Добавить("КартинкаНовости" + Строка(Итерация), Тип("ДекорацияФормы"), ГруппаНовости);
		КартинкаНовости.Вид            = ВидДекорацииФормы.Картинка;
		КартинкаНовости.Картинка       = Картинка;
		КартинкаНовости.Ширина         = 2;
		КартинкаНовости.Высота         = 1;
		КартинкаНовости.РазмерКартинки = РазмерКартинки.Растянуть;
		
		ИмяНовости                          = Элементы.Добавить("ИмяНовости" + Строка(Итерация), Тип("ДекорацияФормы"), ГруппаНовости);
		ИмяНовости.Вид                      = ВидДекорацииФормы.Надпись;
		ИмяНовости.Заголовок                = Наименование;
		ИмяНовости.РастягиватьПоГоризонтали = Истина;
		ИмяНовости.ВертикальноеПоложение    = ВертикальноеПоложениеЭлемента.Центр;
		ИмяНовости.ВысотаЗаголовка          = 1;
		ИмяНовости.Гиперссылка              = Истина;
		ИмяНовости.УстановитьДействие("Нажатие", "НажатиеНаНовость");
		
		Если Критичность = 10 Тогда 
			ИмяНовости.Шрифт = Новый Шрифт(, , Истина, , , );
		КонецЕсли;
		
		ТаблицаНовостей.Получить(Итерация).ИмяНовости = "ИмяНовости" + Строка(Итерация);
	
	КонецЦикла;
	
	ЕщеСообщения                          = Элементы.Добавить("ЕщеСообщения", Тип("ДекорацияФормы"), ГруппаНовостей);
	ЕщеСообщения.Вид                      = ВидДекорацииФормы.Надпись;
	ЕщеСообщения.Заголовок                = НСтр("ru = 'Еще сообщения'");
	ЕщеСообщения.РастягиватьПоГоризонтали = Истина;
	ЕщеСообщения.ВертикальноеПоложение    = ВертикальноеПоложениеЭлемента.Центр;
	ЕщеСообщения.Гиперссылка              = Истина;
	ЕщеСообщения.УстановитьДействие("Нажатие", "НажатиеЕщеСообщения");
	
КонецПроцедуры

&НаСервере
Функция СформироватьПараметрыСообщения()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("ОтКого",   ИнформационныйЦентрСервер.ОпределитьАдресЭлектроннойПочтыПользователя());
	ПараметрыСообщения.Вставить("Тема",     НСтр("ru = 'Обращение в техподдержку'") + " (" + Формат(ТекущаяДатаСеанса(),"ДЛФ=DT") + ")");
	ПараметрыСообщения.Вставить("Текст",    ИнформационныйЦентрСервер.СформироватьШаблонТекстаВТехПоддержку());
	ПараметрыСообщения.Вставить("Вложения", ИнформационныйЦентрСервер.СформироватьXMLСТехническимиПараметрами());
	
	Возврат ПараметрыСообщения;
	
КонецФункции

&НаКлиенте
Процедура ПоискОтветаНаВопрос()
	
	ПодключитьОбработчикОжидания("ОбработкаОжиданияПоискаОтветаНаВопрос", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОжиданияПоискаОтветаНаВопрос()
	
	Если ПустаяСтрока(СтрокаПоиска) Тогда
		Возврат;
	КонецЕсли;
	
	ПерейтиПоНавигационнойСсылке(СсылкаПоискаИнформации + СтрокаПоиска);
	
КонецПроцедуры

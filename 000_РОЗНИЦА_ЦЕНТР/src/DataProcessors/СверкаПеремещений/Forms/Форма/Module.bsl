
&НаСервере
Процедура ПолутитьОтНавНаСервере()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаNavision.Дата КАК ДатаНав,
	|	ТаблицаNavision.IDN КАК НомерНав,
	|	ТаблицаNavision.КодСклада КАК СкладОтправитель,
	|	ТаблицаNavision.НовыйКодСклада КАК СкладПолучатель,
	|	ТаблицаNavision.ПАРАМЕТРЫУЧЕТА,
	|	ТаблицаNavision.Статус,
	|	ТаблицаNavision.Сумма КАК СуммаНав,
	|	ТаблицаNavision.ПРОЕКТКОД,
	|	ТаблицаNavision.ПереданоВМагазин,
	|	ТаблицаNavision.ПроведеноВМагазине
	|ПОМЕСТИТЬ ТаблицаNavision
	|ИЗ
	|	&ТаблицаNavision КАК ТаблицаNavision
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.IDN КАК Номер,
	|	ПеремещениеТоваров.Номер КАК НомерДок,
	|	ПеремещениеТоваров.Дата,
	|	ПеремещениеТоваров.СуммаДокумента КАК Сумма,
	|	ПеремещениеТоваров.СкладОтправитель.IDN КАК СкладОтправитель,
	|	ПеремещениеТоваров.СкладПолучатель.IDN КАК СкладПолучатель,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ПриходныйОрдер.Ссылка) ЕСТЬ NULL 
	|				И МАКСИМУМ(РасходныйОрдер.Ссылка) ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОбработаноВМагазине
	|ПОМЕСТИТЬ Таб1с
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдер
	|		ПО (ПеремещениеТоваров.Ссылка = ПриходныйОрдер.ДокументОснование
	|				И ПриходныйОрдер.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК РасходныйОрдер
	|		ПО (ПеремещениеТоваров.Ссылка = РасходныйОрдер.ДокументОснование
	|				И РасходныйОрдер.Проведен)
	|ГДЕ
	|	ПеремещениеТоваров.Дата МЕЖДУ &ДатаНачала И &ДатаКонца
	|	И (ПеремещениеТоваров.СкладОтправитель = &Склад
	|			ИЛИ ПеремещениеТоваров.СкладПолучатель = &Склад)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваров.IDN,
	|	ПеремещениеТоваров.Номер,
	|	ПеремещениеТоваров.Дата,
	|	ПеремещениеТоваров.СуммаДокумента,
	|	ПеремещениеТоваров.СкладОтправитель.IDN,
	|	ПеремещениеТоваров.СкладПолучатель.IDN
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб1с.Номер,
	|	Таб1с.НомерДок,
	|	Таб1с.Дата КАК Дата,
	|	Таб1с.Сумма,
	|	Таб1с.СкладОтправитель,
	|	Таб1с.СкладПолучатель,
	|	ТаблицаNavision.ДатаНав КАК ДатаНав,
	|	ТаблицаNavision.НомерНав,
	|	ТаблицаNavision.СкладОтправитель КАК СкладОтправительНав,
	|	ТаблицаNavision.СкладПолучатель КАК СкладПолучательНав,
	|	ТаблицаNavision.ПАРАМЕТРЫУЧЕТА,
	|	ТаблицаNavision.Статус,
	|	ТаблицаNavision.СуммаНав,
	|	ТаблицаNavision.ПРОЕКТКОД КАК КодПроекта,
	|	Таб1с.ОбработаноВМагазине КАК Обработан1С,
	|	ТаблицаNavision.ПереданоВМагазин КАК ПереданНав,
	|	ТаблицаNavision.ПроведеноВМагазине КАК ПроведенНав
	|ИЗ
	|	ТаблицаNavision КАК ТаблицаNavision
	|		ПОЛНОЕ СОЕДИНЕНИЕ Таб1с КАК Таб1с
	|		ПО ТаблицаNavision.НомерНав = Таб1с.Номер
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ПоказатьПереоценку = ИСТИНА
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаNavision.ПАРАМЕТРЫУЧЕТА = """"
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаНав,
	|	Дата"
	);
	
	Запрос.УстановитьПараметр("ДатаКонца", ДатаКонца);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ТаблицаNavision"   , ПолучитьТаблицаNavision());
	Запрос.УстановитьПараметр("ПоказатьПереоценку", ПоказатьПереоценку);
	РезультатЗапроса = Запрос.Выполнить();
	Данные.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры
&НаСервере 
Функция  ПолучитьТаблицаNavision()
	
		ТекстЗапроса =


	"use Euro2009 
|	SET NOCOUNT ON

|declare @КодСклада varchar(20)
|declare @НовыйКодСклада varchar(20)
|declare @ДатаНачала datetime
|declare @ДатаКонца datetime
|
| 
|set @КодСклада = #СкладНав#
|set @НовыйКодСклада = #СкладНав#
|set @ДатаНачала = #ДатаНачалаНав#
|set @ДатаКонца = #ДатаКонцаНав#  
//|set @КодСклада = 'ПИЛФ'
//|set @НовыйКодСклада = 'ПИЛФ'
//|set @ДатаНачала = '01/10/2016'
//|set @ДатаКонца = '31/10/2016'  


|select [Дата Учета] Дата,[Но_] IDN,[Код Склада] КодСклада,[Новый Код Склада] НовыйКодСклада, [Сумма] Сумма, статус as Статус,[Подлежит Учету] ПАРАМЕТРЫУЧЕТА, [Код Проекта] ПРОЕКТКОД,
|	ПереданоВМагазин, ПроведеноВМагазине
|from ( 
|select З.[Дата Учета] [Дата Учета],
|       З.[Но_] [Но_],
|	   З.[Код Склада] [Код Склада],
|	   З.[Новый Код Склада] [Новый Код Склада],
|	   SUM(С.[Сумма Строки]) [Сумма], 
|	   'учт' as статус,
|      З.[Код Проекта] [Код Проекта], 
|      З.[Подлежит Учету] [Подлежит Учету], 
|      З.[Передано в магазин] as ПереданоВМагазин,
|      З.[Проведено в магазине] as ПроведеноВМагазине
|from [dbo].[Европродукт 2009$Склад Учт_ Док_ Заголовок] З with(nolock) left outer join
|     [dbo].[Европродукт 2009$Склад Учт_ Док_ Строка] С
|	 on С.[Документ Но_]=З.[Но_]   
|where З.[Дата Учета] <= @ДатаКонца and  З.[Дата Учета] >= @ДатаНачала and
|      (З.[Код Склада] = @КодСклада or З.[Новый Код Склада]  = @НовыйКодСклада)
|group by З.[Дата Учета],З.[Но_],З.[Код Склада],З.[Новый Код Склада],З.[Подлежит Учету], З.[Код Проекта], З.[Передано в магазин], З.[Проведено в магазине]  
|--order by [Дата Учета],[Но_],[Код Склада],[Новый Код Склада]
|union all
|select З.[Дата Учета] [Дата Учета],
|       З.[Учт_ Перемещение Но_] [Но_],
|	   З.[Код Склада] [Код Склада],
|	   З.[Новый Код Склада] [Новый Код Склада],
|       SUM(С.[Сумма Строки]) [Сумма],
|	   'неучт' as статус,
|      З.[Код Проекта] [Код Проекта], 
|      З.[Подлежит Учету] [Подлежит Учету],
|      З.[Передано в магазин] as ПереданоВМагазин,
|      З.[Проведено в магазине] as ПроведеноВМагазине
|from [dbo].[Европродукт 2009$Склад Документ Заголовок] З with(nolock) left outer join
|     [dbo].[Европродукт 2009$Товар Журнал Строка] С
|	 on С.[Документ Но_]=З.[Но_]
|where З.[Дата Учета] <= @ДатаКонца and  З.[Дата Учета] >= @ДатаНачала and
|      (З.[Код Склада] = @КодСклада or З.[Новый Код Склада]  = @НовыйКодСклада)
|group by З.[Дата Учета],З.[Учт_ Перемещение Но_],З.[Код Склада],З.[Новый Код Склада],З.[Подлежит Учету], З.[Код Проекта], З.[Передано в магазин], З.[Проведено в магазине]  
|) t
|order by статус,[Дата Учета],[Но_],[Код Склада],[Новый Код Склада]";


	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДатаНачалаНав#", "'"+Формат(ДатаНачала, "ДФ=dd/MM/yyyy")+"'");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДатаКонцаНав#", "'"+Формат(ДатаКонца, "ДФ=dd/MM/yyyy")+"'");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#СкладНав#", "'"+Склад.IDN+"'");
	ТаблицаNavision = ВнешниеИсточники.ПолучитьДанныеОтNavision(ТекстЗапроса,,, Истина);
Возврат  ТаблицаNavision;
	
КонецФункции



&НаКлиенте
Процедура ПолутитьОтНав(Команда)
	ПолутитьОтНавНаСервере();
	Элементы.Данные.Обновить();
КонецПроцедуры

&НаСервере
Процедура ПолучитьИз1СНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеТоваров.IDN,
		|	ПеремещениеТоваров.Номер,
		|	ПеремещениеТоваров.МагазинОтправитель,
		|	ПеремещениеТоваров.МагазинПолучатель,
		|	ПеремещениеТоваров.Дата,
		|	ПеремещениеТоваров.СуммаДокумента
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|ГДЕ
		|	ПеремещениеТоваров.Дата МЕЖДУ &ДатаНачала И &ДатаКонца
		|	И (ПеремещениеТоваров.МагазинОтправитель = &Склад
		|			ИЛИ ПеремещениеТоваров.МагазинПолучатель = &Склад)";
	
	Запрос.УстановитьПараметр("ДатаКонца", ДатаКонца);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выгрузить();
	А = 0;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИз1С(Команда)
	ПолучитьИз1СНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
ОчиститьДанные();	
КонецПроцедуры

&НаСервере
Процедура ОчиститьДанные()
	Данные.Очистить();	
КонецПроцедуры


&НаКлиенте
Процедура ДатаКонцаПриИзменении(Элемент)
	ОчиститьДанные();
КонецПроцедуры


&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ОчиститьДанные();
КонецПроцедуры


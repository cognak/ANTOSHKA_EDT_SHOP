
&НаКлиенте
Перем КэшированныеЗначения;
&НаКлиенте
Перем ПодборТекущаяНоменклатура;
&НаКлиенте
Перем ПодборТекущаяНоменклатураТипНоменклатуры;
&НаКлиенте
Перем ПодборТекущаяХарактеристика;
&НаКлиенте
Перем ИнформацияОТовареПрочитана;
&НаКлиенте
Перем Цена;
&НаКлиенте
Перем Упаковка;
&НаКлиенте
Перем ЕдиницаИзмерения;

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПараметрыИсточникаДанных();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеКолонкиНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	
	ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	ИспользоватьУпаковкиНоменклатуры       = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	ИспользоватьАссортимент				   = АссортиментСервер.ПолучитьФункциональнуюОпциюКонтроляАссортимента(Параметры.Магазин);
	
	ТекущаяНавигация = Новый Структура;
	ТекущаяНавигация.Вставить("ПоИерархииНоменклатуры");
	ТекущаяНавигация.Вставить("ПоВидуНоменклатуры");
	ТекущаяНавигация.Вставить("ПоСегментуНоменклатуры");
	ТекущаяНавигация.Вставить("ПоТоварнойКатегории");
	ТекущаяНавигация.Вставить("ПоТоварнойМарке");
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ПодборТоваровНастройкиФормы",);
	Если Настройки <> Неопределено Тогда
		Если Настройки.Свойство("ИсторияПоискНоменклатуры") Тогда
			Элементы.ЭлементПоиска.СписокВыбора.ЗагрузитьЗначения(Настройки.ИсторияПоискНоменклатуры);
		КонецЕсли;
		Если Настройки.Свойство("ТекущийРежимОтображенияОстатков") Тогда
			ТекущийРежимОтображенияОстатков = Настройки.ТекущийРежимОтображенияОстатков;
		КонецЕсли;
		Если Настройки.Свойство("ПоказыватьПодобранныеТовары") Тогда
			ПоказыватьПодобранныеТовары = Настройки.ПоказыватьПодобранныеТовары;
		КонецЕсли;
		Если Настройки.Свойство("СкрыватьЗапрещенные") Тогда
			СкрыватьЗапрещенные = Настройки.СкрыватьЗапрещенные;
			Элементы.СкрыватьЗапрещенные.Пометка = СкрыватьЗапрещенные;
		КонецЕсли;
		Если Настройки.Свойство("ЗапрашиватьКоличество") Тогда
			ЗапрашиватьКоличество = Настройки.ЗапрашиватьКоличество;
			Элементы.ХарактеристикиЗапрашиватьКоличество.Пометка = ЗапрашиватьКоличество;
			Элементы.НоменклатураЗапрашиватьКоличество.Пометка = ЗапрашиватьКоличество;
		КонецЕсли;
		
		Если Настройки.Свойство("ТекущаяНавигация") Тогда
			ТекущаяНавигация = Настройки.ТекущаяНавигация;
		КонецЕсли;
		
		Если Настройки.Свойство("ВариантОтбора") Тогда
			Если ТекущаяНавигация.Количество() < Настройки.ВариантОтбора Тогда
				ТекущаяНавигация = Новый Структура;
				ТекущаяНавигация.Вставить("ПоИерархииНоменклатуры");
				ТекущаяНавигация.Вставить("ПоВидуНоменклатуры");
				ТекущаяНавигация.Вставить("ПоСегментуНоменклатуры");
				ТекущаяНавигация.Вставить("ПоТоварнойКатегории");
				ТекущаяНавигация.Вставить("ПоТоварнойМарке");
				Настройки.ВариантОтбора = 1;
			КонецЕсли;
			Если НЕ ИспользоватьАссортимент Тогда
				Если Настройки.ВариантОтбора > 3 Тогда
					Настройки.ВариантОтбора = 1;
				КонецЕсли;
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке1", "Видимость", Ложь);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке2", "Видимость", Ложь);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке3", "Видимость", Ложь);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке4", "Видимость", Ложь);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке5", "Видимость", Ложь);
				//
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории1", "Видимость", Ложь);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории2", "Видимость", Ложь);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории3", "Видимость", Ложь);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории4", "Видимость", Ложь);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории5", "Видимость", Ложь);
			КонецЕсли;
			
			Если Настройки.ВариантОтбора = 1 Тогда
				Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияВидыНоменклатуры;
				Элементы.ВидыНоменклатуры.ТекущаяСтрока = ТекущаяНавигация.ПоВидуНоменклатуры;
				УстановитьОтборПоВидуНоменклатурыНаСервере(ТекущаяНавигация.ПоВидуНоменклатуры);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры1", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры2", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры3", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры4", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры5", "Пометка", Истина);
			ИначеЕсли Настройки.ВариантОтбора = 2 Тогда
				Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияИерархияНоменклатуры;
				Элементы.ИерархияНоменклатуры.ТекущаяСтрока = ТекущаяНавигация.ПоИерархииНоменклатуры;
				УстановитьОтборПоИерархииНоменклатурыНаСервере(ТекущаяНавигация.ПоИерархииНоменклатуры);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры1", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры2", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры3", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры4", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры5", "Пометка", Истина);
			ИначеЕсли Настройки.ВариантОтбора = 3 Тогда
				Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияСегментыНоменклатуры;
				Элементы.СегментыНоменклатуры.ТекущаяСтрока = ТекущаяНавигация.ПоСегментуНоменклатуры;
				УстановитьОтборПоСегментуНоменклатурыНаСервере(ТекущаяНавигация.ПоСегментуНоменклатуры);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры1", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры2", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры3", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры4", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры5", "Пометка", Истина);
			ИначеЕсли Настройки.ВариантОтбора = 4 Тогда
				Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеКатегории;
				Элементы.ТоварныеКатегории.ТекущаяСтрока = ТекущаяНавигация.ПоТоварнойКатегории;
				УстановитьОтборПоТоварнойКатегорииНаСервере(ТекущаяНавигация.ПоТоварнойКатегории);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории1", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории2", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории3", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории4", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории5", "Пометка", Истина);
			ИначеЕсли Настройки.ВариантОтбора = 5 Тогда
				Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеМарки;
				Элементы.ТоварныеМарки.ТекущаяСтрока = ТекущаяНавигация.ПоТоварнойМарке;
				УстановитьОтборПоТоварнойМаркеНаСервере(ТекущаяНавигация.ПоТоварнойМарке);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке1", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке2", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке3", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке4", "Пометка", Истина);
				ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке5", "Пометка", Истина);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	

	Дата       = Параметры.Дата;	
	Склад      = Параметры.Склад;
	Магазин    = Параметры.Магазин;
	Контрагент = Параметры.Контрагент;	
	СсылкаНаПоступление = Параметры.СсылкаНаПоступление;
	Объект.ЦенаВключаетНДС = Параметры.ЦенаВключаетНДС;
	
	Если ЗначениеЗаполнено(Параметры.ИмяТабличнойЧасти) Тогда
		ИмяТабличнойЧасти = Параметры.ИмяТабличнойЧасти;
	КонецЕсли;  
	
	Если Параметры.ПоказыватьПодобранныеТовары <> Неопределено Тогда
		ПоказыватьПодобранныеТовары = Параметры.ПоказыватьПодобранныеТовары;
	КонецЕсли;
	
	Если Параметры.РежимПодбораСУчетомЗапрещенныхКПродаже <> Неопределено Тогда
		РежимПодбораСУчетомЗапрещенныхКПродаже = Параметры.РежимПодбораСУчетомЗапрещенныхКПродаже;
	КонецЕсли;
	
	Если Параметры.ПродажиОптовые <> Неопределено Тогда
		ПродажиОптовые = Параметры.ПродажиОптовые;
	КонецЕсли;
	
	Если Параметры.РежимПодбораСУчетомАссортимента <> Неопределено Тогда
		РежимПодбораСУчетомАссортимента = Параметры.РежимПодбораСУчетомАссортимента;
	КонецЕсли;
	
	УсловиеАссортимента = "";
	
	Если РежимПодбораСУчетомАссортимента Тогда
		Если Параметры.УсловиеАссортимента <> Неопределено Тогда
			УсловиеАссортимента = Параметры.УсловиеАссортимента;
		КонецЕсли;
	КонецЕсли;
	
	Если ИспользоватьАссортимент Тогда
		Если ЗначениеЗаполнено(Параметры.ФорматМагазина) Тогда
			ФорматМагазина=Параметры.ФорматМагазина;
		Иначе
			ФорматМагазина=Параметры.МагазинАссортимента.ФорматМагазина;
		КонецЕсли;
	КонецЕсли;
	
	Если РежимПодбораСУчетомЗапрещенныхКПродаже ИЛИ РежимПодбораСУчетомАссортимента Тогда
		ИзменитьТекстЗапросаДинамическогоСписка();
		Элементы.СкрыватьЗапрещенные.Видимость = Истина;
		Если УсловиеАссортимента = "РазрешеныЗакупки" Тогда
			Элементы.СкрыватьЗапрещенные.Заголовок = "Скрывать запрещенные к закупке";
		Иначе
			Элементы.СкрыватьЗапрещенные.Заголовок = "Скрывать запрещенные к продаже";
		КонецЕсли;
	Иначе
		Элементы.СкрыватьЗапрещенные.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.РежимПодбораБезКоличественныхПараметров <> Неопределено Тогда
		РежимПодбораБезКоличественныхПараметров = Параметры.РежимПодбораБезКоличественныхПараметров;
	КонецЕсли;
	Если Параметры.РежимПодбораБезСуммовыхПараметров <> Неопределено Тогда
		РежимПодбораБезСуммовыхПараметров = Параметры.РежимПодбораБезСуммовыхПараметров;
	КонецЕсли;
	Если Параметры.РежимПодбораБезУслуг <> Неопределено Тогда
		РежимПодбораБезУслуг = Параметры.РежимПодбораБезУслуг;
		СписокТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
	КонецЕсли;
	Если Параметры.РежимПодбораБезСертификатов <> Неопределено Тогда
		РежимПодбораБезСертификатов = Параметры.РежимПодбораБезСертификатов;
		СписокТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.ПодарочныйСертификат);
	КонецЕсли;
	Если Параметры.РежимПодбораСУчетомМинимальныхЦен <> Неопределено Тогда
		РежимПодбораСУчетомМинимальныхЦен = Параметры.РежимПодбораСУчетомМинимальныхЦен;
	КонецЕсли; 
	Если Параметры.ИспользоватьОтборПоТипамНоменклатуры <> Неопределено Тогда
		ИспользоватьОтборПоТипамНоменклатуры = Параметры.ИспользоватьОтборПоТипамНоменклатуры;
		Если ИспользоватьОтборПоТипамНоменклатуры
			И Константы.ИспользуетсяОбменСУправлениемТорговлей.Получить() 
			И НЕ РежимПодбораБезСертификатов Тогда
			ИспользоватьОтборПоТипамНоменклатуры = Параметры.ИспользоватьОтборПоТипамНоменклатуры;
			Элементы.ОтборПоТипуНоменклатуры.Видимость = Истина;
			Если РежимПодбораБезУслуг Тогда
				Элементы.ОтборПоТипуНоменклатуры.СписокВыбора.Добавить(0, НСтр("ru = 'Товары'"));
				ОтборПоТипуНоменклатуры = НСтр("ru = 'Товары'");
			Иначе	
				Элементы.ОтборПоТипуНоменклатуры.СписокВыбора.Добавить(1, НСтр("ru = 'Товары и услуги'"));
				ОтборПоТипуНоменклатуры = НСтр("ru = 'Товары и услуги'");
			КонецЕсли;		
			Элементы.ОтборПоТипуНоменклатуры.СписокВыбора.Добавить(2, НСтр("ru = 'Подарочные сертификаты'"));			
			РежимПодбораБезСертификатов = Истина;
			СписокТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.ПодарочныйСертификат);
		КонецЕсли;
	КонецЕсли;
	
	Если РежимПодбораБезУслуг 
		ИЛИ РежимПодбораБезСертификатов Тогда
		ПараметрыВыбора = Новый Массив;
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ТипНоменклатуры", Перечисления.ТипыНоменклатуры.Товар));
		Если РежимПодбораБезСертификатов 
			И НЕ РежимПодбораБезУслуг Тогда			
		ИначеЕсли РежимПодбораБезУслуг
			И НЕ РежимПодбораБезСертификатов Тогда
			ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ПодарочныйСертификат));
		КонецЕсли;				
		Элементы.КорзинаНоменклатура.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	КонецЕсли;	
		
	ИнформационнаяНадписьОтборПоСвойствам = НСтр("ru = 'Отбор по свойствам не установлен'");
	
	Если Не РежимПодбораБезСуммовыхПараметров Тогда
		Если Не ЗначениеЗаполнено(Магазин) Тогда
			ВызватьИсключение НСтр("ru = 'Параметр ""Магазин"" не заполнен.'");
		КонецЕсли;		
	КонецЕсли;
			
	Элементы.КорзинаЦена.Заголовок = НСтр("ru = 'Цена'") + " (" + ОбщегоНазначенияРТКлиентСервер.ПредставлениеВалютыУчета().НаименованиеСокращенное + ")";
		    	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"ЭтоГруппа",
		Ложь,
		Истина, ВидСравненияКомпоновкиДанных.Равно
	);
		
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"Номенклатура.ТипНоменклатуры",
		СписокТиповНоменклатуры,
		РежимПодбораБезУслуг ИЛИ РежимПодбораБезСертификатов, ВидСравненияКомпоновкиДанных.НеВСписке
	);
			
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаХарактеристики,
		"Номенклатура",
		Справочники.Номенклатура.ПустаяСсылка(),
		Истина,
		ВидСравненияКомпоновкиДанных.Равно
	);
		
	Если Параметры.РежимПодбораБезКоличественныхПараметров Тогда
		Элементы.КорзинаКоличественныеПараметры.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.РежимПодбораБезКоличественныхПараметров
		ИЛИ РежимПодбораБезСертификатов 
		ИЛИ Параметры.СкрыватьКнопкуВвестиСерийныеНомера Тогда
		Элементы.КорзинаВвестиСерийныеНомера.Видимость = Ложь;
	КонецЕсли;	
	
	СкрыватьКомандуОстаткиНаСкладах = Параметры.СкрыватьКомандуОстаткиНаСкладах;
	
	Элементы.ОстаткиТоваров.Видимость = Не РежимПодбораБезКоличественныхПараметров И ТекущийРежимОтображенияОстатков <> 2 И Не СкрыватьКомандуОстаткиНаСкладах;
	
	Если  СкрыватьКомандуОстаткиНаСкладах Тогда
		Элементы.ВидОтображенияОстатков1.Видимость = Ложь;
		Элементы.ВидОтображенияОстатков2.Видимость = Ложь;
	Иначе	
		Элементы.ОтображатьОстаткиПоМагазинуДокумента1.Пометка  = ТекущийРежимОтображенияОстатков = 0;
		Элементы.ОтображатьОстаткиПоВсемМагазинам1.Пометка      = ТекущийРежимОтображенияОстатков = 1;
		Элементы.НеОтображатьОстатки1.Пометка                   = ТекущийРежимОтображенияОстатков = 2;
		Элементы.ОтображатьОстаткиПоМагазинуДокумента2.Пометка  = ТекущийРежимОтображенияОстатков = 0;
		Элементы.ОтображатьОстаткиПоВсемМагазинам2.Пометка      = ТекущийРежимОтображенияОстатков = 1;
		Элементы.НеОтображатьОстатки2.Пометка                   = ТекущийРежимОтображенияОстатков = 2;
	КонецЕсли;
	
	Если Параметры.РежимПодбораБезСуммовыхПараметров Тогда
		Элементы.КорзинаСумма.Видимость = Ложь;
		Элементы.КорзинаЦена.Видимость  = Ложь;
		Элементы.СтрокаИнформацииОНоменклатуре.Видимость   = Ложь;
		Элементы.СтрокаИнформацииОХарактеристике.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		АвтоЗаголовок = Ложь;
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ЗаголовокКнопкиПеренести) Тогда
		Команды["ПеренестиВДокумент"].Заголовок = Параметры.ЗаголовокКнопкиПеренести;
		Команды["ПеренестиВДокумент"].Подсказка = Параметры.ЗаголовокКнопкиПеренести;
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ЗаголовокКнопкиЗапрашиватьКоличествоИЦену) Тогда
		Элементы.НоменклатураЗапрашиватьКоличество.Заголовок   = Параметры.ЗаголовокКнопкиЗапрашиватьКоличествоИЦену;
		Элементы.ХарактеристикиЗапрашиватьКоличество.Заголовок = Параметры.ЗаголовокКнопкиЗапрашиватьКоличествоИЦену;
	КонецЕсли;
	
	Элементы.ОтборПоСвойствам.Доступность      = Ложь;
	Элементы.СнятьОтборПоСвойствам.Доступность = Ложь;
	
	Элементы.ОтборПоСвойствам.Видимость      = Ложь;
	Элементы.СнятьОтборПоСвойствам.Видимость = Ложь;
			
	Элементы.НоменклатураЗапрашиватьКоличество.Видимость    = НЕ Параметры.СкрыватьКнопкуЗапрашиватьКоличество;
	Элементы.ХарактеристикиЗапрашиватьКоличество.Видимость  = НЕ Параметры.СкрыватьКнопкуЗапрашиватьКоличество;
	
	Если Параметры.ЗапрашиватьКоличество <> Неопределено Тогда
		ЗапрашиватьКоличество = Параметры.ЗапрашиватьКоличество;
		Элементы.ХарактеристикиЗапрашиватьКоличество.Пометка = ЗапрашиватьКоличество;
		Элементы.НоменклатураЗапрашиватьКоличество.Пометка   = ЗапрашиватьКоличество;
	КонецЕсли;
	
	Если Параметры.РежимПодбораВЗакупки <> Неопределено Тогда
		РежимПодбораВЗакупки = Параметры.РежимПодбораВЗакупки;
	КонецЕсли;	
		
	ИспользоватьПолнотекстовыйПоиск = ПолучитьФункциональнуюОпцию("ИспользоватьПолнотекстовыйПоискПриПодбореТоваров")
	                                  И ПолнотекстовыйПоиск.ПолучитьРежимПолнотекстовогоПоиска() = РежимПолнотекстовогоПоиска.Разрешить;
	ИнформационнаяБазаФайловая = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	
	Если ИспользоватьПолнотекстовыйПоиск Тогда
		ИндексПолнотекстовогоПоискаАктуален = ПолнотекстовыйПоиск.ИндексАктуален();
		Если НЕ ИндексПолнотекстовогоПоискаАктуален Тогда
			//считаем актуальным индекс в пределах дня, так как для более частых обновлений можно настроить регламентное задание
			ИндексПолнотекстовогоПоискаАктуален = НачалоДня(ПолнотекстовыйПоиск.ДатаАктуальности()) = НачалоДня(ТекущаяДатаСеанса());
		КонецЕсли;	
	КонецЕсли;
	
	ИспользоватьОтборПоИерархииНоменклатуры  = Истина;
	ИспользоватьОтборПоВидамНоменклатуры     = Истина;
	ИспользоватьОтборПоСегментамНоменклатуры = Истина;
	ИспользоватьОтборПоТоварнымКатегориям	 = Истина;
	ИспользоватьОтборПоМаркам				 = Истина;
	
	Если Параметры.ИспользоватьОтборПоИерархииНоменклатуры <> Неопределено Тогда
		ИспользоватьОтборПоИерархииНоменклатуры   = Параметры.ИспользоватьОтборПоИерархииНоменклатуры;
		Элементы.НавигацияИерархияНоменклатуры.Видимость                  = ИспользоватьОтборПоИерархииНоменклатуры;
		Элементы.УстановитьВариантОтбораПоИерархииНоменклатуры1.Видимость = ИспользоватьОтборПоИерархииНоменклатуры;
		Элементы.УстановитьВариантОтбораПоИерархииНоменклатуры2.Видимость = ИспользоватьОтборПоИерархииНоменклатуры;
		Элементы.УстановитьВариантОтбораПоИерархииНоменклатуры3.Видимость = ИспользоватьОтборПоИерархииНоменклатуры;
		Элементы.УстановитьВариантОтбораПоИерархииНоменклатуры4.Видимость = ИспользоватьОтборПоИерархииНоменклатуры;
		Элементы.УстановитьВариантОтбораПоИерархииНоменклатуры5.Видимость = ИспользоватьОтборПоИерархииНоменклатуры;
	КонецЕсли;
	Если Параметры.ИспользоватьОтборПоВидамНоменклатуры <> Неопределено Тогда
		ИспользоватьОтборПоВидамНоменклатуры      = Параметры.ИспользоватьОтборПоВидамНоменклатуры;
		Элементы.НавигацияВидыНоменклатуры.Видимость                  = ИспользоватьОтборПоВидамНоменклатуры;
		Элементы.УстановитьВариантОтбораПоВидуНоменклатуры1.Видимость = ИспользоватьОтборПоВидамНоменклатуры;
		Элементы.УстановитьВариантОтбораПоВидуНоменклатуры2.Видимость = ИспользоватьОтборПоВидамНоменклатуры;
		Элементы.УстановитьВариантОтбораПоВидуНоменклатуры3.Видимость = ИспользоватьОтборПоВидамНоменклатуры;
		Элементы.УстановитьВариантОтбораПоВидуНоменклатуры4.Видимость = ИспользоватьОтборПоВидамНоменклатуры;
		Элементы.УстановитьВариантОтбораПоВидуНоменклатуры5.Видимость = ИспользоватьОтборПоВидамНоменклатуры;
	КонецЕсли;
	Если Параметры.ИспользоватьОтборПоСегментамНоменклатуры <> Неопределено Тогда
		ИспользоватьОтборПоСегментамНоменклатуры  = Параметры.ИспользоватьОтборПоСегментамНоменклатуры;
		Элементы.НавигацияСегментыНоменклатуры.Видимость                  = ИспользоватьОтборПоСегментамНоменклатуры;
		Элементы.УстановитьВариантОтбораПоСегментуНоменклатуры1.Видимость = ИспользоватьОтборПоСегментамНоменклатуры;
		Элементы.УстановитьВариантОтбораПоСегментуНоменклатуры2.Видимость = ИспользоватьОтборПоСегментамНоменклатуры;
		Элементы.УстановитьВариантОтбораПоСегментуНоменклатуры3.Видимость = ИспользоватьОтборПоСегментамНоменклатуры;
		Элементы.УстановитьВариантОтбораПоСегментуНоменклатуры4.Видимость = ИспользоватьОтборПоСегментамНоменклатуры;
		Элементы.УстановитьВариантОтбораПоСегментуНоменклатуры5.Видимость = ИспользоватьОтборПоСегментамНоменклатуры;
	КонецЕсли;
	Если Параметры.ИспользоватьОтборПоТоварнымКатегориям <> Неопределено Тогда
		ИспользоватьОтборПоТоварнымКатегориям = Параметры.ИспользоватьОтборПоТоварнымКатегориям;
		Элементы.НавигацияТоварныеКатегории.Видимость                  = ИспользоватьОтборПоТоварнымКатегориям;
		Элементы.УстановитьВариантОтбораПоТоварнойКатегории1.Видимость = ИспользоватьОтборПоТоварнымКатегориям;
		Элементы.УстановитьВариантОтбораПоТоварнойКатегории2.Видимость = ИспользоватьОтборПоТоварнымКатегориям;
		Элементы.УстановитьВариантОтбораПоТоварнойКатегории3.Видимость = ИспользоватьОтборПоТоварнымКатегориям;
		Элементы.УстановитьВариантОтбораПоТоварнойКатегории4.Видимость = ИспользоватьОтборПоТоварнымКатегориям;
		Элементы.УстановитьВариантОтбораПоТоварнойКатегории5.Видимость = ИспользоватьОтборПоТоварнымКатегориям;
	КонецЕсли;
	Если Параметры.ИспользоватьОтборПоМаркам <> Неопределено Тогда
		ИспользоватьОтборПоМаркам = Параметры.ИспользоватьОтборПоМаркам;
		Элементы.НавигацияТоварныеКатегории.Видимость                  = ИспользоватьОтборПоМаркам;
		Элементы.УстановитьВариантОтбораПоТоварнойМарке1.Видимость = ИспользоватьОтборПоМаркам;
		Элементы.УстановитьВариантОтбораПоТоварнойМарке2.Видимость = ИспользоватьОтборПоМаркам;
		Элементы.УстановитьВариантОтбораПоТоварнойМарке3.Видимость = ИспользоватьОтборПоМаркам;
		Элементы.УстановитьВариантОтбораПоТоварнойМарке4.Видимость = ИспользоватьОтборПоМаркам;
		Элементы.УстановитьВариантОтбораПоТоварнойМарке5.Видимость = ИспользоватьОтборПоМаркам;
	КонецЕсли;
	
	КоличествоИспользуемыхОтборов = 0;
	Если ИспользоватьОтборПоИерархииНоменклатуры Тогда
		КоличествоИспользуемыхОтборов = КоличествоИспользуемыхОтборов + 1;
	КонецЕсли;
	Если ИспользоватьОтборПоВидамНоменклатуры Тогда
		КоличествоИспользуемыхОтборов = КоличествоИспользуемыхОтборов + 1;
	КонецЕсли;
	Если ИспользоватьОтборПоСегментамНоменклатуры Тогда
		КоличествоИспользуемыхОтборов = КоличествоИспользуемыхОтборов + 1;
	КонецЕсли;
	Если ИспользоватьОтборПоТоварнымКатегориям Тогда
		КоличествоИспользуемыхОтборов = КоличествоИспользуемыхОтборов + 1;
	КонецЕсли;
	Если ИспользоватьОтборПоМаркам Тогда
		КоличествоИспользуемыхОтборов = КоличествоИспользуемыхОтборов + 1;
	КонецЕсли;
	Если КоличествоИспользуемыхОтборов <= 0 Тогда
		Элементы.ВидНавигации1.Видимость = Ложь;
		Элементы.ВидНавигации2.Видимость = Ложь;
		Элементы.ВидНавигации3.Видимость = Ложь;
		Элементы.ВидНавигации4.Видимость = Ложь;
		Элементы.ВидНавигации5.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ПечатьЦенниковИЭтикеток") Тогда
		ПечатьЦенниковИЭтикеток = Параметры.ПечатьЦенниковИЭтикеток;
	КонецЕсли;
	
	Если ПечатьЦенниковИЭтикеток Тогда
		Элементы.ПеренестиВДокумент.Заголовок = "Выбрать";
	КонецЕсли;
	
	Элементы.ОбластьПодобранныеТовары.Видимость = ПоказыватьПодобранныеТовары;
	
	ИнформационнаяНадпись = НСтр("ru = 'Подобрано 0 позиций'");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("ИсторияПоискНоменклатуры",        Элементы.ЭлементПоиска.СписокВыбора.ВыгрузитьЗначения());
	ПараметрыЗакрытия.Вставить("ЗапрашиватьКоличество",           ЗапрашиватьКоличество);
	ПараметрыЗакрытия.Вставить("ПоказыватьПодобранныеТовары",     ПоказыватьПодобранныеТовары);
	ПараметрыЗакрытия.Вставить("ТекущийРежимОтображенияОстатков", ТекущийРежимОтображенияОстатков);
	ПараметрыЗакрытия.Вставить("СкрыватьЗапрещенные",     СкрыватьЗапрещенные);
	
	Если Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияВидыНоменклатуры Тогда
		ПараметрыЗакрытия.Вставить("ВариантОтбора", 1);
	ИначеЕсли Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияИерархияНоменклатуры Тогда
		ПараметрыЗакрытия.Вставить("ВариантОтбора", 2);
	ИначеЕсли Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияСегментыНоменклатуры Тогда
		ПараметрыЗакрытия.Вставить("ВариантОтбора", 3);
	ИначеЕсли Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеКатегории Тогда
		ПараметрыЗакрытия.Вставить("ВариантОтбора", 4);
	ИначеЕсли Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеМарки Тогда
		ПараметрыЗакрытия.Вставить("ВариантОтбора", 5);
	КонецЕсли;
	
	ПараметрыЗакрытия.Вставить("ТекущаяНавигация", ТекущаяНавигация);
	
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("ПодборТоваровНастройкиФормы",,ПараметрыЗакрытия);
	
	Если ПеренестиВДокумент Тогда
		
		СтруктураАдресов = ПоместитьТоварыВХранилище();
		ПеренестиВДокумент = Истина;
		ОповеститьОВыборе(СтруктураАдресов);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Не ПеренестиВДокумент И Объект.Корзина.Количество() > 0 Тогда
		
		ОтветНаВопрос = Вопрос(НСтр("ru = 'Подобранные товары не перенесены в документ. Перенести?'"), РежимДиалогаВопрос.ДаНетОтмена);
		
		Если ОтветНаВопрос = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			ПеренестиВДокумент = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтборПоТипуНоменклатурыПриИзменении(Элемент)
	
	// Удаление всех наложенных отборов.
	ПодборТаблицаНоменклатура.Отбор.Элементы.Очистить();
	ПодборТаблицаХарактеристики.Отбор.Элементы.Очистить();
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "СегментНоменклатуры", Неопределено, Ложь);
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаХарактеристики, "СегментНоменклатуры", Неопределено, Ложь);
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"ЭтоГруппа",
		Ложь,
		Истина, ВидСравненияКомпоновкиДанных.Равно
		);
		
	СписокТиповНоменклатуры.Очистить();
	Если Число(ОтборПоТипуНоменклатуры) = 2 Тогда
		СписокТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар"));
		СписокТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		РежимПодбораБезСертификатов = Ложь;
		РежимПодбораБезТоваров = Истина;
		РежимПодбораБезУслуг = Истина;
	ИначеЕсли Число(ОтборПоТипуНоменклатуры) = 1 Тогда
		СписокТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат"));
		РежимПодбораБезСертификатов = Истина;
		РежимПодбораБезУслуг = Ложь;
		РежимПодбораБезТоваров = Ложь;
	Иначе
		СписокТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат"));
		СписокТиповНоменклатуры.Добавить(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		РежимПодбораБезСертификатов = Истина;
		РежимПодбораБезУслуг = Истина;
		РежимПодбораБезТоваров = Ложь;
	КонецЕсли;		
	
	ЭлементСпискаВыбора = Элементы.ОтборПоТипуНоменклатуры.СписокВыбора.НайтиПоЗначению(Число(ОтборПоТипуНоменклатуры));
	ОтборПоТипуНоменклатуры = ЭлементСпискаВыбора.Представление;
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"ТипНоменклатуры",
		СписокТиповНоменклатуры,
		РежимПодбораБезУслуг ИЛИ РежимПодбораБезСертификатов ИЛИ РежимПодбораБезТоваров, ВидСравненияКомпоновкиДанных.НеВСписке
		);
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаХарактеристики,
		"Номенклатура",
		ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"),
		Истина,
		ВидСравненияКомпоновкиДанных.Равно
		);
		
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "СегментНоменклатуры", Неопределено, Ложь);
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаХарактеристики, "СегментНоменклатуры", Неопределено, Ложь);
	
	//Параметры выбора в корзине
	ПараметрыВыбора = Новый Массив;
	Если НЕ РежимПодбораБезСертификатов Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ТипНоменклатуры", ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат")));
	КонецЕсли;
	Если НЕ РежимПодбораБезУслуг Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ТипНоменклатуры", ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга")));	
	КонецЕсли;	
	Если НЕ РежимПодбораБезТоваров Тогда
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ТипНоменклатуры", ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар")));	
	КонецЕсли;	
	
	Элементы.КорзинаНоменклатура.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
    	
	ЭлементПоискаПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТипуНоменклатурыОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПодобранныеТоварыПриИзменении(Элемент)
	
	Элементы.ОбластьПодобранныеТовары.Видимость = ПоказыватьПодобранныеТовары;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "ИерархияНоменклатуры"

&НаКлиенте
Процедура ИерархияНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИерархияНоменклатурыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ВариантыНавигации.ТекущаяСтраница <> Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияИерархияНоменклатуры Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяНавигация.ПоИерархииНоменклатуры = Элементы.ИерархияНоменклатуры.ТекущаяСтрока;
	
	ПодключитьОбработчикОжидания("УстановитьОтборПоИерархииНоменклатурыОбработчикОжидания", 0.2, Истина);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "ВидыНоменклатуры"

&НаКлиенте
Процедура ВидыНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыНоменклатурыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ВариантыНавигации.ТекущаяСтраница <> Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияВидыНоменклатуры Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ВидыНоменклатуры.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.ЭтоГруппа Тогда
		Элементы.ОтборПоСвойствам.Доступность = Ложь;
		Элементы.СнятьОтборПоСвойствам.Доступность = Ложь;
	Иначе
		Элементы.ОтборПоСвойствам.Доступность = Истина;
		Элементы.СнятьОтборПоСвойствам.Доступность = Истина;
	КонецЕсли;
	
	ТекущаяНавигация.ПоВидуНоменклатуры = Элементы.ВидыНоменклатуры.ТекущаяСтрока;
	
	ПодключитьОбработчикОжидания("УстановитьОтборПоВидуНоменклатурыОбработчикОжидания", 0.2, Истина);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "СегментыНоменклатуры"

&НаКлиенте
Процедура СегментыНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СегментыНоменклатурыПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ВариантыНавигации.ТекущаяСтраница <> Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияСегментыНоменклатуры Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяНавигация.ПоСегментуНоменклатуры = Элементы.СегментыНоменклатуры.ТекущаяСтрока;
	
	ПодключитьОбработчикОжидания("УстановитьОтборПоСегментуНоменклатурыОбработчикОжидания", 0.2, Истина);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "ВидыНоменклатуры1"


&НаКлиенте
Процедура ВидыНоменклатуры1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры


&НаКлиенте
Процедура ВидыНоменклатуры1ПриАктивизацииСтроки(Элемент)
	Если Элементы.ВариантыНавигации.ТекущаяСтраница <> Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеКатегории Тогда
		Возврат;
	КонецЕсли;
	ОтбВладелец=ТоварныеКатегории.Отбор.ДоступныеПоляОтбора.Элементы.Найти("Владелец");
	ТекВладелец=Элементы.ВидыНоменклатуры1.ТекущиеДанные;
	Если ОтбВладелец<>Неопределено Тогда
		ЭтотОбъект.ТоварныеКатегории.Отбор.Элементы.Очистить();
		
		ЭлементОтбора = ЭтотОбъект.ТоварныеКатегории.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = ОтбВладелец.Поле;
		ЭлементОтбора.Представление = "Владелец";
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование = Истина;
		Если ТекВладелец<>Неопределено Тогда
			ЭлементОтбора.ПравоеЗначение=ТекВладелец.Ссылка;
		КонецЕсли;
	КонецЕсли;
	ТоварныеКатегорииПриАктивизацииСтроки(Элемент);
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "ТоварныеКатегории"

&НаКлиенте
Процедура ТоварныеКатегорииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
КонецПроцедуры


&НаКлиенте
Процедура ТоварныеКатегорииПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ВариантыНавигации.ТекущаяСтраница <> Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеКатегории Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяНавигация.ПоТоварнойКатегории = Элементы.ТоварныеКатегории.ТекущаяСтрока;
	
	ПодключитьОбработчикОжидания("УстановитьОтборПоТоварнойКатегорииОбработчикОжидания", 0.2, Истина);
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "ТоварныеМарки"

&НаКлиенте
Процедура ТоварныеМаркиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;	
КонецПроцедуры


&НаКлиенте
Процедура ТоварныеМаркиПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ВариантыНавигации.ТекущаяСтраница <> Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеМарки Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяНавигация.ПоТоварнойМарке = Элементы.ТоварныеМарки.ТекущаяСтрока;
	
	ПодключитьОбработчикОжидания("УстановитьОтборПоТоварнойМаркеОбработчикОжидания", 0.2, Истина);
	
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "Корзина"

&НаКлиенте
Процедура КорзинаПриИзменении()
	
	ПозицииПрописью = НРег(ЧислоПрописью(Объект.Корзина.Количество(), "Л = ru_RU; ДП = Ложь; НП = Истина; НД = Ложь;", НСтр("ru = 'позиция,позиции,позиций,ж,,,,,0'")));
	
	Если РежимПодбораБезКоличественныхПараметров ИЛИ РежимПодбораБезСуммовыхПараметров Тогда
		
		ИнформационнаяНадпись = НСтр("ru = 'Всего подобрано %Позиций%.'");
		ИнформационнаяНадпись = СтрЗаменить(ИнформационнаяНадпись,"%Позиций%", ПозицииПрописью);
		
	Иначе
		
		ИнформационнаяНадпись = НСтр("ru = 'Всего подобрано %Позиций% на сумму %Сумма% %Валюта%'");
		ИнформационнаяНадпись = СтрЗаменить(ИнформационнаяНадпись,"%Сумма%", Объект.Корзина.Итог("Сумма"));
		ИнформационнаяНадпись = СтрЗаменить(ИнформационнаяНадпись,"%Валюта%", ОбщегоНазначенияРТКлиентСервер.ПредставлениеВалютыУчета().НаименованиеСокращенное);
		ИнформационнаяНадпись = СтрЗаменить(ИнформационнаяНадпись,"%Позиций%", ПозицииПрописью);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КорзинаНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Корзина.ТекущиеДанные;

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу",    ТекущаяСтрока.Характеристика);
	СтруктураДействий.Вставить("ПроверитьСерийныеНомераПоВладельцу",
	ОбработкаТабличнойЧастиТоварыКлиент.ПолучитьСтруктуруПроверкиСерийныхНомеровПоВладельцу(ТекущаяСтрока, Объект.СерийныеНомера));
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", ТекущаяСтрока.Упаковка);
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураЗаполненияЦены = Новый Структура;
	СтруктураЗаполненияЦены.Вставить("Дата", ОбщегоНазначенияКлиент.ДатаСеанса());
			
	Если РежимПодбораВЗакупки Тогда
	    СтруктураЗаполненияЦены.Вставить("Контрагент", Контрагент);
		СтруктураЗаполненияЦены.Вставить("Магазин", Магазин);
		СтруктураЗаполненияЦены.Вставить("Ссылка",  СсылкаНаПоступление);
		СтруктураДействий.Вставить("ЗаполнитьЦенуЗакупки", СтруктураЗаполненияЦены);
	Иначе
		СтруктураЗаполненияЦены.Вставить("ОбъектЦенообразования", Магазин);
		СтруктураЗаполненияЦены.Вставить("ПриводитьКМинимальнойЦене", РежимПодбораСУчетомМинимальныхЦен);
		СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", СтруктураЗаполненияЦены);
	КонецЕсли;
		
	СтруктураДействий.Вставить("ПересчитатьСумму");

	ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Объект.Корзина, ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура КорзинаХарактеристикаПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.Корзина.ТекущиеДанные;

	СтруктураДействий = Новый Структура;
	СтруктураЗаполненияЦены = Новый Структура;
	СтруктураЗаполненияЦены.Вставить("Дата", ОбщегоНазначенияКлиент.ДатаСеанса());
	
	Если РежимПодбораВЗакупки Тогда
		СтруктураЗаполненияЦены.Вставить("Контрагент", Контрагент);
		СтруктураЗаполненияЦены.Вставить("Магазин", Магазин);
		СтруктураЗаполненияЦены.Вставить("Ссылка",  СсылкаНаПоступление);
		СтруктураДействий.Вставить("ЗаполнитьЦенуЗакупки", СтруктураЗаполненияЦены);
	Иначе
		СтруктураЗаполненияЦены.Вставить("ОбъектЦенообразования", Магазин);
		СтруктураЗаполненияЦены.Вставить("ПриводитьКМинимальнойЦене", РежимПодбораСУчетомМинимальныхЦен);
		СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", СтруктураЗаполненияЦены);
	КонецЕсли;	
	
	СтруктураДействий.Вставить("ПересчитатьСумму");

	ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Объект.Корзина, ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура КорзинаХарактеристикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОбработкаТабличнойЧастиТоварыКлиент.ВыбратьХарактеристикуНоменклатуры(ЭтотОбъект, Элемент, СтандартнаяОбработка, Элементы.Корзина.ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура КорзинаУпаковкаПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.Корзина.ТекущиеДанные;

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	Если ТекущаяСтрока.Количество > 0 Тогда
		СтруктураДействий.Вставить("ПересчитатьЦенуЗаУпаковку", ТекущаяСтрока.Количество);
		СтруктураДействий.Вставить("ПересчитатьЦенуЗаУпаковку", ТекущаяСтрока.Количество);
		СтруктураЗаполненияЦены = Новый Структура;
		СтруктураЗаполненияЦены.Вставить("Дата", ОбщегоНазначенияКлиент.ДатаСеанса());
			
		Если РежимПодбораВЗакупки Тогда
			СтруктураЗаполненияЦены.Вставить("Контрагент", Контрагент);
			СтруктураЗаполненияЦены.Вставить("Магазин", Магазин);
			СтруктураЗаполненияЦены.Вставить("Ссылка",  СсылкаНаПоступление);
			СтруктураДействий.Вставить("ЗаполнитьЦенуЗакупки", СтруктураЗаполненияЦены);    			
		Иначе
			СтруктураЗаполненияЦены.Вставить("ОбъектЦенообразования", Магазин);
			СтруктураЗаполненияЦены.Вставить("ПриводитьКМинимальнойЦене", РежимПодбораСУчетомМинимальныхЦен);
			СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", СтруктураЗаполненияЦены);
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураДействий.Вставить("ПересчитатьСумму");

	ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Объект.Корзина, ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

КонецПроцедуры

&НаКлиенте
Процедура КорзинаУпаковкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОбработкаТабличнойЧастиТоварыКлиент.ВыбратьУпаковкуНоменклатуры(ДанныеВыбора, СтандартнаяОбработка, Элементы.Корзина.ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура КорзинаКоличествоУпаковокПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.Корзина.ТекущиеДанные;

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураДействий.Вставить("ПересчитатьСумму");

	ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Объект.Корзина, ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

КонецПроцедуры

&НаКлиенте
Процедура КорзинаЦенаПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.Корзина.ТекущиеДанные;

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму");

	ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Объект.Корзина, ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

КонецПроцедуры

&НаКлиенте
Процедура КорзинаСуммаПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.Корзина.ТекущиеДанные;

	СтруктураДействий = Новый Структура;
	Если РежимПодбораВЗакупки Тогда
		СтруктураДействий.Вставить("ПересчитатьЦенуПоСуммеВЗакупках");
	Иначе
		СтруктураДействий.Вставить("ПересчитатьЦенуСкидкуПоСуммеВПродажах", Новый Структура);
	КонецЕсли;

	ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Объект.Корзина, ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

КонецПроцедуры

&НаКлиенте
Процедура КорзинаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Копирование Тогда		
		ТекущаяСтрока                          = Элементы.Корзина.ТекущиеДанные;
	    ТекущаяСтрока.КлючСвязиСерийныхНомеров = 0;		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "ПодборТаблицаНоменклатура"

&НаКлиенте
Процедура ПодборТаблицаНоменклатураВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ Элемент.ТекущиеДанные = Неопределено ИЛИ Элемент.ТекущиеДанные.ЭтоГруппа Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СтруктураПроверки = СтруктураПроверкиПодбора();

		Если НельзяПодбирать(СтруктураПроверки) Тогда
			Возврат;
		КонецЕсли;
	
		Если (Элемент.ТекущиеДанные.ИспользованиеХарактеристик = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры")
			ИЛИ Элемент.ТекущиеДанные.ИспользованиеХарактеристик = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры")) Тогда
			
			ПерейтиКСпискуХарактеристикНаКлиенте();
			
		Иначе
			
			Если Не ИнформацияОТовареПрочитана Тогда
				ПодборТаблицаПриАктивизацииСтрокиОбработчикОжидания();
			КонецЕсли;
			
			СтруктураПараметры = Новый Структура;
			СтруктураПараметры.Вставить("Номенклатура",               ПодборТекущаяНоменклатура);
			СтруктураПараметры.Вставить("ТипНоменклатуры",            ПодборТекущаяНоменклатураТипНоменклатуры);
			СтруктураПараметры.Вставить("Характеристика",             ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"));
			СтруктураПараметры.Вставить("ХарактеристикиИспользуются", Ложь);
			СтруктураПараметры.Вставить("Упаковка", ПредопределенноеЗначение("Справочник.УпаковкиНоменклатуры.ПустаяСсылка"));
			СтруктураПараметры.Вставить("Цена",    Цена);
			ДобавитьВКорзину(СтруктураПараметры, 1);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборТаблицаНоменклатураПриАктивизацииСтроки(Элемент)
	
	ПодборТекущаяНоменклатура                = Элемент.ТекущаяСтрока;
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ПодборТекущаяНоменклатураТипНоменклатуры = Элемент.ТекущиеДанные.ТипНоменклатуры;
	Иначе
		ПодборТекущаяНоменклатураТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар");
	КонецЕсли;   	
	ПодборТекущаяХарактеристика = ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда		
		Если Элемент.ТекущиеДанные.ИспользованиеХарактеристик = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры")
			ИЛИ Элемент.ТекущиеДанные.ИспользованиеХарактеристик = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры") Тогда			
			Элементы.ПерейтиКСпискуХарактеристик.Доступность = Истина;			
		Иначе
			Элементы.ПерейтиКСпискуХарактеристик.Доступность = Ложь;
		КонецЕсли;		
	Иначе
		Элементы.ПерейтиКСпискуХарактеристик.Доступность = Ложь;
	КонецЕсли;
	
	ИнформацияОТовареПрочитана = Ложь;              	
	ПодключитьОбработчикОжидания("ПодборТаблицаПриАктивизацииСтрокиОбработчикОжидания",0.2,Истина);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "ПодборТаблицаХарактеристики"

&НаКлиенте
Процедура ПодборТаблицаХарактеристикиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ИнформацияОТовареПрочитана Тогда
		ПодборТаблицаПриАктивизацииСтрокиОбработчикОжидания();
	КонецЕсли;
	
	СтруктураПроверки = СтруктураПроверкиПодбора();
	Если НельзяПодбирать(СтруктураПроверки) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("Номенклатура",               ПодборТекущаяНоменклатура);
	СтруктураПараметры.Вставить("ТипНоменклатуры",            ПодборТекущаяНоменклатураТипНоменклатуры);
	СтруктураПараметры.Вставить("Характеристика",             ПодборТекущаяХарактеристика);
	СтруктураПараметры.Вставить("ХарактеристикиИспользуются", Истина);
	СтруктураПараметры.Вставить("Упаковка", ПредопределенноеЗначение("Справочник.УпаковкиНоменклатуры.ПустаяСсылка"));
	СтруктураПараметры.Вставить("Цена",    Цена);
			
	ДобавитьВКорзину(СтруктураПараметры, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборТаблицаХарактеристикиПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ПодборТекущаяХарактеристика = Элемент.ТекущиеДанные.Характеристика;
	Иначе
		ПодборТекущаяХарактеристика = ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");
	КонецЕсли;
	
	ИнформацияОТовареПрочитана = Ложь;
	
	ПодключитьОбработчикОжидания("ПодборТаблицаПриАктивизацииСтрокиОбработчикОжидания",0.2,Истина);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "ОстаткиТоваров"

&НаКлиенте
Процедура ОстаткиТоваровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущаяСтрока = ОстаткиТоваров.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если Не ЗначениеЗаполнено(ПодборТекущаяНоменклатура) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанныеНоменклатура = Элементы.ПодборТаблицаНоменклатура.ТекущиеДанные;
	Если ТекущиеДанныеНоменклатура = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПроверки = СтруктураПроверкиПодбора();
	Если НельзяПодбирать(СтруктураПроверки) Тогда
		Возврат;
	КонецЕсли;
	
	Если (Не ЗначениеЗаполнено(ПодборТекущаяХарактеристика)
		И (ТекущиеДанныеНоменклатура.ИспользованиеХарактеристик = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры")
		ИЛИ ТекущиеДанныеНоменклатура.ИспользованиеХарактеристик = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры"))) Тогда
			Ответ = Вопрос(НСтр("ru = 'Не выбрана характеристика. Перейти к выбору характеристик?'"), РежимДиалогаВопрос.ОКОтмена);
			Если Ответ = КодВозвратаДиалога.ОК Тогда
				ПерейтиКСпискуХарактеристикНаКлиенте();
			КонецЕсли;
		Возврат;
	КонецЕсли;
			
	Если Не ИнформацияОТовареПрочитана Тогда
		ПодборТаблицаПриАктивизацииСтрокиОбработчикОжидания();
	КонецЕсли;
	
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("Номенклатура",               ПодборТекущаяНоменклатура);
	СтруктураПараметры.Вставить("ТипНоменклатуры",            ПодборТекущаяНоменклатураТипНоменклатуры);
	СтруктураПараметры.Вставить("Характеристика",             ПодборТекущаяХарактеристика);
	СтруктураПараметры.Вставить("ХарактеристикиИспользуются", ТекущиеДанныеНоменклатура.ИспользованиеХарактеристик = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры")
		                                                         ИЛИ ТекущиеДанныеНоменклатура.ИспользованиеХарактеристик = ПредопределенноеЗначение("Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры"));
	СтруктураПараметры.Вставить("Упаковка", ПредопределенноеЗначение("Справочник.УпаковкиНоменклатуры.ПустаяСсылка"));
	СтруктураПараметры.Вставить("Цена",    Цена);
	
	ДобавитьВКорзину(СтруктураПараметры, 1);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПодборПерейтиКСпискуХарактеристик(Команда)
	
	ПерейтиКСпискуХарактеристикНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПерейтиКСпискуНоменклатуры(Команда)
	
	ПерейтиКСпискуНоменклатурыНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗапрашиватьКоличество(Команда)
	
	ЗапрашиватьКоличество = Не ЗапрашиватьКоличество;
	Элементы.ХарактеристикиЗапрашиватьКоличество.Пометка = ЗапрашиватьКоличество;
	Элементы.НоменклатураЗапрашиватьКоличество.Пометка = ЗапрашиватьКоличество;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСкрыватьЗапрещенные(Команда)
	
	СкрыватьЗапрещенные = Не СкрыватьЗапрещенные;
	Элементы.СкрыватьЗапрещенные.Пометка = СкрыватьЗапрещенные;
	ИзменитьТекстЗапросаДинамическогоСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущийЭлементСтрокаПоиска(Команда)
	
	Если ТекущийЭлемент = Элементы.ЭлементПоиска Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийЭлемент = Элементы.ЭлементПоиска;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущийЭлементПодобранныеТовары(Команда)
	
	ТекущийЭлемент = Элементы.Корзина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущийЭлементНоменклатура(Команда)
	
	Если Элементы.СтраницыСписокНоменклатуры.ТекущаяСтраница = Элементы.СтраницыСписокНоменклатуры.ПодчиненныеЭлементы.ГруппаНоменклатура Тогда
		ТекущийЭлемент = Элементы.ПодборТаблицаНоменклатура;
	Иначе
		ТекущийЭлемент = Элементы.ПодборТаблицаХарактеристики;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСвойствам(Команда)

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидНоменклатуры", Элементы.ВидыНоменклатуры.ТекущиеДанные.Ссылка);
	ПараметрыФормы.Вставить("ТекущийОтбор", ОтборПоСвойствам);
	
	ВыбранноеЗначение = ОткрытьФормуМодально("Обработка.ПодборТоваров.Форма.ОтборПоСвойствам", ПараметрыФормы, ЭтотОбъект);
	Если ВыбранноеЗначение <> Неопределено Тогда 
		
		ОтборПоСвойствам = ВыбранноеЗначение;
		
		ИнформационнаяНадписьОтборПоСвойствам = НСтр("ru = 'Установлен отбор по свойствам:'");
		Если ВыбранноеЗначение.ОтборПоКатегориям.Количество() > 0 Тогда
			ЗначенияСвойств = ВыбранноеЗначение.ОтборПоКатегориям[0].ЗначенияСвойств;
			Для каждого Элемент Из ЗначенияСвойств Цикл
				ИнформационнаяНадписьОтборПоСвойствам = ИнформационнаяНадписьОтборПоСвойствам + " " + Элемент.Свойство + ": " + Элемент.Значение;
			КонецЦикла;
		КонецЕсли;
		Если ВыбранноеЗначение.ОтборПоВидамНоменклатуры.Количество() > 0 Тогда
			ЗначенияСвойств = ВыбранноеЗначение.ОтборПоВидамНоменклатуры[0].ЗначенияСвойств;
			Для каждого Элемент Из ЗначенияСвойств Цикл
				ИнформационнаяНадписьОтборПоСвойствам = ИнформационнаяНадписьОтборПоСвойствам + " " + Элемент.Свойство + ": " + Элемент.Значение;
			КонецЦикла;
			
			ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
				ВидыНоменклатуры,
				"Ссылка",
				ВыбранноеЗначение.ОтборПоВидамНоменклатуры[0].ВидНоменклатуры,
				Истина
			);
			
		КонецЕсли;
		
		ПодборТоваровКлиентСервер.УстановитьОтборПоВидамНоменклатуры(
			ВыбранноеЗначение.ОтборПоВидамНоменклатуры,
			ПодборТаблицаНоменклатура,
			ПодборТаблицаХарактеристики
		);
		
		ПодборТоваровКлиентСервер.УстановитьОтборПоКатегориям(
			ВыбранноеЗначение.ОтборПоКатегориям,
			ПодборТаблицаНоменклатура,
			ПодборТаблицаХарактеристики
		);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтборПоСвойствам(Команда)
	
	ОтборПоСвойствам = Неопределено;
	ИнформационнаяНадписьОтборПоСвойствам = НСтр("ru = 'Отбор по свойствам не установлен'");
	
	ПодборТоваровКлиентСервер.УстановитьОтборПоВидамНоменклатуры(
		Новый Массив,
		ПодборТаблицаНоменклатура,
		ПодборТаблицаХарактеристики
	);
	
	ПодборТоваровКлиентСервер.УстановитьОтборПоКатегориям(
		Новый Массив,
		ПодборТаблицаНоменклатура,
		ПодборТаблицаХарактеристики
	);
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ВидыНоменклатуры,
		"Ссылка",
		Неопределено,
		Ложь
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКРодителю(Команда)
	
	ТекущиеДанные = Элементы.ПодборТаблицаНоменклатура.ТекущиеДанные;
	
	Если Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияВидыНоменклатуры Тогда
		Элементы.ВидыНоменклатуры.ТекущаяСтрока = ПодборТоваровСервер.ПолучитьВидНоменклатуры(ТекущиеДанные.Номенклатура);
	ИначеЕсли Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияИерархияНоменклатуры Тогда
		Элементы.ИерархияНоменклатуры.ТекущаяСтрока = ПодборТоваровСервер.ПолучитьРодителяНоменклатуры(ТекущиеДанные.Номенклатура);
	ИначеЕсли Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияСегментыНоменклатуры Тогда
		Элементы.СегментыНоменклатуры.ТекущаяСтрока = ПодборТоваровСервер.ПолучитьСегментНоменклатуры(ТекущиеДанные.Номенклатура);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущийЭлементНавигация(Команда)
	
	Если Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияИерархияНоменклатуры Тогда
		ТекущийЭлемент = Элементы.НавигацияИерархияНоменклатуры;
	ИначеЕсли Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияВидыНоменклатуры Тогда
		ТекущийЭлемент = Элементы.НавигацияВидыНоменклатуры;
	ИначеЕсли Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияСегментыНоменклатуры Тогда
		ТекущийЭлемент = Элементы.НавигацияСегментыНоменклатуры;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВариантОтбораПоВидуНоменклатуры(Команда)
	
	Если Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияВидыНоменклатуры Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияВидыНоменклатуры;
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры1", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры2", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры3", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры4", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры5", "Пометка", Истина);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке5", "Пометка", Ложь);
	
	ВариантОтбораПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВариантОтбораПоИерархииНоменклатуры(Команда)
	
	Если Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияИерархияНоменклатуры Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияИерархияНоменклатуры;
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры1", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры2", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры3", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры4", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры5", "Пометка", Истина);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке5", "Пометка", Ложь);
	
	ВариантОтбораПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВариантОтбораПоСегментуНоменклатуры(Команда)
	
	Если Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияСегментыНоменклатуры Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияСегментыНоменклатуры;
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры1", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры2", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры3", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры4", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры5", "Пометка", Истина);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке5", "Пометка", Ложь);
	
	ВариантОтбораПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВариантОтбораПоТоварнойКатегории(Команда)
	
	Если Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеКатегории Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеКатегории;
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории1", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории2", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории3", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории4", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории5", "Пометка", Истина);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке5", "Пометка", Ложь);
	
	ВариантОтбораПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВариантОтбораПоТоварнойМарке(Команда)
	Если Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеМарки Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеМарки;
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоВидуНоменклатуры5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоИерархииНоменклатуры5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоСегментуНоменклатуры5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории1", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории2", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории3", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории4", "Пометка", Ложь);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойКатегории5", "Пометка", Ложь);
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке1", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке2", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке3", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке4", "Пометка", Истина);
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УстановитьВариантОтбораПоТоварнойМарке5", "Пометка", Истина);
	
	ВариантОтбораПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиПодарочныеСертификаты(Команда)
	
	Перем ПересчетКоличества;
	
	ПересчетКоличества = Ложь;
	ОбработкаТабличнойЧастиТоварыКлиент.ВвестиСерийныеНомераНоменклатурыВТЧ(ЭтотОбъект,
		Объект.СерийныеНомера,
		Элементы.Корзина.ТекущиеДанные, 
		ПересчетКоличества);
	
	Если ПересчетКоличества Тогда
		ТекущаяСтрока = Элементы.Корзина.ТекущиеДанные;
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		СтруктураДействий.Вставить("ПересчитатьСумму");		
		ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Объект.Корзина, ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура НеОтображатьОстатки(Команда)
	
	УстановитьРежимОтображенияОстатковНаКлиенте(2);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьОстаткиПоВсемСкладам(Команда)
	
	УстановитьРежимОтображенияОстатковНаКлиенте(1);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьОстаткиПоСкладамДокумента(Команда)
	
	УстановитьРежимОтображенияОстатковНаКлиенте(0);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ПодборТаблицаПриАктивизацииСтрокиОбработчикОжидания()
	
	Если ИнформацияОТовареПрочитана Тогда
		Возврат;
	КонецЕсли;
		
	ОстаткиТоваров.Очистить();
	
	Если РежимПодбораБезСуммовыхПараметров
		И ТекущийРежимОтображенияОстатков = 2 Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПодборТекущаяНоменклатура) Тогда
		
		Если ПодборТекущаяНоменклатураТипНоменклатуры <> ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда	
			Если ТекущийРежимОтображенияОстатков = 2 Тогда
				Если РежимПодбораВЗакупки Тогда
					СтруктураИнформацииОТоваре = ПодборТоваровСервер.ПолучитьЦенуЗакупки(ПодборТекущаяНоменклатура, ПодборТекущаяХарактеристика, Магазин, Контрагент, СсылкаНаПоступление);						
				Иначе
					СтруктураИнформацииОТоваре = ПодборТоваровСервер.ПолучитьЦенуПродажи(ПодборТекущаяНоменклатура, ПодборТекущаяХарактеристика, Магазин, РежимПодбораСУчетомМинимальныхЦен);
				КонецЕсли;
			ИначеЕсли ТекущийРежимОтображенияОстатков = 1 Тогда
				Если РежимПодбораВЗакупки Тогда
					СтруктураИнформацииОТоваре = ПодборТоваровСервер.ПолучитьЦенуЗакупкиИОстаткиНоменклатуры(ПодборТекущаяНоменклатура, ПодборТекущаяХарактеристика, Магазин, Истина, Контрагент, СсылкаНаПоступление);
				Иначе					
					СтруктураИнформацииОТоваре = ПодборТоваровСервер.ПолучитьЦенуПродажиИОстаткиНоменклатуры(ПодборТекущаяНоменклатура, ПодборТекущаяХарактеристика, Магазин, Истина, РежимПодбораСУчетомМинимальныхЦен);
				КонецЕсли;
			Иначе
				Если РежимПодбораВЗакупки Тогда
					СтруктураИнформацииОТоваре = ПодборТоваровСервер.ПолучитьЦенуЗакупкиИОстаткиНоменклатуры(ПодборТекущаяНоменклатура, ПодборТекущаяХарактеристика, Магазин, Ложь, Контрагент, СсылкаНаПоступление);
				Иначе
					СтруктураИнформацииОТоваре = ПодборТоваровСервер.ПолучитьЦенуПродажиИОстаткиНоменклатуры(ПодборТекущаяНоменклатура, ПодборТекущаяХарактеристика, Магазин, Ложь, РежимПодбораСУчетомМинимальныхЦен);
				КонецЕсли;
			КонецЕсли;
		Иначе
			Если РежимПодбораВЗакупки Тогда
				СтруктураИнформацииОТоваре = ПодборТоваровСервер.ПолучитьЦенуЗакупки(ПодборТекущаяНоменклатура, ПодборТекущаяХарактеристика, Магазин, Контрагент, СсылкаНаПоступление);	
			Иначе
				СтруктураИнформацииОТоваре = ПодборТоваровСервер.ПолучитьЦенуПродажи(ПодборТекущаяНоменклатура, ПодборТекущаяХарактеристика, Магазин, РежимПодбораСУчетомМинимальныхЦен);
			КонецЕсли;
		КонецЕсли;
		
		СтруктураЦена = СтруктураИнформацииОТоваре.Цена;
		НаименованиеЕдиницыИзмерения = Строка(СтруктураЦена.ЕдиницаИзмерения);
		
		Если ПодборТекущаяНоменклатураТипНоменклатуры <> ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда
			
			Если ТекущийРежимОтображенияОстатков <> 2 Тогда
				
				Для Инд = 0 По СтруктураИнформацииОТоваре.ТекущиеОстатки.ВГраница() Цикл
					
					СтрокаТЧ = СтруктураИнформацииОТоваре.ТекущиеОстатки[Инд];
					ТекущийОстаток = ОстаткиТоваров.Добавить();
					ТекущийОстаток.ВНаличии = СтрокаТЧ.ВНаличии;
					ТекущийОстаток.ВНаличииОписание = ?(ЗначениеЗаполнено(ТекущийОстаток.ВНаличии), Формат(ТекущийОстаток.ВНаличии,"ЧДЦ=3") +" "+ НаименованиеЕдиницыИзмерения, "");
					ТекущийОстаток.МестоХранения    = СтрокаТЧ.МестоХранения;
					ТекущийОстаток.МестоХраненияОписание = Строка(СтрокаТЧ.МестоХранения);
					ТекущийОстаток.ЭтоМагазин = СтрокаТЧ.ЭтоМагазин;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Цена             = СтруктураЦена.Цена;
		ЕдиницаИзмерения = СтруктураЦена.ЕдиницаИзмерения;
		
		Если Цена <> 0 Тогда
			
			СтрокаИнформацииОНоменклатуре = НСтр("ru = 'Цена: %Цена% %Валюта% за %ЕдиницаИзмерения%'");
			СтрокаИнформацииОНоменклатуре = СтрЗаменить(СтрокаИнформацииОНоменклатуре, "%Цена%",     Формат(СтруктураЦена.Цена,"ЧДЦ=2"));
			СтрокаИнформацииОНоменклатуре = СтрЗаменить(СтрокаИнформацииОНоменклатуре, "%Валюта%",   ОбщегоНазначенияРТКлиентСервер.ПредставлениеВалютыУчета().НаименованиеСокращенное);
			СтрокаИнформацииОНоменклатуре = СтрЗаменить(СтрокаИнформацииОНоменклатуре, "%ЕдиницаИзмерения%", НаименованиеЕдиницыИзмерения);
		Иначе
			СтрокаИнформацииОНоменклатуре = НСтр("ru = 'Цена: Не назначена'");
		КонецЕсли;
		
	Иначе
		
		Цена     = 0;
		ЕдиницаИзмерения = ПредопределенноеЗначение("Справочник.БазовыеЕдиницыИзмерения.ПустаяСсылка");
		СтрокаИнформацииОНоменклатуре = НСтр("ru = 'Цена: Не назначена'");
		
	КонецЕсли;
	
	ИнформацияОТовареПрочитана = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВКорзину(СтруктураПараметры, КоличествоУпаковок)
	
	НовыеСтроки = Новый Массив;
	
	Если ЗапрашиватьКоличество Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Номенклатура",             СтруктураПараметры.Номенклатура);
		ПараметрыФормы.Вставить("Характеристика",           СтруктураПараметры.Характеристика);
		ПараметрыФормы.Вставить("Упаковка",                 СтруктураПараметры.Упаковка);
		ПараметрыФормы.Вставить("Цена",                     СтруктураПараметры.Цена);
		ПараметрыФормы.Вставить("СкрытьЦену",               РежимПодбораБезСуммовыхПараметров);
		ПараметрыФормы.Вставить("РедактироватьЦену",        СтруктураПараметры.ТипНоменклатуры <> ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.ПодарочныйСертификат"));
		ПараметрыФормы.Вставить("ЭтоУслуга",                СтруктураПараметры.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"));
		
		МассивСтруктур = ОткрытьФормуМодально("Обработка.ПодборТоваров.Форма.ЗапросКоличества", ПараметрыФормы, ЭтотОбъект);
		Если МассивСтруктур <> Неопределено Тогда
			Для Каждого ЭлементМассива Из МассивСтруктур Цикл
				НоваяСтрока = Новый Структура;
				НоваяСтрока.Вставить("Номенклатура",               СтруктураПараметры.Номенклатура);
				НоваяСтрока.Вставить("Характеристика",             СтруктураПараметры.Характеристика);
				НоваяСтрока.Вставить("ХарактеристикиИспользуются", СтруктураПараметры.ХарактеристикиИспользуются);
				НоваяСтрока.Вставить("Упаковка",                   ЭлементМассива.Упаковка);
				НоваяСтрока.Вставить("Цена",                       ЭлементМассива.Цена);
				НоваяСтрока.Вставить("ТипНоменклатуры",            СтруктураПараметры.ТипНоменклатуры);
				НоваяСтрока.Вставить("КоличествоУпаковок",         ЭлементМассива.КоличествоУпаковок);
				НовыеСтроки.Добавить(НоваяСтрока);
			КонецЦикла;
		Иначе
			Возврат;
		КонецЕсли;
	Иначе
		НоваяСтрока = Новый Структура;
		НоваяСтрока.Вставить("Номенклатура",               СтруктураПараметры.Номенклатура);
		НоваяСтрока.Вставить("Характеристика",             СтруктураПараметры.Характеристика);
		НоваяСтрока.Вставить("ХарактеристикиИспользуются", СтруктураПараметры.ХарактеристикиИспользуются);
		НоваяСтрока.Вставить("ТипНоменклатуры",            СтруктураПараметры.ТипНоменклатуры);
		НоваяСтрока.Вставить("Упаковка",                   СтруктураПараметры.Упаковка);
		НоваяСтрока.Вставить("Цена",                       СтруктураПараметры.Цена);
		НоваяСтрока.Вставить("КоличествоУпаковок",         КоличествоУпаковок);
		НовыеСтроки.Добавить(НоваяСтрока);
	КонецЕсли;
	
	Для Каждого НоваяСтрока Из НовыеСтроки Цикл
		
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура",               СтруктураПараметры.Номенклатура);
		Отбор.Вставить("Характеристика",             СтруктураПараметры.Характеристика);
		Отбор.Вставить("ХарактеристикиИспользуются", СтруктураПараметры.ХарактеристикиИспользуются);
		Отбор.Вставить("Упаковка",                   НоваяСтрока.Упаковка);
		Отбор.Вставить("Цена",                       НоваяСтрока.Цена);
		Отбор.Вставить("ТипНоменклатуры",            СтруктураПараметры.ТипНоменклатуры);
		
		РезультатПоиска = Объект.Корзина.НайтиСтроки(Отбор);
		Если РезультатПоиска.Количество() = 0 Тогда
			
			ТекущаяСтрока = Объект.Корзина.Добавить();
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Отбор);
			
		Иначе
			
			ТекущаяСтрока = РезультатПоиска[0];
			
		КонецЕсли;
		
		ТекущаяСтрока.КоличествоУпаковок = ТекущаяСтрока.КоличествоУпаковок + НоваяСтрока.КоличествоУпаковок;
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		СтруктураДействий.Вставить("ПересчитатьСумму");

		ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Объект.Корзина, ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		
		Если Не ПоказыватьПодобранныеТовары Тогда
			
			ТекстСобытия = НСтр("ru = 'Товар добавлен в корзину'");
			ТекстОповещения = НСтр("ru = 'Товар %%Товар%% стоимостью %%Цена%% %%Валюта%% в количестве %%КоличествоУпаковок%% %%ЕдиницаИзмерения%% добавлен в корзину'");
			ТекстОповещения = СтрЗаменить(ТекстОповещения, "%%Товар%%",              Строка(ТекущаяСтрока.Номенклатура) + ?(ЗначениеЗаполнено(НоваяСтрока.Характеристика)," ("+НоваяСтрока.Характеристика+")",""));
			ТекстОповещения = СтрЗаменить(ТекстОповещения, "%%Цена%%",               ТекущаяСтрока.Цена);
			ТекстОповещения = СтрЗаменить(ТекстОповещения, "%%Валюта%%",             ОбщегоНазначенияРТКлиентСервер.ПредставлениеВалютыУчета().НаименованиеСокращенное);
			ТекстОповещения = СтрЗаменить(ТекстОповещения, "%%ЕдиницаИзмерения%%",   ?(ЗначениеЗаполнено(НоваяСтрока.Упаковка),НоваяСтрока.Упаковка,НСтр("ru = 'ед.'")));
			ТекстОповещения = СтрЗаменить(ТекстОповещения, "%%КоличествоУпаковок%%", КоличествоУпаковок);
			
			ПоказатьОповещениеПользователя(ТекстСобытия, ,ТекстОповещения);
			
		КонецЕсли;
	
	КонецЦикла;
	
	Если НовыеСтроки.Количество() > 0 Тогда		
		Элементы.Корзина.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
		КорзинаПриИзменении();             		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКСпискуХарактеристикНаКлиенте()
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаХарактеристики,
		"Номенклатура",
		ПодборТекущаяНоменклатура,
		ЗначениеЗаполнено(ПодборТекущаяНоменклатура),
		ВидСравненияКомпоновкиДанных.Равно
	);
	
	Элементы.СтраницыСписокНоменклатуры.ТекущаяСтраница = Элементы.СтраницыСписокНоменклатуры.ПодчиненныеЭлементы.ГруппаХарактеристики;
	
	// Установим фокус на таблицу характеристик номенклатуры
	ТекущийЭлемент = Элементы.ПодборТаблицаХарактеристики;
	Если ТекущийЭлемент.ТекущиеДанные <> Неопределено Тогда
		ПодборТекущаяХарактеристика = ТекущийЭлемент.ТекущиеДанные.Характеристика;
		ТекущийЭлемент.ТекущаяСтрока = ПодборТекущаяХарактеристика;
	КонецЕсли;
	
	ИнформацияОТовареПрочитана = Ложь;
	ПодключитьОбработчикОжидания("ПодборТаблицаПриАктивизацииСтрокиОбработчикОжидания",0.2,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКСпискуНоменклатурыНаКлиенте(ПереключатьТекущийЭлемент = Истина)
	
	Если Элементы.СтраницыСписокНоменклатуры.ТекущаяСтраница <> Элементы.СтраницыСписокНоменклатуры.ПодчиненныеЭлементы.ГруппаНоменклатура Тогда
		
		Элементы.СтраницыСписокНоменклатуры.ТекущаяСтраница = Элементы.СтраницыСписокНоменклатуры.ПодчиненныеЭлементы.ГруппаНоменклатура;
		
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
			ПодборТаблицаХарактеристики,
			"Номенклатура",
			ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"),
			Истина,
			ВидСравненияКомпоновкиДанных.Равно
		);
		
	КонецЕсли;
	
	Если ПереключатьТекущийЭлемент Тогда
		ТекущийЭлемент = Элементы.ПодборТаблицаНоменклатура;
	КонецЕсли;
	ПодборТекущаяХарактеристика = ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");
	
	ИнформацияОТовареПрочитана = Ложь;
	ПодключитьОбработчикОжидания("ПодборТаблицаПриАктивизацииСтрокиОбработчикОжидания",0.2,Истина);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТоварыВХранилище()
	
	Товары = Объект.Корзина.Выгрузить();
	СерийныеНомера = Объект.СерийныеНомера.Выгрузить();
	
	АдресТоваровВХранилище = ПоместитьВоВременноеХранилище(Товары, УникальныйИдентификатор);
	АдресСерийныхНомеровВХранилище = ПоместитьВоВременноеХранилище(СерийныеНомера, УникальныйИдентификатор);
	СтруктураАдресов = Новый Структура;
	СтруктураАдресов.Вставить("АдресТоваровВХранилище", АдресТоваровВХранилище);
	СтруктураАдресов.Вставить("АдресСерийныхНомеровВХранилище", АдресСерийныхНомеровВХранилище);
	
	Возврат СтруктураАдресов;
	
КонецФункции

#Область ОбработчикиУправленияПоиском

&НаКлиенте
Процедура ЭлементПоискаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ЭлементПоискаОткрытие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ЭлементПоискаПриИзменении(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ЭлементПоискаПриИзменении(Элемент)

	Если НЕ ЭлементПоиска.Пустая() Тогда
		ТекущаяНавигация.ПоИерархииНоменклатуры = Неопределено;
		Элементы.ПодборТаблицаНоменклатура.ТекущаяСтрока = ЭлементПоиска;
       
		СпискиВыбораКлиентСервер.ОбновитьСписокВыбора(Элементы.ЭлементПоиска.СписокВыбора, ЭлементПоиска);

КонецЕсли;

	Элементы.ПодборТаблицаНоменклатура.Обновить();

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ВариантОтбораПриИзменении()
	
	// Доступность отбора по свойствам.
	ТекущиеДанные = Элементы.ВидыНоменклатуры.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено
		ИЛИ ТекущиеДанные.ЭтоГруппа
		ИЛИ Элементы.ВариантыНавигации.ТекущаяСтраница <> Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияВидыНоменклатуры Тогда
		Элементы.ОтборПоСвойствам.Доступность = Ложь;
		Элементы.СнятьОтборПоСвойствам.Доступность = Ложь;
	Иначе
		Элементы.ОтборПоСвойствам.Доступность = Истина;
		Элементы.СнятьОтборПоСвойствам.Доступность = Истина;
	КонецЕсли;
	
	// Удаление всех наложенных отборов.
	ПодборТаблицаНоменклатура.Отбор.Элементы.Очистить();
	ПодборТаблицаХарактеристики.Отбор.Элементы.Очистить();
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "СегментНоменклатуры", Неопределено, Ложь);
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаХарактеристики, "СегментНоменклатуры", Неопределено, Ложь);
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"ЭтоГруппа",
		Ложь,
		Истина, ВидСравненияКомпоновкиДанных.Равно
	);
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"ТипНоменклатуры",
		СписокТиповНоменклатуры,
		РежимПодбораБезУслуг ИЛИ РежимПодбораБезСертификатов ИЛИ РежимПодбораБезТоваров, ВидСравненияКомпоновкиДанных.НеВСписке
	);
			
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаХарактеристики,
		"Номенклатура",
		ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"),
		Истина,
		ВидСравненияКомпоновкиДанных.Равно
	);

	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "СегментНоменклатуры", Неопределено, Ложь);
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаХарактеристики, "СегментНоменклатуры", Неопределено, Ложь);

	Если Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияВидыНоменклатуры Тогда
		Элементы.ВидыНоменклатуры.ТекущаяСтрока = ТекущаяНавигация.ПоВидуНоменклатуры;
		УстановитьОтборПоВидуНоменклатурыОбработчикОжидания();
	ИначеЕсли Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияИерархияНоменклатуры Тогда
		Элементы.ИерархияНоменклатуры.ТекущаяСтрока = ТекущаяНавигация.ПоИерархииНоменклатуры;
		УстановитьОтборПоИерархииНоменклатурыОбработчикОжидания();
	ИначеЕсли Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияСегментыНоменклатуры Тогда
		Элементы.СегментыНоменклатуры.ТекущаяСтрока = ТекущаяНавигация.ПоСегментуНоменклатуры;
		УстановитьОтборПоСегментуНоменклатурыОбработчикОжидания();
	ИначеЕсли Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеКатегории Тогда
		Элементы.ТоварныеКатегории.ТекущаяСтрока = ТекущаяНавигация.ПоТоварнойКатегории;
		УстановитьОтборПоТоварнойКатегорииОбработчикОжидания();
	ИначеЕсли Элементы.ВариантыНавигации.ТекущаяСтраница = Элементы.ВариантыНавигации.ПодчиненныеЭлементы.НавигацияТоварныеМарки Тогда
		Элементы.ТоварныеМарки.ТекущаяСтрока = ТекущаяНавигация.ПоТоварнойМарке;
		УстановитьОтборПоТоварнойМаркеОбработчикОжидания();
	КонецЕсли;
	
	ЭлементПоискаПриИзменении(Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоИерархииНоменклатурыНаСервере(ГруппаНоменклатуры)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"Родитель",
		ГруппаНоменклатуры,
		ЗначениеЗаполнено(ГруппаНоменклатуры), ВидСравненияКомпоновкиДанных.Равно
	);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоИерархииНоменклатурыОбработчикОжидания()
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"Родитель",
		ТекущаяНавигация.ПоИерархииНоменклатуры,
		ЗначениеЗаполнено(ТекущаяНавигация.ПоИерархииНоменклатуры), ВидСравненияКомпоновкиДанных.Равно
	);
	
	ПерейтиКСпискуНоменклатурыНаКлиенте(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоВидуНоменклатурыНаСервере(ВидНоменклатуры)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"ВидНоменклатуры",
		ВидНоменклатуры,
		ЗначениеЗаполнено(ВидНоменклатуры), ВидСравненияКомпоновкиДанных.Равно
	);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоТоварнойКатегорииНаСервере(ТоварнаяКатегория)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"ТоварнаяКатегория",
		ТоварнаяКатегория,
		Истина, ВидСравненияКомпоновкиДанных.Равно
	);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоТоварнойМаркеНаСервере(Марка)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"Марка",
		Марка,
		ЗначениеЗаполнено(Марка), ВидСравненияКомпоновкиДанных.Равно
	);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоВидуНоменклатурыОбработчикОжидания()
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"ВидНоменклатуры",
		ТекущаяНавигация.ПоВидуНоменклатуры,
		ЗначениеЗаполнено(ТекущаяНавигация.ПоВидуНоменклатуры), ВидСравненияКомпоновкиДанных.Равно
	);
	
	ПерейтиКСпискуНоменклатурыНаКлиенте(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоСегментуНоменклатурыНаСервере(СегментНоменклатуры)
	
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "СегментНоменклатуры", СегментНоменклатуры, ЗначениеЗаполнено(СегментНоменклатуры));
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаХарактеристики, "СегментНоменклатуры", СегментНоменклатуры, ЗначениеЗаполнено(СегментНоменклатуры));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоСегментуНоменклатурыОбработчикОжидания()
	
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "СегментНоменклатуры", ТекущаяНавигация.ПоСегментуНоменклатуры, ЗначениеЗаполнено(ТекущаяНавигация.ПоСегментуНоменклатуры));
	ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаХарактеристики, "СегментНоменклатуры", ТекущаяНавигация.ПоСегментуНоменклатуры, ЗначениеЗаполнено(ТекущаяНавигация.ПоСегментуНоменклатуры));
	
	ПерейтиКСпискуНоменклатурыНаКлиенте(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоТоварнойКатегорииОбработчикОжидания()
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"ТоварнаяКатегория",
		ТекущаяНавигация.ПоТоварнойКатегории,
		Истина, ВидСравненияКомпоновкиДанных.Равно
	);
	
	ПерейтиКСпискуНоменклатурыНаКлиенте(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоТоварнойМаркеОбработчикОжидания()
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(
		ПодборТаблицаНоменклатура,
		"Марка",
		ТекущаяНавигация.ПоТоварнойМарке,
		ЗначениеЗаполнено(ТекущаяНавигация.ПоТоварнойМарке), ВидСравненияКомпоновкиДанных.Равно
	);
	
	ПерейтиКСпискуНоменклатурыНаКлиенте(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимОтображенияОстатковНаКлиенте(Режим)
	
	ТекущийРежимОтображенияОстатков   = Режим;
	ИнформацияОТовареПрочитана        = Ложь;
	Элементы.ОстаткиТоваров.Видимость = ТекущийРежимОтображенияОстатков <> 2 И Не СкрыватьКомандуОстаткиНаСкладах;
	
	Элементы.ОтображатьОстаткиПоМагазинуДокумента1.Пометка = ТекущийРежимОтображенияОстатков = 0;
	Элементы.ОтображатьОстаткиПоВсемМагазинам1.Пометка     = ТекущийРежимОтображенияОстатков = 1;
	Элементы.НеОтображатьОстатки1.Пометка                  = ТекущийРежимОтображенияОстатков = 2;
	Элементы.ОтображатьОстаткиПоМагазинуДокумента2.Пометка = ТекущийРежимОтображенияОстатков = 0;
	Элементы.ОтображатьОстаткиПоВсемМагазинам2.Пометка     = ТекущийРежимОтображенияОстатков = 1;
	Элементы.НеОтображатьОстатки2.Пометка                  = ТекущийРежимОтображенияОстатков = 2;
	
	ПодключитьОбработчикОжидания("ПодборТаблицаПриАктивизацииСтрокиОбработчикОжидания",0.2,Истина);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьТекстЗапросаДинамическогоСписка()
	Если ИспользоватьАссортимент Тогда
		Если РежимПодбораСУчетомАссортимента Тогда
			Если РежимПодбораСУчетомЗапрещенныхКПродаже И СкрыватьЗапрещенные Тогда
				Если НЕ ПродажиОптовые Тогда
					ПодборТаблицаНоменклатура.ТекстЗапроса=АссортиментСервер.ТекстЗапросаДинамическогоСпискаДляПодбора(УсловиеАссортимента, Истина);
				Иначе
					ПодборТаблицаНоменклатура.ТекстЗапроса=АссортиментСервер.ТекстЗапросаДинамическогоСпискаДляПодбора(УсловиеАссортимента, Ложь);
				КонецЕсли;
				//
				ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "ОбъектПланирования", ФорматМагазина, Истина);
				ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "НаДату", ТекущаяДатаСеанса(), Истина);
				Если НЕ ПродажиОптовые Тогда
					ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "Магазин", Магазин, Истина);
				КонецЕсли;
			ИначеЕсли (НЕ РежимПодбораСУчетомЗапрещенныхКПродаже) И СкрыватьЗапрещенные Тогда
				ПодборТаблицаНоменклатура.ТекстЗапроса=АссортиментСервер.ТекстЗапросаДинамическогоСпискаДляПодбора(УсловиеАссортимента, Ложь);
				//
				ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "ОбъектПланирования", ФорматМагазина, Истина);
				ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "НаДату", ТекущаяДатаСеанса(), Истина);
			Иначе
				ПодборТаблицаНоменклатура.ТекстЗапроса = ТекстЗапросаНоменклатура();
			КонецЕсли;
			//
		Иначе
			ПодборТаблицаНоменклатура.ТекстЗапроса = ТекстЗапросаНоменклатура();
		КонецЕсли;
	Иначе
		Если РежимПодбораСУчетомЗапрещенныхКПродаже И СкрыватьЗапрещенные И НЕ ПродажиОптовые Тогда
			ПодборТаблицаНоменклатура.ТекстЗапроса = СкидкиНаценкиСерверПереопределяемый.ТекстЗапросаДинамическогоСпискаДляПодбора();
			ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "Магазин", Магазин, Истина);
			ОтборыСписковКлиентСервер.УстановитьПараметрДинамическогоСписка(ПодборТаблицаНоменклатура, "НаДату", ТекущаяДатаСеанса(), Истина);
		Иначе
			ПодборТаблицаНоменклатура.ТекстЗапроса = ТекстЗапросаНоменклатура();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаНоменклатура()
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СправочникНоменклатура.Ссылка                                        КАК Номенклатура,
	|	СправочникНоменклатура.ВидНоменклатуры                               КАК ВидНоменклатуры,
	|	СправочникНоменклатура.ТипНоменклатуры                               КАК ТипНоменклатуры,
	|	СправочникНоменклатура.Родитель                                      КАК Родитель,
	|	СправочникНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик    КАК ИспользованиеХарактеристик,
	|	
	|	СправочникНоменклатура.ЭтоГруппа        КАК ЭтоГруппа,
	|	СправочникНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.ЭтоГруппа ТОГДА ВЫБОР КОГДА СправочникНоменклатура.ПометкаУдаления ТОГДА 13 ИНАЧЕ 12 КОНЕЦ
	|		ИНАЧЕ
	|			-1 + 
	|			ВЫБОР
	|				КОГДА СправочникНоменклатура.ПометкаУдаления
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			+ 
	|			ВЫБОР
	|				КОГДА СправочникНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.НеИспользовать)
	|					ТОГДА 1
	|				ИНАЧЕ 3
	|			КОНЕЦ
	|	КОНЕЦ КАК ИндексКартинки
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|{ГДЕ
	|	СправочникНоменклатура.Ссылка В (ВЫБРАТЬ Сегменты.Номенклатура Из РегистрСведений.НоменклатураСегмента КАК Сегменты ГДЕ Сегменты.Сегмент = &СегментНоменклатуры)}";
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервереБезКонтекста
Функция НельзяПодбирать(СтруктураПроверки)
	
	Результат = Ложь;
	
	Номенклатура =								СтруктураПроверки.Номенклатура;
	РежимПодбораСУчетомЗапрещенныхКПродаже =	СтруктураПроверки.РежимПодбораСУчетомЗапрещенныхКПродаже;
	ИспользоватьАссортимент =					СтруктураПроверки.ИспользоватьАссортимент;
	Магазин =									СтруктураПроверки.Магазин;
	ФорматМагазина =							СтруктураПроверки.ФорматМагазина;
	ПродажиОптовые =							СтруктураПроверки.ПродажиОптовые;
	УсловиеАссортимента =						СтруктураПроверки.УсловиеАссортимента;

	Если РежимПодбораСУчетомЗапрещенныхКПродаже Тогда
		Если ИспользоватьАссортимент Тогда
			СтруктураСостоянияАссортимента = АссортиментСервер.СтруктураСостоянияАссортиментаТовараВФормате(Номенклатура, ФорматМагазина, ТекущаяДатаСеанса());
			Если НЕ СтруктураСостоянияАссортимента.РазрешеныПродажи Тогда
				ТекстСообщения = НСтр("ru = 'Товар ""%1"" не включен в ассортимент или запрещен к продаже.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Номенклатура);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Результат = Истина;
			КонецЕсли;
		КонецЕсли;
	
		Если (НЕ ПродажиОптовые) И СкидкиНаценкиСерверПереопределяемый.ЗапрещенаПродажаТовара(Номенклатура, Магазин, ТекущаяДатаСеанса()) Тогда
			ТекстСообщения = НСтр("ru = 'Товар ""%1"" запрещен к продаже.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Номенклатура);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Результат = Истина;
		КонецЕсли;
	Иначе
		Если ИспользоватьАссортимент Тогда
			СтруктураСостоянияАссортимента = АссортиментСервер.СтруктураСостоянияАссортиментаТовараВФормате(Номенклатура, ФорматМагазина, ТекущаяДатаСеанса());
			Если (НЕ ПустаяСтрока(УсловиеАссортимента)) И (НЕ СтруктураСостоянияАссортимента[УсловиеАссортимента]) Тогда
				Если УсловиеАссортимента = "РазрешеныЗакупки" Тогда
					ТекстСообщения = НСтр("ru = 'Товар ""%1"" не включен в ассортимент или запрещен к закупке.'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Номенклатура);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Иначе
					ТекстСообщения = НСтр("ru = 'Товар ""%1"" не включен в ассортимент или запрещен к продаже.'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Номенклатура);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Результат = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция СтруктураПроверкиПодбора()
	СтруктураПроверки = Новый Структура;
	
	СтруктураПроверки.Вставить("Номенклатура", ПодборТекущаяНоменклатура);
	СтруктураПроверки.Вставить("РежимПодбораСУчетомЗапрещенныхКПродаже", РежимПодбораСУчетомЗапрещенныхКПродаже);
	СтруктураПроверки.Вставить("ИспользоватьАссортимент", ИспользоватьАссортимент);
	СтруктураПроверки.Вставить("Магазин", Магазин);
	СтруктураПроверки.Вставить("ФорматМагазина", ФорматМагазина);
	СтруктураПроверки.Вставить("ПродажиОптовые", ПродажиОптовые);
	СтруктураПроверки.Вставить("УсловиеАссортимента", УсловиеАссортимента);
	
	Возврат СтруктураПроверки;
	
КонецФункции

&НаСервере	//	LNK 29.12.2017 09:42:51
Процедура УстановитьПараметрыИсточникаДанных(ЗначениеТолькоСОстатками = Неопределено, ЗначениеБлокированные = Неопределено)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Склады.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Магазин = &ТекущийМагазин"
	);
	Запрос.УстановитьПараметр("ТекущийМагазин", ПараметрыСеанса.ТекущийМагазин);

	ПодборТаблицаНоменклатура.Параметры.УстановитьЗначениеПараметра("Склады" , Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	ПодборТаблицаНоменклатура.Параметры.УстановитьЗначениеПараметра("Магазин", ПараметрыСеанса.ТекущийМагазин);

	ПодборТаблицаНоменклатура.Параметры.УстановитьЗначениеПараметра("ПоказыватьТолькоСОстатками", ?(ЗначениеТолькоСОстатками = Неопределено, Ложь, ЗначениеТолькоСОстатками));
	ПодборТаблицаНоменклатура.Параметры.УстановитьЗначениеПараметра("ПоказыватьБлокированные"   , ?(ЗначениеБлокированные = Неопределено, Ложь, ЗначениеБлокированные));

КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьДаннымиФайла(АдресВХранилище, Расширение)	Экспорт

	ТабличныйДокумент  = Новый ТабличныйДокумент;
	МассивДанных       = Новый Массив;
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);

	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("НомерСтроки"    , Новый ОписаниеТипов("Число"));
	ТаблицаЗначений.Колонки.Добавить("КодКарты"       , Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200)));
	ТаблицаЗначений.Колонки.Добавить("СуммаНакопления", Новый ОписаниеТипов("Число"));

	СоставСтроки = Новый Массив;
	СоставСтроки.Добавить(Новый Структура("Колонка, Имя, Текст", 1, "КодКарты", Истина));
	СоставСтроки.Добавить(Новый Структура("Колонка, Имя, Текст", 2, "СуммаНакопления", Ложь));
	ТипЧисло = Новый ОписаниеТипов("Число");

	Попытка

		ТабличныйДокумент.Прочитать(ИмяВременногоФайла, СпособЧтенияЗначенийТабличногоДокумента.Значение);

		ПерваяСтрока    = 1;
		КоличествоСтрок = ТабличныйДокумент.ВысотаТаблицы;

	 	Для НомерСтроки = ПерваяСтрока По КоличествоСтрок Цикл

			Для каждого Позиция Из СоставСтроки Цикл

				ТекущаяОбласть = ТабличныйДокумент.ПолучитьОбласть(
					"R" + Формат(НомерСтроки, "ЧДЦ=; ЧН=0; ЧГ=") +
					"C" + Формат(Позиция.Колонка, "ЧДЦ=; ЧН=0; ЧГ=")).ТекущаяОбласть;

				Попытка

					ЗначениеЯчейки = ТекущаяОбласть.Значение;

				Исключение
					
					Если Позиция.Имя = "КодКарты" Тогда

							ЗначениеЯчейки = ТекущаяОбласть.Текст;

					Иначе	ЗначениеЯчейки = ТипЧисло.ПривестиЗначение(СтрЗаменить(ТекущаяОбласть.Текст, ",", "."));

					КонецЕсли;

				КонецПопытки;

				Если ТипЗнч(ЗначениеЯчейки) = Тип("Число") И Позиция.Имя = "КодКарты" Тогда

					ЗначениеЯчейки = Формат(ЗначениеЯчейки, "ЧДЦ=; ЧГ=");

				КонецЕсли;

				Если Позиция.Имя = "КодКарты" Тогда

					Если НЕ ПустаяСтрока(ЗначениеЯчейки) И СтрДлина(ЗначениеЯчейки) > 5 Тогда

						СтрокаТаблицы = ТаблицаЗначений.Добавить();
						СтрокаТаблицы.НомерСтроки = НомерСтроки;

					Иначе

						Прервать;

					КонецЕсли;

				КонецЕсли;

				СтрокаТаблицы[Позиция.Имя] = ЗначениеЯчейки;
					
				Если Позиция.Текст Тогда

					СтрокаТаблицы[Позиция.Имя] = СокрЛП(СтрокаТаблицы[Позиция.Имя]);

				КонецЕсли;

				Если Позиция.Имя = "СуммаНакопления" И СтрокаТаблицы[Позиция.Имя] = 0 Тогда

					СтрокаТаблицы[Позиция.Имя] = СуммаНакопления;

				КонецЕсли;

			КонецЦикла;

		КонецЦикла;

	//	\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\/

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.НомерСтроки КАК НомерСтроки,
		|	Таблица.КодКарты КАК КодКарты,
		|	Таблица.СуммаНакопления КАК СуммаНакопления
		|ПОМЕСТИТЬ Источник
		|ИЗ
		|	&ТаблицаЗначений КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Ведущая.НомерСтроки КАК НомерСтроки,
		|	ИСТИНА КАК Пометка,
		|	Ведущая.КодКарты КАК КодКарты,
		|	Ведущая.СуммаНакопления КАК СуммаНакопления,
		|	ИнформационныеКарты.Ссылка КАК ИнформационнаяКарта,
		|	ИнформационныеКарты.ВладелецКарты КАК ВладелецКарты,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ИнформационныеКарты.ВидДисконтнойКарты, ЗНАЧЕНИЕ(Справочник.ВидыДисконтныхКарт.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ВидыДисконтныхКарт.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыДисконтныхКарт.ПредварительныеКартыЛояльности)
		|		ИНАЧЕ ИнформационныеКарты.ВидДисконтнойКарты
		|	КОНЕЦ КАК ВидДисконтнойКарты,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ИнформационныеКарты.ВидДисконтнойКарты, ЗНАЧЕНИЕ(Справочник.ВидыДисконтныхКарт.ПредварительныеКартыЛояльности)) = ЗНАЧЕНИЕ(Справочник.ВидыДисконтныхКарт.ПредварительныеКартыЛояльности)
		|			ТОГДА 2
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ИндексКартинки
		|ИЗ
		|	Источник КАК Ведущая
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИнформационныеКарты КАК ИнформационныеКарты
		|		ПО Ведущая.КодКарты = ИнформационныеКарты.КодКарты
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"
		);
		Запрос.УстановитьПараметр("ТаблицаЗначений", ТаблицаЗначений);

		ДанныеКарт.Загрузить(Запрос.Выполнить().Выгрузить());

	Исключение

		ТекстОшибки = ОписаниеОшибки();
		Сообщить(ТекстОшибки);

	КонецПопытки;

КонецПроцедуры

Процедура СоздатьИнформационныеКарты(ТаблицаОстатки)	Экспорт

	Для каждого СтрокаТабличнойЧасти Из ДанныеКарт Цикл

		Если НЕ СтрокаТабличнойЧасти.Пометка Тогда

			Продолжить;

		КонецЕсли;

	//	---------------------------------------------------------------------------------------

		Если СтрокаТабличнойЧасти.ИнформационнаяКарта.Пустая() Тогда

			Если НЕ Справочники.ИнформационныеКарты.НайтиПоРеквизиту("КодКарты", СокрЛП(СтрокаТабличнойЧасти.КодКарты)).Пустая() Тогда

			//	LNK 14.08.2020 07:14:45
				ВызватьИсключение "Прервано! Код карты [" + СокрЛП(СтрокаТабличнойЧасти.КодКарты) + "] обнаружен в справочнике.";

			КонецЕсли;

			КартаОбъект = Справочники.ИнформационныеКарты.СоздатьЭлемент();
			КартаОбъект.УстановитьСсылкуНового(Справочники.ИнформационныеКарты.ПолучитьСсылку());
			КартаОбъект.КодКарты      = СокрЛП(СтрокаТабличнойЧасти.КодКарты);
			КартаОбъект.Наименование  = КартаОбъект.КодКарты;

			КартаОбъект.УстановитьНовыйКод();

			КартаОбъект.ВладелецКарты      = Неопределено;
			КартаОбъект.ВидКарты           = Перечисления.ВидыИнформационныхКарт.Магнитная;
			КартаОбъект.ВидДисконтнойКарты = Справочники.ВидыДисконтныхКарт.ПредварительныеКартыЛояльности;
			КартаОбъект.ТипКарты           = Перечисления.ТипыИнформационныхКарт.Дисконтная;
			КартаОбъект.ДатаОткрытия       = Неопределено;
			КартаОбъект.ДатаСоздания       = ТекущаяДатаСеанса();
			КартаОбъект.Блокирован         = Ложь;

			СтрокаТабличнойЧасти.ИнформационнаяКарта = КартаОбъект.ПолучитьСсылкуНового();

		Иначе

			КартаОбъект = Неопределено;

		КонецЕсли;

		Если НЕ КартаОбъект = Неопределено Тогда

			Если НЕ КартаОбъект = Неопределено Тогда

				КартаОбъект.ОбменДанными.Загрузка = Истина;
				КартаОбъект.Записать();

			КонецЕсли;

		КонецЕсли;

	//	---------------------------------------------------------------------------------------

		Если НЕ СтрокаТабличнойЧасти.СуммаНакопления = 0 Тогда

			СтрокаДокумента = ТаблицаОстатки.Добавить();

			СтрокаДокумента.ДисконтнаяКарта = СтрокаТабличнойЧасти.ИнформационнаяКарта;
			СтрокаДокумента.Сумма			= СтрокаТабличнойЧасти.СуммаНакопления;
			СтрокаДокумента.Количество		= 1 * ?(СтрокаТабличнойЧасти.СуммаНакопления < 0, -1, 1);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

//	\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\/

Процедура ЗаполнитьТаблицуПродажиПоДисконтнымКартам()	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИСТИНА КАК Пометка,
	|	ТаблицаРегистра.Период КАК Период,
	|	ТаблицаРегистра.Регистратор КАК Регистратор,
	|	ТаблицаРегистра.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРегистра.ДисконтнаяКарта,
	|	ТаблицаРегистра.ВладелецДисконтнойКарты,
	|	ТаблицаРегистра.Номенклатура,
	|	ТаблицаРегистра.Сумма,
	|	ТаблицаРегистра.Количество
	|ИЗ
	|	РегистрНакопления.ПродажиПоДисконтнымКартам КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.ВладелецДисконтнойКарты = &ВладелецДисконтнойКарты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор,
	|	НомерСтроки"
	);
	Запрос.УстановитьПараметр("ВладелецДисконтнойКарты", ВладелецКартыТекущий);

	ПродажиПоДисконтнымКартам.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

Процедура ВыполнитьЗаменуВладельцаВРегистреПродажиПоДисконтнымКартам()	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Пометка,
	|	ТабличнаяЧасть.Период,
	|	ТабличнаяЧасть.Регистратор,
	|	ТабличнаяЧасть.НомерСтроки,
	|	ТабличнаяЧасть.ДисконтнаяКарта,
	|	ТабличнаяЧасть.ВладелецДисконтнойКарты,
	|	ТабличнаяЧасть.Номенклатура
	|ПОМЕСТИТЬ Таблица
	|ИЗ
	|	&ТабличнаяЧасть КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Пометка = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Период КАК Период,
	|	Таблица.Регистратор КАК Регистратор,
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.ДисконтнаяКарта,
	|	Таблица.ВладелецДисконтнойКарты,
	|	Таблица.Номенклатура
	|ИЗ
	|	Таблица КАК Таблица
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Регистратор"
	);
	Запрос.УстановитьПараметр("ТабличнаяЧасть", ПродажиПоДисконтнымКартам);
	
	ВедущаяВыборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВедущаяВыборка.Следующий() Цикл

		НаборЗаписей = РегистрыНакопления.ПродажиПоДисконтнымКартам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВедущаяВыборка.Регистратор);
		НаборЗаписей.Прочитать();

		ЕстьИзменение = Ложь;
		ТаблицаНабора = НаборЗаписей.Выгрузить();

		ДеталиВыборка = ВедущаяВыборка.Выбрать();

		Пока ДеталиВыборка.Следующий() Цикл

			СтрокиОтобранные = ТаблицаНабора.НайтиСтроки(Новый Структура(
				"ВладелецДисконтнойКарты, Номенклатура"
				, ВладелецКартыТекущий, ДеталиВыборка.Номенклатура));

			Для каждого СтрокаТаблицы Из СтрокиОтобранные Цикл

				СтрокаТаблицы.ВладелецДисконтнойКарты = ВладелецКартыНовый;
				ЕстьИзменение = Истина;

			КонецЦикла;

		КонецЦикла;

		Если ЕстьИзменение Тогда

			НаборЗаписей.Загрузить(ТаблицаНабора);

			НаборЗаписей.ОбменДанными.Загрузка = Истина;
			НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
			НаборЗаписей.Записать();

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры








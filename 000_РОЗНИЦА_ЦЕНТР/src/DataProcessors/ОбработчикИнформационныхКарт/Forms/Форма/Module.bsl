
#Область ОбработчикиОсновныхСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Сообщить("Отказано! Разрешено использование только в центральном узле.");
		Отказ = Истина;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если НЕ ПустаяСтрока(ИмяТекущейСтраницы) Тогда

		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы[ИмяТекущейСтраницы];

	КонецЕсли;

	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаЗаменаВладельца
		И ЗначениеЗаполнено(Объект.ВладелецКартыТекущий)	Тогда

	//	ОбновитьПродажиПоДисконтнымКартамНаСервере();

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	ИмяТекущейСтраницы = Элементы.СтраницыФормы.ТекущаяСтраница.Имя;

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ЗаписанДокументВводОстатковПоНакопительнымСкидкам" Тогда

		УстановитьТекущуюСуммуНакопления();
		Элементы.ДанныеКарт.Обновить();

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлИмпорта(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФайлИмпортаЗавершение", ЭтотОбъект);
	ДиалогВыбораФайла  = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = "Выберите файл книги Excel";
	ДиалогВыбораФайла.Фильтр = НСтр("ru = 'Лист Excel'") + " (*.xls)|*.xls|" + НСтр("ru = 'Лист Excel2007'") + " (*.xlsx)|*.xlsx";
	ДиалогВыбораФайла.ПолноеИмяФайла = Объект.ПолноеИмяФайла;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;

	ДиалогВыбораФайла.Показать(ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлИмпортаЗавершение(СписокФайлов, ДополнительныеПараметры)	Экспорт

	Если ТипЗнч(СписокФайлов) = Тип("Массив") И НЕ СписокФайлов.Количество() = 0 Тогда

		Объект.ПолноеИмяФайла = СписокФайлов[0];
	
	Иначе

		Сообщить("Выбор не был сделан. Операция не выполнена");
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлИмпорта(Команда)

	ЗагрузитьДанныеИзФайла(
		ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Объект.ПолноеИмяФайла), УникальныйИдентификатор),
		ОбщегоНазначенияКлиентСервер.lx_GetTooken(Объект.ПолноеИмяФайла, ".")
	);

	УстановитьТекущуюСуммуНакопления();
	Элементы.ДанныеКарт.Обновить();

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеИзФайла(АдресВХранилище, Расширение)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗаполнитьТабличнуюЧастьДаннымиФайла(АдресВХранилище, Расширение);

	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура ПрименитьПолученныеДанные(Команда)

	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаГенераторКарт Тогда

		ФормаДокумента = ПолучитьФорму("Документ.ВводОстатковПоНакопительнымСкидкам.ФормаОбъекта");
		ДанныеФормы    = ФормаДокумента.Объект;

		СоздатьИнформационныеКартыНаСервере(ДанныеФормы);

		КопироватьДанныеФормы(ДанныеФормы, ФормаДокумента.Объект);
		ФормаДокумента.Открыть();

	ИначеЕсли Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаМаркетинговыеГруппы Тогда

		СтрокиУдалить = Новый Массив;

		Для каждого СтрокаТаблицы Из МаркетинговыеГруппы Цикл
			
			Если СтрокаТаблицы.Группа.Пустая() Тогда

				СтрокиУдалить.Добавить(СтрокаТаблицы);

			КонецЕсли;

		КонецЦикла;

		Для каждого СтрокаТаблицы Из СтрокиУдалить Цикл

			МаркетинговыеГруппы.Удалить(СтрокаТаблицы);

		КонецЦикла;

		Если ПустаяСтрока(РежимМаркетинговыхГрупп) Тогда

			ВызватьИсключение "Не выбран режим маркетинговых групп!";
		
		ИначеЕсли МаркетинговыеГруппы.Количество() = 0 Тогда

			ВызватьИсключение "Не указан список маркетинговых групп!";

		Иначе

		КонецЕсли;

	Иначе

		ВызватьИсключение "Страница не выбрана!";

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СоздатьИнформационныеКартыНаСервере(ДокументОбъект)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СоздатьИнформационныеКарты(ДокументОбъект.Остатки);

	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

КонецПроцедуры

#Область РаботаСПометкамиТабличныхЧастей

Функция ТекущаяТаблица()

	Возврат ?(Элементы.СтраницыФормы.ТекущаяСтраница.Имя = "СтраницаЗаменаВладельца"
		, "ПродажиПоДисконтнымКартам"
		, "ДанныеКарт");

КонецФункции // ТекущаяТаблица()

&НаКлиенте
Процедура ВыбратьВсеСтроки(Команда)

	ИзменитьПометкуСтрок(Объект[ТекущаяТаблица()], Истина, ТекущаяТаблица());

КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВсеСтроки(Команда)

	ИзменитьПометкуСтрок(Объект[ТекущаяТаблица()], Ложь, ТекущаяТаблица());

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСтрокиВыделенные(Команда)

	ИзменитьПометкуСтрок(Элементы[ТекущаяТаблица()].ВыделенныеСтроки, Истина, ТекущаяТаблица());

КонецПроцедуры

&НаКлиенте
Процедура ИсключитьСтрокиВыделенные(Команда)

	ИзменитьПометкуСтрок(Элементы[ТекущаяТаблица()].ВыделенныеСтроки, Ложь, ТекущаяТаблица());

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПометкуСтрок(Коллекция, Пометка, ИмяТаблицы)

	Для каждого СтрокаКоллекции Из Коллекция Цикл

		Если ТипЗнч(СтрокаКоллекции) = Тип("Число") Тогда

			СтрокаКоллекции = Объект[ИмяТаблицы].НайтиПоИдентификатору(СтрокаКоллекции);

		КонецЕсли;

		СтрокаКоллекции.Пометка = Пометка;

	КонецЦикла;

КонецПроцедуры
	
#КонецОбласти

&НаСервере
Процедура УстановитьТекущуюСуммуНакопления()

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеКарт.НомерСтроки,
	|	ДанныеКарт.КодКарты,
	|	ВЫРАЗИТЬ(ДанныеКарт.ИнформационнаяКарта КАК Справочник.ИнформационныеКарты) КАК ИнформационнаяКарта
	|ПОМЕСТИТЬ Источник
	|ИЗ
	|	&ДанныеКарт КАК ДанныеКарт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Источник.НомерСтроки - 1 КАК Индекс,
	|	Источник.ИнформационнаяКарта,
	|	СУММА(ПродажиПоКартам.СуммаОборот) КАК Сумма
	|ИЗ
	|	Источник КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПродажиПоДисконтнымКартам.Обороты(
	|				,
	|				,
	|				,
	|				ДисконтнаяКарта В
	|					(ВЫБРАТЬ
	|						Источник.ИнформационнаяКарта
	|					ИЗ
	|						Источник КАК Источник)) КАК ПродажиПоКартам
	|		ПО Источник.ИнформационнаяКарта = ПродажиПоКартам.ДисконтнаяКарта
	|ГДЕ
	|	НЕ Источник.ИнформационнаяКарта = ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Источник.ИнформационнаяКарта,
	|	Источник.НомерСтроки - 1"
	);
	Запрос.УстановитьПараметр("ДанныеКарт", Объект.ДанныеКарт.Выгрузить());

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		СтрокаТабличнойЧасти = Объект.ДанныеКарт[Выборка.Индекс];
		СтрокаТабличнойЧасти.СуммаНакопленияТекущая = Выборка.Сумма;

	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПродажиПоДисконтнымКартамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если НЕ Поле = "Пометка" Тогда

		СтандартнаяОбработка = Ложь;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьПродажиПоДисконтнымКартамНаСервере()

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗаполнитьТаблицуПродажиПоДисконтнымКартам();

	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПродажиПоДисконтнымКартам(Команда)

	ОбновитьПродажиПоДисконтнымКартамНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ВладелецКартыТекущийПриИзменении(Элемент)

	ОбновитьПродажиПоДисконтнымКартамНаСервере();

КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаменуВладельцаНаСервере()

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ВыполнитьЗаменуВладельцаВРегистреПродажиПоДисконтнымКартам();

	ОбновитьПродажиПоДисконтнымКартамНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗаменуВладельца(Команда)

	ПоказатьВопрос(Новый ОписаниеОповещения("ВыполнитьЗаменуВладельцаЗавершение", ЭтотОбъект)
		, "Операция необратимая - замена «" + Объект.ВладелецКартыТекущий + "» на  «" + Объект.ВладелецКартыНовый + "»" + Символы.ПС +
		  "Вам необходимо подтвердить выполнение операции."
		, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да
		, "Замена данных в регистре - получение подтверждения"
		, КодВозвратаДиалога.Нет);

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗаменуВладельцаЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда

		ВыполнитьЗаменуВладельцаНаСервере();
		ПоказатьОповещениеПользователя("Замена в регистре выполнена!"
			,, "Владелец «" + Объект.ВладелецКартыТекущий + "» заменён на  «" + Объект.ВладелецКартыНовый + "»"
			, БиблиотекаКартинок.Информация32);

	Иначе

		ПоказатьОповещениеПользователя("Отмена пользователя - операция не выполнена!");

	КонецЕсли;
	
КонецПроцедуры















&НаКлиенте
Процедура ИмяФайлаДанныхНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыборФайла(Элемент, , , );
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаДанныхОткрытие(Элемент, СтандартнаяОбработка)
	ЗапуститьПриложение("explorer " + Элемент.Значение);
	СтандартнаяОбработка = ЛОЖЬ;
КонецПроцедуры

// Открывает диалог выбора файла
//
// Параметры:
//  Элемент                - Элемент управления, для которого выбираем файл
//  ПроверятьСуществование - Если Истина, то выбор отменяется если файл не существует
// 

&НаКлиенте
Процедура ВыборФайла(Элемент, ПроверятьСуществование=Ложь, Знач РасширениеПоУмолчанию = "xml", 
	
	АрхивироватьФайлДанных = Истина, ВыборФайлаПравил = Ложь)
	
	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораФайла.Фильтр						=	"Файл данных (*.xml)|*.xml|Архивный файл данных (*.zip)|*.zip";
	ДиалогВыбораФайла.Расширение					=	"xml";
	
	ДиалогВыбораФайла.Заголовок						=	"Выберите файл";
	ДиалогВыбораФайла.ПредварительныйПросмотр		=	Ложь;
	ДиалогВыбораФайла.ИндексФильтра					=	0;
	ДиалогВыбораФайла.ПолноеИмяФайла				=	Объект.ИмяФайлаДанных;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла	=	ПроверятьСуществование;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Объект.ИмяФайлаДанных = ДиалогВыбораФайла.Каталог;
	КонецЕсли;
	
	
КонецПроцедуры  //ВыборФайла()

&НаКлиенте
Процедура Команда1(Команда)
		
		Если НЕ ЗначениеЗаполнено(Объект.ИмяФайлаДанных) Тогда
		Сообщить("Не выбран файл для выгрузки.");
		Возврат;
	КонецЕсли;
	
	ЗаписатьДанныеXML();
	
	ТекстВопроса = "Выгрузка окончена. Файл создан. Выгружено "
	+КоличествоВыгруженных+" документов."+Символы.ПС+"Не выгружено "+КоличествоНеВыгруженных+" документов.";
	Ответ = Вопрос(ТекстВопроса,РежимДиалогаВопрос.ОК);
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		ЭтотОбъект.Закрыть();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ЗаписатьДанныеXML() Экспорт
	
	ИмяФайлаXML  = Строка(Формат(Объект.ДатаВыгрузки,"ДФ=ddMMyyyyhhmmss"));
	
	ИмяФайла = Объект.ИмяФайлаДанных+"/"+ИмяФайлаXML;
	
	ЗаписьXML = Новый ЗаписьXML;  
	ЗаписьXML.ОткрытьФайл(ИмяФайла);

	ДокументDOM = Новый ДокументDOM("", "root");
	КорневойЭлемент = ДокументDOM.ЭлементДокумента;
	
	КорневойЭлемент.УстановитьАтрибут("filedate",Строка(Формат(Объект.ДатаВыгрузки,"ДЛФ=Д")));
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЧекККМ.Ссылка КАК ЧЕК,
	               |	ЧекККМ.ЗаказПокупателя.IDN КАК НомерЗаказа,
	               |	ЧекККМ.Дата КАК Дата,
	               |	ЧекККМ.ЗаказПокупателя.Контрагент.IDN КАК Контрагент,
	               |	ЧекККМ.Товары.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		Номенклатура,
	               |		Характеристика,
	               |		Количество,
	               |		Цена,
	               |		Сумма,
	               |		СтавкаНДС,
	               |		СуммаНДС,
	               |		ПроцентАвтоматическойСкидки,
	               |		ПроцентРучнойСкидки,
	               |		РегистрацияПродажи,
	               |		Штрихкод,
	               |		Склад,
	               |		КлючСвязиСерийныхНомеров,
	               |		Продавец,
	               |		ПродажаПодарка,
	               |		Упаковка,
	               |		КоличествоУпаковок,
	               |		КлючСвязи,
	               |		СуммаАвтоматическойСкидки,
	               |		СуммаРучнойСкидки,
	               |		СтатусУказанияСерий,
	               |		ПричинаРучнойСкидки,
	               |		АкционнаяЦена
	               |	),
	               |	ЧекККМ.Оплата.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		ВидОплаты,
	               |		ЭквайринговыйТерминал,
	               |		Сумма,
	               |		ПроцентТорговойУступки,
	               |		СуммаТорговойУступки,
	               |		СсылочныйНомер,
	               |		НомерЧекаЭТ,
	               |		НомерПлатежнойКарты,
	               |		ДанныеПереданыВБанк
	               |	),
	               |	ЕСТЬNULL(ВыгруженыеДокументыНаСайт.ИмяФайла, 0) КАК ИмяФайлаXML
	               |ИЗ
	               |	Документ.ЧекККМ КАК ЧекККМ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыгруженыеДокументыНаСайт КАК ВыгруженыеДокументыНаСайт
	               |		ПО ЧекККМ.Ссылка = ВыгруженыеДокументыНаСайт.ЧекККМДокумент
	               |ГДЕ
	               |	ЧекККМ.СтатусЧекаККМ = &СтатусЧекаККМ
	               |ИТОГИ
	               |	МАКСИМУМ(НомерЗаказа),
	               |	МАКСИМУМ(Дата),
	               |	МАКСИМУМ(Контрагент),
	               |	МАКСИМУМ(ИмяФайлаXML)
	               |ПО
	               |	ЧЕК";
				
	Запрос.УстановитьПараметр("СтатусЧекаККМ", Перечисления.СтатусыЧековККМ.Пробитый);
	
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//ТаблицаТР = Запрос.Выполнить().Выгрузить();
	
	КоличествоВыгруженных = 0;
	КоличествоНеВыгруженных = 0;
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		
		Если РезультатЗапроса.ИмяФайлаXML = 0 Тогда
			
			СтрокаЧек = ДокументDOM.СоздатьЭлемент("ЧЕК");
			КорневойЭлемент.ДобавитьДочерний(СтрокаЧек);
			
			
			СтрокаЧек.УстановитьАтрибут("НомерЗаказа",XMLСтрока(РезультатЗапроса.НомерЗаказа));	
			СтрокаЧек.УстановитьАтрибут("Дата",XMLСтрока((РезультатЗапроса.Дата)));
			
			СтрокаКонтрагент = ДокументDOM.СоздатьЭлемент("Контрагент");
			СтрокаЧек.ДобавитьДочерний(СтрокаКонтрагент);
			
			СтрокаКонтрагент.УстановитьАтрибут("user_id",XMLСтрока(РезультатЗапроса.Контрагент));
			
			
			
			
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				ВыборкаОплаты = Выборка.Оплата.Выбрать();
				СтрокаОплатыВерх = ДокументDOM.СоздатьЭлемент("Оплаты");
				СтрокаЧек.ДобавитьДочерний(СтрокаОплатыВерх);
				
				
				Пока ВыборкаОплаты.Следующий() Цикл
					
					СтрокаОплаты = ДокументDOM.СоздатьЭлемент("Оплата");
					СтрокаОплатыВерх.ДобавитьДочерний(СтрокаОплаты);
					
					СтрокаОплаты.УстановитьАтрибут("ТипОплаты",XMLСтрока(ВыборкаОплаты.ВидОплаты.Наименование));
					СтрокаОплаты.УстановитьАтрибут("Сумма",XMLСтрока(ВыборкаОплаты.Сумма));
				КонецЦикла;
				
				
				ВыборкаТОВары = Выборка.Товары.Выбрать();
				СтрокаТоварВерх = ДокументDOM.СоздатьЭлемент("Товары");
				СтрокаЧек.ДобавитьДочерний(СтрокаТоварВерх);
				
				Пока ВыборкаТОВары.Следующий() Цикл
					СтрокаТовар = ДокументDOM.СоздатьЭлемент("Товар");
					СтрокаТоварВерх.ДобавитьДочерний(СтрокаТовар);
					
					СтрокаТовар.УстановитьАтрибут("Склад",XMLСтрока(ВыборкаТОВары.Склад.Наименование));
					СтрокаТовар.УстановитьАтрибут("Товар",XMLСтрока(ВыборкаТОВары.Номенклатура.Код));
					СтрокаТовар.УстановитьАтрибут("Количество",XMLСтрока(ВыборкаТОВары.Количество));
					
					СтрокаТовар.УстановитьАтрибут("Цена",XMLСтрока(ВыборкаТОВары.Цена));
					СтрокаТовар.УстановитьАтрибут("Сумма",XMLСтрока(ВыборкаТОВары.Сумма));
					
					
				КонецЦикла;
				
				
				
				НаборЗаписей = РегистрыСведений.ВыгруженыеДокументыНаСайт.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ЧекККМДокумент.Установить(РезультатЗапроса.Чек);
				НаборЗаписей.Очистить();
				
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Период = Объект.ДатаВыгрузки;
				НоваяЗапись.ЧекККМДокумент =  РезультатЗапроса.Чек;
				НоваяЗапись.ИмяФайла = ИмяФайлаXML;
				
				Попытка
					НаборЗаписей.Записать();
					КоличествоВыгруженных = КоличествоВыгруженных + 1;
				Исключение
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = ОписаниеОшибки();
					Сообщение.Сообщить();
					КоличествоНеВыгруженных = КоличествоНеВыгруженных +1;
					Продолжить;
				КонецПопытки;
				
				
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;
	

	// запись документа
	ЗаписьDOM = Новый ЗаписьDOM();
	ЗаписьDOM.Записать(ДокументDOM, ЗаписьXML);
	
	ЗаписьXML.Закрыть();
	
	Возврат ИмяФайла;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Объект.ДатаВыгрузки = ТекущаяДата();
КонецПроцедуры



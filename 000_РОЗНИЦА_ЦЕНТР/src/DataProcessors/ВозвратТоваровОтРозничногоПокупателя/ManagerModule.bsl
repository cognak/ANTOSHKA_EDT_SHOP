
// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаявлениеНаВозврат") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗаявлениеНаВозврат", 
			"Заявление на возврат", 
			ПечатьЗаявленияНаВозврат(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода),,,Истина);
		
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктОбОшибочноПробитомЧеке") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктОбОшибочноПробитомЧеке", 
			"Акт об ошибочно пробитом чеке", 
			ПечатьАктаОбОшибочноПробитомЧеке(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода),,,Истина);
		
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктОВыдачеДенежныхСредств") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктОВыдачеДенежныхСредств", 
			"Акт о выдаче денежных средств", 
			ПечатьАктаОВыдачеДенежныхСредств(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода),,,Истина);

	КонецЕсли;

КонецПроцедуры


// Функция формирует печатную форму документа.
//
Функция ПечатьЗаявленияНаВозврат(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода)
		
	//КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	КодЯзыкаПечать = "uk";
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Заявление на возврат';uk='Заява на повернення'", КодЯзыкаПечать);

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровОтРозничногоПокупателя_ЗаявлениеНаВозврат";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ВозвратТоваровОтРозничногоПокупателя.ПФ_MXL_ЗаявлениеНаВозврат", КодЯзыкаПечать);

	ОбластьШапка         = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаТоваров = Макет.ПолучитьОбласть("Товар");
	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	
	ПервыйДокумент = Истина;
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	ОбластьШапка.Параметры.Заполнить(ПараметрыПечати);
	МассивРеквезитов   = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ПараметрыПечати.ЧекВозврата,"Организация,ЧекККМПродажа");

	Организация = МассивРеквезитов.Организация;
	//ПричинаВозврата =  МассивРеквезитов.АналитикаХозяйственнойОперации;
	ОрганизацииНаименованиеПолное = 	 ОбщегоНазначения.ПолучитьЗначениеРеквизита(Организация,"НаименованиеПолное");
	
//	ОбластьШапка.Параметры.Кому   = ПараметрыПечати.Кому;
	//ОбластьШапка.Параметры.ОтКого = НСтр("ru='от ';uk='від '", КодЯзыкаПечать) + ПараметрыПечати.ОтКого;
	//Если ЗначениеЗаполнено(ПараметрыПечати.ОтКого) Тогда 
	//	ОбластьШапка.Параметры.ОтКого = НСтр("ru='от ';uk='від '", КодЯзыкаПечать) + ПараметрыПечати.ОтКого;
	//Иначе
	//	ОбластьШапка.Параметры.ОтКого = "____________________________________";
	//КонецЕсли;
	ОбластьШапка.Параметры.Организация 	= ОрганизацииНаименованиеПолное;
	ОбластьШапка.Параметры.ФИОДиректора	= ПолучитьФИОДиректора(Организация);
	//ОбластьШапка.Параметры.ЧекДата 		= Формат(ПараметрыПечати.ЧекДата, "ДЛФ=DD;Л=" + КодЯзыкаПечать);
	Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;
	Адрес = ПолучитьАдресМагазина(Магазин);
	ОбластьШапка.Параметры.АдресОрганизации = Адрес;

	
	//	ОбластьШапка.Параметры.ДатаРождения = Формат(ПараметрыПечати.ДатаРождения, "ДЛФ=DD;Л=" + КодЯзыкаПечать);
	ОбластьПодвал.Параметры.ЧекДата 		= Формат(ПараметрыПечати.ЧекДата, "ДЛФ=DD;Л=" + КодЯзыкаПечать);
//	ОбластьПодвал.Параметры.ПричинаВозврата 		= ПричинаВозврата;
	//Если ПараметрыПечати.ТаблицаНоментклатуры.Количество() >1 Тогда
	//	ОбластьШапка.Параметры.О1 = НСтр("ru='и';uk='ли'", КодЯзыкаПечать);
	//	ОбластьШапка.Параметры.О2 = НСтр("ru='ы';uk='і'", КодЯзыкаПечать);
	//	ОбластьШапка.Параметры.О3 = НСтр("ru='ы';uk='и'", КодЯзыкаПечать);
	//Иначе
	//	ОбластьШапка.Параметры.О1 = НСтр("ru='';uk='в'", КодЯзыкаПечать);
	//	ОбластьШапка.Параметры.О2 = НСтр("ru='';uk='ий'", КодЯзыкаПечать);
	//	ОбластьШапка.Параметры.О3 = "";
	//КонецЕсли;
	
	ТаблицаНоментклатуры = ПараметрыПечати.ТаблицаНоментклатуры.Выгрузить();
	ТаблицаНоментклатуры.Свернуть("Номенклатура, Характеристика, Упаковка","КоличествоУпаковок, Сумма");
	
	СуммаДокумента = ТаблицаНоментклатуры.Итог("Сумма");
	//ОбластьШапка.Параметры.Количество     = ТаблицаНоментклатуры.Количество();
	//ОбластьШапка.Параметры.СуммаДокумента = СуммаДокумента;
		
	ТабличныйДокумент.Вывести(ОбластьШапка);
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);

	Счетчик = 0;
	Сумма = ТаблицаНоментклатуры.Итог("Сумма");
	//СТРОКИ ТЧ
	Для Каждого СтрокаНоменклатури Из ТаблицаНоментклатуры Цикл
		
		Счетчик = Счетчик + 1;
		
		ОбластьСтрокаТоваров.Параметры.Заполнить(СтрокаНоменклатури);
		
		ОбластьСтрокаТоваров.Параметры.Номер            = Счетчик;
		МассивРеквезитовНоменклатуры = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(СтрокаНоменклатури.Номенклатура,"НаименованиеПолное,IDN,Артикул");
		НаименованиеПолное = МассивРеквезитовНоменклатуры.НаименованиеПолное;
		КодТовара = МассивРеквезитовНоменклатуры.IDN;
		Артикул = МассивРеквезитовНоменклатуры.Артикул;
		Если НЕ СтрокаНоменклатури.КоличествоУпаковок = 0 тогда
			Цена = Формат(СтрокаНоменклатури.Сумма/СтрокаНоменклатури.КоличествоУпаковок,"ЧДЦ=2");
		Иначе
			Цена = СтрокаНоменклатури.Сумма;
		КонецЕсли;
		//ОбластьСтрокаТоваров.Параметры.Номенклатура     = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаНоменклатури.НоменклатураНаименованиеПолное, СтрокаНоменклатури.Характеристика);
		ОбластьСтрокаТоваров.Параметры.Артикул 		= Артикул;  
		ОбластьСтрокаТоваров.Параметры.Номенклатура = НаименованиеПолное;  
		ОбластьСтрокаТоваров.Параметры.Цена 	 	= Цена;  
		ОбластьСтрокаТоваров.Параметры.КодТовара 	= КодТовара;  
		//Если СтрокаНоменклатури.Упаковка <> Справочники.УпаковкиНоменклатуры.ПустаяСсылка() Тогда
		//	ОбластьСтрокаТоваров.Параметры.ПредставлениеЕдиницыИзмеренияУпаковки = СтрокаНоменклатури.Упаковка.ЕдиницаИзмерения;
		//Иначе
		//	ОбластьСтрокаТоваров.Параметры.ПредставлениеЕдиницыИзмеренияУпаковки = СтрокаНоменклатури.Номенклатура.ЕдиницаИзмерения;
		//КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьСтрокаТоваров);
	КонецЦикла;
	
	//ОбластьПодвал.Параметры.СуммаДокумента = СуммаДокумента;
	МассивРеквезитовЧекаПродажи   = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(МассивРеквезитов.ЧекККМПродажа,"Номер,Дата,НомерЧекаККМ");

	ОбластьПодвал.Параметры.НомерЧекаККМ = ПараметрыПечати.ЧекНомер;
	ОбластьПодвал.Параметры.ЧекНомер = МассивРеквезитовЧекаПродажи.Номер;
	ОбластьПодвал.Параметры.ЧекДатаВремя =  Формат(МассивРеквезитовЧекаПродажи.Дата,"ДЛФ=T");
	ОбластьПодвал.Параметры.ЧекДата =  Формат(МассивРеквезитовЧекаПродажи.Дата,"ДФ=dd.MM.yyyy");
	ОбластьПодвал.Параметры.CуммаПрописью =  ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма, , КодЯзыкаПечать);
	ОбластьПодвал.Параметры.Организация 	= ОрганизацииНаименованиеПолное;
	ОбластьПодвал.Параметры.Дата = Формат(ПараметрыПечати.Дата, "ДЛФ=DD;Л=" + КодЯзыкаПечать);
	
	//Если ЗначениеЗаполнено(ПараметрыПечати.ОтКого) Тогда 
	//	ОбластьПодвал.Параметры.ОтКого = ПараметрыПечати.ОтКого;
	//Иначе
	//	ОбластьШапка.Параметры.ОтКого = "_____________________";
	//КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует печатную форму документа.
//
Функция ПечатьАктаОбОшибочноПробитомЧеке(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;

	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Акт об ошибочно пробитом чеке';uk='Акт про помилково пробитий чек'", КодЯзыкаПечать);

	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровОтРозничногоПокупателя_АктОбОшибочноПробитомЧеке";	
	
	Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ВозвратТоваровОтРозничногоПокупателя.ПФ_MXL_АктОбОшибочноПробитомЧеке", КодЯзыкаПечать);
	
	ОбластьШапка         = Макет.ПолучитьОбласть("Шапка");
	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	
	
	ОбластьШапка.Параметры.Заполнить(ПараметрыПечати);
	
	ОбластьШапка.Параметры.Дата 		= Формат(ПараметрыПечати.Дата, "ДЛФ=DD;Л=" + КодЯзыкаПечать);
	ОбластьШапка.Параметры.ЧекДата 		= Формат(ПараметрыПечати.ЧекДата, "ДЛФ=DD;Л=" + КодЯзыкаПечать);
	ОбластьШапка.Параметры.ДатаРождения = Формат(ПараметрыПечати.ДатаРождения, "ДЛФ=DD;Л=" + КодЯзыкаПечать);
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ОбластьПодвал.Параметры.Заполнить(ПараметрыПечати);
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует печатную форму документа.
//
Функция ПечатьАктаОВыдачеДенежныхСредств(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода)
	
	//КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	КодЯзыкаПечать = "uk";

	ТабличныйДокумент  = Новый ТабличныйДокумент;
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента   = НСтр("ru='Акт о выдаче денежных средств';uk='Акт про видачу коштів'", КодЯзыкаПечать);
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровОтРозничногоПокупателя_АктОВыдачеДенежныхСредств";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Обработка.ВозвратТоваровОтРозничногоПокупателя.ПФ_MXL_АктОВыдачеДенежныхСредств", КодЯзыкаПечать);

	ОбластьШапка         = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаТоваров = Макет.ПолучитьОбласть("Товар");
	ОбластьПодвал        = Макет.ПолучитьОбласть("Подвал");
	
	НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
	МассивРеквезитов   = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ПараметрыПечати.ЧекВозврата,"Организация,ЧекККМПродажа,Ответственный");
	//ПричинаВозврата =  МассивРеквезитов.АналитикаХозяйственнойОперации;
	Организация = МассивРеквезитов.Организация;
	ОрганизацииНаименованиеПолное = 	 ОбщегоНазначения.ПолучитьЗначениеРеквизита(Организация,"НаименованиеПолное");
	Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;
	Адрес = ПолучитьАдресМагазина(Магазин);
	
	ОбластьШапка.Параметры.Заполнить(ПараметрыПечати);
	ОбластьШапка.Параметры.Дата = Формат(ПараметрыПечати.Дата, "ДЛФ=DD;Л=" + КодЯзыкаПечать);
	ОбластьШапка.Параметры.Организация = ОрганизацииНаименованиеПолное;
	ОбластьШапка.Параметры.Дата = Формат(ПараметрыПечати.Дата, "ДЛФ=DD;Л=" + КодЯзыкаПечать);
	ОбластьШапка.Параметры.АдресОрганизации = Адрес;
	
	//Если ЗначениеЗаполнено(ПараметрыПечати.ОтКого) Тогда 
	//	ОбластьШапка.Параметры.ОтКого = ПараметрыПечати.ОтКого;
	//Иначе
	//	ОбластьШапка.Параметры.ОтКого = "_________________________________________________";
	//КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	
	ТаблицаНоментклатуры = ПараметрыПечати.ТаблицаНоментклатуры.Выгрузить();
	ТаблицаНоментклатуры.Свернуть("Номенклатура, Характеристика, Упаковка","КоличествоУпаковок, Сумма");
	
	Счетчик = 0;
	Сумма = 0;
	//СТРОКИ ТЧ
	Для Каждого СтрокаНоменклатури Из ТаблицаНоментклатуры Цикл
		
		Счетчик = Счетчик + 1;
		
		ОбластьСтрокаТоваров.Параметры.Заполнить(СтрокаНоменклатури);
		
		ОбластьСтрокаТоваров.Параметры.Номер            = Счетчик;
		//ОбластьСтрокаТоваров.Параметры.Номенклатура     = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаНоменклатури.Номенклатура.НаименованиеПолное, СтрокаНоменклатури.Характеристика);
		//Если СтрокаНоменклатури.Упаковка <> Справочники.УпаковкиНоменклатуры.ПустаяСсылка() Тогда
		//	ОбластьСтрокаТоваров.Параметры.ПредставлениеЕдиницыИзмеренияУпаковки = СтрокаНоменклатури.Упаковка.ЕдиницаИзмерения;
		//Иначе
		//	ОбластьСтрокаТоваров.Параметры.ПредставлениеЕдиницыИзмеренияУпаковки = СтрокаНоменклатури.Номенклатура.ЕдиницаИзмерения;
		//КонецЕсли;
		Сумма = Сумма + СтрокаНоменклатури.Сумма;
		
		МассивРеквезитовНоменклатуры = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(СтрокаНоменклатури.Номенклатура,"НаименованиеПолное,IDN,Артикул");
		НаименованиеПолное = МассивРеквезитовНоменклатуры.НаименованиеПолное;
		КодТовара = МассивРеквезитовНоменклатуры.IDN;
		Артикул = МассивРеквезитовНоменклатуры.Артикул;
		Если НЕ СтрокаНоменклатури.КоличествоУпаковок = 0 тогда
			Цена = Формат(СтрокаНоменклатури.Сумма/СтрокаНоменклатури.КоличествоУпаковок,"ЧДЦ=2");
		Иначе
			Цена = СтрокаНоменклатури.Сумма;
		КонецЕсли;
		//ОбластьСтрокаТоваров.Параметры.Номенклатура     = ФормированиеПечатныхФормСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаНоменклатури.НоменклатураНаименованиеПолное, СтрокаНоменклатури.Характеристика);
		ОбластьСтрокаТоваров.Параметры.Артикул 		= Артикул;  
		ОбластьСтрокаТоваров.Параметры.Номенклатура = НаименованиеПолное;  
		ОбластьСтрокаТоваров.Параметры.Цена 	 	= Цена;  
		ОбластьСтрокаТоваров.Параметры.КодТовара 	= КодТовара;  
		
		ТабличныйДокумент.Вывести(ОбластьСтрокаТоваров);
	КонецЦикла;
	
	ОбластьПодвал.Параметры.Заполнить(ПараметрыПечати);
	
	
	
	ОбластьПодвал.Параметры.ЧекДата = Формат(ПараметрыПечати.ЧекДата, "ДЛФ=DD;Л=" + КодЯзыкаПечать);
	//ОбластьПодвал.Параметры.ЧекДатаВозврат = Формат(ПараметрыПечати.ЧекДатаВозврат, "ДЛФ=DD;Л=" + КодЯзыкаПечать);
	// Получим время с корректными приставками в конце в формате: 21 час 22 минуты.
	
	Если ПараметрыПечати.Свойство("ЧекДата") Тогда
		Часов 	= Час(ПараметрыПечати.ЧекДата);
		Минут 	= Минута(ПараметрыПечати.ЧекДата);
		ЕднМин	= Минут % 10; //Единица минут: для 21 = 1.
		ОбластьПодвал.Параметры.ЧекДатаВремя =  Строка(Часов) +  НСтр("ru=' час';uk=' годин'", КодЯзыкаПечать)
		+ ?((Часов > 4 И Часов < 21) ИЛИ Часов = 0, НСтр("ru='ов ';uk=' '", КодЯзыкаПечать), 
		?(Часов = 1 ИЛИ Часов = 21,
		НСтр("ru=' ';uk='а '", КодЯзыкаПечать),
		НСтр("ru='а ';uk='и '", КодЯзыкаПечать)))
		+ Минут + НСтр("ru=' минут';uk=' хвилин'", КодЯзыкаПечать)
		+ ?((Минут > 4 И Минут < 21) ИЛИ ЕднМин = 0 ИЛИ (ЕднМин > 4 И ЕднМин <= 9),
		"",
		?(ЕднМин = 1, "а", НСтр("ru='ы';uk='и'", КодЯзыкаПечать)) );
	КонецЕсли;
	//ОбластьПодвал.Параметры.ПричинаВозврата 		= ПричинаВозврата;
	ОбластьПодвал.Параметры.СуммаПрописью = ФормированиеПечатныхФормСервер.СформироватьСуммуПрописью(Сумма, , КодЯзыкаПечать);
	ОбластьПодвал.Параметры.Сумма = Формат(Сумма,"ЧДЦ=2");
	ОбластьПодвал.Параметры.НомерЧекаККМ = ПараметрыПечати.ЧекНомер;
	ФилЛицоКкассира = ОбщегоНазначения.ПолучитьЗначениеРеквизита(МассивРеквезитов.Ответственный,"ФизЛицо");
	ОбластьПодвал.Параметры.ФИОкассира = ФизическиеЛица.ФамилияИнициалыФизЛица(ФилЛицоКкассира);

	//Если ЗначениеЗаполнено(ПараметрыПечати.ОтКого) Тогда 
	//	ОбластьПодвал.Параметры.ОтКого = ПараметрыПечати.ОтКого;
	//Иначе
	//	ОбластьШапка.Параметры.ОтКого = "/_____________________/";
	//КонецЕсли;
	
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьФИОДиректора(Организация)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование КАК ФизическоеЛицоНаименование
		|ИЗ
		|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
		|			&Период,
		|			Должность = &Должность
		|				И СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаОрганизацийСрезПоследних";
	
	Запрос.УстановитьПараметр("Должность", Справочники.ДолжностиОрганизаций.Директор);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() тогда
		ФИОДиректора = "________________________";
	Иначе	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ФИОДиректора = ВыборкаДетальныеЗаписи.ФизическоеЛицоНаименование;
		КонецЦикла;
	КонецЕсли;
	Возврат ФИОДиректора;

КонецФункции

Функция ПолучитьАдресМагазина(Магазин)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МагазиныКонтактнаяИнформация.Представление КАК Представление
		|ИЗ
		|	Справочник.Магазины.КонтактнаяИнформация КАК МагазиныКонтактнаяИнформация
		|ГДЕ
		|	МагазиныКонтактнаяИнформация.Ссылка = &Магазин
		|	И МагазиныКонтактнаяИнформация.Тип = &Тип";
	
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Адрес = ВыборкаДетальныеЗаписи.Представление;
		КонецЦикла;
	Иначе
		Адрес = "";
	КонецЕсли;
	Возврат Адрес;

КонецФункции
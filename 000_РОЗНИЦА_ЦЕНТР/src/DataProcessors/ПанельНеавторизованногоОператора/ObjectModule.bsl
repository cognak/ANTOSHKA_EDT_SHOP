#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ЗаполнитьТоварыНаСкладах(Номенклатура)	Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Магазины.Ссылка КАК Магазин,
	|	Магазины.НомерМагазина КАК НомерМагазина,
	|	Магазины.ОбособленноеПодразделениеОрганизации КАК ОбособленноеПодразделениеОрганизации
	|ПОМЕСТИТЬ Фильтр
	|ИЗ
	|	Справочник.Магазины КАК Магазины
	|ГДЕ
	|	Магазины.ВведенВЭксплуатацию
	|	И НЕ Магазины.Блокирован
	|	И НЕ Магазины.ПометкаУдаления
	|	И НЕ Магазины.СкладУправляющейСистемы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладах.Склад КАК Склад,
	|	ТоварыНаСкладах.Склад.Магазин КАК Магазин,
	|	ТоварыНаСкладах.КоличествоОстаток КАК Количество,
	|	Фильтр.НомерМагазина КАК НомерМагазина,
	|	ИСТИНА КАК РеальныеОстатки,
	|	Фильтр.ОбособленноеПодразделениеОрганизации КАК ОбособленноеПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА Фильтр.Магазин = &ТекущийМагазин
	|			ТОГДА 2
	|		КОГДА Фильтр.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КлючПорядка
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			,
	|			Номенклатура = &Номенклатура
	|				И Склад.Магазин В
	|					(ВЫБРАТЬ
	|						Фильтр.Магазин
	|					ИЗ
	|						Фильтр)) КАК ТоварыНаСкладах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Фильтр КАК Фильтр
	|		ПО ТоварыНаСкладах.Склад.Магазин = Фильтр.Магазин
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	ИнформативныеОстатки.Магазин,
	|	ИнформативныеОстатки.Количество,
	|	Фильтр.НомерМагазина,
	|	ЛОЖЬ,
	|	Фильтр.ОбособленноеПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА Фильтр.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ
	|ИЗ
	|	РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам КАК ИнформативныеОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Фильтр КАК Фильтр
	|		ПО ИнформативныеОстатки.Магазин = Фильтр.Магазин
	|ГДЕ
	|	&ГлавныйУзел = ЛОЖЬ
	|	И ИнформативныеОстатки.Номенклатура = &Номенклатура
	|	И ИнформативныеОстатки.Магазин В
	|			(ВЫБРАТЬ
	|				Фильтр.Магазин
	|			ИЗ
	|				Фильтр)
	|	И НЕ ИнформативныеОстатки.Магазин = &ТекущийМагазин
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка УБЫВ,
	|	НомерМагазина"
	);
	Запрос.УстановитьПараметр("Номенклатура"  , Номенклатура);
	Запрос.УстановитьПараметр("ТекущийМагазин", Магазин);
	Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	Запрос.УстановитьПараметр("ГлавныйУзел"   , ОбменДаннымиПовтИсп.ЭтоГлавныйУзел());
	
	ТоварыНаСкладах.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

Функция СформироватьОрдерНаПеремещениеТоваров(ТекстСообщения)	Экспорт

	УстановитьПривилегированныйРежим(Истина);

	ПараметрыСеанса.ИсключительныйРежим = Истина;
	ПараметрыСеанса.ВыполняютсяСлужебныеДействия = Истина;

	ДокументПроведен = Ложь;

	Попытка

		ДокументОбъект = Документы.ОрдерНаПеремещениеТоваров.СоздатьДокумент();

		ДокументОбъект.Дата = ТекущаяДатаСеанса();
		ДокументОбъект.Организация = Справочники.Магазины.РеквизитыМагазина(Магазин, ТекущаяДата()).Организация;
		ДокументОбъект.Магазин     = Магазин;
		ДокументОбъект.СкладОтправитель = СкладОтправитель;
		ДокументОбъект.СкладПолучатель  = СкладПолучатель;

		ДокументОбъект.Товары.Загрузить(Товары.Выгрузить());
		
		ДокументОбъект.ДополнительныеСвойства.Вставить("РегистрацияПередачиВNavision", Истина);
		ДокументОбъект.ДополнительныеСвойства.Вставить("СлужебнаяЗапись", Истина);

		ДокументПроведен = ДокументОбъект.ПроверитьЗаполнение();

		Если ДокументПроведен Тогда

			ДокументПроведен = Ложь;

			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);

			ДокументПроведен = ДокументОбъект.Проведен;

		Иначе

			ТекстСообщения = "Ошибка проверки заполнения документа!";

		КонецЕсли;

	Исключение

		ТекстСообщения = "Ошибка: " + ОписаниеОшибки();

	КонецПопытки;

	ПараметрыСеанса.ИсключительныйРежим = Ложь;
	ПараметрыСеанса.ВыполняютсяСлужебныеДействия = Ложь;

	Возврат ДокументПроведен;

КонецФункции // СформироватьОрдерНаПеремещениеТоваров()

#КонецЕсли


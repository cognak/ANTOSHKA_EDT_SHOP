
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
		Если Источник = "ПодключаемоеОборудование" И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда

			Если Параметр[1] = Неопределено Тогда
				ТекКод = Параметр[0];
				ТекКодПриИзменении(1);
			Иначе
				ТекКод = Параметр[1][1];
				ТекКодПриИзменении(1);   
			КонецЕсли;
			
		КонецЕсли;	
		КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ТекКодПриИзменении(Элемент)
	ТекКодОбработка(ТекКод);
	ТекКод = "";

	ПодключитьОбработчикОжидания("УстановитьТекущийЭлементЗавершение", 0.1, Истина);
КонецПроцедуры


&НаКлиенте
Процедура УстановитьТекущийЭлементЗавершение()

	ТекущийЭлемент = Элементы.ТекКод;

КонецПроцедуры



&НаКлиенте
Процедура ТекКодОбработка(ТекКод)
	
	Сотрудник = ПолучитьСотрудника(ТекКод); 
	
	Если ЗначениеЗаполнено(Сотрудник) тогда
		СделатьЗаписьВрегистр();
		Оповестить("Отметка сотрудника зарегистрирована!");
	КонецЕсли;
	
КонецПроцедуры


&НаСервере()
Функция ПолучитьСотрудника(ТекКод)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Штрихкоды.Владелец.ВладелецКарты КАК Владелец
		|ИЗ
		|	РегистрСведений.Штрихкоды КАК Штрихкоды
		|ГДЕ
		|	Штрихкоды.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", ТекКод);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Владелец;
	КонецЦикла;
	
КонецФункции

&НаСервере()
Процедура СделатьЗаписьВрегистр()
	Попытка
		УстановитьПривилегированныйРежим(Истина);
		ТипВремени = ПолучитьТипВремени();
			
		текДАта =ТекущаяДата();	
		Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;
		Организация = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Магазин,"Организация");
		НаборЗаписей = РегистрыСведений.УчетРабочегоВремениФакт.СоздатьНаборЗаписей(); 

		НаборЗаписей.Отбор.Организация.Установить(Организация);
		НаборЗаписей.Отбор.Магазин.Установить(Магазин); 
		НаборЗаписей.Отбор.Сотрудник.Установить(Сотрудник); 
		НаборЗаписей.Отбор.период.Установить(текДАта); 
		НаборЗаписей.Отбор.ТипВремени.Установить(ТипВремени); 
		НовЗапись = НаборЗаписей.Добавить();
		НовЗапись.Организация = Организация;
		НовЗапись.Магазин = Магазин;
		НовЗапись.Сотрудник = Сотрудник;
		НовЗапись.период = текДАта;
		НовЗапись.ЗаписаноЗаданием = Ложь;
		НовЗапись.ТипВремени = ТипВремени;
		НаборЗаписей.Записать(Истина);
		УстановитьПривилегированныйРежим(Ложь);
	Исключение
		УстановитьПривилегированныйРежим(Ложь);
	КонецПопытки;
КонецПроцедуры


&НаСервере()
Функция ПолучитьТипВремени()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	УчетРабочегоВремениФакт.ТипВремени КАК ТипВремени,
		|	УчетРабочегоВремениФакт.Период КАК Период
		|ИЗ
		|	РегистрСведений.УчетРабочегоВремениФакт КАК УчетРабочегоВремениФакт
		|ГДЕ
		|	УчетРабочегоВремениФакт.Сотрудник = &Сотрудник
		|	И УчетРабочегоВремениФакт.Период МЕЖДУ &ПериодС И &ПериодПо
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("ПериодПо", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ПериодС", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() тогда 
		ТипВремени = Перечисления.ТипВремени.Приход;
	КонецЕсли;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.ТипВремени = Перечисления.ТипВремени.Приход тогда
			ТипВремени = Перечисления.ТипВремени.Уход;
		Иначе
			ТипВремени = Перечисления.ТипВремени.Приход;
		КонецЕсли;
	КонецЦикла;
	Возврат ТипВремени;
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОписаниеОшибки = "";
			
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	
	МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки);				

КонецПроцедуры


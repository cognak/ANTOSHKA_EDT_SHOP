
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
 	Организация = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику().ОсновнаяОрганизация;
 	Ответственный = ПараметрыСеанса.ТекущийПользователь;
	ЗаполнитьМагазины();
КонецПроцедуры

&НаСервере 
Процедура ЗаполнитьМагазины()
	
	Магазины.Очистить();
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Магазины.Ссылка КАК Магазин,
	|	ИСТИНА КАК Выбран
	|ИЗ
	|	РегистрСведений.ОрганизацииПодразделений.СрезПоследних(&Период, ) КАК ТаблицаОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Магазины КАК Магазины
	|		ПО ТаблицаОрганизаций.Владелец = Магазины.Ссылка
	|ГДЕ
	|	ТаблицаОрганизаций.Организация = &Организация
	|	И Магазины.ВведенВЭксплуатацию = ИСТИНА
	|	И НЕ(Магазины.Блокирован
	|				ИЛИ Магазины.ПометкаУдаления)"
	);
	Запрос.УстановитьПараметр("Период"		, ТекущаяДата());
	Запрос.УстановитьПараметр("Организация"	, Организация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Магазины.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

&НаСервере
Функция СоздатьДокументыНаСервере()
	
	Если РекламныеПлоскости.Количество() = 0 тогда 
		Сообщить("Заполните рекламные плоскости");
		Успешно = Ложь;
	Иначе
		Успешно = Истина;
		Для Каждого Строка из Магазины цикл
			Если Строка.Выбран тогда
				Для каждого РекламнаяПлоскость из РекламныеПлоскости цикл
					Спр 						= Справочники.РекламныеПлоскости.СоздатьЭлемент();
					Спр.Наименование 			= РекламнаяПлоскость.Наименование;
					Спр.Ширина 					= РекламнаяПлоскость.Ширина;
					Спр.Высота 					= РекламнаяПлоскость.Высота;
					Спр.Глубина 				= РекламнаяПлоскость.Глубина;
					Спр.ВидРекламныхПлоскостей 	= РекламнаяПлоскость.ВидРекламныхПлоскостей;
					Спр.Владелец			 	= Строка.Магазин;					
					Спр.Записать();
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат Успешно;	
КонецФункции

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	Если	СоздатьДокументыНаСервере()  тогда
		Сообщить("Плоскости созданы успешно!");
		РекламныеПлоскости.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаСПриИзменении(Элемент)
	РасчитатьКоличествоДней()   
КонецПроцедуры


&НаКлиенте
Процедура РасчитатьКоличествоДней()
	Если ЗначениеЗаполнено(ДатаС) и  ЗначениеЗаполнено(ДатаПо) тогда		
		КоличествоДней = (ДатаПо - ДатаС)/(24*60*60);
	Иначе
		КоличествоДней = 0;
	КонецЕсли;
	ПересчитатьНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПересчитатьНаСервере()
	//Для Каждого Строка из РекламныеПлоскости цикл
	//	Строка.Цена = Цена;
	//	Строка.Сумма = Строка.Количество * Строка.Цена * КоличествоДней;		
	//КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПоПриИзменении(Элемент)
	РасчитатьКоличествоДней()   
КонецПроцедуры

&НаКлиенте
Процедура РекламныеМатериалыКоличествоПриИзменении(Элемент)
	ТекДанные 		= Элементы.РекламныеМатериалы.ТекущиеДанные;
	ТекДанные.Сумма =  ТекДанные.Количество*Цена*КоличествоДней;
	Текданные.Цена 	= Цена;
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	ПересчитатьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура флДа(Команда)
	Для Каждого Строка из Магазины Цикл
		Строка.Выбран = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура флНет(Команда)
	Для Каждого Строка из Магазины Цикл
		Строка.Выбран = Ложь;
	КонецЦикла; 
КонецПроцедуры



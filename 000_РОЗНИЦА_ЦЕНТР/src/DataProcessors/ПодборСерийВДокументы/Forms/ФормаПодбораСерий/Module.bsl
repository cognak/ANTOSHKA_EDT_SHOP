&НаКлиенте
Перем КэшированныеЗначения;  //используется механизмом обработки изменения реквизитов ТЧ

&НаКлиенте
Перем ТекущееКоличество; //кеш количества в текущей строке для расчета количества серий

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
              
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	
	Склад       = Параметры.Склад;
	Помещение   = Параметры.Помещение;
	Регистратор = Параметры.Регистратор;
	АдресВоВременномХранилище = Параметры.АдресВоВременномХранилище;
	ПараметрыУказанияСерий = Параметры.ПараметрыУказанияСерий;
	
	СтруктураИзХранилища = ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище);
	
	Объект.ТоварыКешДокумента.Загрузить(СтруктураИзХранилища.ТаблицаТоваров);
	Объект.СерииКешДокумента.Загрузить(СтруктураИзХранилища.ТаблицаСерий);
	
	ПоляПоиска = "Номенклатура,Характеристика";
	
	Если ПараметрыУказанияСерий.ПоляСвязи.Найти("Склад") <> Неопределено Тогда
		ПоляПоиска = ПоляПоиска + ",Склад";
	КонецЕсли;
	
	Если ПараметрыУказанияСерий.ПоляСвязи.Найти("ДокументРезерваСерий") <> Неопределено Тогда
		ПоляПоиска = ПоляПоиска + ",ДокументРезерваСерий";
	КонецЕсли;
	
	Если ПараметрыУказанияСерий.ПоляСвязи.Найти("УказыватьСерии") <> Неопределено Тогда
		ПоляПоиска = ПоляПоиска + ",КлючУникальности";
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура(ПоляПоиска);

	ЗаполнитьЗначенияСвойств(СтруктураПоиска,Параметры);
	
	НомерТекущейСтрокиТоваров = Объект.ТоварыКешДокумента.НайтиСтроки(СтруктураПоиска)[0].НомерСтроки;
	
	Инициализировать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьКнопокВпередНазад();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Модифицированность Тогда

		Ответ = Вопрос(НСтр("ru = 'Список серий был изменен.
				|Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);

		Если Ответ = КодВозвратаДиалога.Да Тогда

			Отказ = Истина;
			СтандартнаяОбработка = Ложь;
			ЗавершитьВводСерий(Неопределено);// Сохранение результатов модификации.
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда

			Отказ = Истина;
			СтандартнаяОбработка = Ложь;

		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_СерииНоменклатуры" Тогда
		ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ТекущиеДанные.Серия = Источник;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,Параметр);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ СЕРИИ

&НаКлиенте
Процедура СерииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле = Элементы.СерииСерия Тогда
		ИзменитьСериюКлиент();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииКоличествоУпаковокПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	ТекущиеДанные.Количество = ТекущиеДанные.КоличествоУпаковок;
	
КонецПроцедуры

&НаКлиенте
Процедура СерииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Копирование Тогда
		ТекущееКоличество = 0;
	Иначе
		ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
	КонецЕсли;
	
	Если НоваяСтрока
		И Не ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
		
		
		ТекущиеДанные.КоличествоУпаковок = 1;
		ТекущиеДанные.Количество         = 1;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Не ОтменаРедактирования Тогда
		Дельта = ТекущееКоличество - Элементы.Серии.ТекущиеДанные.КоличествоУпаковок;
		КоличествоСерий = КоличествоСерий - Дельта;
		Элементы.Серии.ТекущиеДанные.СвободныйОстаток = Элементы.Серии.ТекущиеДанные.СвободныйОстаток + Дельта;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущееКоличество =  ТекущиеДанные.Количество;
КонецПроцедуры

&НаКлиенте
Процедура СерииПослеУдаления(Элемент)
	КоличествоСерий = КоличествоСерий - ТекущееКоличество;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВводСерий(Команда)
	ОчиститьСообщения();
    СохранитьВводСерийСервер();
	Если Не Модифицированность Тогда
		Закрыть(АдресВоВременномХранилище);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СледующаяСтрока(Команда)
	ИзменитьТекущуюСтроку(1);
	УстановитьДоступностьКнопокВпередНазад();
КонецПроцедуры

&НаКлиенте
Процедура ПредыдущаяСтрока(Команда)
	ИзменитьТекущуюСтроку(-1);
	УстановитьДоступностьКнопокВпередНазад();
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьДополнительныеРеквизиты(Команда)
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияСерии = Новый Структура;
	ЗначенияЗаполненияСерии.Вставить("ВидНоменклатуры", ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
	ЗначенияЗаполненияСерии.Вставить("Номер", ТекущиеДанные.Номер);
	ЗначенияЗаполненияСерии.Вставить("ГоденДо", ТекущиеДанные.ГоденДо);
	
	ПараметрыФормыСерии = Новый Структура;
	ПараметрыФормыСерии.Вставить("ЗначенияЗаполнения",ЗначенияЗаполненияСерии);
	ПараметрыФормыСерии.Вставить("Ключ",ТекущиеДанные.Серия);
	
	ОткрытьФормуМодально("Справочник.СерииНоменклатуры.Форма.ФормаЭлемента",ПараметрыФормыСерии, ЭтотОбъект);
		
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура СохранитьВводСерийВКеше()
	
	ТаблицаСерий = Объект.Серии.Выгрузить();
	
	ТаблицаСерий.Свернуть("Серия,Номер,ГоденДо", "Количество,КоличествоУпаковок");
	
	Индекс = ТаблицаСерий.Количество();
	
	Пока Индекс > 0 Цикл
		Индекс = Индекс - 1;
		СтрТабл = ТаблицаСерий[Индекс];
		Если СтрТабл.КоличествоУпаковок = 0 Тогда
			ТаблицаСерий.Удалить(СтрТабл);
		КонецЕсли;
	КонецЦикла;
	
	ЭтоЗаказ = Ложь;
	
	Если Не ПараметрыУказанияСерий.Свойство("ЭтоЗаказ",ЭтоЗаказ) Тогда
		ЭтоЗаказ = Ложь;
	КонецЕсли;
	
	
	СтрокаТоваров = Объект.ТоварыКешДокумента[НомерТекущейСтрокиТоваров-1];
	
	ТекстПоляПоиска = "";
	
	Для Каждого СтрМас из ПараметрыУказанияСерий.ПоляСвязи Цикл
		ТекстПоляПоиска = ТекстПоляПоиска + ", " + СтрМас;
	КонецЦикла;
	
	СтруктураПоиска = Новый Структура("Номенклатура,Характеристика" + ТекстПоляПоиска);
	
	ЗаполнитьЗначенияСвойств(СтруктураПоиска,СтрокаТоваров);
	
	НайденныеСтрокиСерий = Объект.СерииКешДокумента.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого СтрТабл из НайденныеСтрокиСерий Цикл
		Объект.СерииКешДокумента.Удалить(СтрТабл);
	КонецЦикла;
	
	Для Каждого СтрТабл Из ТаблицаСерий Цикл
		НоваяСтрока = Объект.СерииКешДокумента.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТоваров);
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрТабл);
		НоваяСтрока.УказыватьСерии = Истина;
	КонецЦикла;
	
	Если ЭтоЗаказ Тогда
		Если ТаблицаСерий.Количество() > 0 Тогда
			СтрокаТоваров.УказыватьСерии = Истина;
		Иначе
			СтрокаТоваров.УказыватьСерии = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьВводСерийСервер()
	
 	СохранитьВводСерийВКеше();
	
	СтруктураВозврата = Новый Структура;
	ТаблицаСерий = Объект.СерииКешДокумента.Выгрузить();
	ТаблицаСерий.Свернуть("Номенклатура,Характеристика,НоменклатураОприходование,ХарактеристикаОприходование,Упаковка,Склад,ДокументРезерваСерий,УказыватьСерии,Серия", "Количество,КоличествоУпаковок");
	СтруктураВозврата.Вставить("ТаблицаСерий", ТаблицаСерий);
	
	ЭтоЗаказ = Ложь;
	
	Если Не ПараметрыУказанияСерий.Свойство("ЭтоЗаказ",ЭтоЗаказ) Тогда
		ЭтоЗаказ = Ложь;
	КонецЕсли;
	
	Если ЭтоЗаказ Тогда
		СтруктураВозврата.Вставить("ТаблицаТоваров", Объект.ТоварыКешДокумента.Выгрузить());
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(СтруктураВозврата,АдресВоВременномХранилище);
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКнопокВпередНазад()
	Если  НомерТекущейСтрокиТоваров > 1 Тогда
		Элементы.ГруппаКнопкаНазад.ТекущаяСтраница = Элементы.СтраницаКнопкаНазад;
	Иначе
		Элементы.ГруппаКнопкаНазад.ТекущаяСтраница = Элементы.СтраницаКнопкаНазадПустая;
	КонецЕсли;
	
	Если НомерТекущейСтрокиТоваров < Объект.ТоварыКешДокумента.Количество() Тогда
		Элементы.ГруппаКнопкаВперед.ТекущаяСтраница = Элементы.СтраницаКнопкаВперед;
	Иначе
		Элементы.ГруппаКнопкаВперед.ТекущаяСтраница = Элементы.СтраницаКнопкаВпередПустая;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура Инициализировать()
	Если НомерТекущейСтрокиТоваров < 1 
		Или НомерТекущейСтрокиТоваров > Объект.ТоварыКешДокумента.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьУпаковки = ПараметрыУказанияСерий.ПоляСвязи.Найти("Упаковка") <> Неопределено;
	ЕстьПризнакУказанияСерий = ПараметрыУказанияСерий.ПоляСвязи.Найти("УказыватьСерии") <> Неопределено;
	ЕстьДокументРезерваСерий = ПараметрыУказанияСерий.ПоляСвязи.Найти("ДокументРезерваСерий") <> Неопределено;
	
	ЭтоОрдер = Ложь;
	Если Не ПараметрыУказанияСерий.Свойство("ЭтоОрдер", ЭтоОрдер) Тогда
		ЭтоОрдер = Ложь;
	КонецЕсли;
	
	СтрокаТоваров = Объект.ТоварыКешДокумента[НомерТекущейСтрокиТоваров-1];
	
	Количество = СтрокаТоваров.Количество;
	НомераСтрокПредставление = СтрокаТоваров.НомераСтрокДокумента;
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаТоваров.Номенклатура, 
	                        Новый Структура("ВидНоменклатуры, ЕдиницаИзмеренияПредставление","ВидНоменклатуры","ЕдиницаИзмерения.Наименование"));
	
	ПараметрыУчетнойПолитикиСерий = Новый ФиксированнаяСтруктура(
		ЗначениеНастроекПовтИсп.ПараметрыПолитикиУчетаСерийПоВидуНоменклатуры(РеквизитыНоменклатуры.ВидНоменклатуры,Магазин));
	
	Если Не ПараметрыУчетнойПолитикиСерий.ИспользоватьСерии Тогда
		ТекстИсключения = НСтр("ru = 'Для вида номенклатуры ""%ВидНоменклатуры%"" серии не используются'");
		
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ВидНоменклатуры%",РеквизитыНоменклатуры.ВидНоменклатуры);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	ЗаголовокКоличествоВДокументе = НСтр("ru = 'Необходимо для отгрузки, %ЕдиницаИзмерения%'");
	ЗаголовокКоличествоСерий      = НСтр("ru = 'Подобрано из серий, %ЕдиницаИзмерения%'");
	ЗаголовокКолонкиКоличество    = НСтр("ru = 'К отгрузке, %ЕдиницаИзмерения%'"); 
	
	ТоварПредставление = НСтр("ru = '%ПредставлениеТовара%'");
	
	ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	
	Если ЕстьДокументРезерваСерий
		И ЗначениеЗаполнено(СтрокаТоваров.ДокументРезерваСерий) Тогда
		ЗаголовокСвободногоОстатка = НСтр("ru = 'Остаток по заказу, %ЕдиницаИзмерения%'");
		Заголовок                  = НСтр("ru = 'Подбор по резервам серий'");
	Иначе
		ЗаголовокСвободногоОстатка = НСтр("ru = 'Свободный остаток, %ЕдиницаИзмерения%'");
		Заголовок                  = НСтр("ru = 'Подбор по остаткам серий на складе'");
	КонецЕсли;
	
	ЗаголовокСвободногоОстатка = СтрЗаменить(ЗаголовокСвободногоОстатка,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	
	ТоварПредставление = СтрЗаменить(ТоварПредставление,"%ПредставлениеТовара%",ОбщегоНазначенияРТ.ПолучитьПредставлениеНоменклатуры(СтрокаТоваров.Номенклатура, СтрокаТоваров.Характеристика));
	
	Элементы.СерииКоличествоУпаковок.Заголовок = ЗаголовокКолонкиКоличество;
	Элементы.СерииСвободныйОстаток.Заголовок   = ЗаголовокСвободногоОстатка;
	Элементы.Количество.Заголовок              = ЗаголовокКоличествоВДокументе;
	Элементы.КоличествоСерий.Заголовок         = ЗаголовокКоличествоСерий;
	
	Элементы.СерииНомер.Видимость              = ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии;
	Элементы.СерииГоденДо.Видимость            = ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии;
	Элементы.СерииКоличествоУпаковок.Видимость = ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии;
	
	Если ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.СерииГоденДо.Формат = ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности;
		Если ПараметрыУчетнойПолитикиСерий.ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоДней Тогда
			Элементы.СерииГоденДо.Заголовок = НСтр("ru = 'Годен до (дата)'");
		Иначе
			Элементы.СерииГоденДо.Заголовок = НСтр("ru = 'Годен до (дата, час)'");
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	ТаблицаСерий.Количество,";
	Если ЕстьПризнакУказанияСерий Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|  	ТаблицаСерий.УказыватьСерии, ";
	КонецЕсли;
	Если ЕстьУпаковки Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ТаблицаСерий.КоличествоУпаковок ";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	ТаблицаСерий.Количество КАК КоличествоУпаковок ";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|ГДЕ
	|  	ТаблицаСерий.Номенклатура = &Номенклатура
	|  	И ТаблицаСерий.Характеристика = &Характеристика";
	Если ЕстьДокументРезерваСерий Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|  	И ТаблицаСерий.ДокументРезерваСерий = &ДокументРезерваСерий";
	КонецЕсли;
	ТекстЗапроса = 	ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерийСОстатками.Серия КАК Серия,
	|	ТаблицаСерийСОстатками.Серия.Номер КАК Номер,
	|	ТаблицаСерийСОстатками.Серия.ГоденДо КАК ГоденДо,
	|	СУММА(ТаблицаСерийСОстатками.Количество) КАК Количество,
	|	СУММА(ТаблицаСерийСОстатками.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ТаблицаСерийСОстатками.СвободныйОстаток) КАК СвободныйОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСерий.Серия КАК Серия,";
	Если ЕстьПризнакУказанияСерий Тогда
	ТекстЗапроса = 	ТекстЗапроса + "
	|		ВЫБОР КОГДА ТаблицаСерий.УказыватьСерии = &УказыватьСерии
	|				ТОГДА ТаблицаСерий.Количество
	|				ИНАЧЕ 0
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР КОГДА ТаблицаСерий.УказыватьСерии = &УказыватьСерии
	|				ТОГДА ТаблицаСерий.КоличествоУпаковок
	|				ИНАЧЕ 0
	|		КОНЕЦ КАК КоличествоУпаковок,";
	Иначе	
	ТекстЗапроса = 	ТекстЗапроса + "
	|		ТаблицаСерий.Количество КАК Количество,
	|		ТаблицаСерий.КоличествоУпаковок КАК КоличествоУпаковок,";
	КонецЕсли;
	ТекстЗапроса = 	ТекстЗапроса + "
	|		-ТаблицаСерий.Количество КАК СвободныйОстаток
	|	ИЗ
	|		ТаблицаСерий КАК ТаблицаСерий
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыНаСкладахОстатки.Серия,
	|		0,
	|		0,";
	Если  ИмяРегистра = "РезервыСерийТоваров" Тогда
		ТекстЗапроса = 	ТекстЗапроса + "
	|		ТоварыНаСкладахОстатки.КоличествоОстаток";
	Иначе
		ТекстЗапроса = 	ТекстЗапроса + "
	|		ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.ВРезервеОстаток";
	КонецЕсли;
		ТекстЗапроса = 	ТекстЗапроса + "
	|	ИЗ
	|		РегистрНакопления."+ИмяРегистра+".Остатки(
	|				,
	|				Номенклатура = &Номенклатура
	|					И Характеристика = &Характеристика
	|					И Склад = &Склад";
	Если ИмяРегистра = "ТоварыНаСкладах" Тогда
		ТекстЗапроса = 	ТекстЗапроса + "
	|					И Помещение = &Помещение";
	ИначеЕсли  ИмяРегистра = "РезервыСерийТоваров" Тогда 
		ТекстЗапроса = 	ТекстЗапроса + "
	|					И ДокументРезерва = &ДокументРезерваСерий";
	КонецЕсли;
		ТекстЗапроса = 	ТекстЗапроса + "
	|					И Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ТоварыНаСкладахОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыНаСкладах.Серия,
	|		0,
	|		0,";
	Если  ИмяРегистра = "РезервыСерийТоваров" Тогда
		ТекстЗапроса = 	ТекстЗапроса + "
	|		ТоварыНаСкладах.Количество";
	Иначе
		ТекстЗапроса = 	ТекстЗапроса + "
	|		ВЫБОР
	|			КОГДА ТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ТоварыНаСкладах.ВРезерве
	|			ИНАЧЕ ТоварыНаСкладах.ВНаличии
	|		КОНЕЦ";
	КонецЕсли;
	ТекстЗапроса = 	ТекстЗапроса + "
	|	ИЗ
	|		РегистрНакопления."+ИмяРегистра+" КАК ТоварыНаСкладах
	|	ГДЕ
	|		ТоварыНаСкладах.Регистратор = &Регистратор
	|		И ТоварыНаСкладах.Склад = &Склад";
	Если ИмяРегистра = "ТоварыНаСкладах" Тогда
		ТекстЗапроса = 	ТекстЗапроса + "
	|		И ТоварыНаСкладах.Помещение = &Помещение";
	ИначеЕсли  ИмяРегистра = "РезервыСерийТоваров" Тогда 
		ТекстЗапроса = 	ТекстЗапроса + "
	|					И ТоварыНаСкладах.ДокументРезерва = &ДокументРезерваСерий";
	КонецЕсли;
	ТекстЗапроса = 	ТекстЗапроса + "
	|		И ТоварыНаСкладах.Номенклатура = &Номенклатура
	|		И ТоварыНаСкладах.Характеристика = &Характеристика
	|		И ТоварыНаСкладах.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ТаблицаСерийСОстатками
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерийСОстатками.Серия,
	|	ТаблицаСерийСОстатками.Серия.Номер,
	|	ТаблицаСерийСОстатками.Серия.ГоденДо
	|
	|ИМЕЮЩИЕ
	|	(СУММА(ТаблицаСерийСОстатками.Количество) > 0
	|		ИЛИ СУММА(ТаблицаСерийСОстатками.СвободныйОстаток) > 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо,
	|	Номер";
	
	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("ТаблицаСерий",Объект.СерииКешДокумента.Выгрузить());
	Запрос.УстановитьПараметр("Номенклатура",СтрокаТоваров.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",СтрокаТоваров.Характеристика);
	Запрос.УстановитьПараметр("Магазин", Магазин);
	
	Если ЕстьПризнакУказанияСерий Тогда
		Запрос.УстановитьПараметр("УказыватьСерии",СтрокаТоваров.УказыватьСерии);		
	КонецЕсли;	
	
	Если ЕстьДокументРезерваСерий Тогда
		Запрос.УстановитьПараметр("ДокументРезерваСерий",СтрокаТоваров.ДокументРезерваСерий);		
	КонецЕсли;
		
	Запрос.УстановитьПараметр("Помещение",Помещение);
	Запрос.УстановитьПараметр("Регистратор",Регистратор);
	Объект.Серии.Загрузить(Запрос.Выполнить().Выгрузить());
	

	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
	Если Объект.Серии.Количество() = 0 Тогда
		Элементы.ГруппаСтраницыСерии.ТекущаяСтраница = Элементы.СтраницаНетОстатков;
	Иначе
		Элементы.ГруппаСтраницыСерии.ТекущаяСтраница = Элементы.СтраницаСерии;
	КонецЕсли;
		
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
	
	ПредставлениеОбъемаРаботы = НСтр("ru = 'Товар %НомерТекущейСтроки% из %ВсегоТоваров%:'");
	ПредставлениеОбъемаРаботы = СтрЗаменить(ПредставлениеОбъемаРаботы,"%НомерТекущейСтроки%",Строка(НомерТекущейСтрокиТоваров));
	ПредставлениеОбъемаРаботы = СтрЗаменить(ПредставлениеОбъемаРаботы,"%ВсегоТоваров%",Объект.ТоварыКешДокумента.Количество());
КонецПроцедуры

&НаСервере
Процедура ИзменитьТекущуюСтроку(Направление)
	СохранитьВводСерийВКеше();
	НомерТекущейСтрокиТоваров = НомерТекущейСтрокиТоваров + Направление;
	Инициализировать();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСериюКлиент()
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияСерии = Новый Структура;
	ЗначенияЗаполненияСерии.Вставить("ВидНоменклатуры", ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
	ЗначенияЗаполненияСерии.Вставить("Номер", ТекущиеДанные.Номер);
	ЗначенияЗаполненияСерии.Вставить("ГоденДо", ТекущиеДанные.ГоденДо);
	
	ПараметрыФормыСерии = Новый Структура;
	ПараметрыФормыСерии.Вставить("ЗначенияЗаполнения",ЗначенияЗаполненияСерии);
	ПараметрыФормыСерии.Вставить("Ключ",ТекущиеДанные.Серия);
	
	ОткрытьФормуМодально("Справочник.СерииНоменклатуры.Форма.ФормаЭлемента",ПараметрыФормыСерии, ЭтотОбъект);
КонецПроцедуры

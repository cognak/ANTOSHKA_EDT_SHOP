&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

&НаКлиенте
Перем ТекущееКоличество; //кеш количества в текущей строке для расчета количества серий

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоАдресВременногоХранилища(Параметры.АдресВоВременномХранилище) Тогда
		ТекстСообщения = НСтр("ru='Предусмотрено открытие обработки только из документов.'");
		
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	
	ПодключаемоеОборудованиеРТ.ПолучитьДоступноеПодключаемоеОборудование(ИспользоватьПодключаемоеОборудование, ЕстьТСД, ЕстьВесы);
	
	Упаковка                  = Параметры.Упаковка;
	АдресВоВременномХранилище = Параметры.АдресВоВременномХранилище;
	ПараметрыУказанияСерий    = Параметры.ПараметрыУказанияСерий;
	Количество                = Параметры.Количество;
	НомераСтрокПредставление  = Параметры.НомераСтрокДокумента;
		
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Номенклатура, 
	                        Новый Структура("ВидНоменклатуры, ЕдиницаИзмеренияПредставление","ВидНоменклатуры","ЕдиницаИзмерения.Наименование"));
	
	ПараметрыУчетнойПолитикиСерий = Новый ФиксированнаяСтруктура(ЗначениеНастроекПовтИсп.
		ПараметрыПолитикиУчетаСерийПоВидуНоменклатуры(РеквизитыНоменклатуры.ВидНоменклатуры,Параметры.Магазин));
	
	Если Не ПараметрыУчетнойПолитикиСерий.ИспользоватьСерии Тогда
		ТекстИсключения = НСтр("ru = 'Для вида номенклатуры ""%ВидНоменклатуры%"" серии не используются'");
		
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ВидНоменклатуры%",ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ЗаголовокКоличествоВДокументе = НСтр("ru = 'Необходимо зарегистрировать, %ЕдиницаИзмерения%'");
	ЗаголовокКоличествоСерий      = НСтр("ru = 'Зарегистрировано серий, %ЕдиницаИзмерения%'");
	ЗаголовокКолонкиКоличество    = НСтр("ru = 'Количество, %ЕдиницаИзмерения%'"); 
	Заголовок                     = НСтр("ru = 'Регистрация серий товаров'");
	
	Если ЗначениеЗаполнено(Упаковка) Тогда
		ТоварПредставление = НСтр("ru = '%ПредставлениеТовара% в упаковке %Упаковка%'");
		ТоварПредставление = СтрЗаменить(ТоварПредставление,"%Упаковка%",Параметры.Упаковка);
		
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",Параметры.Упаковка);
		ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",Параметры.Упаковка);
		ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",Параметры.Упаковка);
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",Параметры.Упаковка);
	Иначе
		ТоварПредставление = НСтр("ru = '%ПредставлениеТовара%'");
		
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКоличествоВДокументе = СтрЗаменить(ЗаголовокКоличествоВДокументе,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКоличествоСерий      = СтрЗаменить(ЗаголовокКоличествоСерий,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
		ЗаголовокКолонкиКоличество    = СтрЗаменить(ЗаголовокКолонкиКоличество,"%ЕдиницаИзмерения%",РеквизитыНоменклатуры.ЕдиницаИзмеренияПредставление);
	КонецЕсли;
	
	
	ТоварПредставление = СтрЗаменить(ТоварПредставление,"%ПредставлениеТовара%",ОбщегоНазначенияРТ.ПолучитьПредставлениеНоменклатуры(Параметры.Номенклатура, Параметры.Характеристика));
	
	Элементы.СерииКоличествоУпаковок.Заголовок = ЗаголовокКолонкиКоличество;
	Элементы.Количество.Заголовок              = ЗаголовокКоличествоВДокументе;
	Элементы.КоличествоСерий.Заголовок         = ЗаголовокКоличествоСерий;
	
	Элементы.Серии.ИзменятьСоставСтрок              = Не ТолькоПросмотр;
	Элементы.СерииКоличествоУпаковок.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.ГруппаШапкаТаблицы.Видимость = Не ТолькоПросмотр;
	
	Элементы.Количество.Видимость              = Не ТолькоПросмотр;
	
	Элементы.СерииНомер.Видимость                = ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии;
	Элементы.ПоискПоШтрихкоду.Видимость          = ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии;
	Элементы.СерииЗагрузитьДанныеИзТСД.Видимость = ЕстьТСД И ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии;
	
	Элементы.СерииГоденДо.Видимость            = ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии;
	
	Элементы.СерииКоличествоУпаковок.Видимость = ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии;
	
	Элементы.ГруппаКоличество.Видимость = Не Параметры.СерииВТЧТовары;
	
	Если ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.СерииГоденДо.Формат               = ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.СерииГоденДо.ФорматРедактирования = ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности;
		
		Если ПараметрыУчетнойПолитикиСерий.ТочностьУказанияСрокаГодностиСерии = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоДней Тогда
			Элементы.СерииГоденДо.Заголовок = НСтр("ru = 'Годен до (дата)'");
		Иначе
			Элементы.СерииГоденДо.Заголовок = НСтр("ru = 'Годен до (дата, час)'");
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаСерий = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	ТаблицаСерий.Количество,
	|	ТаблицаСерий.КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Серия,
	|	ТаблицаСерий.Количество,
	|	ТаблицаСерий.КоличествоУпаковок,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).Номер КАК Номер,
	|	ВЫРАЗИТЬ(ТаблицаСерий.Серия КАК Справочник.СерииНоменклатуры).ГоденДо КАК ГоденДо
	|ИЗ
	|	ТаблицаСерий КАК ТаблицаСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо,
	|	Номер";
	Запрос.УстановитьПараметр("ТаблицаСерий",ТаблицаСерий);
	Объект.Серии.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоличествоСерий = Объект.Серии.Итог("КоличествоУпаковок");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// МеханизмВнешнегоОборудования
	Если ИспользоватьПодключаемоеОборудование
	   И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ОписаниеОшибки = "";

		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");

		Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:
			                      |""%ОписаниеОшибки%"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	// Конец МеханизмВнешнегоОборудования
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Модифицированность Тогда

		Ответ = Вопрос(НСтр("ru = 'Список серий был изменен.
				|Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);

		Если Ответ = КодВозвратаДиалога.Да Тогда

			Отказ = Истина;
			СтандартнаяОбработка = Ложь;
			ЗавершитьВводСерий(Неопределено);// Сохранение результатов модификации.
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда

			Отказ = Истина;
			СтандартнаяОбработка = Ложь;

		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()

	// МеханизмВнешнегоОборудования
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");

	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	// Конец МеханизмВнешнегоОборудования

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
	   И ВводДоступен() 
	   И Не ТолькоПросмотр
	   И ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии Тогда
		Если ИмяСобытия = "ScanData" Тогда
			//Преобразуем предварительно к ожидаемому формату
			Данные = Новый Массив();
			Если Параметр[1] = Неопределено Тогда
				Данные.Добавить(Новый Структура("Штрихкод, Количество", Параметр[0], 1)); // Достаем штрихкод из основных данных
			Иначе
				Данные.Добавить(Новый Структура("Штрихкод, Количество", Параметр[1][1], 1)); // Достаем штрихкод из дополнительных данных
			КонецЕсли;

			ЗакрытьФорму = ОбработатьШтрихкодыСервер(Данные,КэшированныеЗначения);
			
			Если ЗакрытьФорму Тогда
				ПодключитьОбработчикОжидания("ЗакрытьФормуПриСканировании",0.1, Истина);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование

	Если ИмяСобытия = "Запись_СерииНоменклатуры" Тогда
		ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ТекущиеДанные.Серия = Источник;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные,Параметр);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦЫ ФОРМЫ СЕРИИ

&НаКлиенте
Процедура СерииНомерПриИзменении(Элемент)
	ПодобратьСерию(Элемент,"Номер","ГоденДо");	
КонецПроцедуры

&НаКлиенте
Процедура СерииГоденДоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ГоденДо) Тогда
 		ПодобратьСерию(Элемент,"ГоденДо","Номер");
	Иначе
		ТекущиеДанные.Серия   = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СерииГоденДоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ФорматДаты",ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности);
	СтруктураПараметров.Вставить("ГоденДо",ТекущиеДанные.ГоденДо);
	
	ГоденДо = ОткрытьФормуМодально("Обработка.ПодборСерийВДокументы.Форма.ФормаУказанияДаты", СтруктураПараметров, Элемент);
	
	Если ЗначениеЗаполнено(ГоденДо)
		И ТипЗнч(ГоденДо) = Тип("Дата") Тогда
		
		ТекущиеДанные.ГоденДо = ГоденДо;
 		ПодобратьСерию(Элемент,"ГоденДо","Номер");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииКоличествоУпаковокПриИзменении(Элемент)
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");

	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ТекущаяСтрока = Новый Структура;
	ТекущаяСтрока.Вставить("Упаковка",Упаковка);
	ТекущаяСтрока.Вставить("Количество",ТекущиеДанные.Количество);
	ТекущаяСтрока.Вставить("КоличествоУпаковок",ТекущиеДанные.КоличествоУпаковок);
	
	ОбработкаТабличнойЧастиТоварыКлиент.ОбработатьСтрокуТЧКлиент(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ЗаполнитьЗначенияСвойств(ТекущиеДанные,ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СерииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если Копирование Тогда
		ТекущееКоличество = 0;
	Иначе
		ТекущееКоличество =  ТекущиеДанные.КоличествоУпаковок;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Если Не ОтменаРедактирования Тогда
		Если Не ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
			
			ТекущиеДанные = Элемент.ТекущиеДанные;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Номер) Тогда
				Если ТекущиеДанные.КоличествоУпаковок = 0 Тогда
					ТекущиеДанные.КоличествоУпаковок = 1;
					
					СтруктураДействий = Новый Структура;
					СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
					
					ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
					
					ТекущаяСтрока = Новый Структура;
					ТекущаяСтрока.Вставить("Упаковка",Упаковка);
					ТекущаяСтрока.Вставить("Количество",ТекущиеДанные.Количество);
					ТекущаяСтрока.Вставить("КоличествоУпаковок",ТекущиеДанные.КоличествоУпаковок);
					
					ОбработкаТабличнойЧастиТоварыКлиент.ОбработатьСтрокуТЧКлиент(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
					
					ЗаполнитьЗначенияСвойств(ТекущиеДанные,ТекущаяСтрока);
				КонецЕсли;
			Иначе
				ТекущиеДанные.КоличествоУпаковок = 0;
				ТекущиеДанные.Количество         = 0;
			КонецЕсли;
		КонецЕсли;
		
		Дельта = ТекущееКоличество - Элементы.Серии.ТекущиеДанные.КоличествоУпаковок;
		КоличествоСерий = КоличествоСерий - Дельта;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СерииПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущееКоличество =  ТекущиеДанные.Количество;
КонецПроцедуры

&НаКлиенте
Процедура СерииПослеУдаления(Элемент)
	КоличествоСерий = КоличествоСерий - ТекущееКоличество;
КонецПроцедуры

&НаКлиенте
Процедура СерииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если Поле = Элементы.СерииСерия Тогда
		ИзменитьСериюКлиент();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Отмена(Команда)
	Модифицированность = Ложь;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВводСерий(Команда)
	ОчиститьСообщения();
    СохранитьВводСерийСервер();
	Если Не Модифицированность Тогда
		Закрыть(АдресВоВременномХранилище);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеИзТСД(Команда)
	
	ОчиститьСообщения();
	
	ОписаниеОшибки = "";
	
	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		// Подключение устройства
		ИдентификаторУстройства = МенеджерОборудованияКлиент.ВыбратьУстройство("ТерминалСбораДанных",
		    НСтр("ru='Выберите терминал сбора данных'"), НСтр("ru='Терминал сбора данных не подключен'"));
		
		Если ИдентификаторУстройства <> Неопределено Тогда
			
			Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор, ИдентификаторУстройства, ОписаниеОшибки);
			
			Если Результат Тогда
				ВходныеПараметры  = Неопределено;
				ВыходныеПараметры = Неопределено;
				
				Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
				                                                        "DownloadDocument",
				                                                        ВходныеПараметры,
				                                                        ВыходныеПараметры);
				
				Если Результат Тогда
					
					ТаблицаЗагрузкиИзТСД = Новый Массив();
					Для Индекс = 0 По ВыходныеПараметры[0].Количество()/2 - 1 Цикл
						
						Штрихкод   = ВыходныеПараметры[0][Индекс * 2 + 0];
						Количество = ВыходныеПараметры[0][Индекс * 2 + 1];
						
						ТаблицаЗагрузкиИзТСД.Добавить(Новый Структура("Штрихкод, Количество", Штрихкод, ?(Количество <> Неопределено, Количество, 0)));
						
					КонецЦикла;
					
					ЗакрытьФорму = ОбработатьШтрихкодыСервер(ТаблицаЗагрузкиИзТСД, КэшированныеЗначения);
			
					Если ЗакрытьФорму Тогда
						Закрыть(АдресВоВременномХранилище);
					КонецЕсли;
					
				Иначе
					
					ТекстСообщения = НСтр("ru='При загрузке данных из терминала сбора данных произошла ошибка.
					                          |%ОписаниеОшибки%
					                          |Данные из терминала сбора данных не загружены.'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ВыходныеПараметры[1]);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецЕсли;
				
				МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор, ИдентификаторУстройства);
				
			Иначе
				ТекстСообщения = НСтр("ru='При подключении устройства произошла ошибка.
				                          |%ОписаниеОшибки%
				                          |Данные из терминала сбора данных не загружены.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru = 'Предварительно необходимо выбрать рабочее место подключаемого оборудования текущего сеанса.'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПорядокСканированияСерий(Команда)
	Результат = ОткрытьФормуМодально("Обработка.ПодборСерийВДокументы.Форма.ФормаНастройкиСканированияСерий",
		Новый Структура("ЗакрыватьФормуПослеСканированияСерии",ЗакрыватьФормуПослеСканированияСерии),
		ЭтотОбъект);
		
	Если Результат <> Неопределено Тогда
		ЗакрыватьФормуПослеСканированияСерии = Результат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоискПоШтрихкоду(Команда)
	ОчиститьСообщения();
	ТекШтрихкод = "";
	ЗаголовокФормыВводаСерий = НСтр("ru = 'Введите штрихкод серии'");
	Если ОбработкаТабличнойЧастиТоварыКлиент.ВвестиШтрихкод(ТекШтрихкод, ЗаголовокФормыВводаСерий) Тогда
		ЗакрытьФорму = ОбработатьШтрихкодыСервер(ОбработкаТабличнойЧастиТоварыКлиентСервер.ПолучитьСтруктуруДанныхШтрихкода(ТекШтрихкод, 1),КэшированныеЗначения);
		Если ЗакрытьФорму Тогда
			Закрыть(АдресВоВременномХранилище);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСерию(Команда)
	ИзменитьСериюКлиент();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Штрихкоды и торговое оборудование

&НаСервере
Функция ОбработатьШтрихкодыСервер(ДанныеШтрикодов,КэшированныеЗначения)
	
	Если Не ПараметрыУчетнойПолитикиСерий.ИспользоватьНомерСерии Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТаблицаШтрихКодов = Новый ТаблицаЗначений;
	ТаблицаШтрихКодов.Колонки.Добавить("Номер",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
	ТаблицаШтрихКодов.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,3,ДопустимыйЗнак.Неотрицательный)));
	
	Если ТипЗнч(ДанныеШтрикодов) = Тип("Массив") Тогда
		Для Каждого СтрМас из ДанныеШтрикодов Цикл
			НоваяСтрока            = ТаблицаШтрихКодов.Добавить();
			НоваяСтрока.Количество = СтрМас.Количество;
			НоваяСтрока.Номер      = СокрЛП(СтрМас.ШтрихКод);
		КонецЦикла;
	Иначе
		НоваяСтрока            = ТаблицаШтрихКодов.Добавить();
		НоваяСтрока.Количество = ДанныеШтрикодов.Количество;
		НоваяСтрока.Номер      = СокрЛП(ДанныеШтрикодов.ШтрихКод);
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Штрихкоды.Номер КАК Номер,
	|	Штрихкоды.Количество КАК Количество
	|ПОМЕСТИТЬ Штрихкоды
	|ИЗ
	|	&Штрихкоды КАК Штрихкоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СерииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК Серия,
	|	ЕСТЬNULL(СерииНоменклатуры.ГоденДо, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ГоденДо,
	|	Штрихкоды.Номер,
	|	Штрихкоды.Количество
	|ПОМЕСТИТЬ НайденныеНомераДляЗапроса
	|ИЗ
	|	Штрихкоды КАК Штрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО Штрихкоды.Номер = СерииНоменклатуры.Номер
	|		И СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(1) КАК КоличествоНайденныхСерий,
	|	НайденныеНомераДляЗапроса.Номер
	|ПОМЕСТИТЬ КоличествоСерийПоНомеру
	|ИЗ
	|	НайденныеНомераДляЗапроса КАК НайденныеНомераДляЗапроса
	|
	|СГРУППИРОВАТЬ ПО
	|	НайденныеНомераДляЗапроса.Номер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ НайденныеНомераДляЗапроса.Серия
	|	КОНЕЦ КАК Серия,
	|	ВЫБОР
	|		КОГДА КоличествоСерийПоНомеру.КоличествоНайденныхСерий > 1
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		ИНАЧЕ НайденныеНомераДляЗапроса.ГоденДо
	|	КОНЕЦ КАК ГоденДо,
	|	НайденныеНомераДляЗапроса.Номер,
	|	НайденныеНомераДляЗапроса.Количество
	|ИЗ
	|	НайденныеНомераДляЗапроса КАК НайденныеНомераДляЗапроса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоСерийПоНомеру КАК КоличествоСерийПоНомеру
	|		ПО НайденныеНомераДляЗапроса.Номер = КоличествоСерийПоНомеру.Номер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Штрихкоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НайденныеНомераДляЗапроса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КоличествоСерийПоНомеру";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры",ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
	Запрос.УстановитьПараметр("Штрихкоды",ТаблицаШтрихКодов);

	Выборка = Запрос.Выполнить().Выбрать();
	
	СрокГодностиЗаполнен = Истина;
	
	Пока Выборка.Следующий() Цикл
		СтруктураПоиска = Новый Структура("Номер,ГоденДо,Серия",Выборка.Номер, Выборка.ГоденДо, Выборка.Серия);
		
		НайденныеСтроки = Объект.Серии.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = Объект.Серии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			Если ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
				НоваяСтрока.КоличествоУпаковок = Выборка.Количество;
			Иначе
				НоваяСтрока.КоличествоУпаковок = 1;
			КонецЕсли;
			
			СтруктураДействий = Новый Структура;
			СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
			
			ТекущаяСтрока = Новый Структура;
			ТекущаяСтрока.Вставить("Упаковка",Упаковка);
			ТекущаяСтрока.Вставить("Количество",НоваяСтрока.Количество);
			ТекущаяСтрока.Вставить("КоличествоУпаковок",НоваяСтрока.КоличествоУпаковок);
			
			ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяСтрока);
			
			КоличествоСерий = КоличествоСерий + ТекущаяСтрока.КоличествоУпаковок;
			
			Модифицированность   = Истина;

			СрокГодностиЗаполнен = Ложь;
		Иначе
			СтрокаТЧ = НайденныеСтроки[0];
			Если ПараметрыУчетнойПолитикиСерий.ИспользоватьКоличествоСерии Тогда
				
				ТекущееКоличество = СтрокаТЧ.КоличествоУпаковок;
				
				СтрокаТЧ.КоличествоУпаковок = СтрокаТЧ.КоличествоУпаковок + Выборка.Количество;
				
				ТекущаяСтрока = Новый Структура;
				ТекущаяСтрока.Вставить("Упаковка",Упаковка);
				ТекущаяСтрока.Вставить("Количество",СтрокаТЧ.Количество);
				ТекущаяСтрока.Вставить("КоличествоУпаковок",СтрокаТЧ.КоличествоУпаковок);
				
				СтруктураДействий = Новый Структура;
				СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
				ОбработкаТабличнойЧастиТоварыСервер.ОбработатьСтрокуТЧСервер(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
				
				ЗаполнитьЗначенияСвойств(СтрокаТЧ,ТекущаяСтрока);
				
				Дельта = ТекущееКоличество - СтрокаТЧ.КоличествоУпаковок;
				КоличествоСерий = КоличествоСерий - Дельта;				
				
				Модифицированность = Истина;
				
			Иначе
				ТекстСообщения = НСтр("ru = 'Серия с номером %НомерСерии% уже присутствует в списке серий'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%НомерСерии%",Выборка.Номер);
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Серии",НайденныеСтроки[0].НомерСтроки,"Номер");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект");
				
				
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаТЧ.ГоденДо) Тогда
				СрокГодностиЗаполнен = Ложь;
			КонецЕсли;
		КонецЕсли;
			
	КонецЦикла;
	
	ЗакрытьФорму = Ложь;
	
	Если ЗакрыватьФормуПослеСканированияСерии
		И (СрокГодностиЗаполнен
		Или Не ПараметрыУчетнойПолитикиСерий.ИспользоватьСрокГодностиСерии) Тогда
		СохранитьВводСерийСервер();
		Если Не Модифицированность Тогда
			ЗакрытьФорму = Истина;
		КонецЕсли;
	КонецЕсли;

	Возврат ЗакрытьФорму;
	
КонецФункции // ОбработатьШтрихкодыСервер()

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаСервере
Процедура СохранитьВводСерийСервер()
	
	Если Объект.Серии.Количество() > 0 Тогда
		ПоследняяСтрока = Объект.Серии[Объект.Серии.Количество()-1];
		Если Не ЗначениеЗаполнено(ПоследняяСтрока.Серия)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.Номер)
			И Не ЗначениеЗаполнено(ПоследняяСтрока.ГоденДо)
			И (ПоследняяСтрока.КоличествоУпаковок = 1
			Или ПоследняяСтрока.КоличествоУпаковок = 0) Тогда
			
			Объект.Серии.Удалить(ПоследняяСтрока);
		КонецЕсли;
	КонецЕсли;
	
	Объект.ПараметрыПроверки = ПараметрыУчетнойПолитикиСерий;
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаСерий = Объект.Серии.Выгрузить();
	
	ТаблицаСерий.Свернуть("Серия,Номер,ГоденДо", "Количество,КоличествоУпаковок");
	
	ТаблицаВозврата = ТаблицаСерий.СкопироватьКолонки("Серия,Количество,КоличествоУпаковок");
	
	Для Каждого СтрТабл Из ТаблицаСерий Цикл
		
		Если СтрТабл.Количество > 0 Тогда
		
			Если Не ЗначениеЗаполнено(СтрТабл.Серия) Тогда
				
				СправочникОбъект                 = Справочники.СерииНоменклатуры.СоздатьЭлемент();
				СправочникОбъект.ВидНоменклатуры = ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры;
				СправочникОбъект.Номер           = СтрТабл.Номер;
				СправочникОбъект.ГоденДо         = СтрТабл.ГоденДо;
				СправочникОбъект.Записать();
				
				СтрТабл.Серия = СправочникОбъект.Ссылка; 
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ТаблицаВозврата.Добавить(), СтрТабл);
			
		КонецЕсли;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ТаблицаВозврата,АдресВоВременномХранилище);
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьСерию(Элемент,ВводимыйРеквизит,ПроверяемыйРеквизит)
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить(ВводимыйРеквизит,ТекущиеДанные[ВводимыйРеквизит]);
	ПараметрыПоиска.Вставить(ПроверяемыйРеквизит,Неопределено);
	ПараметрыПоиска.Вставить("ВидНоменклатуры",ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
	ПараметрыПоиска.Вставить("Отбор",Новый Структура);
	ПараметрыПоиска.Вставить("СтрокаПоиска ",Неопределено);
	
	СписокВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.СерииНоменклатуры"),ПараметрыПоиска);
	
	ВыбранныйЭлемент = Неопределено;
		
	Значение = Новый Структура;
	Значение.Вставить("Серия", Неопределено);
	Значение.Вставить("Номер",ТекущиеДанные.Номер);
	Значение.Вставить("ГоденДо",ТекущиеДанные.ГоденДо);
	
	Наименование = "<Новая>" + ТекущиеДанные.Номер + " " + Формат(ТекущиеДанные.ГоденДо,ПараметрыУчетнойПолитикиСерий.ФорматнаяСтрокаСрокаГодности);
	
	СписокВыбора.Вставить(0,Значение,Наименование);
		
	Если СписокВыбора.Количество() = 1 Тогда
		ВыбранныйЭлемент = СписокВыбора[0];
	ИначеЕсли СписокВыбора.Количество() = 2 Тогда
		Если СокрЛП(СписокВыбора[0].Значение.Номер) <> СокрЛП(СписокВыбора[1].Значение.Номер)
			Или (СписокВыбора[0].Значение.ГоденДо <> СписокВыбора[1].Значение.ГоденДо
			     И ЗначениеЗаполнено(СписокВыбора[0].Значение.ГоденДо))Тогда
			ВыбранныйЭлемент = ВыбратьИзСписка(СписокВыбора,Элемент);
		Иначе
			ВыбранныйЭлемент = СписокВыбора[1];
		КонецЕсли;
	ИначеЕсли СписокВыбора.Количество() > 0 Тогда
		ВыбранныйЭлемент = ВыбратьИзСписка(СписокВыбора,Элемент);
	КонецЕсли;
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ТекущиеДанные.Серия         = ВыбранныйЭлемент.Значение.Серия; 
		ТекущиеДанные.Номер         = ВыбранныйЭлемент.Значение.Номер; 
		ТекущиеДанные.ГоденДо       = ВыбранныйЭлемент.Значение.ГоденДо;
	Иначе 
		ТекущиеДанные.Серия   = Неопределено; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСериюКлиент()
	ТекущиеДанные = Элементы.Серии.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполненияСерии = Новый Структура;
	ЗначенияЗаполненияСерии.Вставить("ВидНоменклатуры", ПараметрыУчетнойПолитикиСерий.ВидНоменклатуры);
	ЗначенияЗаполненияСерии.Вставить("Номер", ТекущиеДанные.Номер);
	ЗначенияЗаполненияСерии.Вставить("ГоденДо", ТекущиеДанные.ГоденДо);
	
	ПараметрыФормыСерии = Новый Структура;
	ПараметрыФормыСерии.Вставить("ЗначенияЗаполнения",ЗначенияЗаполненияСерии);
	ПараметрыФормыСерии.Вставить("Ключ",ТекущиеДанные.Серия);
	
	ОткрытьФормуМодально("Справочник.СерииНоменклатуры.Форма.ФормаЭлемента",ПараметрыФормыСерии, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуПриСканировании()
	Закрыть(АдресВоВременномХранилище);
КонецПроцедуры


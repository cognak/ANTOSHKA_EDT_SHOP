&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    Объект.РабочийГрафик = Параметры.РабочийГрафик;
	//РеквизитФормыВЗначение("Параметры.ДанныеОвремени.ДанныеОвремени", Тип("ТаблицаЗначений"))
    ЗаполнитьТЧ(Параметры.ДанныеОввремени.ДанныеОВремени.Выгрузить(),Параметры.НомерДня);
	НомерДня = Параметры.НомерДня;
	СотрудникиПриИзмененииНаСервере();
КонецПроцедуры



&НаСервере
Процедура ЗаполнитьТЧОбъекта(НомерДня)
	А = 0;
	Б= 0;
	ДокОбъект = Объект.РабочийГрафик.ПолучитьОбъект();
		ДобавлятьСтроку = Истина;
	СтрокаЗаполнена = Ложь;
	ВремяПрихода = Дата(1, 1, 1, 0, 0, 0);
	ВремяУхода = Дата(1, 1, 1, 0, 0, 0);
	Для каждого СтрокаСотрудник Из Объект.Сотрудники Цикл
	Б= 0;	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Сотрудник", СтрокаСотрудник.Сотрудник);
		МассивТЧ = ДокОбъект.ДанныеОВремени.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрокаТЧ из МассивТЧ цикл
			СтрокаТЧ["ВремяПрихода"+НомерДня] = ВремяПрихода;
			СтрокаТЧ["ВремяУхода"+НомерДня] = ВремяУхода;
		КонецЦикла;
		Если НЕ МассивТЧ.Количество() = 0 тогда 
			А =  МассивТЧ.Количество();
			СтрокаТЧ= ДокОбъект.ДанныеОВремени[(МассивТЧ[0].номерСтроки -1)];   
			ДобавлятьСтроку = Ложь; 
			А = А - 1;
		Иначе
			СтрокаТЧ= ДокОбъект.ДанныеОВремени.Добавить();
			СтрокаТЧ.Сотрудник =СтрокаСотрудник.Сотрудник;
			СтрокаТЧ.Должность =СтрокаСотрудник.Должность;
			ДобавлятьСтроку = Ложь;
		КонецЕсли;
		СтрокаТЧ["ВремяПрихода"+НомерДня] = Дата(1, 1, 1, 0, 0, 0);
		СтрокаТЧ["ВремяУхода"+НомерДня] = Дата(1, 1, 1, 0, 0, 0);  
		Для НомерЧаса = 1 По 23 Цикл
		    Если ДобавлятьСтроку и СтрокаСотрудник["Ч"+НомерЧаса] = Истина тогда
				Если  А <= 0 тогда 
					СтрокаТЧ = ДокОбъект.ДанныеОВремени.Добавить();
					СтрокаТЧ.Сотрудник =СтрокаСотрудник.Сотрудник;
					СтрокаТЧ.Должность =СтрокаСотрудник.Должность;
					ДобавлятьСтроку = Ложь; 					
				Иначе
					Б = Б +1;
					СтрокаТЧ= ДокОбъект.ДанныеОВремени[(МассивТЧ[Б].номерСтроки-1)];
					А = А -1;
					ДобавлятьСтроку = Ложь;
				КонецЕсли;
			КонецЕсли;
			Если СтрокаСотрудник["Ч"+НомерЧаса] = Истина Тогда 
				Если СтрокаТЧ["ВремяПрихода"+НомерДня] =   Дата(1, 1, 1, 0, 0, 0) тогда
					ВремяПрихода =   Дата(1, 1, 1, 0, 0, 0) + НомерЧаса*60*60;
					СтрокаТЧ["ВремяПрихода"+НомерДня] = ВремяПрихода;
					СтрокаТЧ["ВремяУхода"+НомерДня] = ВремяПрихода+60*60;
				Иначе
					ВремяУхода =   Дата(1, 1, 1, 0, 0, 0) + НомерЧаса*60*60;
					СтрокаТЧ["ВремяУхода"+НомерДня] = ВремяУхода+60*60;
				КонецЕсли;
			ИначеЕСЛИ СтрокаТЧ["ВремяПрихода"+НомерДня] <>  Дата(1, 1, 1, 0, 0, 0) тогда 
					ДобавлятьСтроку = Истина;
			КонецЕсли;
			
		КонецЦикла;  
	ДокОбъект.ДанныеОВремени.Сортировать("Сотрудник Возр");
	ДокОбъект.Записать();


КонецЦикла;


КонецПроцедуры
&НаКлиенте
Процедура ВыполнитьОбработку(Команда)
    
	//ПараметрыФормы = Новый Структура("Ключ", Объект.РабочийГрафик);
	//ФормаДокумента = ПолучитьФорму("Документ.РабочийГрафик.ФормаОбъекта", ПараметрыФормы);
	//
	//ДокументаСсылка = Объект.РабочийГрафик;
	//
	//ЗаполнитьДокументНаСервере(ДокументаСсылка);
	//
	//
	//ФормаДокумента.Модифицированность = Истина;
	//
	//Закрыть();
	//
	//ПараметрыФормы = Новый Структура("Ключ", ОбъектНазначения);
	//ФормаДокумента = ПолучитьФорму("Документ.РеализацияТоваровУслуг.ФормаОбъекта", ПараметрыФормы);
	//
	//ОбъектДокумента = ФормаДокумента.Объект;
	//
	//ЗаполнитьДокументНаСервере(ОбъектДокумента);
	//
	//КопироватьДанныеФормы(ОбъектДокумента, ФормаДокумента.Объект);
	//
	//ФормаДокумента.Модифицированность = Истина;
	//
	//Закрыть();
 	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧ(ДанныеОвремени,НомерДня)
	Для Каждого Строка из ДанныеОвремени цикл   
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Сотрудник", Строка.Сотрудник);
		МассивТЧ = Объект.Сотрудники.НайтиСтроки(СтруктураПоиска);
		Если НЕ МассивТЧ.Количество() = 0 тогда 
			СтрокаТЧ = МассивТЧ[0];
		Иначе
			СтрокаТЧ= Объект.Сотрудники.Добавить();
		КонецЕсли;
		НомерДняНачалаПериода = Час(Строка["ВремяПрихода"+НомерДня]);
		НомерДняОкончанияПериода = Час(Строка["ВремяУхода"+НомерДня]);
		    СтрокаТЧ.Сотрудник = Строка.Сотрудник;
		    СтрокаТЧ.Должность = Строка.Должность;
			Для НомерЧаса = НомерДняНачалаПериода По НомерДняОкончанияПериода-1 Цикл
				СтрокаТЧ["Ч"+НомерЧаса] = Истина;
				
	        КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	А = 0;
//ЗаполнитьТЧ(ЭтаФорма.ВладелецФормы.Объект.ДанныеОвремени.Выгрузить());	
//ТЗ = РеквизитФормыВЗначение(ЭтаФорма.ВладелецФормы.Объект.ДанныеОвремени, Тип("ТаблицаЗначений"));
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКоманду(Команда)
	 ЗаполнитьТЧОбъекта(НомерДня);
	 ПараметрыФормы = Новый Структура("Ключ", Объект.РабочийГрафик);
	 ФормаД =  ПолучитьФорму("Документ.РабочийГрафик.Форма.ФормаДокумента",ПараметрыФормы);
	 ФормаД.Прочитать();
	 ФормаД.Модифицированность = Истина;
	 Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаСервере
Процедура СотрудникиПриИзмененииНаСервере()
	День =НачалоМесяца(ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.РабочийГрафик,"ДатаНачалаПериода")) + (НомерДня-1)*24*60*60;
		Организация = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.РабочийГрафик,"Организация");
		Магазин = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.РабочийГрафик,"Магазин");
	Для НомерЧаса = 8 По 22 Цикл
		Время = День + НомерЧаса*60*60; 
		SPH = ПолучитьSPH(Время,Организация,Магазин);
		SPHфакт = 0;
		Для Каждого СтрокаСотрудник из Объект.Сотрудники цикл
			Если СтрокаСотрудник["Ч"+НомерЧаса] = Истина тогда 
				SPHфакт = SPHфакт + 1;		
			КонецЕсли;
		КонецЦикла;
		SPHтекст = ""+ SPHфакт + " / " + SPH;
		
	ПланПродаж = ПолучитьПланПродаж(Время,Организация,Магазин);	
	Если  SPHфакт = 0 тогда 
		ФактSPH = 0;
	Иначе	
		ФактSPH = Окр(ПланПродаж/SPHфакт,0);
	КонецЕсли;
	Если  SPH = 0 тогда 
		ПланSPH = 0;
	Иначе	
		ПланSPH = Окр(ПланПродаж/SPH,0);
	КонецЕсли;
	
		
	SPMH = Строка(ФактSPH) + " / " +  ПланSPH;
    Элементы["План"+НомерЧаса].Заголовок =  ПланПродаж;
    Элементы["СотрудникиЧ"+НомерЧаса].Заголовок =  SPMH;
    Элементы["СотрудникиЧ"+НомерЧаса].ТекстПодвала =  SPHтекст;
	
КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьSPH(Период,Организация,Магазин)
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	SPH = 0;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланПродажПоЧасамСрезПоследних.ПланПродаж / РекомендуемыПоказателиSPHСрезПоследних.SPH КАК ПланПродаж
		|ИЗ
		|	РегистрСведений.ПланПродажПоЧасам.СрезПоследних(&Период, ) КАК ПланПродажПоЧасамСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РекомендуемыПоказателиSPH.СрезПоследних(&Период, ) КАК РекомендуемыПоказателиSPHСрезПоследних
		|		ПО ПланПродажПоЧасамСрезПоследних.Организация = РекомендуемыПоказателиSPHСрезПоследних.Организация
		|			И ПланПродажПоЧасамСрезПоследних.Магазин = РекомендуемыПоказателиSPHСрезПоследних.Магазин
		|ГДЕ
		|	ПланПродажПоЧасамСрезПоследних.Организация = &Организация
		|	И ПланПродажПоЧасамСрезПоследних.Магазин = &Магазин
		|	И ПланПродажПоЧасамСрезПоследних.Период = &Период";
	
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Период);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		SPH =  Окр(ВыборкаДетальныеЗаписи.ПланПродаж,0);
	КонецЦикла;
	
	Возврат SPH;
	
	
КонецФункции


&НаСервере
Функция ПолучитьПланПродаж(Время,Организация,Магазин)
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	SPH = 0;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланПродажПоЧасамСрезПоследних.ПланПродаж КАК ПланПродаж
		|ИЗ
		|	РегистрСведений.ПланПродажПоЧасам.СрезПоследних(&Период, ) КАК ПланПродажПоЧасамСрезПоследних
		|ГДЕ
		|	ПланПродажПоЧасамСрезПоследних.Организация = &Организация
		|	И ПланПродажПоЧасамСрезПоследних.Магазин = &Магазин
		|	И ПланПродажПоЧасамСрезПоследних.Период = &Период";
	
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Время);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		SPH =  ВыборкаДетальныеЗаписи.ПланПродаж;
	КонецЦикла;
	
	Возврат SPH;
	
	
КонецФункции







&НаКлиенте
Процедура СотрудникиПриИзменении(Элемент)
	СотрудникиПриИзмененииНаСервере();
КонецПроцедуры


&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ДокументОснование", Объект.ДокументОснование) Тогда
	
		Отказ = Истина;
		Возврат;
	
	КонецЕсли;
	
	ДополнительныеКолонкиНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	
	ЗаполнитьПоИнвентаризацииСервер();
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.Товары);
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ЗаполнениеПричин;
	
	ЗаполнитьТаблицуАналитик();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "Товары"

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Объект.АналитикаХозяйственнойОперации)  Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.Товары.ТекущийЭлемент = Элементы.ТоварыАналитикаХозяйственнойОперации Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.АналитикаХозяйственнойОперации = Объект.АналитикаХозяйственнойОперации;
	
	ЗаполнитьТаблицуАналитик();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)
	
	ЗаполнитьТаблицуАналитик();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ЗаполнитьТаблицуАналитик();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоУпаковокПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	ТекущиеДанные.Количество = ТекущиеДанные.КоличествоУпаковок;
	ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена;
	
	ЗаполнитьТаблицуАналитик();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "ТаблицаДокументов"

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаДокументов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", ТекущиеДанные.ДокументСсылка);
	
	ОткрытьФорму("Документ.СписаниеТоваров.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаполнитьПустыеСтроки(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.АналитикаХозяйственнойОперации)  Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из Объект.Товары Цикл
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.АналитикаХозяйственнойОперации)  Тогда
			СтрокаТаблицы.АналитикаХозяйственнойОперации = Объект.АналитикаХозяйственнойОперации;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьТаблицуАналитик();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументы(Команда)
	
	Для каждого СтрокаТаблицыДокументов Из ТаблицаДокументов Цикл
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", СтрокаТаблицыДокументов.ДокументСсылка);
		
		ОткрытьФорму("Документ.СписаниеТоваров.ФормаОбъекта", ПараметрыФормы);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсеСтроки(Команда)
	
	Для каждого СтрокаТаблицы Из Объект.Товары Цикл
		СтрокаТаблицы.АналитикаХозяйственнойОперации = ПредопределенноеЗначение("Справочник.АналитикаХозяйственныхОпераций.ПустаяСсылка");
	КонецЦикла;
	
	ЗаполнитьТаблицуАналитик();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		
		СоздатьДокументыСервер();
		
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьПоИнвентаризацииСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПересчетТоваровТовары.Номенклатура,
	|	ПересчетТоваровТовары.Характеристика,
	|	МАКСИМУМ(ПересчетТоваровТовары.Цена) КАК Цена
	|ПОМЕСТИТЬ ТаблицаЦен
	|ИЗ
	|	Документ.ПересчетТоваров.Товары КАК ПересчетТоваровТовары
	|ГДЕ
	|	ПересчетТоваровТовары.Ссылка.ДокументОснование = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ПересчетТоваровТовары.Номенклатура,
	|	ПересчетТоваровТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлениюИзлишковНедостачОстатки.Номенклатура,
	|	ТоварыКОформлениюИзлишковНедостачОстатки.Номенклатура.Наименование,
	|	ТоварыКОформлениюИзлишковНедостачОстатки.Характеристика,
	|	ТоварыКОформлениюИзлишковНедостачОстатки.КОформлениюАктовОстаток КАК Количество,
	|	ЕСТЬNULL(ТаблицаЦен.Цена, 0) КАК Цена
	|ПОМЕСТИТЬ ТаблицаЗапроса
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюИзлишковНедостач.Остатки(
	|			,
	|			ДокументОснование = &ДокументОснование
	|				И НЕ Номенклатура.ИспользоватьСерийныеНомера) КАК ТоварыКОформлениюИзлишковНедостачОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаЦен КАК ТаблицаЦен
	|		ПО ТоварыКОформлениюИзлишковНедостачОстатки.Номенклатура = ТаблицаЦен.Номенклатура
	|			И ТоварыКОформлениюИзлишковНедостачОстатки.Характеристика = ТаблицаЦен.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗапроса.Номенклатура,
	|	ТаблицаЗапроса.Характеристика,
	|	-ТаблицаЗапроса.Количество КАК Количество,
	|	-ТаблицаЗапроса.Количество КАК КоличествоУпаковок,
	|	ТаблицаЗапроса.Цена КАК Цена,
	|	-ТаблицаЗапроса.Количество * ТаблицаЗапроса.Цена КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК Упаковка
	|ИЗ
	|	ТаблицаЗапроса КАК ТаблицаЗапроса
	|ГДЕ
	|	ТаблицаЗапроса.Количество < 0";
	
	Запрос.УстановитьПараметр("ДокументОснование", Объект.ДокументОснование);
	
	Результат = Запрос.Выполнить();
	Объект.Товары.Загрузить(Результат.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуАналитик()
	
	ТаблицаРасчета = Объект.Товары.Выгрузить(,"АналитикаХозяйственнойОперации, Сумма");
	ТаблицаРасчета.Колонки.Добавить("КоличествоПозиций", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5,0,ДопустимыйЗнак.Неотрицательный)));
	ТаблицаРасчета.ЗаполнитьЗначения(1, "КоличествоПозиций");
	ТаблицаРасчета.Свернуть("АналитикаХозяйственнойОперации", "Сумма, КоличествоПозиций");
	
	ТаблицаАналитики.Загрузить(ТаблицаРасчета);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.АналитикаХозяйственнойОперации
	|ПОМЕСТИТЬ ТаблицаВЗапросе
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВЗапросе.АналитикаХозяйственнойОперации
	|ИЗ
	|	ТаблицаВЗапросе КАК ТаблицаВЗапросе
	|ГДЕ
	|	НЕ ТаблицаВЗапросе.АналитикаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ТаблицаТовары", Объект.Товары.Выгрузить(,"АналитикаХозяйственнойОперации"));
	
	Результат = Запрос.Выполнить();
	ТаблицаЗапроса = Результат.Выгрузить();
	
	Для каждого СтрокаТаблицы Из ТаблицаЗапроса Цикл
	
		СписаниеОбъект = Документы.СписаниеТоваров.СоздатьДокумент();
		СписаниеОбъект.АналитикаХозяйственнойОперации = СтрокаТаблицы.АналитикаХозяйственнойОперации;
		СписаниеОбъект.ДокументОснование = Объект.ДокументОснование;
		СписаниеОбъект.Дата = ТекущаяДатаСеанса();
		СписаниеОбъект.Ответственный = Пользователи.ТекущийПользователь();
		
		ЗаполнитьЗначенияСвойств(СписаниеОбъект, Объект.ДокументОснование, "Склад, Магазин, Организация");
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("АналитикаХозяйственнойОперации", СписаниеОбъект.АналитикаХозяйственнойОперации);
		
		СтрокиТовары = Объект.Товары.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокаТовары Из СтрокиТовары Цикл
			
			Если СтрокаТовары.КоличествоУпаковок > 0 Тогда
				СтрокаДокумента = СписаниеОбъект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокаТовары);
			КонецЕсли;
			
		КонецЦикла;
		
		Если СписаниеОбъект.Товары.Количество() > 0 Тогда
			СписаниеОбъект.Записать();
			
			СтрокаТаблицыДокументов = ТаблицаДокументов.Добавить();
			СтрокаТаблицыДокументов.ДокументСсылка = СписаниеОбъект.Ссылка;
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДокументы;
	Элементы.ФормаСоздатьДокументы.Видимость = Ложь;
	Элементы.ФормаОткрытьДокументы.Видимость = Истина;
	Элементы.ФормаОткрытьДокументы.КнопкаПоУмолчанию = Истина;
	
КонецПроцедуры

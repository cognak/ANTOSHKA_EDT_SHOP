#Область ОбработчикиКомандФормы

// Процедура - обработчик команды НастроитьРасписаниеОбмена.
//
&НаКлиенте
Процедура НастроитьРасписаниеОбмена(Команда)
	
	ВыполнитьНастройкуРасписанияОбмена();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьНадписьРасписанияОбменаСервер()
	
	Если Не ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		
		Если РасписаниеРегламентногоЗадания = Неопределено Тогда
			ТекстЗаголовка = НСтр("ru='Настроить расписание обмена'");
		Иначе
			ТекстЗаголовка = РасписаниеРегламентногоЗадания;
		КонецЕсли;
		
		Элементы.НастроитьРасписаниеОбмена.Заголовок = ТекстЗаголовка;
		
	Иначе
		
		Если РасписаниеРегламентногоЗадания = Неопределено Тогда
			
			ИнтервалОбменаССайтом = НСтр("ru='Один раз в 30 минут'");
			
		Иначе
			
			ЗначениеПериода = РасписаниеРегламентногоЗадания.ПериодПовтораВТечениеДня;
			Если ЗначениеПериода = 0 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru='Один раз в 30 минут'");
				
			ИначеЕсли ЗначениеПериода <= 300 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru='Один раз в 5 минут'");
				
			ИначеЕсли ЗначениеПериода <= 900 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru='Один раз в 15 минут'");
				
			ИначеЕсли ЗначениеПериода <= 1800 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru='Один раз в 30 минут'");
				
			ИначеЕсли ЗначениеПериода <= 3600 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru='Один раз в час'");
				
			ИначеЕсли ЗначениеПериода <= 10800 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru='Один раз в 3 часа'");
				
			ИначеЕсли ЗначениеПериода <= 21600 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru='Один раз в 6 часов'");
				
			ИначеЕсли ЗначениеПериода <= 43200 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru='Один раз в 12 часов'");
				
			КонецЕсли;

			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере(ЭтотОбъект, Объект)

	НастроитьЭлементыАвтообмен();
	УстановитьНадписьРасписанияОбменаСервер();

КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыАвтообмен()
	
	Если Не ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
		Элементы.ГруппаАвтообменСтраницы.ТекущаяСтраница = Элементы.ГруппаАвтообменСтраница;
		Элементы.НастроитьРасписаниеОбмена.Доступность = Объект.ИспользоватьРегламентноеЗадание;
	Иначе
		Элементы.ГруппаАвтообменСтраницы.ТекущаяСтраница = Элементы.ГруппаАвтообменСтраницаИнтервал;
		Элементы.ИнтервалОбменаССайтом.Доступность = Объект.ИспользоватьРегламентноеЗадание;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьУзелОбменаЭтаИБСервер()
	
	ЭтотУзел = ПланыОбмена.ОбменСЕСпутником.ЭтотУзел();
	Возврат Объект.Ссылка = ЭтотУзел;
	
КонецФункции

// Функция возвращает ПериодПовтораВТечениеДня в секундах
//
&НаКлиенте
Функция ПолучитьПериодПовтораВТечениеДня()
	
	ЗначенияВыбора = СоответствиеЗначенийВыбораККоличествуСекунд();
	
	ПериодПовтораВТечениеДня = ЗначенияВыбора.Получить(ИнтервалОбменаССайтом);
	Возврат ?(ПериодПовтораВТечениеДня = Неопределено, 1800, ПериодПовтораВТечениеДня);
	
КонецФункции

// Функция возвращает соответствие надписей выбора к количеству секунд
// 
&НаКлиенте
Функция СоответствиеЗначенийВыбораККоличествуСекунд()
	
	СоответствиеНадписей = Новый Соответствие;
	СоответствиеНадписей.Вставить(НСтр("ru='Один раз в 5 минут'"), 300);
	СоответствиеНадписей.Вставить(НСтр("ru='Один раз в 15 минут'"), 900);
	СоответствиеНадписей.Вставить(НСтр("ru='Один раз в 30 минут'"), 1800);
	СоответствиеНадписей.Вставить(НСтр("ru='Один раз в час'"), 3600);
	СоответствиеНадписей.Вставить(НСтр("ru='Один раз в 3 часа'"), 10800);
	СоответствиеНадписей.Вставить(НСтр("ru='Один раз в 6 часов'"), 21600);
	СоответствиеНадписей.Вставить(НСтр("ru='Один раз в 12 часов'"), 43200);
	
	Возврат СоответствиеНадписей;
	
КонецФункции //СоответствиеЗначенийВыбораККоличествуСекунд()

// Заполняет значения расписания регламентного задания.
//
&НаКлиенте
Процедура УстановитьРасписаниеРегламентногоЗадания()
	
	Месяцы = Новый Массив;
	Месяцы.Добавить(1);
	Месяцы.Добавить(2);
	Месяцы.Добавить(3);
	Месяцы.Добавить(4);
	Месяцы.Добавить(5);
	Месяцы.Добавить(6);
	Месяцы.Добавить(7);
	Месяцы.Добавить(8);
	Месяцы.Добавить(9);
	Месяцы.Добавить(10);
	Месяцы.Добавить(11);
	Месяцы.Добавить(12);

	ДниНедели = Новый Массив;
	ДниНедели.Добавить(1);
	ДниНедели.Добавить(2);
	ДниНедели.Добавить(3);
	ДниНедели.Добавить(4);
	ДниНедели.Добавить(5);
	ДниНедели.Добавить(6);
	ДниНедели.Добавить(7);
	
	ПериодПовтораВТечениеДня = ПолучитьПериодПовтораВТечениеДня();
	
	Если ПериодПовтораВТечениеДня > 0 Тогда
		
		Расписание = Новый РасписаниеРегламентногоЗадания;
		Расписание.Месяцы					= Месяцы;
		Расписание.ДниНедели				= ДниНедели;
		Расписание.ПериодПовтораВТечениеДня = ПериодПовтораВТечениеДня; // секунды
		Расписание.ПериодПовтораДней		= 1; // каждый день
		
		РасписаниеРегламентногоЗадания = Расписание;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНадписьРасписанияОбмена()
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	Если Не ПараметрыРаботыКлиента.РазделениеВключено Тогда
		
		Если РасписаниеРегламентногоЗадания = Неопределено Тогда
			ТекстЗаголовка = НСтр("ru='Настроить расписание обмена'");
		Иначе
			ТекстЗаголовка = РасписаниеРегламентногоЗадания;
		КонецЕсли;
		
		Элементы.НастроитьРасписаниеОбмена.Заголовок = ТекстЗаголовка;
		
	Иначе
		
		Если РасписаниеРегламентногоЗадания = Неопределено Тогда
			
			ИнтервалОбменаССайтом = НСтр("ru = 'Один раз в 30 минут'");
			
		Иначе
			
			ЗначениеПериода = РасписаниеРегламентногоЗадания.ПериодПовтораВТечениеДня;
			Если ЗначениеПериода = 0 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru = 'Один раз в 30 минут'");
				
			ИначеЕсли ЗначениеПериода <= 300 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru = 'Один раз в 5 минут'");
				
			ИначеЕсли ЗначениеПериода <= 900 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru = 'Один раз в 15 минут'");
				
			ИначеЕсли ЗначениеПериода <= 1800 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru = 'Один раз в 30 минут'");
				
			ИначеЕсли ЗначениеПериода <= 3600 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru = 'Один раз в час'");
				
			ИначеЕсли ЗначениеПериода <= 10800 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru = 'Один раз в 3 часа'");
				
			ИначеЕсли ЗначениеПериода <= 21600 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru = 'Один раз в 6 часов'");
				
			ИначеЕсли ЗначениеПериода <= 43200 Тогда
				
				ИнтервалОбменаССайтом = НСтр("ru = 'Один раз в 12 часов'");
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьРасписанияОбмена()
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	Если Не ПараметрыРаботыКлиента.РазделениеВключено Тогда
		Элементы.НастроитьРасписаниеОбмена.Доступность = Объект.ИспользоватьРегламентноеЗадание;
	Иначе
		Элементы.ИнтервалОбменаССайтом.Доступность = Объект.ИспользоватьРегламентноеЗадание;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьНастройкуРасписанияОбмена()
	
	Если РасписаниеРегламентногоЗадания = Неопределено Тогда
		РасписаниеРегламентногоЗадания = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьРасписаниеОбмена", ЭтотОбъект);
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеРегламентногоЗадания);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРасписаниеОбмена(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("РасписаниеРегламентногоЗадания") Тогда
		РасписаниеРегламентногоЗадания = Результат;
		
		УстановитьНадписьРасписанияОбмена();
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УзелОбменаЭтаИБ = ПроверитьУзелОбменаЭтаИБСервер();
	
	Если УзелОбменаЭтаИБ Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда

		ПриСозданииЧтенииНаСервере(ЭтотОбъект, Объект);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Задание = ТекущийОбъект.СуществующееЗадание();
	
	Если НЕ Задание = Неопределено Тогда
		РасписаниеРегламентногоЗадания = Задание.Расписание;
	КонецЕсли;

	ПриСозданииЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ИспользоватьРегламентноеЗадание
		И (РасписаниеРегламентногоЗадания = Неопределено
		ИЛИ (ОбщегоНазначенияПовтИсп.РазделениеВключено()
		И Не РасписаниеРегламентногоЗадания.ПериодПовтораВТечениеДня > 0)) Тогда
		
		ТекущийОбъект.ИспользоватьРегламентноеЗадание = Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекущийОбъект.ВключитьОтключитьРегламентноеЗадание(РасписаниеРегламентногоЗадания);
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьПовторноИспользуемыеЗначения();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если УзелОбменаЭтаИБ Тогда
		
		ОчиститьСообщения();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Узел соответствует этой информационной базе и не может использоваться в обмене с ЕСпутником. 
				|Используйте другой узел обмена или создайте новый.'"));
			
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Процедура - обработчик события ПриИзменении поля флажка ИспользоватьРегламентныеЗадания.
//
&НаКлиенте
Процедура ИспользоватьРегламентноеЗаданиеПриИзменении(Элемент)
	
	УстановитьДоступностьРасписанияОбмена();
	
	Если Объект.ИспользоватьРегламентноеЗадание Тогда
		ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
		Если Не ПараметрыРаботыКлиента.РазделениеВключено Тогда
			ВыполнитьНастройкуРасписанияОбмена();
		Иначе
			УстановитьРасписаниеРегламентногоЗадания();
		КонецЕсли;
		
		УстановитьНадписьРасписанияОбмена();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалОбменаССайтомПриИзменении(Элемент)
	
	УстановитьРасписаниеРегламентногоЗадания();
	УстановитьНадписьРасписанияОбмена();
	
КонецПроцедуры

#КонецОбласти
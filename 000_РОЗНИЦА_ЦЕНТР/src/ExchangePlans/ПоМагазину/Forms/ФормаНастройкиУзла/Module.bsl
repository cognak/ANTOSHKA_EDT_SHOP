//////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьМагазины()
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПодЗапрос.Магазин,
	|	МАКСИМУМ(ПодЗапрос.ПередаватьДанные) КАК ПередаватьДанные,
	|	МАКСИМУМ(ПодЗапрос.ТолькоОстатки) КАК ТолькоОстатки
	|ИЗ
	|	(ВЫБРАТЬ
	|		Магазины.Ссылка КАК Магазин,
	|		ЛОЖЬ КАК ПередаватьДанные,
	|		ЛОЖЬ КАК ТолькоОстатки
	|	ИЗ
	|		Справочник.Магазины КАК Магазины
	|	ГДЕ
	|		(НЕ Магазины.СкладУправляющейСистемы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Магазины.Ссылка,
	|		ИСТИНА,
	|		ЛОЖЬ
	|	ИЗ
	|		Справочник.Магазины КАК Магазины
	|	ГДЕ
	|		Магазины.Ссылка В (&Магазины)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Магазины.Ссылка,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		Справочник.Магазины КАК Магазины
	|	ГДЕ
	|		Магазины.Ссылка В (&МагазиныИнформативныхОстатков)) КАК ПодЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодЗапрос.Магазин
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодЗапрос.Магазин.Наименование");
	
	Запрос.УстановитьПараметр("Магазины", НастройкаОтборовНаУзле.Магазины.Магазин);
	Запрос.УстановитьПараметр("МагазиныИнформативныхОстатков", НастройкаОтборовНаУзле.МагазиныИнформативныхОстатков.Магазин);
	
	Магазины.Загрузить(Запрос.Выполнить().Выгрузить());
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	Если РежимВыгрузкиИнформативныхОстатков = ПредопределенноеЗначение("Перечисление.РежимыВыгрузкиИнформативныхОстатков.ИндивидуальнаяНастройка") Тогда
		
		Если НЕ Элементы.МагазиныТолькоОстатки.Видимость Тогда
			
			Элементы.МагазиныТолькоОстатки.Видимость = Истина;		
		
		КонецЕсли;
		
	ИначеЕсли Элементы.МагазиныТолькоОстатки.Видимость Тогда
		
		Элементы.МагазиныТолькоОстатки.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры	

//////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастройкаПодчиненногоУзлаРИБЗавершена = Константы.НастройкаПодчиненногоУзлаРИБЗавершена.Получить();
	
	ОбменДаннымиСервер.ФормаНастройкиУзлаПриСозданииНаСервере(ЭтотОбъект, "ПоМагазину");
	ЗаполнитьМагазины();
	Элементы.МагазиныТолькоОстатки.Видимость = РежимВыгрузкиИнформативныхОстатков = Перечисления.РежимыВыгрузкиИнформативныхОстатков.ИндивидуальнаяНастройка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтотОбъект);
	
КонецПроцедуры

//////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура МагазиныПередаватьДанныеПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Магазины.ТекущиеДанные;
	
	Если ТекущаяСтрока.ПередаватьДанные 
		И ТекущаяСтрока.ТолькоОстатки Тогда
		
		ТекущаяСтрока.ТолькоОстатки = Ложь;
			
	КонецЕсли;	
	
	Модифицированность = Истина;
	
КонецПроцедуры
    
&НаКлиенте
Процедура МагазиныТолькоОстаткиПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Магазины.ТекущиеДанные;
	
	Если ТекущаяСтрока.ПередаватьДанные 
		И ТекущаяСтрока.ТолькоОстатки Тогда
		
		ТекущаяСтрока.ПередаватьДанные = Ложь;
			
	КонецЕсли;	
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимВыгрузкиИнформативныхОстатковПриИзменении(Элемент)
	
	Если РежимВыгрузкиИнформативныхОстатков <> ПредопределенноеЗначение("Перечисление.РежимыВыгрузкиИнформативныхОстатков.ИндивидуальнаяНастройка") Тогда
		
		Для каждого ТекущаяСтрока Из Магазины Цикл
			
			Если ТекущаяСтрока.ТолькоОстатки Тогда
				
				ТекущаяСтрока.ТолькоОстатки = Ложь;
				
			КонецЕсли;	
			
		КонецЦикла;	
		
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

//////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Отказ = Ложь;
	
	Если Магазины.Количество() = 0 Тогда
		
		ТекстОшибки = НСтр("ru = 'В списке """"Магазины"""" нет ни одной строки'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			"Магазины",,
			Отказ);
			
	КонецЕсли;		
	
	ЕстьОграничения = Ложь;
	
	Для каждого СтрокаТовары Из Магазины Цикл
		
		Если СтрокаТовары.ПередаватьДанные Тогда
			
			ЕстьОграничения = Истина;
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	Если НЕ ЕстьОграничения Тогда
		
		ТекстОшибки = НСтр("ru = 'В списке """"Магазины"""" не выбраны магазины,
		|для которых будут передаваться данные'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			"Магазины",,
			Отказ);
				
	КонецЕсли;	
	
	Если НЕ Отказ Тогда
		
		МагазиныИнформативныхОстатков.Очистить();
		
		КоличествоСтрок = Магазины.Количество() - 1;
		
		Для Т = 0 По КоличествоСтрок Цикл
			
			ТекущаяСтрока = Магазины[КоличествоСтрок - Т];
			Если НЕ ТекущаяСтрока.ПередаватьДанные Тогда
				
				Если ТекущаяСтрока.ТолькоОстатки 
					И РежимВыгрузкиИнформативныхОстатков = ПредопределенноеЗначение("Перечисление.РежимыВыгрузкиИнформативныхОстатков.ИндивидуальнаяНастройка") Тогда
					
					СтрокаОстатков = МагазиныИнформативныхОстатков.Добавить();
					СтрокаОстатков.Магазин = ТекущаяСтрока.Магазин;
					
				КонецЕсли;	
				
				Магазины.Удалить(КоличествоСтрок - Т);
				
			КонецЕсли;	
			
		КонецЦикла;	
				
		ОбменДаннымиКлиент.ФормаНастройкиУзлаКомандаЗакрытьФорму(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры


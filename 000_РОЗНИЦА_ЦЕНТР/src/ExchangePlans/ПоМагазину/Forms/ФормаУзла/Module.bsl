//////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьМагазины()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаМагазины.Магазин КАК Магазин,
	|	МАКСИМУМ(ТаблицаМагазины.ПередаватьДанные) КАК ПередаватьДанные,
	|	МАКСИМУМ(ТаблицаМагазины.ТолькоОстатки) КАК ТолькоОстатки,
	|	ТаблицаМагазины.Магазин.НомерМагазина КАК НомерМагазина
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаСправочник.Ссылка КАК Магазин,
	|		ЛОЖЬ КАК ПередаватьДанные,
	|		ЛОЖЬ КАК ТолькоОстатки
	|	ИЗ
	|		Справочник.Магазины КАК ТаблицаСправочник
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитика.СрезПоследних КАК УчетнаяПолитика
	|			ПО ТаблицаСправочник.Ссылка = УчетнаяПолитика.ИнтернетМагазин
	|	ГДЕ
	|		(НЕ ТаблицаСправочник.СкладУправляющейСистемы
	|					И ТаблицаСправочник.ВведенВЭксплуатацию
	|					И НЕ ТаблицаСправочник.Блокирован
	|				ИЛИ УчетнаяПолитика.ИнтернетМагазин ЕСТЬ НЕ NULL )
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Магазин,
	|		ИСТИНА,
	|		ЛОЖЬ
	|	ИЗ
	|		ПланОбмена.ПоМагазину.Магазины КАК ТабличнаяЧасть
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ЭтотУзел
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТабличнаяЧасть.Магазин,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		ПланОбмена.ПоМагазину.МагазиныИнформативныхОстатков КАК ТабличнаяЧасть
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ЭтотУзел) КАК ТаблицаМагазины
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаМагазины.Магазин,
	|	ТаблицаМагазины.Магазин.НомерМагазина
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерМагазина"
	);
	Запрос.УстановитьПараметр("ЭтотУзел", Объект.Ссылка);

	Магазины.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМагазиныВыгрузка()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПодЗапрос.Магазин,
	|	МАКСИМУМ(ПодЗапрос.ПередаватьДанные) КАК ПередаватьДанные,
	|	ПодЗапрос.Магазин.НомерМагазина КАК НомерМагазина
	|ИЗ
	|	(ВЫБРАТЬ
	|		Магазины.Ссылка КАК Магазин,
	|		ЛОЖЬ КАК ПередаватьДанные
	|	ИЗ
	|		Справочник.Магазины КАК Магазины
	|	ГДЕ
	|		НЕ Магазины.СкладУправляющейСистемы
	|		И Магазины.ВведенВЭксплуатацию
	|		И НЕ Магазины.Блокирован
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТЧМагазины.Магазин,
	|		ИСТИНА
	|	ИЗ
	|		ПланОбмена.ПоМагазину.МагазиныВыгрузка КАК ТЧМагазины
	|	ГДЕ
	|		ТЧМагазины.Ссылка = &ЭтотУзел) КАК ПодЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ПодЗапрос.Магазин,
	|	ПодЗапрос.Магазин.НомерМагазина
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерМагазина");
	
	Запрос.УстановитьПараметр("ЭтотУзел", Объект.Ссылка);
		
	МагазиныВыгрузка.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	Если Объект.РежимВыгрузкиИнформативныхОстатков = ПредопределенноеЗначение("Перечисление.РежимыВыгрузкиИнформативныхОстатков.ИндивидуальнаяНастройка") Тогда
		
		Если НЕ Элементы.МагазиныТолькоОстатки.Видимость Тогда
			
			Элементы.МагазиныТолькоОстатки.Видимость = Истина;		
		
		КонецЕсли;
		
	ИначеЕсли Элементы.МагазиныТолькоОстатки.Видимость Тогда
		
		Элементы.МагазиныТолькоОстатки.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры	

//////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

#Область ОбработчикиОсновныхСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

//	LNK 25.04.2018 09:32:27 - блокируем для существующего узла. Если менять, то только программно!
	Элементы.ВидУзла.ТолькоПросмотр = Истина;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

	ЭтоПредопределенныйУзелПланаОбмена = ОбменДаннымиПовтИсп.ЭтоПредопределенныйУзелПланаОбмена(Объект.Ссылка);
	
	Если ЭтоПредопределенныйУзелПланаОбмена 
		ИЛИ ОбменДаннымиПовтИсп.ГлавныйУзел("ПоМагазину") = Объект.Ссылка Тогда
		
		Элементы.НастройкаФильтровРегистрации.Видимость = Ложь;
		Элементы.СтраницыФормы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		
	Иначе
		
		Элементы.МагазиныТолькоОстатки.Видимость = Объект.РежимВыгрузкиИнформативныхОстатков = Перечисления.РежимыВыгрузкиИнформативныхОстатков.ИндивидуальнаяНастройка;
		
	КонецЕсли;
	
	Если НЕ ЭтоПредопределенныйУзелПланаОбмена Тогда

		ЗаполнитьМагазины();
		ЗаполнитьМагазиныВыгрузка();

	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте	//	LNK 12.08.2019 12:59:49
Процедура ПриОткрытии(Отказ)
	
//	Обнаружено, что кто-то из администраторов безответственно относится
//	к редактированию данных узла.
//	Были факты назначения "лишнего" магазина в таблицу "Магазины".
//	Во избежание таких катастроф закрываем возможность изменения данных узла.
//	LNK 06.06.2019 13:32:49
	РазрешеноРедактирование = Объект.Ссылка.Пустая() ИЛИ ТехническаяПоддержкаВызовСервера.ВыполняютсяСлужебныеДействия();

	Если НЕ РазрешеноРедактирование Тогда

		ТолькоПросмотр = Истина;
		Элементы.Магазины.ТолькоПросмотр = Истина;
		Элементы.МагазиныВыгрузка.ТолькоПросмотр = Истина;

	Иначе

		Элементы.НомерОтправленного.ТолькоПросмотр = Ложь;
		Элементы.НомерПринятого.ТолькоПросмотр     = Ложь;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
//	LNK 20.04.2017 12:59:11
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ИнтерактивнаяЗапись", Истина);

	Если  НЕ ОбменДаннымиПовтИсп.ЭтоПредопределенныйУзелПланаОбмена(Объект.Ссылка)
		И НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел(Объект.Ссылка)
		И НЕ (Объект.ВидУзла = Перечисления.ВидыУзлов.УзелРасчёта ИЛИ Объект.ВидУзла = Перечисления.ВидыУзлов.ПустойУзел)
	Тогда
		
		Если Магазины.Количество() = 0 Тогда
			
			ТекстОшибки = НСтр("ru = 'В списке """"Магазины"""" нет ни одной строки'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			"Магазины",,
			Отказ);
			
		КонецЕсли;
		
		ЕстьОграничения = Ложь;
		
		Для каждого СтрокаТовары Из Магазины Цикл
			
			Если СтрокаТовары.ПередаватьДанные Тогда
				
				ЕстьОграничения = Истина;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ ЕстьОграничения Тогда
			
			ТекстОшибки = НСтр("ru = 'В списке """"Магазины"""" не выбраны магазины,
			|для которых будут передаваться данные'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			"Магазины",,
			Отказ);
			
		КонецЕсли;
		
		Если НЕ Отказ Тогда
			
			ТекущийОбъект.Магазины.Очистить();
			ТекущийОбъект.МагазиныИнформативныхОстатков.Очистить();

			КоличествоСтрок = Магазины.Количество() - 1;

			Для Т = 0 По КоличествоСтрок Цикл
				
				ТекущаяСтрока = Магазины[КоличествоСтрок - Т];
				Если НЕ ТекущаяСтрока.ПередаватьДанные Тогда
					
					Если ТекущаяСтрока.ТолькоОстатки 
						И Объект.РежимВыгрузкиИнформативныхОстатков = Перечисления.РежимыВыгрузкиИнформативныхОстатков.ИндивидуальнаяНастройка Тогда
						
						СтрокаОстатков = ТекущийОбъект.МагазиныИнформативныхОстатков.Добавить();
						СтрокаОстатков.Магазин = ТекущаяСтрока.Магазин;
						
					КонецЕсли;
					
				Иначе
					
					СтрокаМагазинов = ТекущийОбъект.Магазины.Добавить();
					СтрокаМагазинов.Магазин = ТекущаяСтрока.Магазин;
					
				КонецЕсли;
				
			КонецЦикла;
			
		//	LNK 12.07.2017 13:09:38
			ТекущийОбъект.МагазиныВыгрузка.Очистить();

			КоличествоСтрок = МагазиныВыгрузка.Количество() - 1;

			Для Т = 0 По КоличествоСтрок Цикл
				
				ТекущаяСтрока = МагазиныВыгрузка[КоличествоСтрок - Т];

				Если ТекущаяСтрока.ПередаватьДанные Тогда

					ТекущийОбъект.МагазиныВыгрузка.Добавить().Магазин = ТекущаяСтрока.Магазин;

				КонецЕсли;
				
			КонецЦикла;

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

//	LNK 25.04.2018 09:32:27 - блокируем для существующего узла. Если менять, то только программно!
	Элементы.ВидУзла.ТолькоПросмотр = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Оповестить("Запись_УзелПланаОбмена");
	
КонецПроцедуры
	
#КонецОбласти

//////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура РежимВыгрузкиИнформативныхОстатковПриИзменении(Элемент)
	
	Если Объект.РежимВыгрузкиИнформативныхОстатков <> ПредопределенноеЗначение("Перечисление.РежимыВыгрузкиИнформативныхОстатков.ИндивидуальнаяНастройка") Тогда
		
		Для каждого ТекущаяСтрока Из Магазины Цикл
			
			Если ТекущаяСтрока.ТолькоОстатки Тогда
				
				ТекущаяСтрока.ТолькоОстатки = Ложь;
				
			КонецЕсли;	
			
		КонецЦикла;	
		
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
		
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПередаватьДанныеПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Магазины.ТекущиеДанные;
	
	Если ТекущаяСтрока.ПередаватьДанные 
		И ТекущаяСтрока.ТолькоОстатки Тогда
		
		ТекущаяСтрока.ТолькоОстатки = Ложь;
			
	КонецЕсли;	
	
	Модифицированность = Истина;
	
КонецПроцедуры
    
&НаКлиенте
Процедура МагазиныТолькоОстаткиПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Магазины.ТекущиеДанные;
	
	Если ТекущаяСтрока.ПередаватьДанные 
		И ТекущаяСтрока.ТолькоОстатки Тогда
		
		ТекущаяСтрока.ПередаватьДанные = Ложь;
			
	КонецЕсли;	
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидУзлаПриИзменении(Элемент)

	УстановитьВидимостьДоступность();

КонецПроцедуры

#Область СлужебныеМетоды


#КонецОбласти













#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеВлиянияНаПоследовательность(НаборЗаписей, ИмяСобытия)	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Если ИмяСобытия = "ПередЗаписью" Тогда

	//	Текущее состояние набора помещается во временную таблицу "ДвиженияБонусныеБаллыПередЗаписью",
	//	чтобы при записи получить изменение нового набора относительно текущего.
		Запрос = Новый Запрос(БонусныеБаллыСервер.ТекстЗапросаРегистраторы() + Символы.ПС +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Таблица.Период КАК Период,
		|	Фильтр.Регистратор КАК Регистратор,
		|	Фильтр.Проведен КАК Проведен,
		|	Таблица.ПрограммаЛояльности КАК ПрограммаЛояльностиПередЗаписью,
		|	Таблица.Контрагент КАК Контрагент,
		|	Таблица.СуммаБонусныхБаллов КАК СуммаБонусныхБалловПередЗаписью,
		|	Фильтр.Дата КАК ДатаОперации
		|ПОМЕСТИТЬ ДвиженияБонусныеБаллыПередЗаписью
		|ИЗ
		|	РегистрНакопления.БонусныеБаллы КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Фильтр КАК Фильтр
		|		ПО Таблица.Регистратор = Фильтр.Регистратор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Фильтр"
		);	//	Дата документа в обработчиках "ПередЗаписью" и "ПриЗаписи" может отличаться

		Запрос.УстановитьПараметр("Регистратор", НаборЗаписей.Отбор.Регистратор.Значение);
		Запрос.МенеджерВременныхТаблиц = НаборЗаписей.ДополнительныеСвойства.УправлениеПоследовательностьюБонусныеБаллы.МенеджерВременныхТаблиц;

		Запрос.Выполнить();

	ИначеЕсли ИмяСобытия = "ПриЗаписи" Тогда

	//	Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	//	и помещается во временную таблицу.
		Запрос = Новый Запрос(БонусныеБаллыСервер.ТекстЗапросаРегистраторы() + Символы.ПС +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МИНИМУМ(ТаблицаДвижений.Период) КАК Период,
		|	МАКСИМУМ(ТаблицаДвижений.Регистратор) КАК Регистратор,
		|	ТаблицаДвижений.Контрагент КАК Контрагент,
		|	МАКСИМУМ(ТаблицаДвижений.ПрограммаЛояльностиПередЗаписью) КАК ПрограммаЛояльностиПередЗаписью,
		|	МАКСИМУМ(ТаблицаДвижений.ПрограммаЛояльностиПриЗаписи) КАК ПрограммаЛояльностиПриЗаписи,
		|	СУММА(ТаблицаДвижений.СуммаБонусныхБалловПередЗаписью) КАК СуммаБонусныхБалловПередЗаписью,
		|	СУММА(ТаблицаДвижений.СуммаБонусныхБалловПриЗаписи) КАК СуммаБонусныхБалловПриЗаписи,
		|	ТаблицаДвижений.ДатаОперации КАК ДатаОперации,
		|	МАКСИМУМ(ТаблицаДвижений.Проведен) КАК Проведен
		|ПОМЕСТИТЬ БонусныеБаллыДвижения
		|ИЗ
		|	(ВЫБРАТЬ
		|		Таблица.Период КАК Период,
		|		Таблица.Регистратор КАК Регистратор,
		|		ЛОЖЬ КАК Проведен,
		|		Таблица.ПрограммаЛояльностиПередЗаписью КАК ПрограммаЛояльностиПередЗаписью,
		|		ЗНАЧЕНИЕ(Справочник.ПрограммыЛояльности.ПустаяСсылка) КАК ПрограммаЛояльностиПриЗаписи,
		|		Таблица.Контрагент КАК Контрагент,
		|		Таблица.ДатаОперации КАК ДатаОперации,
		|		Таблица.СуммаБонусныхБалловПередЗаписью КАК СуммаБонусныхБалловПередЗаписью,
		|		0 КАК СуммаБонусныхБалловПриЗаписи
		|	ИЗ
		|		ДвиженияБонусныеБаллыПередЗаписью КАК Таблица
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Таблица.Период,
		|		Фильтр.Регистратор,
		|		Фильтр.Проведен,
		|		ЗНАЧЕНИЕ(Справочник.ПрограммыЛояльности.ПустаяСсылка),
		|		Таблица.ПрограммаЛояльности,
		|		Таблица.Контрагент,
		|		Фильтр.Дата,
		|		0,
		|		Таблица.СуммаБонусныхБаллов
		|	ИЗ
		|		РегистрНакопления.БонусныеБаллы КАК Таблица
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Фильтр КАК Фильтр
		|			ПО Таблица.Регистратор = Фильтр.Регистратор) КАК ТаблицаДвижений
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДвижений.Контрагент,
		|	ТаблицаДвижений.ДатаОперации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДвиженияБонусныеБаллыПередЗаписью
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Фильтр"
		);

		Запрос.УстановитьПараметр("Регистратор", НаборЗаписей.Отбор.Регистратор.Значение);
		Запрос.МенеджерВременныхТаблиц = НаборЗаписей.ДополнительныеСвойства.УправлениеПоследовательностьюБонусныеБаллы.МенеджерВременныхТаблиц;

		Запрос.Выполнить();

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#КонецОбласти
	
#КонецЕсли

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ФиксироватьИзменениеПриЗаписи(ПрограммаЛояльности, Отказ)	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаВедущая.Ссылка КАК ПрограммаЛояльности,
	|	ТаблицаВедущая.КоличествоПериодовДействия КАК КоличествоПериодовДействия,
	|	ТаблицаВедущая.КоличествоПериодовОтсрочкиНачалаДействия КАК КоличествоПериодовОтсрочкиНачалаДействия,
	|	ТаблицаВедущая.МаксимальныйПроцентОплатыБонусами КАК МаксимальныйПроцентОплатыБонусами,
	|	ТаблицаВедущая.НачислятьБаллыНаАкционныйТовар КАК НачислятьБаллыНаАкционныйТовар,
	|	ТаблицаВедущая.НачислятьБаллыПоКредитнойПрограмме КАК НачислятьБаллыПоКредитнойПрограмме,
	|	ТаблицаВедущая.ПериодДействия КАК ПериодДействия,
	|	ТаблицаВедущая.ПериодОтсрочкиНачалаДействия КАК ПериодОтсрочкиНачалаДействия,
	|	ТаблицаВедущая.СовместноеНачислениеСкидокИБонусов КАК СовместноеНачислениеСкидокИБонусов,
	|	ТаблицаВедущая.СпособПримененияСкидки КАК СпособПримененияСкидки,
	|	ТаблицаВедущая.ТипБонусов КАК ТипБонусов,
	|	ТаблицаВедущая.ТипПрограммыЛояльности КАК ТипПрограммыЛояльности
	|ИЗ
	|	Справочник.ПрограммыЛояльности КАК ТаблицаВедущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КлючевыеАтрибутыПрограммЛояльности.СрезПоследних(, ПрограммаЛояльности = &ПрограммаЛояльности) КАК ТаблицаРегистра
	|		ПО ТаблицаВедущая.Ссылка = ТаблицаРегистра.ПрограммаЛояльности
	|			И ТаблицаВедущая.КоличествоПериодовДействия = ТаблицаРегистра.КоличествоПериодовДействия
	|			И ТаблицаВедущая.КоличествоПериодовОтсрочкиНачалаДействия = ТаблицаРегистра.КоличествоПериодовОтсрочкиНачалаДействия
	|			И ТаблицаВедущая.МаксимальныйПроцентОплатыБонусами = ТаблицаРегистра.МаксимальныйПроцентОплатыБонусами
	|			И ТаблицаВедущая.НачислятьБаллыНаАкционныйТовар = ТаблицаРегистра.НачислятьБаллыНаАкционныйТовар
	|			И ТаблицаВедущая.НачислятьБаллыПоКредитнойПрограмме = ТаблицаРегистра.НачислятьБаллыПоКредитнойПрограмме
	|			И ТаблицаВедущая.ПериодДействия = ТаблицаРегистра.ПериодДействия
	|			И ТаблицаВедущая.ПериодОтсрочкиНачалаДействия = ТаблицаРегистра.ПериодОтсрочкиНачалаДействия
	|			И ТаблицаВедущая.СовместноеНачислениеСкидокИБонусов = ТаблицаРегистра.СовместноеНачислениеСкидокИБонусов
	|			И ТаблицаВедущая.СпособПримененияСкидки = ТаблицаРегистра.СпособПримененияСкидки
	|			И ТаблицаВедущая.ТипБонусов = ТаблицаРегистра.ТипБонусов
	|			И ТаблицаВедущая.ТипПрограммыЛояльности = ТаблицаРегистра.ТипПрограммыЛояльности
	|ГДЕ
	|	ТаблицаВедущая.Ссылка = &ПрограммаЛояльности
	|	И ТаблицаРегистра.ПрограммаЛояльности ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРегистра.ПрограммаЛояльности КАК ПрограммаЛояльности
	|ИЗ
	|	РегистрСведений.КлючевыеАтрибутыПрограммЛояльности.СрезПоследних(, ПрограммаЛояльности = &ПрограммаЛояльности) КАК ТаблицаРегистра"
	);
	Запрос.УстановитьПараметр("ПрограммаЛояльности", ПрограммаЛояльности);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатыЗапроса[0].Пустой() Тогда

		Выборка = РезультатыЗапроса[0].Выбрать();
		Выборка.Следующий();

		НаборЗаписей = РегистрыСведений.КлючевыеАтрибутыПрограммЛояльности.СоздатьНаборЗаписей();
		НаборЗаписей.ОбменДанными.Загрузка = Истина;

		НаборЗаписей.Отбор.Период.Установить(?(РезультатыЗапроса[1].Пустой(), '20160101', ТекущаяДатаСеанса()));
		НаборЗаписей.Отбор.ПрограммаЛояльности.Установить(ПрограммаЛояльности);

		ЗаписьНабора = НаборЗаписей.Добавить();

		ЗаполнитьЗначенияСвойств(ЗаписьНабора, Выборка);

		ЗаписьНабора.Период = НаборЗаписей.Отбор.Период.Значение;
		ЗаписьНабора.ПрограммаЛояльности = НаборЗаписей.Отбор.ПрограммаЛояльности.Значение;
		ЗаписьНабора.Автор = ПараметрыСеанса.ТекущийПользователь;

		НаборЗаписей.Записать();

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#КонецОбласти
	
#КонецЕсли

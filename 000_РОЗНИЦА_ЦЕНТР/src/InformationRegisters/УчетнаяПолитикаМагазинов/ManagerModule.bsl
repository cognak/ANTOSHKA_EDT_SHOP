#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
//	LNK 20.05.2019 13:55:28
Процедура ПроверитьРегламентФормированиеСегментов()	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		БылоВоздействие = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
			"УниверсальныйОбработчикДанных", "ПроверитьРегламентФормированиеСегментов", '00010101');

		Если НЕ БылоВоздействие = НачалоДня(ТекущаяДата())  Тогда

			РегламентноеЗадание = РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.ФормированиеСегментов);

			Если СегментыСервер.РазрешеноФормированиеНоменклатурыСегмента() Тогда

				ОбновитьРасписание = НЕ РегламентноеЗадание.Использование ИЛИ РегламентноеЗадание.Расписание.ДетальныеРасписанияДня.Количество() = 0;

				Если НЕ ОбновитьРасписание Тогда

					ОбновитьРасписание = НЕ РегламентноеЗадание.Расписание.ДетальныеРасписанияДня.Количество() = 2;

					Если НЕ ОбновитьРасписание Тогда

						ОбновитьРасписание = НЕ РегламентноеЗадание.Расписание.ДетальныеРасписанияДня[0].ВремяНачала = '00010101' + 15;

					КонецЕсли;

				КонецЕсли;

				Если ОбновитьРасписание Тогда

					УстановитьРасписаниеРегламента(РегламентноеЗадание);

				КонецЕсли;

			ИначеЕсли РегламентноеЗадание.Использование Тогда

			//	ВЫКЛ.
				РегламентноеЗадание.Использование = Ложь;
				РегламентноеЗадание.Записать();

			КонецЕсли;

			ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
				"УниверсальныйОбработчикДанных", 
				"ПроверитьРегламентФормированиеСегментов", 
				НачалоДня(ТекущаяДата())
			);

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьРасписаниеРегламента(РегламентноеЗадание)

//	ВКЛ.
	РегламентноеЗадание.Использование = Истина;
	РегламентноеЗадание.Наименование  = "ФОРМИРОВАНИЕ СЕГМЕНТОВ (" + Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy") + ")";

	ДниНедели = Новый Массив;
	ДниНедели.Добавить(1);
	ДниНедели.Добавить(2);
	ДниНедели.Добавить(3);
	ДниНедели.Добавить(4);
	ДниНедели.Добавить(5);
	ДниНедели.Добавить(6);
	ДниНедели.Добавить(7);

	РегламентноеЗадание.Расписание.ДниНедели = ДниНедели;

	РегламентноеЗадание.Расписание.ПериодПовтораДней = 1;
	РегламентноеЗадание.Расписание.ДеньНеделиВМесяце = 0;
	РегламентноеЗадание.Расписание.ДеньВМесяце       = 0;

	РегламентноеЗадание.Расписание.ДатаНачала  = НачалоДня(ТекущаяДата());

	РегламентноеЗадание.Расписание.ВремяНачала = 0;
	РегламентноеЗадание.Расписание.ВремяКонца  = 0;
	РегламентноеЗадание.Расписание.ПериодПовтораВТечениеДня = 0;

	ДетальныеРасписанияДня = Новый Массив;
	ДетальныеРасписанияДня.Добавить(Новый РасписаниеРегламентногоЗадания);
	ДетальныеРасписанияДня[0].ВремяНачала = '00010101' + 15;		//	15 секунд первого
	ДетальныеРасписанияДня.Добавить(Новый РасписаниеРегламентногоЗадания);
	ДетальныеРасписанияДня[1].ВремяНачала = '00010101' + 3600 * 4;	//	4 часа утра.. контрольный.

	РегламентноеЗадание.Расписание.ДетальныеРасписанияДня = ДетальныеРасписанияДня;

	РегламентноеЗадание.Записать();

КонецПроцедуры

#КонецОбласти
	
#КонецЕсли





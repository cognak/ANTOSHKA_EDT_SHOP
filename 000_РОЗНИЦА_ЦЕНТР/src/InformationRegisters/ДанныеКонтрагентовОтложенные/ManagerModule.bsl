#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//	LNK 24.10.2018 15:53:56
Процедура ВыполнитьРегистрацию(ДокументСсылка, ДанныеКонтрагента, Назначение)	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	МенеджерЗаписи = РегистрыСведений.ДанныеКонтрагентовОтложенные.СоздатьМенеджерЗаписи();

	МенеджерЗаписи.ДокументПродажи   = ДокументСсылка;
	МенеджерЗаписи.ДанныеКонтрагента = Новый ХранилищеЗначения(ДанныеКонтрагента);
	МенеджерЗаписи.Назначение        = Назначение;

	МенеджерЗаписи.Записать();

КонецПроцедуры

#Область КонтрольСостояниеОтложенныхДанных

//	LNK 25.10.2018 12:58:28
Процедура ПроверитьОтложенныхКонтрагентов(Назначение, ВыполнениеРегламента = Ложь)	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Если Назначение = Перечисления.НазначениеКонтрагентовОтложенных.Magento Тогда

		ПроверитьПоДокументамЗаказов(Назначение);

	Иначе

	//	Выполним контроль доступности внешних ресурсов.

		Если Назначение = Перечисления.НазначениеКонтрагентовОтложенных.ПроверкаВCRM Тогда

			Если НЕ РозничныеПродажиСлужебный.РесурсMicrosoftDynamicsДоступен() Тогда

				Возврат;

			КонецЕсли;

		ИначеЕсли Назначение = Перечисления.НазначениеКонтрагентовОтложенных.ПроверкаВРознице Тогда

			Если НЕ РозничныеПродажиСлужебный.РесурсWebRetailДоступен() Тогда

				Возврат;

			КонецЕсли;

		КонецЕсли;

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаРегистра.ДокументПродажи КАК ДокументПродажи,
		|	ТаблицаРегистра.Магазин КАК Магазин,
		|	ТаблицаРегистра.Назначение КАК Назначение,
		|	ТаблицаРегистра.ДанныеКонтрагента КАК ДанныеКонтрагента,
		|	ТаблицаРегистра.КодКарты КАК КодКарты,
		|	ТаблицаРегистра.Контрагент КАК Контрагент,
		|	ТаблицаРегистра.НомерТелефона КАК НомерТелефона,
		|	ТаблицаРегистра.ДатаИзменения КАК ДатаИзменения
		|ИЗ
		|	РегистрСведений.ДанныеКонтрагентовОтложенные КАК ТаблицаРегистра
		|ГДЕ
		|	ТаблицаРегистра.Назначение = &Назначение
		|	И НЕ ТаблицаРегистра.Выполнен
		|	И ВЫБОР
		|			КОГДА ТаблицаРегистра.Назначение = ЗНАЧЕНИЕ(Перечисление.НазначениеКонтрагентовОтложенных.ПроверкаВCRM)
		|				ТОГДА ТаблицаРегистра.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &Магазин = НЕОПРЕДЕЛЕНО
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ТаблицаРегистра.Магазин = &Магазин
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаИзменения"
		);
		Запрос.УстановитьПараметр("Назначение", Назначение);
		Запрос.УстановитьПараметр("Магазин"   , ?(ОбменДаннымиПовтИсп.ЭтоГлавныйУзел()
			, Неопределено
			, ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин));
			
		КлиентыНайденные = Новый Соответствие;

		ДанныеВыборка = Запрос.Выполнить().Выбрать();
		
		Пока ДанныеВыборка.Следующий() Цикл

			СоставДанных = ПолучитьКлиентыНайденные(КлиентыНайденные, ДанныеВыборка);

			Если СоставДанных.Контрагент = Неопределено Тогда

				Отказ = Ложь;

				ДанныеКонтрагента = ДанныеВыборка.ДанныеКонтрагента.Получить();

				Если Назначение = Перечисления.НазначениеКонтрагентовОтложенных.ПроверкаВCRM Тогда

					Если ТипЗнч(ДанныеКонтрагента) = Тип("Структура") Тогда

						Если ПустаяСтрока(ДанныеКонтрагента.Имя) ИЛИ НЕ СтрДлина(ДанныеКонтрагента.НомерТелефона) = 12 Тогда

							Отказ = Истина;

						КонецЕсли;

					КонецЕсли;

				КонецЕсли;

				Если НЕ Отказ Тогда

					СоставДанных = РозничныеПродажиСлужебный.ВыполнитьКомплексДанныхКонтрагента(
						ДанныеВыборка.КодКарты,
						ДанныеВыборка.НомерТелефона,
						ДанныеКонтрагента,
						ДанныеВыборка.Назначение,
						ДанныеВыборка.ДокументПродажи,
						ВыполнениеРегламента
					);

				КонецЕсли;

			КонецЕсли;

			Если НЕ СоставДанных.Контрагент = Неопределено Тогда

				УстановитьКлиентыНайденные(КлиентыНайденные, ДанныеВыборка, СоставДанных);

				МенеджерЗаписи = РегистрыСведений.ДанныеКонтрагентовОтложенные.СоздатьМенеджерЗаписи();
				
			//	Измерения
				МенеджерЗаписи.ДокументПродажи = ДанныеВыборка.ДокументПродажи;
				МенеджерЗаписи.Магазин         = ДанныеВыборка.Магазин;
				МенеджерЗаписи.Назначение      = ДанныеВыборка.Назначение;

				МенеджерЗаписи.Прочитать();

				Если МенеджерЗаписи.Выбран() Тогда

					МенеджерЗаписи.Выполнен   = Истина;
					МенеджерЗаписи.Контрагент = СоставДанных.Контрагент;

					МенеджерЗаписи.Записать();

				КонецЕсли;

			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

//	LNK 23.08.2019 11:41:03
Процедура ПроверитьПоДокументамЗаказов(Назначение)

	СсылкиИспользованы = Новый Соответствие;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаРегистра.ДокументПродажи КАК ДокументПродажи,
	|	ТаблицаРегистра.Магазин КАК Магазин,
	|	ТаблицаРегистра.Назначение КАК Назначение,
	|	ТаблицаРегистра.ДанныеКонтрагента КАК ДанныеКонтрагента,
	|	ТаблицаРегистра.ДатаИзменения КАК ДатаИзменения,
	|	ТаблицаРегистра.ДокументПродажи.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ТаблицаДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеКонтрагентовОтложенные КАК ТаблицаРегистра
	|		ПО ТаблицаДокументы.Ссылка = ТаблицаРегистра.ДокументПродажи
	|ГДЕ
	|	НЕ ТаблицаРегистра.Выполнен
	|	И ТаблицаДокументы.УчетнаяСистема В (ЗНАЧЕНИЕ(Перечисление.УчетныеСистемыКомпании.Magento), ЗНАЧЕНИЕ(Перечисление.УчетныеСистемыКомпании.ПустаяСсылка))
	|	И ТаблицаРегистра.Назначение = &Назначение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРегистра.ДокументПродажи,
	|	ТаблицаРегистра.Магазин,
	|	ТаблицаРегистра.Назначение,
	|	ТаблицаРегистра.ДанныеКонтрагента,
	|	ТаблицаРегистра.ДатаИзменения,
	|	ТаблицаРегистра.ДокументПродажи.Контрагент
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ТаблицаДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеКонтрагентовОтложенные КАК ТаблицаРегистра
	|		ПО ТаблицаДокументы.Ссылка = ТаблицаРегистра.ДокументПродажи
	|ГДЕ
	|	НЕ ТаблицаРегистра.Выполнен
	|	И ТаблицаДокументы.УчетнаяСистема В (ЗНАЧЕНИЕ(Перечисление.УчетныеСистемыКомпании.Magento), ЗНАЧЕНИЕ(Перечисление.УчетныеСистемыКомпании.ПустаяСсылка))
	|	И ТаблицаРегистра.Назначение = &Назначение
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаИзменения УБЫВ,
	|	ДокументПродажи УБЫВ"
	);
	Запрос.УстановитьПараметр("Назначение", Назначение);

	ДанныеВыборка = Запрос.Выполнить().Выбрать();

	Пока ДанныеВыборка.Следующий() Цикл

		НачатьТранзакцию();

		Попытка

			ТекущийКонтрагент = СсылкиИспользованы.Получить(ДанныеВыборка.ДокументПродажи);

			Если ТекущийКонтрагент = Неопределено Тогда

				ДанныеКонтрагента = ДанныеВыборка.ДанныеКонтрагента.Получить();

				Если НЕ ОбменССайтом.НайтиКонтрагента(ДанныеКонтрагента) Тогда

					ОбменССайтом.СоздатьКонтрагента(ДанныеКонтрагента);

				КонецЕсли;

				Если НЕ ДанныеКонтрагента.Контрагент.Пустая() И НЕ ДанныеКонтрагента.Контрагент = Справочники.Контрагенты.РозничныйПокупатель Тогда

					ДокументОбъект = ДанныеВыборка.ДокументПродажи.ПолучитьОбъект();
					ДокументОбъект.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
					ДокументОбъект.ДополнительныеСвойства.Вставить("НеИзменятьФлагиРезервирования", Истина);
					#Если _ Тогда
					ДокументОбъект = Документы.ЗаказПокупателя.СоздатьДокумент();
					#КонецЕсли

					ДокументОбъект.Контрагент = ДанныеКонтрагента.Контрагент;
					ДокументОбъект.ДисконтнаяКарта = ДанныеКонтрагента.ДисконтнаяКарта;

					ДокументОбъект.УчетнаяСистема = Перечисления.УчетныеСистемыКомпании.Magento;

					Если ДокументОбъект.Проведен Тогда

							ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);

					Иначе	ДокументОбъект.Записать();

					КонецЕсли;

				КонецЕсли;

				СсылкиИспользованы.Вставить(ДанныеВыборка.ДокументПродажи, ДанныеКонтрагента.Контрагент);
				ТекущийКонтрагент = ДанныеКонтрагента.Контрагент;

			КонецЕсли;

			НаборЗаписей = РегистрыСведений.ДанныеКонтрагентовОтложенные.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ДокументПродажи.Установить(ДанныеВыборка.ДокументПродажи);
			НаборЗаписей.Отбор.Магазин.Установить(ДанныеВыборка.Магазин);
			НаборЗаписей.Отбор.Назначение.Установить(ДанныеВыборка.Назначение);

			НаборЗаписей.Прочитать();

			Для каждого ЗаписьНабора Из НаборЗаписей Цикл

				ЗаписьНабора.Контрагент = ТекущийКонтрагент;
				ЗаписьНабора.Выполнен   = Истина;

			КонецЦикла;

			НаборЗаписей.Записать();

			ЗафиксироватьТранзакцию();

		Исключение

			ОтменитьТранзакцию();

			ТекстОшибки = ОписаниеОшибки();
			ЗаписьЖурналаРегистрации("ДанныеКонтрагентовОтложенные", УровеньЖурналаРегистрации.Ошибка
			, ДанныеВыборка.ДокументПродажи.Метаданные(), ДанныеВыборка.ДокументПродажи, ТекстОшибки, РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);

			Продолжить;

		КонецПопытки;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

//	LNK 31.10.2018 09:48:03
Процедура ПроверитьВЧекахПоЗаказамИзмененияКонтрагентов()	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаПродажи.Дата КАК Период,
	|	ТаблицаПродажи.Ссылка КАК Регистратор,
	|	ТаблицаЗаказы.Контрагент КАК Контрагент,
	|	ТаблицаЗаказы.ДисконтнаяКарта КАК ДисконтнаяКарта
	|ИЗ
	|	Документ.ЧекККМ КАК ТаблицаПродажи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ТаблицаЗаказы
	|		ПО ТаблицаПродажи.ЗаказПокупателя = ТаблицаЗаказы.Ссылка
	|ГДЕ
	|	ТаблицаПродажи.Дата >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ), ДЕНЬ, -1)
	|	И НЕ ТаблицаПродажи.ВладелецДисконтнойКарты = ТаблицаЗаказы.Контрагент
	|	И ТаблицаПродажи.ВладелецДисконтнойКарты = ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|	И ТаблицаПродажи.ОтчетОРозничныхПродажах = ЗНАЧЕНИЕ(Документ.ОтчетОРозничныхПродажах.ПустаяСсылка)"
	);
//	Корректировку возможных изменений выполняем за двое суток - сегодня и вчера! Мало ли, не закрыли какую кассовую смену.
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
		#Если _ Тогда
		ДокументОбъект = Документы.ЧекККМ.СоздатьДокумент();
		#КонецЕсли

		ДокументОбъект.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
		ДокументОбъект.ДополнительныеСвойства.Вставить("СлужебнаяЗапись", Истина);

		ДокументОбъект.ВладелецДисконтнойКарты = Выборка.Контрагент;
		ДокументОбъект.ДисконтнаяКарта = Выборка.ДисконтнаяКарта;

		Если ДокументОбъект.Проведен Тогда

			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);

		Иначе

			ДокументОбъект.ОбменДанными.Загрузка = Истина;
			ДокументОбъект.Записать();

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

#Область СлужебныеМетоды

Процедура УстановитьКлиентыНайденные(КлиентыНайденные, ДанныеВыборка, СоставДанных)

	СписокКлючей = Новый Массив;
	СписокКлючей.Добавить("КодКарты");
	СписокКлючей.Добавить("НомерТелефона");

	Для каждого Ключ Из СписокКлючей Цикл

		Если НЕ ПустаяСтрока(ДанныеВыборка[Ключ]) Тогда

			КлиентыНайденные.Вставить(ДанныеВыборка[Ключ], СоставДанных);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Функция ПолучитьКлиентыНайденные(КлиентыНайденные, ДанныеВыборка)

	СписокКлючей = Новый Массив;
	СписокКлючей.Добавить("КодКарты");
	СписокКлючей.Добавить("НомерТелефона");

	Для каждого Ключ Из СписокКлючей Цикл

		Если НЕ ПустаяСтрока(ДанныеВыборка[Ключ]) Тогда

			СоставДанных = КлиентыНайденные.Получить(ДанныеВыборка[Ключ]);

			Если НЕ СоставДанных = Неопределено Тогда

				Прервать;

			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

	Если СоставДанных = Неопределено Тогда

		СоставДанных = ОбменMicrosoftDynamicsСервер.ИнициализироватьСоставДанных();

	КонецЕсли;

	Возврат СоставДанных;

КонецФункции

#КонецОбласти

#КонецЕсли













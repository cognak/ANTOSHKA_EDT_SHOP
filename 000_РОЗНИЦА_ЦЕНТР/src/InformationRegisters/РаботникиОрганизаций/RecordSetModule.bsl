
Процедура ПриЗаписи(Отказ, Замещение)
	Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Возврат;

	КонецЕсли;
	//Перенос сотрудника в нужную группу
	Для Каждого ТекЗапись Из ЭтотОбъект Цикл
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	РаботникиОрганизаций.Сотрудник КАК Сотрудник
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
			|ГДЕ
			|	РаботникиОрганизаций.Сотрудник = &Сотрудник
			|	И РаботникиОрганизаций.ПериодНачала >= &ПериодНачала";
		
		Запрос.УстановитьПараметр("ПериодНачала", ТекЗапись.ПериодНачала);
		Запрос.УстановитьПараметр("Сотрудник", ТекЗапись.Сотрудник);
		КолЗаписей = Запрос.Выполнить().Выгрузить().Количество();
		
		Если КолЗаписей > 1 Тогда 
			Продолжить;
		КонецЕсли;
		
		ОбъектСотрудник = ТекЗапись.Сотрудник.ПолучитьОбъект();
		НужноЗаписать = Ложь;
		НедействительныйПользователь = Ложь;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ФизическиеЛица.Ссылка КАК Родитель
			|ИЗ
			|	Справочник.ФизическиеЛица КАК ФизическиеЛица
			|ГДЕ
			|	ФизическиеЛица.ЭтоГруппа
			|	И ФизическиеЛица.Магазин = &Магазин";
		
		Запрос.УстановитьПараметр("Магазин", ТекЗапись.Магазин);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда
			Если Не ТекЗапись.Сотрудник.Родитель = Выборка.Родитель Тогда
				НужноЗаписать = Истина;
				ОбъектСотрудник.Родитель = Выборка.Родитель;
			КонецЕсли;
		КонецЕсли;
		
		//Если ТекЗапись.СостояниеСотрудника = Перечисления.ПричиныИзмененияСостояния.Увольнение Тогда 
		//	ОбъектСотрудник.Уволен = Истина;
		//	НедействительныйПользователь = Истина;
		//	ОбъектСотрудник.Сотрудник = Ложь;
		//	НужноЗаписать = Истина;
		//	ОбъектСотрудник.НомерСотрудника = 0;
		//ИначеЕсли ТекЗапись.СостояниеСотрудника = Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу Или ТекЗапись.СостояниеСотрудника = Перечисления.ПричиныИзмененияСостояния.Перемещение Тогда 
		//	ОбъектСотрудник.Уволен = Ложь;
		//	НужноЗаписать = Истина;
		//КонецЕсли;
		//
		//Если ТекЗапись.ВидЗанятости = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы Или ТекЗапись.ВидЗанятости = Перечисления.ВидыЗанятости.ВнутреннееСовместительство Тогда 
		//	НужноЗаписать = Истина;
		//	ОбъектСотрудник.Сотрудник = Истина;
		//Иначе
		//	НужноЗаписать = Истина;
		//	ОбъектСотрудник.Сотрудник = Ложь;
		//КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	РаботникиОрганизаций.ВидЗанятости КАК ВидЗанятости,
			|	МАКСИМУМ(РаботникиОрганизаций.ПериодНачала) КАК ПериодНачала,
			|	РаботникиОрганизаций.Организация КАК Организация
			|ПОМЕСТИТЬ ПериодыРаботы
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
			|ГДЕ
			|	РаботникиОрганизаций.Сотрудник = &Сотрудник
			|
			|СГРУППИРОВАТЬ ПО
			|	РаботникиОрганизаций.ВидЗанятости,
			|	РаботникиОрганизаций.Организация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПериодыРаботы.ВидЗанятости КАК ВидЗанятости,
			|	ПериодыРаботы.ПериодНачала КАК ПериодНачала,
			|	РаботникиОрганизаций.СостояниеСотрудника КАК СостояниеСотрудника,
			|	ПериодыРаботы.Организация КАК Организация
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыРаботы КАК ПериодыРаботы
			|		ПО (ПериодыРаботы.ВидЗанятости = РаботникиОрганизаций.ВидЗанятости)
			|			И (ПериодыРаботы.ПериодНачала = РаботникиОрганизаций.ПериодНачала)
			|			И (ПериодыРаботы.Организация = РаботникиОрганизаций.Организация)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПериодНачала";
		
		Запрос.УстановитьПараметр("Сотрудник", ТекЗапись.Сотрудник);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		ЯвляетсяСотрудником = Ложь;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если Не ВыборкаДетальныеЗаписи.СостояниеСотрудника = Перечисления.ПричиныИзмененияСостояния.Увольнение Тогда
				ЯвляетсяСотрудником = Истина;
			КонецЕсли;
		КонецЦикла;
		
		НужноЗаписать = Истина;
		
		Если ЯвляетсяСотрудником Тогда 
			ОбъектСотрудник.Сотрудник = Истина;
			ОбъектСотрудник.Уволен = Ложь;
		Иначе
			ОбъектСотрудник.Уволен = Истина;
			НедействительныйПользователь = Истина;
			ОбъектСотрудник.Сотрудник = Ложь;
			ОбъектСотрудник.НомерСотрудника = 0;
		КонецЕсли;
		
		Если Не ТекЗапись.Сотрудник.Магазин = ТекЗапись.Магазин Тогда 
			ОбъектСотрудник.Магазин = ТекЗапись.Магазин;
			НужноЗаписать = Истина;
		КонецЕсли;
		
		Если НужноЗаписать Тогда
			ОбъектСотрудник.ОбменДанными.Загрузка = Истина;
			ОбъектСотрудник.Записать();
			
			//создаем информационную карту
			Если ОбъектСотрудник.Сотрудник  Тогда
				ОбъектОснование  = Справочники.ИнформационныеКарты.НайтиПоРеквизиту("ВладелецКарты",ОбъектСотрудник.Ссылка);
				Если  Не ЗначениеЗаполнено(ОбъектОснование) Тогда
					
					СпрИнформКарты = Справочники.ИнформационныеКарты;
					НоваяКарта = СпрИнформКарты.СоздатьЭлемент();
					НоваяКарта.ВладелецКарты = ОбъектСотрудник.Ссылка;
					НоваяКарта.ТипКарты = Перечисления.ТипыИнформационныхКарт.Регистрационная;
					
					
					//Сформируем ШК для карты
					Магазин = ТекЗапись.Магазин;
					ШтрихкодКарты = ПодключаемоеОборудованиеРТ.СформироватьШтрихкодИнформационнойКарты(Магазин); 
					
					НоваяКарта.Наименование =  ШтрихкодКарты;
					НоваяКарта.Записать();
					
					////Запись в Регистр
					НоваяЗапись = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
					НоваяЗапись.Владелец     = НоваяКарта.Ссылка;
					НоваяЗапись.ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13;
					НоваяЗапись.Штрихкод     = ШтрихкодКарты;
					НоваяЗапись.Записать();
				Иначе
					Если НедействительныйПользователь Тогда 
						ИнформационнаяКартаОбъект = ОбъектОснование.ПолучитьОбъект();
						ИнформационнаяКартаОбъект.Блокирован = Истина;
						ИнформационнаяКартаОбъект.Записать();
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		
		ПользовательСсылка = Справочники.Пользователи.НайтиПоРеквизиту("ФизЛицо", ОбъектСотрудник.Ссылка);
		НужноЗаписать = Ложь;
		Если ПользовательСсылка.Пустая() Тогда
			Если НедействительныйПользователь Тогда 
				Продолжить;
			КонецЕсли;
			
			ПользовательОбъект = Справочники.Пользователи.СоздатьЭлемент();
			ПользовательОбъект.ФизЛицо = ОбъектСотрудник.Ссылка;
			ПользовательОбъект.Наименование = Строка(ПользовательОбъект.ФизЛицо);
		Иначе
			ПользовательОбъект = ПользовательСсылка.ПолучитьОбъект();
		КонецЕсли;
		Если Не ПользовательОбъект.Магазин = ТекЗапись.Магазин Тогда
			НужноЗаписать = Истина;
			ПользовательОбъект.Магазин = ТекЗапись.Магазин;
		КонецЕсли;
		Если Не ПользовательОбъект.Наименование = Строка(ПользовательОбъект.ФизЛицо) Тогда
			НужноЗаписать = Истина;
			ПользовательОбъект.Наименование = Строка(ПользовательОбъект.ФизЛицо);
		КонецЕсли;
		Если Не ПользовательОбъект.ТекущаяДолжность = Строка(ТекЗапись.Должность) Тогда
			НужноЗаписать = Истина;
			ПользовательОбъект.ТекущаяДолжность = ТекЗапись.Должность;
		КонецЕсли;
		Если Не ПользовательОбъект.Недействителен = НедействительныйПользователь Тогда
			НужноЗаписать = Истина;
			ПользовательОбъект.Недействителен = НедействительныйПользователь;
		КонецЕсли;
		
		Если НедействительныйПользователь Тогда
			ОписаниеПользователяИБ = Новый Структура;
			ОписаниеПользователяИБ.Вставить("Действие", "Удалить");
			ПользовательОбъект.ДополнительныеСвойства.Вставить("ОписаниеПользователяИБ", ОписаниеПользователяИБ);
			НужноЗаписать = Истина;
		КонецЕсли;
		
		Если НужноЗаписать Тогда
			ПользовательОбъект.ОбменДанными.Загрузка = Истина;
			ПользовательОбъект.Записать();
		КонецЕсли;
		
		МенеджерЗаписи = РегистрыСведений.СоставыГруппПользователей.СоздатьМенеджерЗаписи();
		
		МенеджерЗаписи.ГруппаПользователей = Справочники.ГруппыПользователей.ВсеПользователи;
		МенеджерЗаписи.Пользователь = ПользовательОбъект.Ссылка;
		МенеджерЗаписи.Используется = Не НедействительныйПользователь;
		
		МенеджерЗаписи.Записать();
		
		Если НедействительныйПользователь Тогда 
			СоставИмени = ОбщегоНазначенияКлиентСервер.lx_FillValueList(, ПользовательОбъект.Наименование,, " ");
			ПользовательИнфБазыИмя = ?(СоставИмени.Количество() > 2, СоставИмени[0] + " " + СоставИмени[1], ПользовательОбъект.Наименование);
			
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	СтруктураУзловПользователи.Ссылка КАК Ссылка,
				|	СтруктураУзловПользователи.НомерСтроки КАК НомерСтроки
				|ПОМЕСТИТЬ УзелПользователя
				|ИЗ
				|	Справочник.СтруктураУзлов.Пользователи КАК СтруктураУзловПользователи
				|ГДЕ
				|	СтруктураУзловПользователи.Имя = &Имя
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	УзелПользователя.Ссылка КАК Ссылка,
				|	УзелПользователя.НомерСтроки КАК НомерСтроки
				|ПОМЕСТИТЬ НаУдалениеСотрудника
				|ИЗ
				|	УзелПользователя КАК УзелПользователя
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураУзлов.Магазины КАК СтруктураУзловМагазины
				|		ПО УзелПользователя.Ссылка = СтруктураУзловМагазины.Ссылка
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураУзлов КАК СтруктураУзлов
				|		ПО УзелПользователя.Ссылка = СтруктураУзлов.Ссылка
				|ГДЕ
				|	НЕ(СтруктураУзлов.Магазин = &Магазин
				|				ИЛИ СтруктураУзловМагазины.Магазин = &Магазин)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	УзелПользователя.Ссылка КАК Ссылка,
				|	УзелПользователя.НомерСтроки КАК НомерСтроки,
				|	ВложенныйЗапрос.Ссылка КАК Узел
				|ПОМЕСТИТЬ ПользовательЕстьВУзле
				|ИЗ
				|	УзелПользователя КАК УзелПользователя
				|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			СтруктураУзлов.Ссылка КАК Ссылка
				|		ИЗ
				|			Справочник.СтруктураУзлов КАК СтруктураУзлов
				|		ГДЕ
				|			СтруктураУзлов.Магазин = &Магазин
				|		
				|		ОБЪЕДИНИТЬ ВСЕ
				|		
				|		ВЫБРАТЬ
				|			СтруктураУзловМагазины.Ссылка
				|		ИЗ
				|			Справочник.СтруктураУзлов.Магазины КАК СтруктураУзловМагазины
				|		ГДЕ
				|			СтруктураУзловМагазины.Магазин = &Магазин) КАК ВложенныйЗапрос
				|		ПО УзелПользователя.Ссылка = ВложенныйЗапрос.Ссылка";
			
			Запрос.УстановитьПараметр("Имя", ПользовательИнфБазыИмя);
			Запрос.УстановитьПараметр("Магазин", ПользовательОбъект.Магазин);
			
			РезультатЗапроса = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
			
			Выборка = РезультатЗапроса[0].Выбрать();
			
			Если Выборка.Следующий() Тогда 
				Если ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда 
					ПользователиСлужебный.ВключениеВыключениеПользователяИзЗУП(ПользовательОбъект.Ссылка, Не НедействительныйПользователь);
					//Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			
			Выборка = РезультатЗапроса[1].Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ОбъектСтруктураУзлов = Выборка.Ссылка.ПолучитьОбъект();
				ОбъектСтруктураУзлов.Пользователи[Выборка.НомерСтроки - 1].УникальныйИдентификатор = Новый УникальныйИдентификатор("ffffffff-ffff-ffff-ffff-ffffffffffff");
				ОбъектСтруктураУзлов.ОбменДанными.Загрузка = Истина;
				ОбъектСтруктураУзлов.Записать();
			КонецЦикла;
			
			Выборка = РезультатЗапроса[2].Выбрать();
			
			Пока Выборка.Следующий() Цикл
				Если Выборка.Ссылка = Null Тогда
					Если НедействительныйПользователь Тогда 
						Продолжить;
					КонецЕсли;
					ОбъектСтруктураУзлов = Выборка.Узел.ПолучитьОбъект();
					НовыйПользователь = ОбъектСтруктураУзлов.Пользователи.Добавить();
					НовыйПользователь.Имя = ПользовательИнфБазыИмя;
					НовыйПользователь.ПолноеИмя = ПользовательОбъект.Наименование;
					НовыйПользователь.УникальныйИдентификатор = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
					ОбъектСтруктураУзлов.ОбменДанными.Загрузка = Истина;
					ОбъектСтруктураУзлов.Записать();
				Иначе 
					Если НедействительныйПользователь Тогда
						ОбъектСтруктураУзлов = Выборка.Ссылка.ПолучитьОбъект();
						ОбъектСтруктураУзлов.Пользователи[Выборка.НомерСтроки - 1].УникальныйИдентификатор = Новый УникальныйИдентификатор("ffffffff-ffff-ffff-ffff-ffffffffffff");
						ОбъектСтруктураУзлов.ОбменДанными.Загрузка = Истина;
						ОбъектСтруктураУзлов.Записать();
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

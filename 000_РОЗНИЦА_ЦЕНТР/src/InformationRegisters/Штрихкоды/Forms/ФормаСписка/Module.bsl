////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьЗначениеОтбора(ЗначениеВладельца)
	
	Если ЗначениеЗаполнено(ЗначениеВладельца) Тогда
		
		Если ЗначениеВладельца = "Все" Тогда
			ЗначениеОтбора = Тип("Неопределено");
		ИначеЕсли ЗначениеВладельца = "Номенклатура" Тогда	
			ЗначениеОтбора = Тип("СправочникСсылка.Номенклатура");
		ИначеЕсли ЗначениеВладельца = "ИнформационнаяКарта" Тогда	
			ЗначениеОтбора = Тип("СправочникСсылка.ИнформационныеКарты");
		ИначеЕсли ЗначениеВладельца = "СерийныйНомер" Тогда	
			ЗначениеОтбора = Тип("СправочникСсылка.СерийныеНомера");
		ИначеЕсли ЗначениеВладельца = "ЗапросДоступности" Тогда	
			ЗначениеОтбора = Тип("ДокументСсылка.ЗапросДоступностиТоваров");
		КонецЕсли;	
		
	Иначе
		
		ЗначениеОтбора = Тип("Неопределено");
		
	КонецЕсли;
	
	Возврат ЗначениеОтбора;
	
КонецФункции	

#Область ОбработчикиСобытийФормы

//Процедура - обработчик события "ПриСозданииНаСервере"
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПараметрыИсточникаДанных();

	Если Параметры.Отбор.Свойство("Владелец") Тогда
		
		ПросмотрДанныхПоНоменклатуре = ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.Номенклатура");
		Элементы.Характеристика.Видимость = ПросмотрДанныхПоНоменклатуре;
		Элементы.Упаковка.Видимость = ПросмотрДанныхПоНоменклатуре;
		
		Если ПросмотрДанныхПоНоменклатуре Тогда
			Элементы.Владелец.Заголовок = НСтр("ru = 'Номенклатура'");
		ИначеЕсли ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.ИнформационныеКарты") Тогда
			Элементы.Владелец.Заголовок = НСтр("ru = 'Информационные карты'");
		ИначеЕсли ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.СерийныеНомера") Тогда
			Элементы.Владелец.Заголовок = НСтр("ru = 'Номер подарочного сертификата'");
		КонецЕсли;
		
		Элементы.ГруппаОтбор.Видимость = Ложь;
				
		Если ПросмотрДанныхПоНоменклатуре Тогда
			ТекстЗаголовка = "";
			АвтоЗаголовок = Ложь;
			ТекстЗаголовка = НСтр("ru = 'Штрихкоды номенклатуры (%Владелец%)'");
			ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(Параметры.Отбор.Владелец));
			Заголовок     = ТекстЗаголовка
		ИначеЕсли ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.ИнформационныеКарты") Тогда
			ТекстЗаголовка = "";
			АвтоЗаголовок = Ложь;
			Если Параметры.Отбор.Владелец.ВидКарты = Перечисления.ВидыИнформационныхКарт.Магнитная Тогда
				ТекстЗаголовка = НСтр("ru = 'Для элемента: ""%Владелец%"" штрихкоды не используются'");
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(Параметры.Отбор.Владелец));
				Элементы.Список.ТолькоПросмотр = Истина;
			Иначе
				ТекстЗаголовка = НСтр("ru = 'Штрихкоды карты (%Владелец%)'");
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(Параметры.Отбор.Владелец));
			КонецЕсли;
			Заголовок     = ТекстЗаголовка;
		ИначеЕсли ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.СерийныеНомера") Тогда
			ТекстЗаголовка = "";
			АвтоЗаголовок = Ложь;
			Если Параметры.Отбор.Владелец.Владелец.ТипСерийногоНомера = Перечисления.ТипыСерийныхНомеровСертификатов.Магнитный Тогда				
				ТекстЗаголовка = НСтр("ru = 'Для элемента: ""%Владелец%"" штрихкоды не используются'");
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(Параметры.Отбор.Владелец));
				Элементы.Список.ТолькоПросмотр = Истина;
			Иначе
				ТекстЗаголовка = НСтр("ru = 'Штрихкоды номеров подарочных сертификатов (%Владелец%)'");
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(Параметры.Отбор.Владелец));
			КонецЕсли;
			Заголовок     = ТекстЗаголовка;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//Процедура - обработчик события "ПриЗагрузкеДанныхИзНастроекНаСервере"
//
&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
		
	Если ЗначениеЗаполнено(Параметры.ТипВладельца) Тогда
		
		ТипВладельца = Параметры.ТипВладельца;
		
	ИначеЕсли Параметры.Отбор.Свойство("Владелец") Тогда
		
		ПросмотрДанныхПоНоменклатуре = ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.Номенклатура");
					
		Если ПросмотрДанныхПоНоменклатуре Тогда
			ТипВладельца = "Номенклатура";
		ИначеЕсли ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.ИнформационныеКарты") Тогда
			ТипВладельца = "ИнформационнаяКарта";
		ИначеЕсли ТипЗнч(Параметры.Отбор.Владелец) = Тип("СправочникСсылка.СерийныеНомера") Тогда
			ТипВладельца = "СерийныйНомер";
		Иначе 
			ТипВладельца = "Все";				
		КонецЕсли;	        
		
	Иначе 		
		
		ТипВладельца = Настройки.Получить("ТипВладельца");
		
	КонецЕсли;	

	Если ПустаяСтрока(ТипВладельца) Тогда
		ТипВладельца = Элементы.ОтборТипВладельца.СписокВыбора[0].Значение;
	КонецЕсли;
	
	ЗначениеОтбора = ПолучитьЗначениеОтбора(ТипВладельца);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
		"ТипВладельца",
		ЗначениеОтбора,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеОтбора <> Тип("Неопределено"));	
	
КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте	//	LNK 28.09.2020 09:32:49
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если Поле = Элементы.Владелец Тогда

		СтандартнаяОбработка = Ложь;
		ОткрытьЗначение(Элемент.ТекущиеДанные.Владелец);

	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" элемента формы "ОтборТипВладельцаПриИзменении" 
//
&НаКлиенте
Процедура ОтборТипВладельцаПриИзменении(Элемент)
	
	ЗначениеОтбора = ПолучитьЗначениеОтбора(ТипВладельца);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
		"ТипВладельца",
		ЗначениеОтбора,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		ЗначениеОтбора <> Тип("Неопределено"));	
	
КонецПроцедуры

&НаСервере	//	LNK 11.05.2021 06:56:51
Процедура УстановитьПараметрыИсточникаДанных()

	Если ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Элементы.АкционнаяЦена.Видимость	= Ложь;
		Элементы.ЦенаДействующая.Видимость	= Ложь;
		Список.Параметры.УстановитьЗначениеПараметра("Магазин", Неопределено);

	Иначе

		Элементы.АкционнаяЦена.Видимость	= Истина;
		Элементы.ЦенаДействующая.Видимость	= Истина;
		Список.Параметры.УстановитьЗначениеПараметра("Магазин", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);

	КонецЕсли;

КонецПроцедуры













#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Посылка в дороге.
// 
// Параметры:
//  ДокументЭН - ДокументСсылка.ЭлектроннаяНакладная - Документ ЭН
// 
// Возвращаемое значение:
//  Булево - Посылка в дороге
Функция ПосылкаВДороге(ДокументЭН) Экспорт
	
	СтруктураДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументЭН, "Номер, ТелефонПолучатель" );
	
	Возврат Не (ПустаяСтрока(СтруктураДокумента.Номер)
		Или ОбменНПСервер.ПроверитьРедактирование(СтруктураДокумента.Номер, СтруктураДокумента.ТелефонПолучатель) = 1);
		
КонецФункции

// Отменить посылку.
// 
// Параметры:
//  ДокументЭН - ДокументСсылка.ЭлектроннаяНакладная - Документ ЭН
Процедура ОтменитьПосылку(ДокументЭН) Экспорт
	
	Если Не ПосылкаВДороге(ДокументЭН) Тогда
		
		СтатусТТН = Справочники.КодыСтатусовТТН.НайтиПоРеквизиту("СтатусПосылки", Перечисления.СтатусыПосылокСлужбыДоставки.Отменена);

		ЗаписьВРегистр(ДокументЭН, СтатусТТН);  

	КонецЕсли

КонецПроцедуры

// Создана посылка.
// 
// Параметры:
//  ДокументЭН - ДокументСсылка.ЭлектроннаяНакладная - Документ ЭН
Процедура СозданаПосылка(ДокументЭН) Экспорт
	
	СтатусТТН = Справочники.КодыСтатусовТТН.НайтиПоРеквизиту("СтатусПосылки", Перечисления.СтатусыПосылокСлужбыДоставки.Новая);

	ЗаписьВРегистр(ДокументЭН, СтатусТТН);  

КонецПроцедуры

// Запись статуса.
// 
// Параметры:
//  ДокументЭН - ДокументСсылка.ЭлектроннаяНакладная - Документ ЭН
//  Статус - СправочникСсылка.КодыСтатусовТТН - Статус
Процедура ЗаписьСтатуса(ДокументЭН, Статус) Экспорт
	
	ЗаписьВРегистр(ДокументЭН, Статус);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписьВРегистр(ДокументЭН, СтатусТТН)

	НачатьТранзакцию();
	Попытка
	
		ТекДата = ТекущаяДатаСеанса();	

		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СтатусыЭН");
		ЭлементБлокировки.УстановитьЗначение("ДокументРегистратор", ДокументЭН);
		ЭлементБлокировки.УстановитьЗначение("Период", ТекДата);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать(); 
	
		НаборЗаписей = СоздатьНаборЗаписей(); 
		
		НаборЗаписей.Отбор.ДокументРегистратор.Установить(ДокументЭН); 
		НаборЗаписей.Отбор.Период.Установить(ТекДата); 
	
		НоваяЗапись 					= НаборЗаписей.Добавить();
		НоваяЗапись.ДокументРегистратор	= ДокументЭН; 
		НоваяЗапись.Период 				= ТекДата;
		НоваяЗапись.СтатусЭН   			= СтатусТТН; 
		НаборЗаписей.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ТекстОшибки = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("Изменение статуса посылки"
			, УровеньЖурналаРегистрации.Ошибка
			, Метаданные.Документы.ЭлектроннаяНакладная
			, ДокументЭН
			, ТекстОшибки
		);
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
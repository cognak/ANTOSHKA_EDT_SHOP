
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Запись состояния заказа покупателя.
// 
// Параметры:
//  ОбъектЗаказ - ДокументОбъект.ЗаказПокупателя - Объект документа Заказ покупателя
Процедура ЗаписьСостояния(ОбъектЗаказ) Экспорт
	
	СтруктураЗаписи = ИнициализацияСтрокиЗаписи();
	СтруктураЗаписи.ЗаказПокупателя		= ОбъектЗаказ.Ссылка;

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка,
		|	ТаблицаДокументы.ВерсияДанных КАК ВерсияДанных,
		|	ТаблицаДокументы.ПометкаУдаления КАК ПометкаУдаления,
		|	ТаблицаДокументы.Номер КАК Номер,
		|	ТаблицаДокументы.Дата КАК Дата,
		|	ТаблицаДокументы.Проведен КАК Проведен,
		|	ТаблицаДокументы.Склад КАК Склад,
		|	ТаблицаДокументы.Магазин КАК Магазин,
		|	ТаблицаДокументы.МагазинПолучатель КАК МагазинПолучатель,
		|	ТаблицаДокументы.Комментарий КАК Комментарий,
		|	ТаблицаДокументы.СуммаДокумента КАК СуммаДокумента,
		|	ТаблицаДокументы.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	ТаблицаДокументы.Ответственный КАК Ответственный,
		|	ТаблицаДокументы.УчитыватьНДС КАК УчитыватьНДС,
		|	ТаблицаДокументы.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	ТаблицаДокументы.АдресДоставки КАК АдресДоставки,
		|	ТаблицаДокументы.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
		|	ТаблицаДокументы.Контрагент КАК Контрагент,
		|	ЕСТЬNULL(ФизическиеЛица.Сотрудник, ЛОЖЬ)
		|	И НЕ ЕСТЬNULL(ФизическиеЛица.Уволен, ЛОЖЬ) КАК СотрудникАнтошки,
		|	Контрагенты.Код КАК КонтрагентКод,
		|	ТаблицаДокументы.Продавец КАК Продавец,
		|	ТаблицаДокументы.ПродавецИдентификатор КАК ПродавецИдентификатор,
		|	ТаблицаДокументы.Организация КАК Организация,
		|	ТаблицаДокументы.СкидкиРассчитаны КАК СкидкиРассчитаны,
		|	ТаблицаДокументы.МаксимальныйКодСтроки КАК МаксимальныйКодСтроки,
		|	ТаблицаДокументы.КоррекцияНачисленийПоПродаже КАК КоррекцияНачисленийПоПродаже,
		|	ТаблицаДокументы.Статус КАК Статус,
		|	ТаблицаДокументы.НомерЗаказаОсновной КАК НомерЗаказаОсновной,
		|	ТаблицаДокументы.НомерЗаказаНаСайте КАК НомерЗаказаНаСайте,
		|	ТаблицаДокументы.СтатусИМ КАК СтатусИМ,
		|	ТаблицаДокументы.СтатусОплаты КАК СтатусОплаты,
		|	ТаблицаДокументы.ТипДоставки КАК ТипДоставки,
		|	ТаблицаДокументы.ТипОплаты КАК ТипОплаты,
		|	ТаблицаДокументы.ДатаПродажиЖелаемая КАК ДатаПродажиЖелаемая,
		|	ТаблицаДокументы.НаличиеНезарезервированныхСтрок КАК НаличиеНезарезервированныхСтрок,
		|	ЕСТЬNULL(ТаблицаБонусы.СуммаБалловНачисление, 0) КАК СуммаБалловНачисление,
		|	ЕСТЬNULL(ТаблицаБонусы.СуммаБалловСписание, 0) КАК СуммаБалловСписание,
		|	ТаблицаДокументы.Отменено КАК Отменено,
		|	ТаблицаДокументы.УчетнаяСистема КАК УчетнаяСистема,
		|	ТаблицаДокументы.СуммаДоставки КАК СуммаДоставки,
		|	ТаблицаДокументы.СуммаДоставкиОператор КАК СуммаДоставкиОператор,
		|	ТаблицаДокументы.СуммаДоставкиОплачена КАК СуммаДоставкиОплачена,
		|	ТаблицаДокументы.УчтеноNavision КАК УчтеноNavision,
		|	ЕСТЬNULL(ТаблицаАтрибутов.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовПокупателей.ПустаяСсылка)) КАК Состояние,
		|	ТаблицаДокументы.ЧастичнаяПродажа КАК ЧастичнаяПродажа,
		|	ТаблицаДокументы.НеПерезванивать КАК НеПерезванивать,
		|	ВЫБОР
		|		КОГДА ТаблицаДокументы.УчетнаяСистема = ЗНАЧЕНИЕ(Перечисление.УчетныеСистемыКомпании.Розница)
		|		ИЛИ ТаблицаДокументы.УчетнаяСистема = ЗНАЧЕНИЕ(Перечисление.УчетныеСистемыКомпании.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ОбработкаВМадженто,
		|	ВЫБОР
		|		КОГДА ДокументОбмена.Ссылка ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ
		|		НЕ (ДокументОбмена.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПокупателей.Закрыт)
		|		ИЛИ ДокументОбмена.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПокупателей.Отменён))
		|	КОНЕЦ КАК ДокументОбмена,
		|	ТаблицаДокументы.Телефон КАК Телефон,
		|	ЕСТЬNULL(ТаблицаВозвратов.ЕстьВозврат, ЛОЖЬ) КАК ЕстьВозврат,
		|	ЕСТЬNULL(ТаблицаКонтактыПочта.Представление, """") КАК ПочтаКлиента,
		|	ВЫБОР
		|		КОГДА ЕстьСообщения.ЕстьСообщениеЦентр ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК СообщениеЦентр,
		|	ВЫБОР
		|		КОГДА ЕстьСообщения.ЕстьСообщениеМагазин ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК СообщениеМагазин,
		|	ВЫБОР
		|		КОГДА ДокументВозврата.ВозвратныйДокумент ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ВозвратныйДокумент
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТаблицаБонусныхБаллов.Ссылка КАК Ссылка,
		|			СУММА(ТаблицаБонусныхБаллов.СуммаБалловНачисление) КАК СуммаБалловНачисление,
		|			СУММА(ТаблицаБонусныхБаллов.СуммаБалловСписание) КАК СуммаБалловСписание
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТаблицаНачисление.Ссылка КАК Ссылка,
		|				ТаблицаНачисление.СуммаБонусныхБаллов КАК СуммаБалловНачисление,
		|				0 КАК СуммаБалловСписание
		|			ИЗ
		|				Документ.ЗаказПокупателя.НачислениеБонусныхБаллов КАК ТаблицаНачисление
		|			{ГДЕ
		|				ТаблицаНачисление.Ссылка.*}
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|
		|			ВЫБРАТЬ
		|				ТаблицаСписание.Ссылка,
		|				0,
		|				ТаблицаСписание.СуммаБонусныхБаллов
		|			ИЗ
		|				Документ.ЗаказПокупателя.ОплатаБонуснымиБаллами КАК ТаблицаСписание
		|			{ГДЕ
		|				ТаблицаСписание.Ссылка.*}) КАК ТаблицаБонусныхБаллов
		|		{ГДЕ
		|			ТаблицаБонусныхБаллов.Ссылка.*}
		|		СГРУППИРОВАТЬ ПО
		|			ТаблицаБонусныхБаллов.Ссылка) КАК ТаблицаБонусы
		|		ПО ТаблицаДокументы.Ссылка = ТаблицаБонусы.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КлючевыеАтрибутыЗаказовПокупателей.СрезПоследних КАК ТаблицаАтрибутов
		|		ПО ТаблицаАтрибутов.ЗаказПокупателя = ТаблицаДокументы.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВложенныйЗапрос.Ссылка КАК Ссылка,
		|			МИНИМУМ(ВложенныйЗапрос.ЕстьСообщениеЦентр) КАК ЕстьСообщениеЦентр,
		|			МИНИМУМ(ВложенныйЗапрос.ЕстьСообщениеМагазин) КАК ЕстьСообщениеМагазин
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ВЫБОР
		|					КОГДА СтруктураУзлов.ВидУзла = ЗНАЧЕНИЕ(Перечисление.ВидыУзлов.ЦентральныйОфис)
		|						ТОГДА ИСТИНА
		|				КОНЕЦ КАК ЕстьСообщениеЦентр,
		|				ВЫРАЗИТЬ(КомментарийПоСтрокам.Документ КАК Документ.ЗаказПокупателя) КАК Ссылка,
		|				КомментарийПоСтрокам.УзелСоздания КАК УзелСоздания,
		|				ВЫБОР
		|					КОГДА НЕ СтруктураУзлов.ВидУзла = ЗНАЧЕНИЕ(Перечисление.ВидыУзлов.ЦентральныйОфис)
		|						ТОГДА ИСТИНА
		|				КОНЕЦ КАК ЕстьСообщениеМагазин
		|			ИЗ
		|				РегистрСведений.КомментарийПоСтрокам КАК КомментарийПоСтрокам
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураУзлов КАК СтруктураУзлов
		|					ПО КомментарийПоСтрокам.УзелСоздания = СтруктураУзлов.Ссылка
		|			ГДЕ
		|				ТИПЗНАЧЕНИЯ(КомментарийПоСтрокам.Документ) = ТИП(Документ.ЗаказПокупателя)
		|				И НЕ КомментарийПоСтрокам.Просмотрен
		|			{ГДЕ
		|				КомментарийПоСтрокам.Документ.* КАК Ссылка}
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|
		|			ВЫБРАТЬ
		|				ВЫБОР
		|					КОГДА СтруктураУзлов.ВидУзла = ЗНАЧЕНИЕ(Перечисление.ВидыУзлов.ЦентральныйОфис)
		|						ТОГДА ИСТИНА
		|				КОНЕЦ,
		|				ЗапросДоступностиТоваров.ДокументОснование,
		|				КомментарийПоСтрокам.УзелСоздания,
		|				ВЫБОР
		|					КОГДА НЕ СтруктураУзлов.ВидУзла = ЗНАЧЕНИЕ(Перечисление.ВидыУзлов.ЦентральныйОфис)
		|						ТОГДА ИСТИНА
		|				КОНЕЦ
		|			ИЗ
		|				РегистрСведений.КомментарийПоСтрокам КАК КомментарийПоСтрокам
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктураУзлов КАК СтруктураУзлов
		|					ПО КомментарийПоСтрокам.УзелСоздания = СтруктураУзлов.Ссылка
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗапросДоступностиТоваров КАК ЗапросДоступностиТоваров
		|					ПО КомментарийПоСтрокам.Документ = ЗапросДоступностиТоваров.Ссылка
		|			ГДЕ
		|				ТИПЗНАЧЕНИЯ(КомментарийПоСтрокам.Документ) = ТИП(Документ.ЗапросДоступностиТоваров)
		|				И НЕ КомментарийПоСтрокам.Просмотрен
		|			{ГДЕ
		|				ЗапросДоступностиТоваров.ДокументОснование.* КАК Ссылка}) КАК ВложенныйЗапрос
		|		{ГДЕ
		|			ВложенныйЗапрос.Ссылка.* КАК Ссылка}
		|		СГРУППИРОВАТЬ ПО
		|			ВложенныйЗапрос.Ссылка) КАК ЕстьСообщения
		|		ПО ТаблицаДокументы.Ссылка = ЕстьСообщения.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ОплатаЗаказаКлиента.ЗаказКлиента КАК Ссылка,
		|			ИСТИНА КАК ЕстьВозврат
		|		ИЗ
		|			РегистрСведений.ОплатаЗаказаКлиента КАК ОплатаЗаказаКлиента
		|		ГДЕ
		|			ОплатаЗаказаКлиента.ВидОплаты = ЗНАЧЕНИЕ(Перечисление.ВидыОплатыЗаказаПокупателя.Возврат)
		|		{ГДЕ
		|			ОплатаЗаказаКлиента.ЗаказКлиента.* КАК Ссылка}) КАК ТаблицаВозвратов
		|		ПО ТаблицаДокументы.Ссылка = ТаблицаВозвратов.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК ТаблицаКонтактыПочта
		|		ПО ТаблицаДокументы.Контрагент = ТаблицаКонтактыПочта.Ссылка
		|		И ТаблицаКонтактыПочта.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailКонтрагента)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|			ПО Контрагенты.ФизЛицо = ФизическиеЛица.Ссылка
		|		ПО ТаблицаДокументы.Контрагент = Контрагенты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ВозвратИнтернетЗаказа.ДокументОснование КАК ВозвратныйДокумент
		|		ИЗ
		|			Документ.ВозвратИнтернетЗаказа КАК ВозвратИнтернетЗаказа
		|		ГДЕ
		|			НЕ (ВозвратИнтернетЗаказа.Статус = ЗНАЧЕНИЕ(перечисление.СтатусыВозвратаЗаказаПокупателя.Закрыт)
		|			ИЛИ ВозвратИнтернетЗаказа.Статус = ЗНАЧЕНИЕ(перечисление.СтатусыВозвратаЗаказаПокупателя.Отменён))
		|		{ГДЕ
		|			ВозвратИнтернетЗаказа.ДокументОснование.* КАК Ссылка}) КАК ДокументВозврата
		|		ПО ТаблицаДокументы.Ссылка = ДокументВозврата.ВозвратныйДокумент
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратИнтернетЗаказа КАК ДокументВозвратаДляОбмена
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ДокументОбмена
		|			ПО ДокументВозвратаДляОбмена.Ссылка = ДокументОбмена.ДокументОснование
		|		ПО ТаблицаДокументы.Ссылка = ДокументВозвратаДляОбмена.ДокументОснование
		|ГДЕ
		|	ТаблицаДокументы.Ссылка = &Ссылка
		|{ГДЕ
		|	ТаблицаДокументы.Ссылка.*}";
	
	Запрос.УстановитьПараметр("Ссылка", ОбъектЗаказ.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		СтруктураЗаписи.Ответственный			= ОбъектЗаказ.Ответственный;
		СтруктураЗаписи.Статус					= ОбъектЗаказ.Статус;
		СтруктураЗаписи.СотрудникАнтошки		= Выборка.СотрудникАнтошки;
		СтруктураЗаписи.ЕстьВозврат				= Выборка.ЕстьВозврат;
		СтруктураЗаписи.ПочтаКлиента			= Выборка.ПочтаКлиента;
		СтруктураЗаписи.СуммаБалловНачисление	= Выборка.СуммаБалловНачисление;
		СтруктураЗаписи.СуммаБалловСписание		= Выборка.СуммаБалловСписание;
		СтруктураЗаписи.Состояние				= Выборка.Состояние;
		СтруктураЗаписи.СообщениеЦентр			= Выборка.СообщениеЦентр;
		СтруктураЗаписи.СообщениеМагазин		= Выборка.СообщениеМагазин;
		СтруктураЗаписи.ВозвратныйДокумент		= Выборка.ВозвратныйДокумент;
		СтруктураЗаписи.ДокументОбмена			= Выборка.ДокументОбмена;
		
	КонецЕсли;
	
	ЗаписьВРегистрСтроки(СтруктураЗаписи);

КонецПроцедуры

// Инициализация строки записи.
// 
// Возвращаемое значение:
//  Структура - Инициализация строки записи:
//   ЗаказПокупателя - ДокументСсылка.ЗаказПокупателя - 
//   Статус - Неопределено - 
//   Ответственный - Неопределено - 
//   СотрудникАнтошки - Неопределено - 
//   ЕстьВозврат - Неопределено - 
//   ПочтаКлиента - Неопределено - 
//   СуммаБалловНачисление - Неопределено - 
//   СуммаБалловСписание - Неопределено - 
//   Состояние - Неопределено - 
//   СообщениеЦентр - Неопределено - 
//   СообщениеМагазин - Неопределено - 
Функция ИнициализацияСтрокиЗаписи() Экспорт
	
	СтруктураСтроки = Новый Структура;
	СтруктураСтроки.Вставить("ЗаказПокупателя"			, Документы.ЗаказПокупателя.ПустаяСсылка());

	
	СтруктураСтроки.Вставить("Статус"					, Неопределено);
	СтруктураСтроки.Вставить("Ответственный"			, Неопределено);
	СтруктураСтроки.Вставить("СотрудникАнтошки"			, Неопределено);
	СтруктураСтроки.Вставить("ЕстьВозврат"				, Неопределено);
	СтруктураСтроки.Вставить("ПочтаКлиента"				, Неопределено);
	СтруктураСтроки.Вставить("СуммаБалловНачисление"	, Неопределено);
	СтруктураСтроки.Вставить("СуммаБалловСписание"		, Неопределено);
	СтруктураСтроки.Вставить("Состояние"				, Неопределено);
	СтруктураСтроки.Вставить("СообщениеЦентр"			, Неопределено);
	СтруктураСтроки.Вставить("СообщениеМагазин"			, Неопределено);
	СтруктураСтроки.Вставить("ВозвратныйДокумент"		, Неопределено);
	СтруктураСтроки.Вставить("ДокументОбмена"			, Неопределено);

	Возврат СтруктураСтроки;

КонецФункции

Процедура ЗаписьВРегистрСтроки(СтруктураЗаписи) Экспорт 
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Отбор.ЗаказПокупателя.Установить(СтруктураЗаписи.ЗаказПокупателя);   

	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() = 0 Тогда 
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.ЗаказПокупателя = СтруктураЗаписи.ЗаказПокупателя;
	Иначе 
		НоваяЗапись = НаборЗаписей[0];
	КонецЕсли;

	Если Не СтруктураЗаписи.ДокументОбмена = Неопределено Тогда 
		
		НоваяЗапись.ДокументОбмена = СтруктураЗаписи.ДокументОбмена;
		
	КонецЕсли;
	
	Если Не СтруктураЗаписи.Статус = Неопределено Тогда 
		
		НоваяЗапись.Статус = СтруктураЗаписи.Статус;
		
	КонецЕсли;
	
	Если Не СтруктураЗаписи.ВозвратныйДокумент = Неопределено Тогда 
		
		НоваяЗапись.ВозвратныйДокумент = СтруктураЗаписи.ВозвратныйДокумент;
		
	КонецЕсли;
	
	Если Не СтруктураЗаписи.СообщениеМагазин = Неопределено Тогда 
		
		НоваяЗапись.СообщениеМагазин = СтруктураЗаписи.СообщениеМагазин;
		
	КонецЕсли;
	
	Если Не СтруктураЗаписи.СообщениеЦентр = Неопределено Тогда 
		
		НоваяЗапись.СообщениеЦентр = СтруктураЗаписи.СообщениеЦентр;
		
	КонецЕсли;
	
	Если Не СтруктураЗаписи.Состояние = Неопределено Тогда 
		
		НоваяЗапись.Состояние = СтруктураЗаписи.Состояние;
		
	КонецЕсли;
	
	Если Не СтруктураЗаписи.СуммаБалловНачисление = Неопределено Тогда 
		
		НоваяЗапись.СуммаБалловНачисление = СтруктураЗаписи.СуммаБалловНачисление;
		
	КонецЕсли;
	
	Если Не СтруктураЗаписи.СуммаБалловСписание = Неопределено Тогда 
		
		НоваяЗапись.СуммаБалловСписание = СтруктураЗаписи.СуммаБалловСписание;
		
	КонецЕсли;
	
	Если Не СтруктураЗаписи.ПочтаКлиента = Неопределено Тогда 
		
		НоваяЗапись.ПочтаКлиента = СтруктураЗаписи.ПочтаКлиента;
		
	КонецЕсли;
	
	Если Не СтруктураЗаписи.Ответственный = Неопределено Тогда 
		
		НоваяЗапись.Ответственный = СтруктураЗаписи.Ответственный;
		
	КонецЕсли;

	Если Не СтруктураЗаписи.СотрудникАнтошки = Неопределено Тогда 
		
		НоваяЗапись.СотрудникАнтошки = СтруктураЗаписи.СотрудникАнтошки;
		
	КонецЕсли;

	Если Не СтруктураЗаписи.ЕстьВозврат = Неопределено Тогда 
		
		НоваяЗапись.ЕстьВозврат = СтруктураЗаписи.ЕстьВозврат;
		
	КонецЕсли;

	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#КонецЕсли

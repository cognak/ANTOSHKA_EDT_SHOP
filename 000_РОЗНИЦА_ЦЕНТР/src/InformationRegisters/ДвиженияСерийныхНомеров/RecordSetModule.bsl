
Процедура ПередЗаписью(Отказ, Замещение)

	Если ОбменДанными.Загрузка ИЛИ НЕ ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства) Тогда

		Возврат;

	КонецЕсли;

	ТребуетсяКонтроль = УправлениеПользователями.ПолучитьБулевоЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.КонтролироватьОстатокПриПроведении, Ложь);

	Если НЕ ТребуетсяКонтроль Тогда
		ДополнительныеСвойства.РассчитыватьИзменения = Ложь;
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	БлокироватьДляИзменения = Истина;

//	Текущее состояние набора помещается во временную таблицу "ДвиженияТоварыНаСкладахПередЗаписью",
//	чтобы при записи получить изменение нового набора относительно текущего.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаНабора.Номенклатура КАК Номенклатура,
	|	ТаблицаНабора.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаНабора.Отправитель КАК Склад,
	|	1 КАК КоличествоПередЗаписью
	|ПОМЕСТИТЬ ДвиженияДвиженияСерийныхНомеровПередЗаписью
	|ИЗ
	|	РегистрСведений.ДвиженияСерийныхНомеров КАК ТаблицаНабора
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|		ПО ТаблицаНабора.Номенклатура = ТаблицаСправочник.Ссылка
	|ГДЕ
	|	ТаблицаНабора.Регистратор = &Регистратор
	|	И НЕ ТаблицаНабора.Отправитель = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	И НЕ &ЭтоНовый
	|	И ТаблицаСправочник.ИспользоватьСерийныеНомера
	|	И ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)"
	);
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый"   , ДополнительныеСвойства.ЭтоНовый);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;

	Запрос.Выполнить();

КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)

	Если ОбменДанными.Загрузка ИЛИ НЕ ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства) Тогда

		Возврат;

	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;

//	Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
//	и помещается во временную таблицу.
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаИзменений.Номенклатура КАК Номенклатура,
	|	ТаблицаИзменений.СерийныйНомер КАК СерийныйНомер,
	|	ТаблицаИзменений.Склад КАК Склад,
	|	СУММА(ТаблицаИзменений.КоличествоИзменение) КАК КоличествоИзменение
	|ПОМЕСТИТЬ ДвиженияДвиженияСерийныхНомеровИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		Таблица.Номенклатура КАК Номенклатура,
	|		Таблица.СерийныйНомер КАК СерийныйНомер,
	|		Таблица.Склад КАК Склад,
	|		Таблица.КоличествоПередЗаписью КАК КоличествоИзменение
	|	ИЗ
	|		ДвиженияДвиженияСерийныхНомеровПередЗаписью КАК Таблица
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Таблица.Номенклатура,
	|		Таблица.СерийныйНомер,
	|		Таблица.Отправитель,
	|		-1
	|	ИЗ
	|		РегистрСведений.ДвиженияСерийныхНомеров КАК Таблица
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|			ПО Таблица.Номенклатура = ТаблицаСправочник.Ссылка
	|	ГДЕ
	|		Таблица.Регистратор = &Регистратор
	|		И НЕ Таблица.Отправитель = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		И ТаблицаСправочник.ИспользоватьСерийныеНомера
	|		И ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)) КАК ТаблицаИзменений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.Номенклатура,
	|	ТаблицаИзменений.Склад,
	|	ТаблицаИзменений.СерийныйНомер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаИзменений.КоличествоИзменение) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДвиженияДвиженияСерийныхНомеровПередЗаписью"
	);
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;

	Выборка = Запрос.ВыполнитьПакет()[0].Выбрать();
	Выборка.Следующий();

//	Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ДвиженияДвиженияСерийныхНомеровИзменение", Выборка.Количество > 0);

КонецПроцедуры





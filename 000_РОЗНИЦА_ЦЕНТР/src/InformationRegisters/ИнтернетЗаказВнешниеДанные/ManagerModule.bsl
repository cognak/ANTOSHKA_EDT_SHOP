
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Записать заказ.
// 
// Параметры:
//  ДанныеЗаказа - Строка - Данные заказа JSON
//  НомерЗаписи - Число - Какая по счету попытка
//  ТекстОшибки - Строка - Текст ошибки JSON
//  Отказ - Булево - Если произошла ошибка, то Истина
Процедура ЗаписатьЗаказ(ДанныеЗаказа, НомерЗаписи, ТекстОшибки, Отказ) Экспорт
	
	Попытка
		
		МенеджерЗаписи = СоздатьМенеджерЗаписи();
	
		МенеджерЗаписи.ВремяПолучения = ТекущаяУниверсальнаяДатаВМиллисекундах() + НомерЗаписи * 60000;
		МенеджерЗаписи.ПолученныеДанные = Новый ХранилищеЗначения(ДанныеЗаказа);
		МенеджерЗаписи.ПоследняяОшибка = Новый ХранилищеЗначения(ТекстОшибки);
		МенеджерЗаписи.УникальныйИдентификатор = Новый УникальныйИдентификатор();
		МенеджерЗаписи.КоличествоПолучений = НомерЗаписи;
		МенеджерЗаписи.Записать(); 
		
	Исключение
		 
		 Отказ = Истина;
		 
	КонецПопытки;

КонецПроцедуры

// Удалить запись.
// 
// Параметры:
//  УникальныйИдентификатор - УникальныйИдентификатор - Уникальный идентификатор записи
Процедура УдалитьЗаписьРегистра(УникальныйИдентификатор) Экспорт
	
	Наборзаписей = СоздатьНаборЗаписей();
	Наборзаписей.Отбор.УникальныйИдентификатор.Установить(УникальныйИдентификатор);
	Наборзаписей.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Код процедур и функций

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти

#КонецЕсли

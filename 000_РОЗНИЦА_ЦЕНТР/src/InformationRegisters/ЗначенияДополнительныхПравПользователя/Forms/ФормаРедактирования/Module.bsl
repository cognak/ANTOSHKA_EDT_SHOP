///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Пользователь", Пользователь);
	
	Если НЕ ЗначениеЗаполнено(Пользователь) Тогда
		ОпределитьТекущегоПользователяГруппуПользователя();
	КонецЕсли;
	
	Если НЕ Пользователи.РолиДоступны("АдминистраторСистемы") Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ЗаполнитьДерево();
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	ЗаполнитьДерево();
	
	РазвернутьДерево(ДеревоПрав.ПолучитьЭлементы());
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Модифицированность Тогда

		Ответ = Вопрос(НСтр("ru = 'Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНет);

		Если Ответ = КодВозвратаДиалога.Да Тогда

			ЗаписатьНаборСервер();
			ЗаполнитьДерево();

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СнятьВсеФлажки(Команда)
	
	ПроставитьФлажки(ДеревоПрав.ПолучитьЭлементы(), Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьВсеФлажки(Команда)
	
	ПроставитьФлажки(ДеревоПрав.ПолучитьЭлементы(), Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНабор(Команда)
	
	ЗаписатьНаборСервер();
	ЗаполнитьДерево();
	
	РазвернутьДерево(ДеревоПрав.ПолучитьЭлементы());

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ЗаписатьНаборСервер();
	Если Открыта() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте	//	LNK 14.07.2021 08:05:42
Процедура ПерейтиВСписок(Команда)

	ПараметрыФормы = Новый Структура("Отбор", Новый Структура("Пользователь", Пользователь));

	ОткрытьФорму("РегистрСведений.ЗначенияДополнительныхПравПользователя.ФормаСписка", ПараметрыФормы,,,,,, РежимОткрытияОкнаФормы.Независимый);

КонецПроцедуры

&НаКлиенте	//	LNK 09.08.2021 07:00:32
Процедура ДеревоПравВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если Поле = Элементы.ДеревоПравПраво Тогда

		Если НЕ Элемент.ТекущиеДанные = Неопределено И ТипЗнч(Элемент.ТекущиеДанные.Значение) = Тип("Булево") Тогда

			СтандартнаяОбработка = Ложь;
			Элемент.ТекущиеДанные.Значение = НЕ Элемент.ТекущиеДанные.Значение;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОпределитьТекущегоПользователяГруппуПользователя()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Вложенный.Пользователь,
	|	Вложенный.Приоритет КАК Приоритет
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗначенияДополнительныхПравПользователя.Пользователь КАК Пользователь,
	|		0 КАК Приоритет
	|	ИЗ
	|		РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначенияДополнительныхПравПользователя
	|	ГДЕ
	|		ЗначенияДополнительныхПравПользователя.Пользователь = &ТекущийПользователь
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗначенияДополнительныхПравПользователя.Пользователь,
	|		1
	|	ИЗ
	|		РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначенияДополнительныхПравПользователя
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей.Состав КАК ПользователиГруппы
	|			ПО (ПользователиГруппы.Ссылка = ЗначенияДополнительныхПравПользователя.Пользователь)
	|				И (ПользователиГруппы.Пользователь = &ТекущийПользователь)) КАК Вложенный
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Пользователь = Выборка.Пользователь;
	Иначе
		Пользователь = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево()
	
	ЭлементыДерева = ДеревоПрав.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();

	Если НЕ ЗначениеЗаполнено(Пользователь) Тогда

		Модифицированность = Ложь;
		Возврат;

	КонецЕсли;

	Если УправлениеПользователями.ПолучитьБулевоЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.АдминистраторПолномочный) Тогда

		МассивИсключаемыхПрав = Новый Массив;

	Иначе

		МассивИсключаемыхПрав = УправлениеДоступомВызовСервера.ЗащищенныеПраваПользователей();
		
		Если ПланыОбмена.ПоРабочемуМесту.ЭтоРабочееМесто() Тогда

			МассивИсключаемыхПрав.Добавить(ПланыВидовХарактеристик.ПраваПользователей.КонтролироватьОстатокПриПроведении)

		КонецЕсли;

	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Права.Родитель,
	|	Права.Ссылка,
	|	Права.ЭтоГруппа,
	|	ЗначениеПрав.Значение
	|ИЗ
	|	ПланВидовХарактеристик.ПраваПользователей КАК Права
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначениеПрав
	|		ПО (ЗначениеПрав.Право = Права.Ссылка)
	|			И (ЗначениеПрав.Пользователь = &Пользователь)
	|ГДЕ
	|	(НЕ Права.Ссылка В (&МассивИсключаемыхПрав))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Права.ЭтоГруппа ИЕРАРХИЯ,
	|	Права.Наименование"
	);
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("МассивИсключаемыхПрав", МассивИсключаемыхПрав);
	Запрос.Выполнить();
	ВыборкаТаблица = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРодителей = Новый ТаблицаЗначений;
	ТаблицаРодителей.Колонки.Добавить("Идентификатор");
	ТаблицаРодителей.Колонки.Добавить("Родитель");
	
	Для каждого Выборка Из ВыборкаТаблица Цикл
		
		Если НЕ Выборка.Родитель.Пустая() Тогда
			СтрокаТаблицы = ТаблицаРодителей.Найти(Выборка.Родитель, "Родитель");
			Если СтрокаТаблицы = Неопределено Тогда
				
				СтрокаГруппы = ЭлементыДерева.Добавить();
				СтрокаГруппы.Право     = Выборка.Родитель;
				СтрокаГруппы.ЭтоГруппа = Выборка.ЭтоГруппа;
				
				СтрокаТаблицы = ТаблицаРодителей.Добавить();
				СтрокаТаблицы.Родитель      = Выборка.Родитель;
				СтрокаТаблицы.Идентификатор = СтрокаГруппы.ПолучитьИдентификатор();
				
				ЭлементыТекущегоУровня = СтрокаГруппы.ПолучитьЭлементы();
			Иначе
				ЭлементыТекущегоУровня = ДеревоПрав.НайтиПоИдентификатору(СтрокаТаблицы.Идентификатор).ПолучитьЭлементы();
			КонецЕсли;
		Иначе
			ЭлементыТекущегоУровня = ЭлементыДерева;
		КонецЕсли;
		
		СтрокаПрава = ЭлементыТекущегоУровня.Добавить();
		СтрокаПрава.Право     = Выборка.Ссылка;
		СтрокаПрава.Значение  = Выборка.Ссылка.ТипЗначения.ПривестиЗначение(Выборка.Значение);
		СтрокаПрава.ЗначениеБыло = СтрокаПрава.Значение;
		СтрокаПрава.ЭтоГруппа = Выборка.ЭтоГруппа;
		
		Если Выборка.ЭтоГруппа Тогда
			СтрокаТаблицы = ТаблицаРодителей.Найти(Выборка.Ссылка, "Родитель");
			
			Если СтрокаТаблицы = Неопределено Тогда
				СтрокаТаблицы = ТаблицаРодителей.Добавить();
				СтрокаТаблицы.Родитель      = Выборка.Ссылка;
				СтрокаТаблицы.Идентификатор = СтрокаПрава.ПолучитьИдентификатор();
			Иначе
				СтрокаТаблицы.Идентификатор = СтрокаПрава.ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьФлажки(ЭлементыДерева, ЗначениеФлажки)

	Для каждого ЭлементДерева Из ЭлементыДерева Цикл
		Если ЭлементДерева.ЭтоГруппа Тогда
			ПроставитьФлажки(ЭлементДерева.ПолучитьЭлементы(), ЗначениеФлажки)
		Иначе
			ЭлементДерева.Значение = ЗначениеФлажки;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаборЗаписей(ЭлементыДерева, НаборЗаписей)
	
	Для каждого ЭлементДерева Из ЭлементыДерева Цикл

		Если НЕ ЭлементДерева.ЭтоГруппа Тогда

			Запись = НаборЗаписей.Добавить();
			
			Запись.Пользователь = Пользователь;
			Запись.Право        = ЭлементДерева.Право;
			Запись.Значение     = Запись.Право.ТипЗначения.ПривестиЗначение(ЭлементДерева.Значение);

		Иначе

			ЗаполнитьНаборЗаписей(ЭлементДерева.ПолучитьЭлементы(), НаборЗаписей);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаборСервер()
	
	Если НЕ ЗначениеЗаполнено(Пользователь) Тогда

		Возврат;

	КонецЕсли;

	Набор = РегистрыСведений.ЗначенияДополнительныхПравПользователя.СоздатьНаборЗаписей();
	Набор.Отбор.Пользователь.Использование = Истина;
	Набор.Отбор.Пользователь.Значение = Пользователь;

	ЗаполнитьНаборЗаписей(ДеревоПрав.ПолучитьЭлементы(), Набор);

	Набор.Записать();

	Модифицированность = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево(ЭлементыДерева)

	Для каждого ЭлементДерева Из ЭлементыДерева Цикл

		Если ЭлементДерева.ЭтоГруппа Тогда

			Элементы.ДеревоПрав.Развернуть(ЭлементДерева.ПолучитьИдентификатор(), Истина);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры









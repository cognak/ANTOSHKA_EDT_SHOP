#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
Процедура ЗаписьСостояниеСтрокЗаказаПокупателя(СсылкаДокументаПроверки) Экспорт 
	
	Если Не ПривилегированныйРежим() Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
	КонецЕсли;
	
	ДанныеДляЗаписи = Новый Структура;
	ДанныеДляЗаписи.Вставить("ДокументДляЗаписи");
	ДанныеДляЗаписи.Вставить("ОтОрдера"					, Ложь);
	ДанныеДляЗаписи.Вставить("Отправлен"				, Неопределено);
	ДанныеДляЗаписи.Вставить("Получен"					, Неопределено);
	ДанныеДляЗаписи.Вставить("Продан"					, Неопределено);
	ДанныеДляЗаписи.Вставить("Выдано"					, Неопределено);
	ДанныеДляЗаписи.Вставить("Товары"					, Неопределено);
	ДанныеДляЗаписи.Вставить("СогласованоВNavision"		, Неопределено);
	ДанныеДляЗаписи.Вставить("ПополнениеМагазина"		, Ложь);

	Если ТипЗнч(СсылкаДокументаПроверки) = Тип("ДокументСсылка.ЗапросДоступностиТоваров") Тогда
		
		ДокументЗаказа = СсылкаДокументаПроверки.ДокументОснование;
		
		ДанныеДляЗаписи.СогласованоВNavision = 
			?((ДокументЗаказа.ТипОплаты = Перечисления.ТипОплатыЗаказПокупателя.Наличные
					И СсылкаДокументаПроверки.ТипДоставки = Перечисления.ТипДоставкиЗаказПокупателя.Самовывоз)
				,Истина
				,Неопределено);
		ДанныеДляЗаписи.ДокументДляЗаписи = СсылкаДокументаПроверки;
		ДанныеДляЗаписи.Товары = СсылкаДокументаПроверки.Товары;
		
		УчетнаяПолитика = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику(СсылкаДокументаПроверки.Дата);
	
		НазначениеСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаДокументаПроверки.МагазинОтправитель, "НазначениеСклада", Перечисления.НазначенияСкладов.ПустаяСсылка(), Ложь);
	
		ПополнениеМагазина = (НазначениеСклада = Перечисления.НазначенияСкладов.УправляющаяСистема)
				И Не (УчетнаяПолитика.ИнтернетМагазин = СсылкаДокументаПроверки.МагазинПолучатель);
	
		ДанныеДляЗаписи.ПополнениеМагазина = ПополнениеМагазина;
		
		Если СсылкаДокументаПроверки.МагазинОтправитель = СсылкаДокументаПроверки.МагазинПолучатель
				Или ПополнениеМагазина Тогда
			
			ДанныеДляЗаписи.Отправлен = Истина;
			ДанныеДляЗаписи.Получен = Истина;

		КонецЕсли;
		ЗаписьВРегистр(ДанныеДляЗаписи);
		
	ИначеЕсли ТипЗнч(СсылкаДокументаПроверки) = Тип("ДокументСсылка.ПриходныйОрдерНаТовары") Тогда  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТаблицаДоступности.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ПриходныйОрдерНаТовары КАК ТаблицаОрдер
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ТаблицаПеремещение
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя КАК ТаблицаЗаказ
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗапросДоступностиТоваров КАК ТаблицаДоступности
			|				ПО (ТаблицаЗаказ.Ссылка = ТаблицаДоступности.ДокументОснование)
			|			ПО (ТаблицаПеремещение.ЗаказПокупателя = ТаблицаЗаказ.Ссылка)
			|		ПО (ТаблицаОрдер.ДокументОснование = ТаблицаПеремещение.Ссылка)
			|ГДЕ
			|	ТаблицаОрдер.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", СсылкаДокументаПроверки);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ДанныеДляЗаписи.ДокументДляЗаписи = Выборка.Ссылка;
			ДанныеДляЗаписи.ОтОрдера = СсылкаДокументаПроверки.Проведен;
			ДанныеДляЗаписи.Получен = СсылкаДокументаПроверки.Проведен;
			ДанныеДляЗаписи.Товары =СсылкаДокументаПроверки.Товары;
			
			ЗаписьВРегистр(ДанныеДляЗаписи);
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(СсылкаДокументаПроверки) = Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТаблицаДоступности.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.РасходныйОрдерНаТовары КАК ТаблицаОрдер
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ТаблицаПеремещениеОтОрдера
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗапросДоступностиТоваров КАК ТаблицаДоступности
			|			ПО ТаблицаДоступности.Ссылка = ТаблицаПеремещениеОтОрдера.ДокументОснование
			|		ПО ТаблицаОрдер.ДокументОснование = ТаблицаПеремещениеОтОрдера.Ссылка
			|ГДЕ
			|	ТаблицаОрдер.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", СсылкаДокументаПроверки);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда

			ДанныеДляЗаписи.ДокументДляЗаписи = Выборка.Ссылка;
			ДанныеДляЗаписи.Отправлен = СсылкаДокументаПроверки.Проведен;
			ДанныеДляЗаписи.Товары =СсылкаДокументаПроверки.Товары;
			
			ЗаписьВРегистр(ДанныеДляЗаписи);
			
		КонецЕсли;
		
	КонецЕсли;  

КонецПроцедуры      

Процедура ЗаписьВРегистрСтроки(СтруктураЗаписи, ОчисткаРегистра = Ложь) Экспорт 
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Отбор.ЗаказПокупателя.Установить(СтруктураЗаписи.ЗаказПокупателя);   
	НаборЗаписей.Отбор.ЗапросДоступностиТоваров.Установить(СтруктураЗаписи.ЗапросДоступностиТоваров);   
	НаборЗаписей.Отбор.КлючСвязи.Установить(СтруктураЗаписи.КлючСвязи); 
	
		
	Если Не ОчисткаРегистра Тогда
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() = 0 Тогда 
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.ЗаказПокупателя = СтруктураЗаписи.ЗаказПокупателя;
			НоваяЗапись.ЗапросДоступностиТоваров = СтруктураЗаписи.ЗапросДоступностиТоваров;
			НоваяЗапись.КлючСвязи = СтруктураЗаписи.КлючСвязи; 
		Иначе 
			НоваяЗапись = НаборЗаписей[0];
		КонецЕсли;
	
		Если Не СтруктураЗаписи.ГотовКПродаже = Неопределено Тогда 
			
			НоваяЗапись.ГотовКПродаже = СтруктураЗаписи.ГотовКПродаже;
			
		КонецЕсли;
		
		Если Не СтруктураЗаписи.Продано = Неопределено Тогда 
			
			НоваяЗапись.Продано = СтруктураЗаписи.Продано;
			
		КонецЕсли;
		
		Если Не СтруктураЗаписи.Получен = Неопределено Тогда 
			
			НоваяЗапись.Получен = СтруктураЗаписи.Получен;
			
		КонецЕсли;
		
		Если Не СтруктураЗаписи.Отправлен = Неопределено Тогда 
			
			НоваяЗапись.Отправлен = СтруктураЗаписи.Отправлен;
			
		КонецЕсли;
		
		Если Не СтруктураЗаписи.Доставлено = Неопределено Тогда 
			
			НоваяЗапись.Доставлено = СтруктураЗаписи.Доставлено;
			
		КонецЕсли;

		Если Не СтруктураЗаписи.Согласовано = Неопределено Тогда 
			
			НоваяЗапись.Согласовано = СтруктураЗаписи.Согласовано;
			
		КонецЕсли;

		Если Не СтруктураЗаписи.Выдано = Неопределено Тогда 
			
			НоваяЗапись.Выдано = СтруктураЗаписи.Выдано;
			
		КонецЕсли;

		Если Не СтруктураЗаписи.СогласованоВNavision = Неопределено Тогда 
			
			НоваяЗапись.СогласованоВNavision = СтруктураЗаписи.СогласованоВNavision;
			
		КонецЕсли;

		Если Не СтруктураЗаписи.СтароеКоличество = Неопределено Тогда 
			
			НоваяЗапись.СтароеКоличество = СтруктураЗаписи.СтароеКоличество;
			
		КонецЕсли;

		Если Не СтруктураЗаписи.НовоеКоличество = Неопределено Тогда 
			
			НоваяЗапись.НовоеКоличество = СтруктураЗаписи.НовоеКоличество;
			
		КонецЕсли;

	КонецЕсли;
		
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

Функция ИнициализацияСтрокиЗаписи() Экспорт
	
	СтруктураСтроки = Новый Структура;
	СтруктураСтроки.Вставить("ЗаказПокупателя"			, Документы.ЗаказПокупателя.ПустаяСсылка());
	СтруктураСтроки.Вставить("ЗапросДоступностиТоваров"	, Документы.ЗапросДоступностиТоваров.ПустаяСсылка());
	СтруктураСтроки.Вставить("КлючСвязи"				, 0);
	
	СтруктураСтроки.Вставить("ГотовКПродаже"			, Неопределено);
	СтруктураСтроки.Вставить("Продано"					, Неопределено);
	СтруктураСтроки.Вставить("Получен"					, Неопределено);
	СтруктураСтроки.Вставить("Отправлен"				, Неопределено);
	СтруктураСтроки.Вставить("Доставлено"				, Неопределено);
	СтруктураСтроки.Вставить("Согласовано"				, Неопределено);
	СтруктураСтроки.Вставить("Выдано"					, Неопределено);
	СтруктураСтроки.Вставить("СогласованоВNavision"		, Неопределено);
	СтруктураСтроки.Вставить("СтароеКоличество"			, Неопределено);
	СтруктураСтроки.Вставить("НовоеКоличество"			, Неопределено);
	СтруктураСтроки.Вставить("ПополнениеМагазина"		, Неопределено);

	Возврат СтруктураСтроки;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Процедура ЗаписьВРегистр(ДанныеДляЗаписи)
	
	СтрокаЗаписи = ИнициализацияСтрокиЗаписи();

	Для Каждого СтрокаТовара Из ДанныеДляЗаписи.Товары Цикл
		
		СтруктураОтбораСтрок = Новый Структура("Номенклатура", СтрокаТовара.Номенклатура);
		МассивСтрок = ДанныеДляЗаписи.ДокументДляЗаписи.Товары.НайтиСтроки(СтруктураОтбораСтрок); 
		
		Для Каждого СтрокаЗапросаДоступности Из МассивСтрок Цикл

			СтрокаЗаписи.ЗаказПокупателя = ДанныеДляЗаписи.ДокументДляЗаписи.ДокументОснование;   
			СтрокаЗаписи.ЗапросДоступностиТоваров = ДанныеДляЗаписи.ДокументДляЗаписи;   
			СтрокаЗаписи.КлючСвязи = СтрокаЗапросаДоступности.КлючСвязи; 

			ОчисткаРегистра = (ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Отменён 
					Или ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Удалён  
					Или СтрокаЗапросаДоступности.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Отменён 
					Или СтрокаЗапросаДоступности.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Удалён); 

			Если ДанныеДляЗаписи.ДокументДляЗаписи.МагазинОтправитель = ДанныеДляЗаписи.ДокументДляЗаписи.МагазинПолучатель Тогда
				
				Если Не (ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Новый 
						Или ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.ВРаботе
						Или ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.ЧастичноСогласован) Тогда
					СтрокаЗаписи.ГотовКПродаже = Истина;
				Иначе 
					СтрокаЗаписи.ГотовКПродаже = Ложь; 
				КонецЕсли;
				
			ИначеЕсли Не ДанныеДляЗаписи.ДокументДляЗаписи.ТипДоставки = Перечисления.ТипДоставкиЗаказПокупателя.Самовывоз
					И ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Сборка Тогда
						
				СтрокаЗаписи.ГотовКПродаже = Истина;
				
			ИначеЕсли ДанныеДляЗаписи.ОтОрдера Тогда 
				
				СтрокаЗаписи.ГотовКПродаже = Истина;
				
			ИначеЕсли ДанныеДляЗаписи.ПополнениеМагазина Тогда 
				
				СтрокаЗаписи.ГотовКПродаже = Истина;
				
			КонецЕсли; 
			
			Если Не ДанныеДляЗаписи.Отправлен = Неопределено Тогда 
				
				СтрокаЗаписи.Отправлен = ДанныеДляЗаписи.Отправлен;
				
			КонецЕсли;
			
			Если Не ДанныеДляЗаписи.Получен = Неопределено Тогда 
				
				СтрокаЗаписи.Получен = ДанныеДляЗаписи.Получен;
				
			КонецЕсли; 
			
			Если Не ДанныеДляЗаписи.Продан = Неопределено Тогда 
				
				СтрокаЗаписи.Продан = ДанныеДляЗаписи.Продан;
				
			КонецЕсли; 
			
			Если Не ДанныеДляЗаписи.СогласованоВNavision = Неопределено Тогда 
				
				СтрокаЗаписи.СогласованоВNavision = ДанныеДляЗаписи.СогласованоВNavision;
				
			КонецЕсли; 
	
			Если ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Согласован Тогда 
				
				СтрокаЗаписи.Согласовано = Истина;
				
			КонецЕсли; 
	
			Если ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Выдан Тогда 
				
				СтрокаЗаписи.Выдано = Истина;
				
			КонецЕсли; 
	
			ЗаписьВРегистрСтроки(СтрокаЗаписи, ОчисткаРегистра);
					
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
Процедура ЗаписьСостояниеСтрокЗаказаПокупателя(СсылкаДокументаПроверки) Экспорт 
	
	Если Не ПривилегированныйРежим() Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
	КонецЕсли;
	
	ДанныеДляЗаписи = ИнициализацияСтрок();

	Если ТипЗнч(СсылкаДокументаПроверки) = Тип("ДокументСсылка.ЗапросДоступностиТоваров") Тогда
		
		АтрибутыДокументаПроверки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаДокументаПроверки, 
																		"ДокументОснование,
																		|ТипДоставки,
																		|Товары,
																		|Дата,
																		|МагазинОтправитель,
																		|МагазинПолучатель");
		
		ДанныеДляЗаписи.ДокументДляЗаписи = СсылкаДокументаПроверки;
		ДанныеДляЗаписи.Товары = СсылкаДокументаПроверки.Товары;
		
		УчетнаяПолитика = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику(АтрибутыДокументаПроверки.Дата);
	
		НазначениеСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(АтрибутыДокументаПроверки.МагазинОтправитель, "НазначениеСклада", Перечисления.НазначенияСкладов.ПустаяСсылка(), Ложь);
	
		ПополнениеМагазина = (НазначениеСклада = Перечисления.НазначенияСкладов.УправляющаяСистема)
				И Не (УчетнаяПолитика.ИнтернетМагазин = АтрибутыДокументаПроверки.МагазинПолучатель);
	
		ДанныеДляЗаписи.ПополнениеМагазина = ПополнениеМагазина;
		
		Если АтрибутыДокументаПроверки.МагазинОтправитель = АтрибутыДокументаПроверки.МагазинПолучатель Тогда
			
			ДанныеДляЗаписи.Отправлен = Истина;
			ДанныеДляЗаписи.Получен = Истина;
			
		ИначеЕсли ПополнениеМагазина Тогда
			
			ДанныеДляЗаписи.Отправлен = Истина;
			
		ИначеЕсли АтрибутыДокументаПроверки.ТипДоставки = Перечисления.ТипДоставкиЗаказПокупателя.СлужбаДоставки Тогда 
			
			ДанныеДляЗаписи.Получен = Истина;

		КонецЕсли;

		ЗаписьВРегистр(ДанныеДляЗаписи);
		
	ИначеЕсли ТипЗнч(СсылкаДокументаПроверки) = Тип("ДокументСсылка.ПриходныйОрдерНаТовары") Тогда  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТаблицаЗапроса.Ссылка КАК Ссылка,
			|	ТаблицаПриход.Проведен КАК Проведен
			|ИЗ
			|	Документ.ПриходныйОрдерНаТовары КАК ТаблицаПриход
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеПриход
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеРасход
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗапросДоступностиТоваров КАК ТаблицаЗапроса
			|				ПО ПеремещениеРасход.ДокументОснование = ТаблицаЗапроса.Ссылка
			|			ПО ПеремещениеПриход.ДокументОснование = ПеремещениеРасход.Ссылка
			|		ПО ТаблицаПриход.ДокументОснование = ПеремещениеПриход.Ссылка
			|ГДЕ
			|	ТаблицаПриход.Ссылка = &Ссылка
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ТаблицаЗапроса.Ссылка КАК Ссылка,
			|	ТаблицаПриход.Проведен КАК Проведен
			|ИЗ
			|	Документ.ПриходныйОрдерНаТовары КАК ТаблицаПриход
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеПриход
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗапросДоступностиТоваров КАК ТаблицаЗапроса
			|			ПО (ПеремещениеПриход.ДокументОснование = ТаблицаЗапроса.Ссылка)
			|		ПО (ТаблицаПриход.ДокументОснование = ПеремещениеПриход.Ссылка)
			|ГДЕ
			|	ТаблицаПриход.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", СсылкаДокументаПроверки);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ДанныеДляЗаписи.ДокументДляЗаписи = Выборка.Ссылка;
			ДанныеДляЗаписи.ОтОрдера = Выборка.Проведен;
			ДанныеДляЗаписи.Получен = Выборка.Проведен;
			ДанныеДляЗаписи.Товары = СсылкаДокументаПроверки.Товары;
			
			ЗаписьВРегистр(ДанныеДляЗаписи);
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(СсылкаДокументаПроверки) = Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТаблицаДоступности.Ссылка КАК Ссылка,
			|	ТаблицаОрдер.Проведен КАК Проведен
			|ИЗ
			|	Документ.РасходныйОрдерНаТовары КАК ТаблицаОрдер
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ТаблицаПеремещениеОтОрдера
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗапросДоступностиТоваров КАК ТаблицаДоступности
			|			ПО ТаблицаДоступности.Ссылка = ТаблицаПеремещениеОтОрдера.ДокументОснование
			|		ПО ТаблицаОрдер.ДокументОснование = ТаблицаПеремещениеОтОрдера.Ссылка
			|ГДЕ
			|	ТаблицаОрдер.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", СсылкаДокументаПроверки);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда

			ДанныеДляЗаписи.ДокументДляЗаписи = Выборка.Ссылка;
			ДанныеДляЗаписи.Отправлен = Выборка.Проведен;
			ДанныеДляЗаписи.Товары =СсылкаДокументаПроверки.Товары;
			
			ЗаписьВРегистр(ДанныеДляЗаписи);
			
		КонецЕсли;
		
	КонецЕсли;  

КонецПроцедуры      

Функция ИнициализацияСтрок() Экспорт

	ДанныеДляЗаписи = Новый Структура;
	ДанныеДляЗаписи.Вставить("ДокументДляЗаписи");
	ДанныеДляЗаписи.Вставить("ОтОрдера"					, Ложь);
	ДанныеДляЗаписи.Вставить("Отправлен"				, Неопределено);
	ДанныеДляЗаписи.Вставить("Получен"					, Неопределено);
	ДанныеДляЗаписи.Вставить("Продан"					, Неопределено);
	ДанныеДляЗаписи.Вставить("Выдано"					, Неопределено);
	ДанныеДляЗаписи.Вставить("Товары"					, Неопределено);
	ДанныеДляЗаписи.Вставить("СогласованоВNavision"		, Неопределено);
	ДанныеДляЗаписи.Вставить("ПополнениеМагазина"		, Ложь);

	Возврат ДанныеДляЗаписи

КонецФункции

Процедура ЗаписьВРегистрСтроки(СтруктураЗаписи, ОчисткаРегистра = Ложь) Экспорт 
	
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Отбор.ЗаказПокупателя.Установить(СтруктураЗаписи.ЗаказПокупателя);   
	НаборЗаписей.Отбор.ЗапросДоступностиТоваров.Установить(СтруктураЗаписи.ЗапросДоступностиТоваров);   
	НаборЗаписей.Отбор.КлючСвязи.Установить(СтруктураЗаписи.КлючСвязи); 
	
		
	Если Не ОчисткаРегистра Тогда
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() = 0 Тогда 
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.ЗаказПокупателя = СтруктураЗаписи.ЗаказПокупателя;
			НоваяЗапись.ЗапросДоступностиТоваров = СтруктураЗаписи.ЗапросДоступностиТоваров;
			НоваяЗапись.КлючСвязи = СтруктураЗаписи.КлючСвязи; 
		Иначе 
			НоваяЗапись = НаборЗаписей[0];
		КонецЕсли;

		Если Не СтруктураЗаписи.КлючСвязиЗаказа = 0 Тогда 
			
			НоваяЗапись.КлючСвязиЗаказа = СтруктураЗаписи.КлючСвязиЗаказа;
			
		КонецЕсли;
		
		Если Не СтруктураЗаписи.ГотовКПродаже = Неопределено Тогда 
			
			НоваяЗапись.ГотовКПродаже = СтруктураЗаписи.ГотовКПродаже;
			
		КонецЕсли;
		
		Если Не СтруктураЗаписи.Продано = Неопределено Тогда 
			
			НоваяЗапись.Продано = СтруктураЗаписи.Продано;
			
		КонецЕсли;
		
		Если Не СтруктураЗаписи.Получен = Неопределено Тогда 
			
			НоваяЗапись.Получен = СтруктураЗаписи.Получен;
			
		КонецЕсли;
		
		Если Не СтруктураЗаписи.Отправлен = Неопределено Тогда 
			
			НоваяЗапись.Отправлен = СтруктураЗаписи.Отправлен;
			
			Если СтруктураЗаписи.ГотовКПродаже = Неопределено
					И СтруктураЗаписи.Отправлен Тогда
						
				НоваяЗапись.ГотовКПродаже = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Не СтруктураЗаписи.Доставлено = Неопределено Тогда 
			
			НоваяЗапись.Доставлено = СтруктураЗаписи.Доставлено;
			
		КонецЕсли;

		Если Не СтруктураЗаписи.Согласовано = Неопределено Тогда 
			
			НоваяЗапись.Согласовано = СтруктураЗаписи.Согласовано;
			
		КонецЕсли;

		Если Не СтруктураЗаписи.Выдано = Неопределено Тогда 
			
			НоваяЗапись.Выдано = СтруктураЗаписи.Выдано;
			
		КонецЕсли;

		Если Не СтруктураЗаписи.СогласованоВNavision = Неопределено Тогда 
			
			НоваяЗапись.СогласованоВNavision = СтруктураЗаписи.СогласованоВNavision;
			
		КонецЕсли;

		Если Не СтруктураЗаписи.СтароеКоличество = Неопределено Тогда 
			
			НоваяЗапись.СтароеКоличество = СтруктураЗаписи.СтароеКоличество;
			
		КонецЕсли;

		Если Не СтруктураЗаписи.НовоеКоличество = Неопределено Тогда 
			
			НоваяЗапись.НовоеКоличество = СтруктураЗаписи.НовоеКоличество;
			
		КонецЕсли;

		Если Не СтруктураЗаписи.СуммаДоставки = Неопределено Тогда 
			
			НоваяЗапись.СуммаДоставки = СтруктураЗаписи.СуммаДоставки;
			
		КонецЕсли;

	КонецЕсли;
		
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры

Функция ИнициализацияСтрокиЗаписи() Экспорт
	
	СтруктураСтроки = Новый Структура;
	СтруктураСтроки.Вставить("ЗаказПокупателя"			, Документы.ЗаказПокупателя.ПустаяСсылка());
	СтруктураСтроки.Вставить("ЗапросДоступностиТоваров"	, Документы.ЗапросДоступностиТоваров.ПустаяСсылка());
	СтруктураСтроки.Вставить("КлючСвязи"				, 0);
	
	СтруктураСтроки.Вставить("ГотовКПродаже"			, Неопределено);
	СтруктураСтроки.Вставить("Продано"					, Неопределено);
	СтруктураСтроки.Вставить("Получен"					, Неопределено);
	СтруктураСтроки.Вставить("Отправлен"				, Неопределено);
	СтруктураСтроки.Вставить("Доставлено"				, Неопределено);
	СтруктураСтроки.Вставить("Согласовано"				, Неопределено);
	СтруктураСтроки.Вставить("Выдано"					, Неопределено);
	СтруктураСтроки.Вставить("СогласованоВNavision"		, Неопределено);
	СтруктураСтроки.Вставить("СтароеКоличество"			, Неопределено);
	СтруктураСтроки.Вставить("НовоеКоличество"			, Неопределено);
	СтруктураСтроки.Вставить("ПополнениеМагазина"		, Неопределено);
	СтруктураСтроки.Вставить("СуммаДоставки"			, Неопределено);
	СтруктураСтроки.Вставить("КлючСвязиЗаказа"			, 0);

	Возврат СтруктураСтроки;
	
КонецФункции

// Есть продажи.
// 
// Параметры:
//  ДокументПроверки - ДокументСсылка.ЗаказПокупателя, ДокументСсылка.ЗапросДоступностиТоваров - Документ,
// 		для которого проверяется есть ли проданные строки
//	КлючСвязиЗаказа - Число - Если 0 то все строки, иначе ключ связи строки заказа по которой определяется продажа
// 
// Возвращаемое значение:
//  Булево - Есть продажи
Функция ЕстьПродажи(ДокументПроверки, КлючСвязиЗаказа) Экспорт

	Результат = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СостояниеСтрок.Продано КАК Продано
		|ИЗ
		|	РегистрСведений.СостояниеСтрокЗаказаПокупателя КАК СостояниеСтрок
		|ГДЕ
		|	(СостояниеСтрок.ЗаказПокупателя = &ЗаказПокупателя
		|	ИЛИ СостояниеСтрок.ЗапросДоступностиТоваров = &ЗапросДоступностиТоваров)
		|	И (СостояниеСтрок.КлючСвязиЗаказа = &КлючСвязиЗаказа
		|	ИЛИ &КлючСвязиЗаказа = 0)";
	
	Запрос.УстановитьПараметр("ЗапросДоступностиТоваров", ДокументПроверки);
	Запрос.УстановитьПараметр("ЗаказПокупателя", ДокументПроверки);
	Запрос.УстановитьПараметр("КлючСвязиЗаказа", КлючСвязиЗаказа);
	
	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		
		Выборка.Следующий();
		Результат = Выборка.Продано;
		
	ИначеЕсли Выборка.Количество() = 0 Тогда 
		
		Результат = Ложь;

	КонецЕсли;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписьВРегистр(ДанныеДляЗаписи) Экспорт
	
	Попытка
		
		НачатьТранзакцию();
	
		СтрокаЗаписи = ИнициализацияСтрокиЗаписи();
	
		Для Каждого СтрокаТовара Из ДанныеДляЗаписи.Товары Цикл
			
			СтруктураОтбораСтрок = Новый Структура("Номенклатура", СтрокаТовара.Номенклатура);
			МассивСтрок = ДанныеДляЗаписи.ДокументДляЗаписи.Товары.НайтиСтроки(СтруктураОтбораСтрок); 
			
			Для Каждого СтрокаЗапросаДоступности Из МассивСтрок Цикл
	
				СтрокаЗаписи.ЗаказПокупателя = ДанныеДляЗаписи.ДокументДляЗаписи.ДокументОснование;   
				СтрокаЗаписи.ЗапросДоступностиТоваров = ДанныеДляЗаписи.ДокументДляЗаписи;   
				СтрокаЗаписи.КлючСвязи = СтрокаЗапросаДоступности.КлючСвязи; 
				СтрокаЗаписи.СуммаДоставки = СтрокаЗапросаДоступности.СуммаДоставки; 
				
				СтруктураОтбораСтрокЗаказа = Новый Структура;
				СтруктураОтбораСтрокЗаказа.Вставить("Номенклатура", СтрокаЗапросаДоступности.Номенклатура);
				СтруктураОтбораСтрокЗаказа.Вставить("КлючСвязиЗапросаДоступности", СтрокаЗапросаДоступности.КлючСвязи);
				МассивСтрокЗаказа = ДанныеДляЗаписи.ДокументДляЗаписи.ДокументОснование.Товары.НайтиСтроки(СтруктураОтбораСтрокЗаказа);
				Если Не МассивСтрокЗаказа.Количество() = 0 Тогда
					СтрокаЗаписи.КлючСвязиЗаказа = МассивСтрокЗаказа[0].КлючСвязи;
				КонецЕсли; 
				
	
				ОчисткаРегистра = (ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Отменён 
						Или ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Удалён  
						Или ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.ПодтвердитьОтменуОтправитель  
						Или ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.ПодтвердитьОтменуПолучатель  
						Или СтрокаЗапросаДоступности.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Отменён 
						Или СтрокаЗапросаДоступности.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваров.Удалён); 
	
				ДанныеЗаказа = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтрокаЗаписи.ЗаказПокупателя, "Статус, ТипОплаты");
				Если ДанныеЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.Новый
						Или ДанныеЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.ВРаботе
						Или ДанныеЗаказа.Статус = Перечисления.СтатусыЗаказовПокупателей.ЗапросДоступности Тогда
					
					СтрокаЗаписи.ГотовКПродаже = Ложь;
					
				Иначе
					
					Если ДанныеЗаказа.ТипОплаты = Перечисления.ТипОплатыЗаказПокупателя.Наличные Тогда
						
						СтрокаЗаписи.ГотовКПродаже = ДанныеДляЗаписи.Отправлен;
						
					Иначе
						
						СтрокаЗаписи.ГотовКПродаже = Истина;
						
					КонецЕсли;
				КонецЕсли;

				Если Не ДанныеДляЗаписи.Отправлен = Неопределено Тогда 
					
					СтрокаЗаписи.Отправлен = ДанныеДляЗаписи.Отправлен;
					
				КонецЕсли;
				
				Если Не ДанныеДляЗаписи.Получен = Неопределено Тогда 
					
					СтрокаЗаписи.Получен = ДанныеДляЗаписи.Получен;
					
				КонецЕсли; 
				
				Если Не ДанныеДляЗаписи.Продан = Неопределено Тогда 
					
					СтрокаЗаписи.Продан = ДанныеДляЗаписи.Продан;
					
				КонецЕсли; 
				
				Если Не ДанныеДляЗаписи.СогласованоВNavision = Неопределено Тогда 
					
					СтрокаЗаписи.СогласованоВNavision = ДанныеДляЗаписи.СогласованоВNavision;
					
				КонецЕсли; 
		
				Если ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Согласован Тогда 
					
					СтрокаЗаписи.Согласовано = Истина;
					
				КонецЕсли; 
		
				Если ДанныеДляЗаписи.ДокументДляЗаписи.СтатусЗапроса = Перечисления.СтатусыЗапросовДоступностиТоваровШапка.Выдан
						Или Не ДанныеДляЗаписи.ДокументДляЗаписи.ТипДоставки = Перечисления.ТипДоставкиЗаказПокупателя.Самовывоз Тогда 
					
					СтрокаЗаписи.Выдано = Истина;
					
				КонецЕсли; 
		
				ЗаписьВРегистрСтроки(СтрокаЗаписи, ОчисткаРегистра);
						
			КонецЦикла;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ТекстОшибки = ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("СостояниеСтрокЗаказаПокупателя", УровеньЖурналаРегистрации.Ошибка
			, Метаданные.Документы.ЗаказПокупателя
			, ДанныеДляЗаписи.ДокументДляЗаписи.ДокументОснование
			, ТекстОшибки
		);
		
	КонецПопытки;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
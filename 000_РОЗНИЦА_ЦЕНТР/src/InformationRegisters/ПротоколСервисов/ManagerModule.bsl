#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция Разрешено(Знач Идентификатор, ИмяПроцедуры, КлючевоеЗначение)	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	РезультатЗащиты		= СоставРезультата();
	МинимальныйИнтервал	= ПолучитьМинимальныйИнтервал();

	Если ПустаяСтрока(Идентификатор) Тогда

		Идентификатор = ?(ЗначениеЗаполнено(КлючевоеЗначение), СокрЛП(КлючевоеЗначение), "<не указан>");

	КонецЕсли;

	Если НЕ МинимальныйИнтервал = 0 Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаПротокол.Период КАК Период
		|ИЗ
		|	РегистрСведений.ПротоколСервисов.СрезПоследних КАК ТаблицаПротокол
		|ГДЕ
		|	ТаблицаПротокол.Идентификатор = &Идентификатор
		|	И ТаблицаПротокол.ИмяПроцедуры = &ИмяПроцедуры"
		);
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		Запрос.УстановитьПараметр("ИмяПроцедуры" , ИмяПроцедуры);

		РезультатЗапроса = Запрос.Выполнить();

		ТекущийПериод = ТекущаяДата();

		Если НЕ РезультатЗапроса.Пустой() Тогда	//	было подобное обращение!

			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();

			Если НачалоДня(Выборка.Период) = НачалоДня(ТекущийПериод) Тогда

				РезультатЗащиты.Секунды = ТекущийПериод - Выборка.Период;

				Если РезультатЗащиты.Секунды < МинимальныйИнтервал Тогда

					РезультатЗащиты.Принять	= Ложь;

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

		НаборЗаписей = РегистрыСведений.ПротоколСервисов.СоздатьНаборЗаписей();
		НаборЗаписей.ОбменДанными.Загрузка = Истина;

		НаборЗаписей.Отбор.Период.Установить(ТекущийПериод);
		НаборЗаписей.Отбор.Идентификатор.Установить(Идентификатор);
		НаборЗаписей.Отбор.ИмяПроцедуры.Установить(ИмяПроцедуры);

		ЗаписьНабора = НаборЗаписей.Добавить();
		ЗаписьНабора.Период			= НаборЗаписей.Отбор.Период.Значение;
		ЗаписьНабора.Идентификатор	= НаборЗаписей.Отбор.Идентификатор.Значение;
		ЗаписьНабора.ИмяПроцедуры	= НаборЗаписей.Отбор.ИмяПроцедуры.Значение;
		ЗаписьНабора.КлючевоеЗначение = КлючевоеЗначение;
		ЗаписьНабора.Примечание		= ?(РезультатЗащиты.Принять, "", "Отказано (" + Формат(РезультатЗащиты.Секунды, "ЧН=0; ЧГ=") + " секунд)");

		НаборЗаписей.Записать();

	КонецЕсли;

	Возврат РезультатЗащиты;

КонецФункции

Функция СоставРезультата()	Экспорт

	Возврат Новый Структура("Принять, Секунды", Истина, -99999);

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьМинимальныйИнтервал()

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	УчетнаяПолитика.TimeoutDDos КАК TimeoutDDos
	|ИЗ
	|	РегистрСведений.УчетнаяПолитика.СрезПоследних КАК УчетнаяПолитика"
	);

	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда

		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();

		МинимальныйИнтервал = Выборка.TimeoutDDos;

	КонецЕсли;

	Возврат МинимальныйИнтервал;

КонецФункции

#КонецОбласти
	
#КонецЕсли

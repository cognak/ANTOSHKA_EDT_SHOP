
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Поставщик") Тогда

		Поставщик = Параметры.Поставщик;

	КонецЕсли;

	Если Параметры.Свойство("Магазин") Тогда

		Магазин = Параметры.Магазин;

	КонецЕсли;

	РежимОбновления = 1;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если РежимОбновления = 1 И ЗначениеЗаполнено(ДатаОкончания) И ДатаНачала > ДатаОкончания Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru='Дата окончания периода меньше, чем дата начала'"),
		,
		"ДатаОкончания",
		,
		Отказ
		);

	КонецЕсли;

	Если РежимОбновления = 2 Тогда

		Индекс = ПроверяемыеРеквизиты.Найти("ДатаНачала");

		Если НЕ Индекс = Неопределено Тогда

			ПроверяемыеРеквизиты.Удалить(Индекс);

		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиЭлементовФормы

&НаКлиенте
Процедура РежимОбновленияПриИзменении(Элемент)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура ПолноеИмяИмпортируемогоФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	ОписаниеОповещения = Новый ОписаниеОповещения("ДиалогВыбораФайлаExcelЗавершение", ЭтотОбъект);
	ДиалогВыбораФайла  = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = "Выберите файл книги Excel";
	ДиалогВыбораФайла.Фильтр = НСтр("ru = 'Лист Excel'") + " (*.xls)|*.xls|" + НСтр("ru = 'Лист Excel2007'") + " (*.xlsx)|*.xlsx";
	ДиалогВыбораФайла.ПолноеИмяФайла = ПолноеИмяИмпортируемогоФайла;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;

	ДиалогВыбораФайла.Показать(ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораФайлаExcelЗавершение(СписокФайлов, ДополнительныеПараметры)	Экспорт

	Если ТипЗнч(СписокФайлов) = Тип("Массив") И НЕ СписокФайлов.Количество() = 0 Тогда

		ПолноеИмяИмпортируемогоФайла = СписокФайлов[0];

	КонецЕсли;

КонецПроцедуры

	
#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОбновитьСтатистику(Команда)
	
	ТекстОшибки = "";
	ОбновлениеВыполнено = Ложь;
	
	Если РежимОбновления = 1 Тогда

		ОбновитьСтатистикуПоДокументамНаСервере(ОбновлениеВыполнено);

	ИначеЕсли РежимОбновления = 2 Тогда

		Если ПустаяСтрока(ПолноеИмяИмпортируемогоФайла) Тогда

			ТекстОшибки = "Необходимо указать имя файла для загрузки!";

		Иначе

			ФайлЗагрузки = Новый Файл(ПолноеИмяИмпортируемогоФайла);

			Если НЕ ФайлЗагрузки.Существует() Тогда

				ТекстОшибки = "Указанный файл не обнаружен - укажите существующий файл!";

			Иначе

				ПоказатьОповещениеПользователя("Загрузка данных из файла ...",, "Выполняется загрузка «" + ПолноеИмяИмпортируемогоФайла + "»", БиблиотекаКартинок.Предупреждение32);

				АдресВХранилище = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПолноеИмяИмпортируемогоФайла), УникальныйИдентификатор);
				ЗагрузитьСтатистикуИзТаблицыExcel(ОбновлениеВыполнено, АдресВХранилище, ФайлЗагрузки.Расширение);

			КонецЕсли;

		КонецЕсли;

		Если НЕ ПустаяСтрока(ТекстОшибки) Тогда

			ПоказатьОповещениеПользователя("Загрузка невозможна",, ТекстОшибки, БиблиотекаКартинок.Вопрос32);

		КонецЕсли;

	КонецЕсли;
	
	Если ОбновлениеВыполнено Тогда

		ТекстСообщения = НСтр("ru = 'Обновление выполнено.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Оповестить("ОбновлениеСтатистикиПоНоменклатуреПоставщиков");

	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОбновитьСтатистикуПоДокументамНаСервере(ОбновлениеВыполнено)

	Если НЕ ПроверитьЗаполнение() Тогда

		Возврат;

	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НоменклатураПоставщикаДокументы.Магазин КАК Магазин,
	|	НоменклатураПоставщикаДокументы.Поставщик КАК Поставщик,
	|	НоменклатураПоставщикаДокументы.Номенклатура КАК Номенклатура,
	|	НоменклатураПоставщикаДокументы.Характеристика КАК Характеристика
	|ИЗ
	|(ВЫБРАТЬ
	|	ПоступлениеТоваров.Магазин КАК Магазин,
	|	ПоступлениеТоваров.Контрагент КАК Поставщик,
	|	ПоступлениеТоваровТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровТовары.Характеристика КАК Характеристика
	|ИЗ
	|	Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|ПО
	|	ПоступлениеТоваровТовары.Ссылка = ПоступлениеТоваров.Ссылка
	|ГДЕ
	|	Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ПоступлениеТоваров.Проведен
	|	%УсловиеМагазин%
	|	%УсловиеКонтрагент%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказПоставщику.Магазин,
	|	ЗаказПоставщику.Контрагент,
	|	ЗаказПоставщикуТовары.Номенклатура,
	|	ЗаказПоставщикуТовары.Характеристика
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|ПО
	|	ЗаказПоставщику.Ссылка = ЗаказПоставщикуТовары.Ссылка
	|ГДЕ
	|	Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ЗаказПоставщику.Проведен
	|	%УсловиеМагазин%
	|	%УсловиеКонтрагент%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|
	|ВЫБРАТЬ
	|	ЗаказНаПеремещение.МагазинПолучатель,
	|	ЗаказНаПеремещение.МагазинОтправитель,
	|	ЗаказНаПеремещениеТовары.Номенклатура,
	|	ЗаказНаПеремещениеТовары.Характеристика
	|ИЗ
	|	Документ.ЗаказНаПеремещение КАК ЗаказНаПеремещение
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК ЗаказНаПеремещениеТовары
	|ПО ЗаказНаПеремещение.Ссылка = ЗаказНаПеремещениеТовары.Ссылка
	|ГДЕ
	|	Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ЗаказНаПеремещение.Проведен
	|	%УсловиеМагазинПолучатель%
	|	%УсловиеМагазинОтправитель%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.МагазинПолучатель,
	|	ПеремещениеТоваров.МагазинОтправитель,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика
	|	ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|		ПО ПеремещениеТоваров.Ссылка = ПеремещениеТоваровТовары.Ссылка
	|		ГДЕ
	|	Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ПеремещениеТоваров.Проведен
	|	%УсловиеМагазинПолучатель%
	|	%УсловиеМагазинОтправитель%) КАК НоменклатураПоставщикаДокументы
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.НоменклатураПоставщиков КАК НоменклатураПоставщиков
	|ПО
	|	НоменклатураПоставщиков.Поставщик = НоменклатураПоставщикаДокументы.Поставщик
	|	И НоменклатураПоставщиков.Магазин = НоменклатураПоставщикаДокументы.Магазин
	|	И НоменклатураПоставщиков.Номенклатура = НоменклатураПоставщикаДокументы.Номенклатура
	|	И НоменклатураПоставщиков.Характеристика = НоменклатураПоставщикаДокументы.Характеристика
	|ГДЕ
	|	НоменклатураПоставщиков.Поставщик ЕСТЬ NULL
	|ДЛЯ ИЗМЕНЕНИЯ РегистрСведений.НоменклатураПоставщиков");
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНачала));
	
	Если ЗначениеЗаполнено(ДатаОкончания) Тогда
		
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
		
	Иначе
		
		Запрос.УстановитьПараметр("ДатаОкончания", Дата(2999,1,1));
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Магазин) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеМагазин%",			"И Магазин = &Магазин");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеМагазинПолучатель%",	"И МагазинПолучатель = &Магазин");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеМагазин%",			"");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеМагазинПолучатель%",	"");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Поставщик) Тогда
		Если ТипЗнч(Поставщик) = Тип("СправочникСсылка.Контрагенты") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеКонтрагент%", 		"И Контрагент = &Поставщик");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеМагазинОтправитель%", "И ЛОЖЬ");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеМагазинОтправитель%", "И МагазинОтправитель = &Поставщик");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеКонтрагент%",			"И ЛОЖЬ");
		КонецЕсли;
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеКонтрагент%",			"");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеМагазинОтправитель%", "");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Магазин",	Магазин);
	Запрос.УстановитьПараметр("Поставщик",	Поставщик);
	
	Выборка = Запрос.Выполнить().Выбрать();
	НаборЗаписей = РегистрыСведений.НоменклатураПоставщиков.СоздатьНаборЗаписей();
	
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
		
		ЗаписьНабора = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(ЗаписьНабора, Выборка);
		
	КонецЦикла;
	
	НаборЗаписей.Записать(Ложь);
	
	//Обновление цен и даты поступления
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеТоваров.Дата КАК Дата,
	|	ПоступлениеТоваров.Контрагент,
	|	ПоступлениеТоваров.Магазин,
	|	ПоступлениеТоваровТовары.Номенклатура,
	|	ПоступлениеТоваровТовары.Характеристика,
	|	ПоступлениеТоваровТовары.Цена,
	|	ПоступлениеТоваровТовары.Упаковка
	|ПОМЕСТИТЬ Поступления
	|ИЗ
	|	Документ.ПоступлениеТоваров.Товары КАК ПоступлениеТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваров КАК ПоступлениеТоваров
	|		ПО ПоступлениеТоваровТовары.Ссылка = ПоступлениеТоваров.Ссылка
	|ГДЕ
	|	Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ПоступлениеТоваров.Проведен
	|	%УсловиеМагазин%
	|	%УсловиеКонтрагент%
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Поступления.Дата КАК ДатаПоследнегоПоступления,
	|	Поступления.Контрагент КАК Контрагент,
	|	Поступления.Магазин КАК Магазин,
	|	Поступления.Номенклатура КАК Номенклатура,
	|	Поступления.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА Поступления.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Поступления.Цена
	|		ИНАЧЕ Поступления.Цена / Поступления.Упаковка.Коэффициент
	|	КОНЕЦ КАК Цена
	|ПОМЕСТИТЬ ЦеныНоменклатуры
	|ИЗ
	|	Поступления КАК Поступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(Поступления.Дата) КАК Дата,
	|			Поступления.Контрагент КАК Контрагент,
	|			Поступления.Магазин КАК Магазин,
	|			Поступления.Номенклатура КАК Номенклатура,
	|			Поступления.Характеристика КАК Характеристика
	|		ИЗ
	|			Поступления КАК Поступления
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Поступления.Контрагент,
	|			Поступления.Магазин,
	|			Поступления.Номенклатура,
	|			Поступления.Характеристика) КАК МаксимальнаяДата
	|		ПО Поступления.Дата = МаксимальнаяДата.Дата
	|			И Поступления.Контрагент = МаксимальнаяДата.Контрагент
	|			И Поступления.Магазин = МаксимальнаяДата.Магазин
	|			И Поступления.Номенклатура = МаксимальнаяДата.Номенклатура
	|			И Поступления.Характеристика = МаксимальнаяДата.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Магазин,
	|	Характеристика,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураПоставщиков.Поставщик,
	|	НоменклатураПоставщиков.Магазин,
	|	НоменклатураПоставщиков.Номенклатура,
	|	НоменклатураПоставщиков.Характеристика,
	|	ЦеныНоменклатуры.ДатаПоследнегоПоступления,
	|	ЦеныНоменклатуры.Цена
	|ИЗ
	|	РегистрСведений.НоменклатураПоставщиков КАК НоменклатураПоставщиков
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО НоменклатураПоставщиков.Поставщик = ЦеныНоменклатуры.Контрагент
	|			И НоменклатураПоставщиков.Магазин = ЦеныНоменклатуры.Магазин
	|			И НоменклатураПоставщиков.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И НоменклатураПоставщиков.Характеристика = ЦеныНоменклатуры.Характеристика
	|			И НоменклатураПоставщиков.ДатаПоследнегоПоступления <> ЦеныНоменклатуры.ДатаПоследнегоПоступления";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНачала));
	
	Если ЗначениеЗаполнено(ДатаОкончания) Тогда
		
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
		
	Иначе
		
		Запрос.УстановитьПараметр("ДатаОкончания", Дата(2999,1,1));
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Магазин) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеМагазин%",			"И Магазин = &Магазин");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеМагазин%",			"");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Поставщик) Тогда
		Если ТипЗнч(Поставщик) = Тип("СправочникСсылка.Контрагенты") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеКонтрагент%", 		"И Контрагент = &Поставщик");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеКонтрагент%",			"И ЛОЖЬ");
		КонецЕсли;
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%УсловиеКонтрагент%",			"");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Магазин",	Магазин);
	Запрос.УстановитьПараметр("Поставщик",	Поставщик);
	
	Результат = Запрос.Выполнить();
	
	
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Запись = РегистрыСведений.НоменклатураПоставщиков.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Запись.Записать();
		КонецЦикла;
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	ОбновлениеВыполнено = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСтатистикуИзТаблицыExcel(ОбновлениеВыполнено, АдресВХранилище, РасширениеИмени)

	Если НЕ ПроверитьЗаполнение() Тогда

		Возврат;

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаСправочник
	|ГДЕ
	|	ТаблицаСправочник.Ссылка В(&СписокТоваров)
	|	И НЕ ТаблицаСправочник.ЭтоГруппа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ведущая.Поставщик КАК Поставщик,
	|	Ведущая.Магазин КАК Магазин,
	|	Ведущая.Номенклатура КАК Номенклатура,
	|	Ведущая.Характеристика КАК Характеристика,
	|	ИСТИНА КАК Удалить
	|ИЗ
	|	РегистрСведений.НоменклатураПоставщиков КАК Ведущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ Товары КАК Фильтр
	|		ПО Ведущая.Номенклатура = Фильтр.Номенклатура
	|ГДЕ
	|	Ведущая.Поставщик = &Поставщик
	|	И Ведущая.Магазин = &Магазин
	|	И Фильтр.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Поставщик,
	|	&Магазин,
	|	Ведущая.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЛОЖЬ
	|ИЗ
	|	Товары КАК Ведущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураПоставщиков КАК Фильтр
	|		ПО (Фильтр.Поставщик = &Поставщик)
	|			И (Фильтр.Магазин = &Магазин)
	|			И Ведущая.Номенклатура = Фильтр.Номенклатура
	|ГДЕ
	|	Фильтр.Номенклатура ЕСТЬ NULL"
	);
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	Запрос.УстановитьПараметр("Магазин"  , Магазин);
	Запрос.УстановитьПараметр("СписокТоваров", ЗаполнениеОбъектов.ЗагрузитьДанныеВМассивИзТаблицыExcel(АдресВХранилище, РасширениеИмени, Истина));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл

		МенеджерЗаписи = РегистрыСведений.НоменклатураПоставщиков.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);

		Если Выборка.Удалить Тогда

				МенеджерЗаписи.Удалить();

		Иначе	МенеджерЗаписи.Записать(Истина);

		КонецЕсли;

	КонецЦикла;

	ОбновлениеВыполнено = Истина;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОформлениеЭлементов()

	Если РежимОбновления = 1 Тогда

			Элементы.СтраницыРежимов.ТекущаяСтраница = Элементы.СтраницаШтатноеОбновление;
	
	Иначе	Элементы.СтраницыРежимов.ТекущаяСтраница = Элементы.СтраницаЗагрузкиExcel;

	КонецЕсли;

КонецПроцедуры



#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ВыполнениеСверкиИнформативныхОстатковПоУзламВРазрезеМагазинов
	
//	LNK 05.04.2017 09:29:35
Процедура ЗапроситьСверкуИнформативныеОстаткиТоваровПоМагазинам(Магазин = Неопределено)	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Если Магазин = Неопределено Тогда

		Если ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

			ВызватьИсключение "Сверка может быть запрошена только в перферийном узле «Магазины»! Запрос на сверку прерван.";

		КонецЕсли;

		Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;

		Если НЕ ЗначениеЗаполнено(Магазин) Тогда

			ВызватьИсключение "Магазин текущего узла не определён! Запрос на сверку прерван.";

		КонецЕсли;

	КонецЕсли;

//	Ликвидируем возможные какие "отпечатки" прошлого в периферии - достали уже в магазинах
//	смотреть свои остатки по этому регистру!
	ОчиститьИнформативныеОстаткиТекущегоМагазинаВПериферии(Магазин);

	УчетнаяПолитика = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику();

	Если УчетнаяПолитика.ВыполнятьСверкуИнформативныхОстатков = Истина Тогда

		ВремяНачала    = ТекущаяДатаСеанса();
		СобытиеЖурнала = "Запрос сверки информационных остатков";
		ЖурналСобытий.Регистрация(СобытиеЖурнала, УровеньЖурналаРегистрации.Предупреждение
			, "РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам"
			, Магазин
			,
			, "НАЧАЛО [" + ВремяНачала + "]"
			,
			, Истина
		);

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаРегистра.Магазин,
		|	ТаблицаРегистра.Номенклатура,
		|	ТаблицаРегистра.Количество
		|ИЗ
		|	РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам КАК ТаблицаРегистра
		|ГДЕ
		|	НЕ ТаблицаРегистра.Магазин = &Магазин"
		);
		Запрос.УстановитьПараметр("Магазин", Магазин);
		
		ТаблицаДанных = Запрос.Выполнить().Выгрузить();
		ВнешниеИсточникиСобытия.УстановитьОбъектДляОбработки("", "СВЕРИТЬ_ИНФ_ОСТАТКИ",, Новый ХранилищеЗначения(ТаблицаДанных, Новый СжатиеДанных(9)));

		ЖурналСобытий.Регистрация(СобытиеЖурнала, УровеньЖурналаРегистрации.Предупреждение, "РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам", Магазин
		,, "КОНЕЦ [" + ВремяНачала + "], размер таблицы = " + Формат(ТаблицаДанных.Количество(), "ЧН=0; ЧГ=") + " строк",, Истина);

	КонецЕсли;

КонецПроцедуры

//	LNK 05.04.2017 10:41:20
Процедура ВыполнитьСверкуИнформативныеОстаткиТоваровПоМагазинам()	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		ВызватьИсключение "Сверка может быть выполнена только в ЦБ «Магазины»! Выполнение сверки прервано.";

	КонецЕсли;

	УчетнаяПолитика = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику();

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаРегистра.Период КАК Период,
	|	ТаблицаРегистра.Магазин,
	|	ТаблицаРегистра.Магазин.НомерМагазина КАК НомерМагазина,
	|	ТаблицаРегистра.Хранилище,
	|	ТаблицаРегистра.Индекс КАК Индекс
	|ИЗ
	|	РегистрСведений.ОбъектыДляОбработки КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.ДействиеКоманда = ""СВЕРИТЬ_ИНФ_ОСТАТКИ""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	НомерМагазина,
	|	Индекс"
	);
	СверкиВыборка = Запрос.Выполнить().Выбрать();

	Пока СверкиВыборка.Следующий() Цикл

		Если УчетнаяПолитика.ВыполнятьСверкуИнформативныхОстатков = Истина Тогда

			СверитьИнформативныеОстатки(СверкиВыборка.Магазин
									, ОбменДаннымиПовтИсп.ПолучитьСписокУзловДляМагазина(СверкиВыборка.Магазин)
									, СверкиВыборка.Хранилище.Получить()
			);

		КонецЕсли;

		МенеджерЗаписи = РегистрыСведений.ОбъектыДляОбработки.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СверкиВыборка);
		МенеджерЗаписи.Удалить();

	КонецЦикла;

КонецПроцедуры

//	LNK 05.04.2017 10:47:10
Процедура СверитьИнформативныеОстатки(Магазин, СписокУзлов, ТаблицаДанных)

	ВремяНачала    = ТекущаяДатаСеанса();
	СобытиеЖурнала = "Сверка информационных остатков";
	ЖурналСобытий.Регистрация(СобытиеЖурнала, УровеньЖурналаРегистрации.Предупреждение, "РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам", Магазин
	,, "НАЧАЛО [" + ВремяНачала + "], размер таблицы = " + Формат(ТаблицаДанных.Количество(), "ЧН=0; ЧГ=") + " строк",, Истина);

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаДанных.Магазин КАК Справочник.Магазины) КАК Магазин,
	|	ВЫРАЗИТЬ(ТаблицаДанных.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ТаблицаДанных.Количество
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	&ТаблицаДанных КАК ТаблицаДанных
	|ГДЕ
	|	ТаблицаДанных.Магазин <> &Магазин
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Магазин,
	|	Данные.Номенклатура
	|ИЗ
	|	Данные КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам КАК ТаблицаРегистра
	|		ПО Данные.Магазин = ТаблицаРегистра.Магазин
	|			И Данные.Номенклатура = ТаблицаРегистра.Номенклатура
	|ГДЕ
	|	ТаблицаРегистра.Количество ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Данные.Магазин,
	|	Данные.Номенклатура
	|ИЗ
	|	Данные КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам КАК ТаблицаРегистра
	|		ПО Данные.Магазин = ТаблицаРегистра.Магазин
	|			И Данные.Номенклатура = ТаблицаРегистра.Номенклатура
	|ГДЕ
	|	Данные.Количество <> ТаблицаРегистра.Количество
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаРегистра.Магазин,
	|	ТаблицаРегистра.Номенклатура
	|ИЗ
	|	РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам КАК ТаблицаРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ Данные КАК Данные
	|		ПО ТаблицаРегистра.Магазин = Данные.Магазин
	|			И ТаблицаРегистра.Номенклатура = Данные.Номенклатура
	|ГДЕ
	|	ТаблицаРегистра.Магазин <> &Магазин
	|	И Данные.Количество ЕСТЬ NULL "
	);
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанных);

	Выборка = Запрос.Выполнить().Выбрать();
	НаборЗаписей = РегистрыСведений.ИнформативныеОстаткиТоваровПоМагазинам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Характеристика.Установить(Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());

	ЖурналСобытий.Регистрация(СобытиеЖурнала, УровеньЖурналаРегистрации.Предупреждение, "РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам", Магазин
	,, "Время выборки [" + ОбщегоНазначенияКлиентСервер.ВРЕМЯ(ТекущаяДатаСеанса() - ВремяНачала) + "], размер выборки = " + Формат(Выборка.Количество(), "ЧН=0; ЧГ=") + " строк",, Истина);

	Пока Выборка.Следующий() Цикл

		НаборЗаписей.Отбор.Магазин.Установить(Выборка.Магазин);
		НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);

		Для каждого Узел Из СписокУзлов Цикл

			Если НЕ ПланыОбмена.ИзменениеЗарегистрировано(Узел, НаборЗаписей) Тогда

				ПланыОбмена.ЗарегистрироватьИзменения(Узел, НаборЗаписей);

			КонецЕсли;

		КонецЦикла;

	КонецЦикла;

	ЖурналСобытий.Регистрация(СобытиеЖурнала, УровеньЖурналаРегистрации.Предупреждение, "РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам", Магазин
	,, "КОНЕЦ - общее время [" + ОбщегоНазначенияКлиентСервер.ВРЕМЯ(ТекущаяДатаСеанса() - ВремяНачала) + "]",, Истина);

КонецПроцедуры

//	LNK 05.07.2017 13:50:18
Процедура ОчиститьИнформативныеОстаткиТекущегоМагазинаВПериферии(Магазин)

	Если ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Возврат;

	КонецЕсли;

//	Ликвидируем возможные какие "отпечатки" прошлого в периферии - достали уже в магазинах
//	смотреть свои остатки по этому регистру!

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаРегистра.Магазин,
	|	ТаблицаРегистра.Номенклатура,
	|	ТаблицаРегистра.Характеристика
	|ИЗ
	|	РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.Магазин = &Магазин"
	);
	Запрос.УстановитьПараметр("Магазин", Магазин);

	НаборЗаписей = РегистрыСведений.ИнформативныеОстаткиТоваровПоМагазинам.СоздатьНаборЗаписей();
	НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов", Истина);
	НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения"  , Истина);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл

		НаборЗаписей.Отбор.Магазин.Установить(Выборка.Магазин);
		НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
		НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика);

		НаборЗаписей.Записать();

	КонецЦикла;

КонецПроцедуры

#КонецОбласти
	
#КонецЕсли




//	LNK 20.07.2018 14:34:52
Процедура УстановитьВОчереди(Узел, НомерСообщения, ДанныеОтказа)	Экспорт

	НаборЗаписей = РегистрыСведений.ОчередьОтказанныхСообщений.СоздатьНаборЗаписей();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;

	НаборЗаписей.Отбор.УзелПолучатель.Установить(Узел);
	НаборЗаписей.Отбор.НомерСообщения.Установить(НомерСообщения);
	НаборЗаписей.Отбор.ТипОтправителя.Установить(ДанныеОтказа.ТипОтправителя);
	НаборЗаписей.Отбор.Идентификатор.Установить(ДанныеОтказа.Идентификатор);

	ЗаписьНабора = НаборЗаписей.Добавить();

	ЗаписьНабора.УзелПолучатель = НаборЗаписей.Отбор.УзелПолучатель.Значение;
	ЗаписьНабора.НомерСообщения = НаборЗаписей.Отбор.НомерСообщения.Значение;
	ЗаписьНабора.ТипОтправителя = НаборЗаписей.Отбор.ТипОтправителя.Значение;
	ЗаписьНабора.Идентификатор  = НаборЗаписей.Отбор.Идентификатор.Значение;

	ЗаписьНабора.ДанныеСообщения = Новый ХранилищеЗначения(ДанныеОтказа.ДанныеСообщения, Новый СжатиеДанных(9));
	ЗаписьНабора.ОснованиеОтказа = ДанныеОтказа.ОснованиеОтказа;

	НаборЗаписей.Записать();

КонецПроцедуры

//	LNK 23.07.2018 13:06:05
Процедура УдалитьИзОчереди(Узел, ТипОтправителя, Идентификатор)	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаРегистра.УзелПолучатель КАК УзелПолучатель,
	|	ТаблицаРегистра.ТипОтправителя КАК ТипОтправителя,
	|	ТаблицаРегистра.Идентификатор КАК Идентификатор
	|ИЗ
	|	РегистрСведений.ОчередьОтказанныхСообщений КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.УзелПолучатель = &УзелПолучатель
	|	И ТаблицаРегистра.ТипОтправителя = &ТипОтправителя
	|	И ТаблицаРегистра.Идентификатор = &Идентификатор"
	);
	Запрос.УстановитьПараметр("УзелПолучатель", Узел);
	Запрос.УстановитьПараметр("ТипОтправителя", ТипОтправителя);
	Запрос.УстановитьПараметр("Идентификатор" , Идентификатор);
	
	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		НаборЗаписей = РегистрыСведений.ОчередьОтказанныхСообщений.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.УзелПолучатель.Установить(Узел);
		НаборЗаписей.Отбор.ТипОтправителя.Установить(ТипОтправителя);
		НаборЗаписей.Отбор.Идентификатор.Установить(Идентификатор);

		НаборЗаписей.Записать();

	КонецЕсли;

КонецПроцедуры

Функция СтруктураОтказа()	Экспорт

	Возврат Новый Структура(
		"ТипОтправителя, Идентификатор, Индекс, ДанныеСообщения, ОснованиеОтказа"
		, "", "", 0, Неопределено, ""
	);

КонецФункции // СоставОтказа()

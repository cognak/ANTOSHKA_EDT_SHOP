&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Перем КлючЗаписи;

	Параметры.Свойство("КлючЗаписи", КлючЗаписи);

	Если НЕ ТипЗнч(КлючЗаписи) = Тип("РегистрСведенийКлючЗаписи.ЖурналСобытий") Тогда

		Отказ = Истина;

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЖурналСобытий.Хранилище КАК Хранилище
	|ИЗ
	|	РегистрСведений.ЖурналСобытий КАК ЖурналСобытий
	|ГДЕ
	|	ЖурналСобытий.Период = &Период
	|	И ЖурналСобытий.КодУзлаОбмена = &КодУзлаОбмена
	|	И ЖурналСобытий.Индекс = &Индекс"
	);
	Запрос.УстановитьПараметр("Период", КлючЗаписи.Период);
	Запрос.УстановитьПараметр("КодУзлаОбмена", КлючЗаписи.КодУзлаОбмена);
	Запрос.УстановитьПараметр("Индекс", КлючЗаписи.Индекс);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда

		ДанныеХранилища = Выборка.Хранилище.Получить();

		Если ТипЗнч(ДанныеХранилища) = Тип("Структура") И ДанныеХранилища.Свойство("ТаблицыNavision") Тогда

			Заголовок = "ТаблицыNavision";

			ИменаТаблиц = Новый Массив;
			ИменаТаблиц.Добавить("MOVE_HEAD");
			ИменаТаблиц.Добавить("MOVE_LINE");

			Для каждого ИмяТаблицы Из ИменаТаблиц Цикл

				Для каждого Колонка Из ДанныеХранилища.ТаблицыNavision[ИмяТаблицы].Колонки Цикл
					
					Колонка.Заголовок = Колонка.Имя;
					Колонка.Имя = ИмяТаблицы + "_" + Колонка.Имя;

				КонецЦикла;

				СоздатьКолонкиЭлемента(ДанныеХранилища.ТаблицыNavision[ИмяТаблицы], ИмяТаблицы);

			КонецЦикла;
		ИначеЕсли  ТипЗнч(ДанныеХранилища) = Тип("Строка") тогда 
			Элементы.ВходящийТекст.Видимость = Истина;
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(ДанныеХранилища);
			ДанныеЗапроса = ПрочитатьJSON(ЧтениеJSON, Ложь,,, "ПолучитьДатуОтMagento", ОбменMagentoСервер,, ОбменMagentoСервер.ИменаТипаДата());
			
			ЗаписьJSON = Новый ЗаписьJSON;
			ЗаписьJSON.УстановитьСтроку();  
			ЗаписатьJSON(ЗаписьJSON, ДанныеЗапроса);            
			RequestData = ЗаписьJSON.Закрыть();
	       ВходящийТекст = RequestData;
		//2025-07-04 sa Если это просто структура, то распарсим ее в текст 	
		ИначеЕсли  ТипЗнч(ДанныеХранилища) = Тип("Структура") Тогда
		   ОтобразитьСтруктуруРекурсивно("ДанныеХранилища",ДанныеХранилища);  
		   Элементы.ВходящийТекст.Видимость = Истина;
		Иначе  

			Отказ = Истина;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СоздатьКолонкиЭлемента(ТаблицаИсточник, ИмяТаблицы)

	СписокРеквизитов = Новый Массив;
//	сначала добавим саму таблицу
	СписокРеквизитов.Добавить(Новый РеквизитФормы(ИмяТаблицы, Новый ОписаниеТипов("ТаблицаЗначений")));

	Для каждого Колонка Из ТаблицаИсточник.Колонки Цикл

		СписокРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, ИмяТаблицы, Колонка.Заголовок));

	КонецЦикла;

	ИзменитьРеквизиты(СписокРеквизитов);

//	Добавим элементы формы
	ТабличноеПоле = Элементы.Добавить(ИмяТаблицы, Тип("ТаблицаФормы"));
	ТабличноеПоле.ПутьКДанным = ИмяТаблицы;

//	запретим менять положение строк и сами строки, отключим командную панель
	ТабличноеПоле.ТолькоПросмотр       = Истина;
	ТабличноеПоле.ИзменятьСоставСтрок  = Ложь;
	ТабличноеПоле.ИзменятьПорядокСтрок = Ложь;
	ТабличноеПоле.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;

	Для Каждого Колонка ИЗ ТаблицаИсточник.Колонки Цикл

		Элемент = Элементы.Добавить("Колонка" + Колонка.Имя, Тип("ПолеФормы"), ТабличноеПоле);
		Элемент.Вид = ВидПоляФормы.ПолеНадписи;
		Элемент.ПутьКДанным = ИмяТаблицы + "." + Колонка.Имя;
		Элемент.Заголовок = Колонка.Заголовок;

	КонецЦикла;

//	заполним таблицу
	ЗначениеВРеквизитФормы(ТаблицаИсточник, ИмяТаблицы);

КонецПроцедуры

&НаСервере
Процедура ОтобразитьСтруктуруРекурсивно(Ключ_="",Данные_)

	Если ТипЗнч(Данные_)=Тип("Структура") Тогда
		//Сообщить(""+Ключ_+"{");
		ВходящийТекст = ВходящийТекст + ""+Ключ_+"{"+Символы.ПС; 
		Для Каждого КлючИЗначение Из Данные_ Цикл 
			Значение_ = КлючИЗначение.Значение;
			Ключ1_ = КлючИЗначение.Ключ;
			Если ТипЗнч(Значение_)= Тип("Массив")
				ИЛИ ТипЗнч(Значение_)= Тип("Структура")
				ИЛИ ТипЗнч(Значение_)= Тип("Соответствие")
				Тогда
				ОтобразитьСтруктуруРекурсивно(Ключ1_,Значение_);
			Иначе
				//Сообщить(""+Ключ1_+": "+Значение_);	
				ВходящийТекст = ВходящийТекст + Ключ1_+": "+Значение_+Символы.ПС;
			КонецЕсли;
		КонецЦикла;
		//Сообщить("}//"+Ключ_+";");
		ВходящийТекст = ВходящийТекст +"}//"+Ключ_+";"+Символы.ПС; 
	ИначеЕсли ТипЗнч(Данные_)=Тип("Массив") Тогда
		//Сообщить(""+Ключ_+"[");
		ВходящийТекст = ВходящийТекст + Ключ_+"["+Символы.ПС;
		Для Каждого ЭлементМассива Из Данные_ Цикл 
			Значение_ = ЭлементМассива;
			Ключ1_ = Ключ_;
			Если ТипЗнч(Значение_)= Тип("Массив")
				ИЛИ ТипЗнч(Значение_)= Тип("Структура")
				ИЛИ ТипЗнч(Значение_)= Тип("Соответствие")
				Тогда
				ОтобразитьСтруктуруРекурсивно(Ключ1_,Значение_);
			Иначе
				//Сообщить("Элемент массива: "+Значение_+"");	
				ВходящийТекст = ВходящийТекст + "Элемент массива: "+Значение_+""+Символы.ПС;
			КонецЕсли;
		КонецЦикла;
		//Сообщить("]//КОНЕЦ МАССИВА "+Ключ_+";");
		ВходящийТекст = ВходящийТекст +"]//КОНЕЦ МАССИВА "+Ключ_ +";"+Символы.ПС;
	ИначеЕсли ТипЗнч(Данные_)=Тип("Соответствие") Тогда
		//Сообщить(""+Ключ_+" {");
		ВходящийТекст = ВходящийТекст +""+Ключ_+" {"+Символы.ПС;
		Для Каждого КлючИЗначение Из Данные_ Цикл 
			Значение_ = КлючИЗначение.Значение;
			Ключ1_ = КлючИЗначение.Ключ;
			Если ТипЗнч(Значение_)= Тип("Массив")
				ИЛИ ТипЗнч(Значение_)= Тип("Структура")
				ИЛИ ТипЗнч(Значение_)= Тип("Соответствие")
				Тогда
				ОтобразитьСтруктуруРекурсивно(Ключ1_,Значение_);
			Иначе
				//Сообщить(""+Ключ1_+"-> "+Значение_);
				ВходящийТекст = ВходящийТекст +""+Ключ1_+"-> "+Значение_+Символы.ПС;
			КонецЕсли;
		КонецЦикла;
		//Сообщить("}//"+Ключ_+";");
		ВходящийТекст = ВходящийТекст +"}//"+Ключ_+";"+Символы.ПС;
	Иначе
		//Сообщить(""+Ключ_+" = "+Данные_);
		ВходящийТекст = ВходящийТекст +""+Ключ_+" = "+Данные_+Символы.ПС;
	КонецЕсли;
	
КонецПроцедуры







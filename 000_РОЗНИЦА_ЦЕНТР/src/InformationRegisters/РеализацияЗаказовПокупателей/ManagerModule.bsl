#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//	LNK 13.07.2022 06:12:05
Процедура ВыполнитьДвиженияРеализацияЗаказовПокупателей(ДокументСсылка, Период, РезультатыЗапроса, НаборЗаписей, Записывать, РежимЗагрузки = Ложь, ИндексПакета)	Экспорт

	Перем Реквизиты;

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	ТипСсылки = ТипЗнч(ДокументСсылка);

	Если РезультатыЗапроса = Неопределено Тогда
	//	Это вызов из "ОбработкаПроведения" ЧекККМ в "РежимЗакрытияСмены = Истина" 

		МенеджерДокумента = ?(ТипСсылки = Тип("ДокументСсылка.ЧекККМ"), Документы.ЧекККМ, Документы.РеализацияТоваров);

	//	здесь реквизиты шапки документа применяются как параметры запроса.
		Запрос = МенеджерДокумента.ПолучитьЗапросПроведенияИЗаполнитьРеквизитыШапки(ДокументСсылка, Реквизиты);
		Запрос.Текст = МенеджерДокумента.ТекстЗапросаРеализацияЗаказовПокупателей();

		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		ПроверитьНаличие  = Истина;

	Иначе

	//	"Обычный" вызов из "ОбработкаПроведения" либо из "ВыполнитьДвиженияРасширеннойАналитикиПродаж" модуля менеджера.
	//	Такие вызовы отличаются значением "ИндексПакета"
		ПроверитьНаличие = Ложь;

	КонецЕсли;

	НаборЗаписей.Записывать = Истина;	//	учитываем коллекцию документа "Движения"
	НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
	НаборЗаписей.Загрузить(РезультатыЗапроса[ИндексПакета].Выгрузить());

	ТранзакцияНачата = Ложь;

	Если НЕ ТранзакцияАктивна() Тогда

		ТранзакцияНачата = Истина;
		НачатьТранзакцию();

	КонецЕсли;

	Если Записывать Тогда

		НаборЗаписей.ОбменДанными.Загрузка = РежимЗагрузки;
		НаборЗаписей.Записать();	//	LNK 12.07.2022 06:38:25

	КонецЕсли;

	РегистрыСведений.РеализацияЗаказовРегистрация.ЗарегистрироватьОформление(ДокументСсылка, НаборЗаписей.Количество() = 0,, ПроверитьНаличие);

	Если ТранзакцияНачата Тогда

		ЗафиксироватьТранзакцию();

	КонецЕсли;

КонецПроцедуры

#Область ПроцедурыЗапроса_к_ЦБ_РеализацияЗаказовПокупателей

//	LNK 18.07.2022 05:23:30
Процедура СинхронизироватьРеализацияЗаказовПокупателей()	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	ТекстОшибки = "";

//	Запрос выполняется только из ПБ к ЦБ!
//	---------------------------------------------------------------------------------------

	Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() И РозничныеПродажиСлужебный.РесурсWebRetailДоступен() Тогда

		Если ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().ВидУзла = Перечисления.ВидыУзлов.Магазин Тогда

			Запрос = Новый Запрос(СтрЗаменить(
			"ВЫБРАТЬ
			|	ТаблицаУзлы.Ссылка КАК Ссылка,
			|	ТаблицаУзлы.Код КАК Код
			|ИЗ
			|	ПланОбмена.ПоМагазину КАК ТаблицаУзлы
			|ГДЕ
			|	НЕ(ТаблицаУзлы.ЭтотУзел
			|				ИЛИ ТаблицаУзлы.ПометкаУдаления)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 100
			|	ТаблицаНазначений.Объект КАК Объект,
			|	ТаблицаНазначений.Магазин КАК Магазин,
			|	ТаблицаНазначений.ДатаИзменения КАК КлючПорядка
			|ИЗ
			|	РегистрСведений.РеализацияЗаказовРегистрация КАК ТаблицаНазначений
			|ГДЕ
			|	НЕ ТаблицаНазначений.Выполнен
			|	И ТаблицаНазначений.ДействиеКоманда = ""ПРОДАЖА_ПО_ЗАКАЗУ""
			|	И ТаблицаНазначений.Магазин = &Магазин
			|
			|УПОРЯДОЧИТЬ ПО
			|	КлючПорядка,
			|	Объект"
			, "ПЕРВЫЕ 100", "ПЕРВЫЕ " + Формат(ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки("WEB.OrderSaleControl"), "ЧГ="))
			);
			Запрос.УстановитьПараметр("Магазин", ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ЦентрУправляющейСистемы"));
			
			РезультатыЗапроса = Запрос.ВыполнитьПакет();

			ВыборкаПолучатель = РезультатыЗапроса[0].Выбрать();
			ВыборкаПолучатель.Следующий();
			ВыборкаИзменений  = РезультатыЗапроса[1].Выбрать();

			ТаблицаОбъектов = РегистрыСведений.РеализацияЗаказовПокупателей.СтруктураТаблицыОбъектов();
			ТаблицаПринято  = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
					"РеализацияЗаказов_Получено",
					"УЗЕЛ_" + ВыборкаПолучатель.Код,
					РегистрыСведений.РеализацияЗаказовПокупателей.СтруктураТаблицыОбъектов(Истина)
			);
			
			Пока ВыборкаИзменений.Следующий() Цикл

				НаборЗаписей = РегистрыСведений.РеализацияЗаказовПокупателей.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаИзменений.Объект);
				НаборЗаписей.Прочитать();

				СтрокаТаблицы = ТаблицаОбъектов.Добавить();
				СтрокаТаблицы.Объект  = ВыборкаИзменений.Объект;
				СтрокаТаблицы.Магазин = ВыборкаИзменений.Магазин;
				СтрокаТаблицы.Данные  = НаборЗаписей;

			КонецЦикла;

			ДанныеЗапроса = Новый Структура(
				"Код, Магазин, ТаблицаОбъектов, ТаблицаПринято"
				, ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Код
				, ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин
				, ТаблицаОбъектов
				, ТаблицаПринято
			);

			ЗаписьJSON = Новый ЗаписьJSON;
			ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
			СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON, ДанныеЗапроса, НазначениеТипаXML.Явное);

			DataString = ЗаписьJSON.Закрыть(); 

		//	---------------------------------------------------------------------------------------

			Подключение = СервисыСервер.Подключение("RetailPack", 60);

			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(Подключение.OrderSaleControl(DataString));
			ДанныеОтвета = СериализаторXDTO.ПрочитатьJSON(ЧтениеJSON);
			ЧтениеJSON.Закрыть();

			ДанныеОтвета.Вставить("Отправитель", ОбменДаннымиПовтИсп.НайтиУзелПланаОбменаПоКоду("ПоМагазину", ДанныеОтвета.Код));

		//	---------------------------------------------------------------------------------------

			Если НЕ ДанныеОтвета.Ошибка Тогда

				РегистрыСведений.РеализацияЗаказовРегистрация.ПринятьПодтверждениеПринятыхДанных(ДанныеОтвета);

				СинхронизироватьРеализацияЗаказовПокупателей_Приём(ДанныеОтвета, ТаблицаПринято, ТекстОшибки);

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

//	LNK 26.07.2022 05:51:06
Процедура СинхронизироватьРеализацияЗаказовПокупателей_Приём(ДанныеОтвета, ТаблицаПринято, ТекстОшибки)

//	.. очищаем таблицу (создаём заново)
	ТаблицаПринято = РегистрыСведений.РеализацияЗаказовПокупателей.СтруктураТаблицыОбъектов(Истина);
//	исключаем текущий узел и узел-отправитель
	МагазиныИсключить = Новый Соответствие;
	МагазиныИсключить.Вставить(ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин, Истина);
	МагазиныИсключить.Вставить(ДанныеОтвета.Магазин, Истина);

	Для каждого СтрокаТаблицы Из ДанныеОтвета.ТаблицаОбъектов Цикл

		НаборЗаписей = СтрокаТаблицы.Данные;

		НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения", Истина);
	//	работаем в ПБ - регистрация не нужна!
		НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов", Истина);
		НаборЗаписей.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.ОбменДанными.Отправитель = ДанныеОтвета.Отправитель;

		Попытка

			НаборЗаписей.Записать();

		//	это подтверждение получения, которое в "источнике" запроса будет очищено
			СтрокаПринято = ТаблицаПринято.Добавить();
			СтрокаПринято.Объект  = СтрокаТаблицы.Объект;
			СтрокаПринято.Магазин = СтрокаТаблицы.Магазин;

		Исключение

			ТекстОшибки = ТекстОшибки
				+ ?(ПустаяСтрока(ТекстОшибки), "", Символы.ПС)
				+ ОписаниеОшибки()
			;

		КонецПопытки;

	КонецЦикла;

	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		"РеализацияЗаказов_Получено",
		"УЗЕЛ_" + ДанныеОтвета.Код,
		ТаблицаПринято
	);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//	LNK 19.07.2022 06:12:12
Функция СтруктураТаблицыОбъектов(Получение = Ложь)	Экспорт

	ТаблицаОбъектов = Новый ТаблицаЗначений;
	ТаблицаОбъектов.Колонки.Добавить("Магазин", Новый ОписаниеТипов("СправочникСсылка.Магазины"));
	ТаблицаОбъектов.Колонки.Добавить("Объект" , Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваров, ДокументСсылка.ЧекККМ"));

	Если Получение = Ложь Тогда

		ТаблицаОбъектов.Колонки.Добавить("Данные", Новый ОписаниеТипов("РегистрСведенийНаборЗаписей.РеализацияЗаказовПокупателей"));

	КонецЕсли;

	Возврат ТаблицаОбъектов;

КонецФункции

#КонецОбласти
	
#КонецЕсли

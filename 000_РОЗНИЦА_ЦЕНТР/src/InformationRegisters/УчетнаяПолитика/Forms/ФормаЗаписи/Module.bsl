&НаКлиенте
Перем ИспользоватьБонуснуюСистему;	//	условие обновления интерфейса

#Область ОбработчикиСобытийФормы

&НаСервере	//	LNK 27.07.2021 05:27:24
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если НЕ УправлениеПользователями.ПолучитьБулевоЗначениеПраваПользователя("АдминистраторПолномочный", Ложь) = Истина Тогда

		ТолькоПросмотр = Истина;

	КонецЕсли;

	Элементы.СписокПрефиксов.ТолькоПросмотр = НЕ УправлениеПользователями.ПолучитьБулевоЗначениеПраваПользователя("РазрешитьИзменениеПрефиксаКартыДисконта", Ложь) = Истина
										  ИЛИ НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел();

	ПолучитьДанныеХранилища();
	КомандаОбновитьРазмерРезерваНаСервере();	//	LNK 17.08.2021 05:43:19

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ИспользоватьБонуснуюСистему = Запись.ИспользоватьБонуснуюСистему;

	Если НЕ ПустаяСтрока(ИмяТекущейСтраницы) Тогда

		Элементы.Страницы.ТекущаяСтраница = Элементы[ИмяТекущейСтраницы];

	КонецЕсли;
	
	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	ИмяТекущейСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если УправлениеПользователями.ПолучитьБулевоЗначениеПраваПользователя("РазрешитьИзменениеПрефиксаКартыДисконта", Ложь) = Истина Тогда

		УстановитьДанныеХранилища();

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	ПолучитьДанныеХранилища();

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьОформлениеЭлементов();

	Оповестить("УчетнаяПолитика.Изменение", Запись, ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЭлементыПриИзменении(Элемент)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура СписокПрефиксовПометкаПриИзменении(Элемент)

	Для каждого ЭлементСписка Из СписокПрефиксов Цикл

		Если ЭлементСписка.Пометка И НЕ ЭлементСписка.Значение = Элементы.СписокПрефиксов.ТекущиеДанные.Значение Тогда

			ЭлементСписка.Пометка = Ложь;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОформлениеЭлементов()

	Элементы.ИспользоватьБонуснуюСистему.ШрифтЗаголовка = Новый Шрифт(,, Запись.ИспользоватьБонуснуюСистему);

	Элементы.НеНачислятьБаллыПриОплатеБонусами.Видимость						= Запись.ИспользоватьБонуснуюСистему;
	Элементы.ИспользоватьЧекиКакРегистраторыНачисленияБонусныхБаллов.Видимость	= Запись.ИспользоватьБонуснуюСистему;
	Элементы.ДвиженияБонусныхБалловТолькоВЦентре.Видимость						= Запись.ИспользоватьБонуснуюСистему;
	Элементы.ПечататьВЧекеДанныеБонусногоСчета.Видимость						= Запись.ИспользоватьБонуснуюСистему;

	Для каждого ЭлементСписка Из СписокПрефиксов Цикл

		Если ЭлементСписка.Пометка Тогда

			Элементы.СписокПрефиксов.ТекущаяСтрока = ЭлементСписка.ПолучитьИдентификатор();
			Прервать;

		КонецЕсли;

	КонецЦикла;

	Если НЕ ИспользоватьБонуснуюСистему = Запись.ИспользоватьБонуснуюСистему Тогда

		ПоказатьОповещениеПользователя("Обновление интерфейса",, "Изменён флаг, определяющий отображение данных.", БиблиотекаКартинок.Предупреждение32);
		ИспользоватьБонуснуюСистему = Запись.ИспользоватьБонуснуюСистему;

		ОбновитьИнтерфейс();
		ОбновитьФорму();

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьФорму()

	ЗаписьОбъект = РеквизитФормыВЗначение("Запись");
	ЗначениеВРеквизитФормы(ЗаписьОбъект, "Запись");

КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеХранилища()

	Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Возврат;

	КонецЕсли;

	ДанныеХранилища = РегистрыСведений.БезопасноеХранилищеДанных.ДанныеПрочитать(РегистрыСведений.УчетнаяПолитика.КлючБезопасногоХранилища()).Получить();

	РегистрыСведений.УчетнаяПолитика.ПроверитьСтруктуруХранилища(ДанныеХранилища);

//	---------------------------------------------------------------------------------------

	СписокПрефиксов.Очистить();

	ПрефиксТекущий = Константы.ПрефиксКартыДисконта.Получить();

	Для каждого Префикс Из ДанныеХранилища.ПрефиксыКарт Цикл

		СписокПрефиксов.Добавить(Префикс,, Префикс = ПрефиксТекущий);

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеХранилища()

	Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Возврат;

	КонецЕсли;

	ДанныеХранилища.ПрефиксыКарт.Очистить();

	Для каждого ЭлементСписка Из СписокПрефиксов Цикл

		Префикс = ЭлементСписка.Значение;

		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(Префикс) Тогда

			ТекстОшибки = "Ключ «" + Префикс + "» имеет неверное значение - допустимы только литеры латинского алфавита.";
			ВызватьИсключение ТекстОшибки;

		Иначе

			ДанныеХранилища.ПрефиксыКарт.Добавить(Префикс);

		КонецЕсли;

	КонецЦикла;

	РегистрыСведений.БезопасноеХранилищеДанных.ДанныеЗаписать(РегистрыСведений.УчетнаяПолитика.КлючБезопасногоХранилища(), ДанныеХранилища,, Ложь);

	Для каждого ЭлементСписка Из СписокПрефиксов Цикл

		Если ЭлементСписка.Пометка Тогда

			Константы.ПрефиксКартыДисконта.Установить(ЭлементСписка.Значение);
			Прервать;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура КомандаОбновитьРазмерРезерваНаСервере()

	РазмерРезерва = ИнформационныеКартыСлужебный.ПолучитьКоличествоРезервныхЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьРазмерРезерва(Команда)

	КомандаОбновитьРазмерРезерваНаСервере();

КонецПроцедуры









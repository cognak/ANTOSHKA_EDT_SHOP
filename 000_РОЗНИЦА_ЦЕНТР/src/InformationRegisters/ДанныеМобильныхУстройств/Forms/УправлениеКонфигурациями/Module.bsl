#Область ОбработчикиОсновныхСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьДанныеНаФорме();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ВерсияПомошникПродавцаПриИзменении(Элемент)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура ВерсияТерминалСбораДанныхПриИзменении(Элемент)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОформлениеЭлементов()

	Для каждого ТипПрограммы Из ОбщегоНазначенияКлиентСервер.AAD("ТерминалСбораДанных", "ПомошникПродавца") Цикл

		Элементы["ЗагрузитьКонфигурацию" + ТипПрограммы].Доступность = НЕ ЭтотОбъект["Версия" + ТипПрограммы] = ЭтотОбъект["Версия" + ТипПрограммы + "Была"];

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеНаФорме()

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеМобильныхУстройств.Версия КАК Версия
	|ИЗ
	|	РегистрСведений.ДанныеМобильныхУстройств КАК ДанныеМобильныхУстройств
	|ГДЕ
	|	ДанныеМобильныхУстройств.ТипПрограммы = &ТипПрограммы"
	);

	Для каждого ТипПрограммы Из ОбщегоНазначенияКлиентСервер.AAD("ТерминалСбораДанных", "ПомошникПродавца") Цикл

		Запрос.УстановитьПараметр("ТипПрограммы", Перечисления.ПрограммаМобильногоУстройства[ТипПрограммы]);
		Результат = Запрос.Выполнить();

		Если НЕ Результат.Пустой() Тогда

			Выборка = Результат.Выбрать();
			Выборка.Следующий();

			ЭтотОбъект["Версия" + ТипПрограммы] = Выборка.Версия;
			ЭтотОбъект["Версия" + ТипПрограммы + "Была"] = Выборка.Версия;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКонфигурациюПомошникПродавца(Команда)

	ЗагрузитьКонфигурациюНаКлиенте("ПомошникПродавца");

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКонфигурациюТерминалСбораДанных(Команда)

	ЗагрузитьКонфигурациюНаКлиенте("ТерминалСбораДанных");

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКонфигурациюНаКлиенте(ТипПрограммы)

	ДополнительныеПараметры = Новый Структура(
		"ТипПрограммы, ЗначениеТипа, Версия"
		, ТипПрограммы
		, ПредопределенноеЗначение("Перечисление.ПрограммаМобильногоУстройства." + ТипПрограммы)
		, ЭтотОбъект["Версия" + ТипПрограммы]
	);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьКонфигурациюНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);

	ДиалогВыбораФайла  = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок  = "Выбрать файл конфигурации мобильного приложения";
	ДиалогВыбораФайла.Фильтр     = НСтр("ru='Файл конфигурации (*.apk)|*.apk'");
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;

	Если НЕ ПустаяСтрока(ЭтотОбъект["ИмяФайла" + ТипПрограммы]) Тогда

		ФайлОбъект = Новый Файл(ЭтотОбъект["ИмяФайла" + ТипПрограммы]);
		ДиалогВыбораФайла.Каталог    = ФайлОбъект.Путь;
		ДиалогВыбораФайла.Расширение = ФайлОбъект.Расширение;

	КонецЕсли;

	ДиалогВыбораФайла.Показать(ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКонфигурациюНаКлиентеЗавершение(СписокФайлов, ДополнительныеПараметры)	Экспорт

	Если НЕ СписокФайлов = Неопределено И НЕ СписокФайлов.Количество() = 0 Тогда

		ЭтотОбъект["ИмяФайла" + ДополнительныеПараметры.ТипПрограммы] = СписокФайлов[0];

		ПоказатьОповещениеПользователя("Загрузка данных из файла ...",, "Выполняется загрузка «" + ЭтотОбъект["ИмяФайла" + ДополнительныеПараметры.ТипПрограммы] + "»", БиблиотекаКартинок.Предупреждение32);

		ЗагрузитьКонфигурациюНаСервере(ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ЭтотОбъект["ИмяФайла" + ДополнительныеПараметры.ТипПрограммы]), УникальныйИдентификатор)
			, ОбщегоНазначенияКлиентСервер.lx_GetTooken(ЭтотОбъект["ИмяФайла" + ДополнительныеПараметры.ТипПрограммы], ".")
			, ДополнительныеПараметры);

		УстановитьДанныеНаФорме();
		ПоказатьОповещениеПользователя("Загрузка конфигурации выполнена!",,, БиблиотекаКартинок.Предупреждение32);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьКонфигурациюНаСервере(АдресВХранилище, Расширение, ДополнительныеПараметры)

	НаборЗаписей = РегистрыСведений.ДанныеМобильныхУстройств.СоздатьНаборЗаписей();

	НаборЗаписей.Отбор.ТипПрограммы.Установить(ДополнительныеПараметры.ЗначениеТипа);

	ЗаписьНабора = НаборЗаписей.Добавить();
	ЗаписьНабора.ТипПрограммы = НаборЗаписей.Отбор.ТипПрограммы.Значение;
	ЗаписьНабора.Версия = ДополнительныеПараметры.Версия;
	ЗаписьНабора.Данные = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресВХранилище), Новый СжатиеДанных(9));

	НаборЗаписей.Записать();

КонецПроцедуры










#Область ОбработчикиСобытий

Процедура ANTOSHKA_ProdTest_Основной_ПродТест_ТестРегистрыСведенийОбработкаПолученияСообщения(Сообщение, Отказ)
	
	ПолученияСообщения(Сообщение, Отказ);

КонецПроцедуры

Процедура ANTOSHKA_ProdTest_Основной_ПродТест_ТестРегистрыНакопленияОбработкаПолученияСообщения(Сообщение, Отказ)
	
	ПолученияСообщения(Сообщение, Отказ);

КонецПроцедуры

Процедура ANTOSHKA_ProdTest_Основной_ПродТест_ТестПрочееОбработкаПолученияСообщения(Сообщение, Отказ)
	
	ПолученияСообщения(Сообщение, Отказ);

КонецПроцедуры

Процедура ANTOSHKA_ProdTest_Основной_ПродТест_ТестСправочникОбработкаПолученияСообщения(Сообщение, Отказ)
	
	ПолученияСообщения(Сообщение, Отказ);

КонецПроцедуры

Процедура ANTOSHKA_ProdTest_Основной_ПродТест_ТестДокументОбработкаПолученияСообщения(Сообщение, Отказ)
	
	ПолученияСообщения(Сообщение, Отказ);

КонецПроцедуры

Процедура ANTOSHKA_ProdTest_Основной_ПродТест_ТестРегистрыСведений4ОбработкаПолученияСообщения(Сообщение, Отказ)
	
	ПолученияСообщения(Сообщение, Отказ);

КонецПроцедуры

Процедура ANTOSHKA_ProdTest_Основной_ПродТест_ТестРегистрыСведений3ОбработкаПолученияСообщения(Сообщение, Отказ)
	
	ПолученияСообщения(Сообщение, Отказ);

КонецПроцедуры

Процедура ANTOSHKA_ProdTest_Основной_ПродТест_ТестРегистрыСведений5ОбработкаПолученияСообщения(Сообщение, Отказ)
	
	ПолученияСообщения(Сообщение, Отказ);

КонецПроцедуры

Процедура ANTOSHKA_ProdTest_Основной_ПродТест_ТестРегистрыСведений2ОбработкаПолученияСообщения(Сообщение, Отказ)
	
	ПолученияСообщения(Сообщение, Отказ);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолученияСообщения(Сообщение, Отказ) Экспорт

	Попытка
		
		УстановитьПривилегированныйРежим(Истина);
		
		РазмерСообщения = Сообщение.РазмерТела;   
	
		Если РазмерСообщения <> Неопределено Тогда
			РазмерБуфера = Число(РазмерСообщения); 
		Иначе
			РазмерБуфера = 1024;    
		КонецЕсли;
	
	    // Читаем тело сообщения++         
		Если Не РазмерБуфера = 0 Тогда 
	
			Тело  = Новый БуферДвоичныхДанных(0);
			Буфер = Новый БуферДвоичныхДанных(РазмерБуфера);
			Поток = Сообщение.ПолучитьТелоКакПоток();	
			
			Пока Истина Цикл
				
				Прочитано = Поток.Прочитать(Буфер, 0, РазмерБуфера);
				
				Если Прочитано > 0 Тогда
					
					Тело = Тело.Соединить(Буфер);  
					
				КонецЕсли;   
				
				Если Прочитано < РазмерБуфера Тогда
					
					Прервать; 
					
		 		КонецЕсли; 
				
			КонецЦикла; 
			
			ТекстСообщения = ПолучитьСтрокуИзБуфераДвоичныхДанных(Тело);   
			
			ЧтениеJSON = Новый ЧтениеJSON();
			ЧтениеJSON.УстановитьСтроку(ТекстСообщения);
					
			ОбъектДанных = СериализаторXDTO.ПрочитатьJSON(ЧтениеJSON);
			
			ОбъектДанных.ОбменДанными.Загрузка = Истина;
			ОбъектДанных.ДополнительныеСвойства.Вставить("СлужебноеУдаление", Истина);
			ОбъектДанных.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов");
			ОбъектДанных.Записать();
			
		КонецЕсли;
		
	Исключение
		
		ЗаписьЖурналаРегистрации("СервисИнтеграции"
			, УровеньЖурналаРегистрации.Ошибка
			, ОбъектДанных
			, 
			, ОписаниеОшибки());
			
	КонецПопытки;
	

КонецПроцедуры

#КонецОбласти


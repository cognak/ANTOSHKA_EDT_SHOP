#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеРасчетаСкидок = ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище);
	ПримененныеСкидки = ДанныеРасчетаСкидок[0].Результаты;
	
	Если ПримененныеСкидки.Свойство("СведенияДокумента") Тогда
		ОтобразитьНадписьСегменатИсключения(ПримененныеСкидки.СведенияДокумента);
	КонецЕсли;
	
	СформироватьИнформациюОРасчетеСкидокПоДокументу(ПримененныеСкидки.ДеревоСкидок);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура РассчитатьИнформациюОРасчетеСкидокПоДокументу(ДеревоСкидок)
	
	Для Каждого СтрокаДерева Из ДеревоСкидок.Строки Цикл
		
		Если СтрокаДерева.ЭтоГруппа Тогда
			
			РассчитатьИнформациюОРасчетеСкидокПоДокументу(СтрокаДерева);
			
			СтрокаДерева.ИндексКартинки = СкидкиНаценкиСервер.ПолучитьИндексКартинкиДляГруппы(СтрокаДерева);
			СтрокаДерева.Значение       = СтрокаДерева.СкидкаНаценка;
			СтрокаДерева.Разворачивать  = Истина;
			
			Для каждого Стр Из СтрокаДерева.Строки Цикл
				Если Стр.Действует Тогда
					СтрокаДерева.Действует        = Истина;
					СтрокаДерева.УсловияВыполнены = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		Иначе
			
			СтрокаДерева.ИндексКартинки = СкидкиНаценкиСервер.ПолучитьИндексКартинкиДляСкидки(СтрокаДерева);
			СтрокаДерева.Значение = СтрокаДерева.СкидкаНаценка;
		
			ВсеУсловияВыполнены = Истина;

			Для каждого СтрокаУсловие Из СтрокаДерева.ПараметрыУсловий.ТаблицаУсловий Цикл
				
				НоваяСтрокаУсловие = СтрокаДерева.Строки.Добавить();
				НоваяСтрокаУсловие.Значение         = СтрокаУсловие.УсловиеПредоставления;
				НоваяСтрокаУсловие.Действует        = СтрокаУсловие.Выполнено;
				НоваяСтрокаУсловие.УсловияВыполнены = СтрокаУсловие.Выполнено;
				НоваяСтрокаУсловие.ИндексКартинки   = -1;
				
				Если НЕ НоваяСтрокаУсловие.Действует Тогда
					ВсеУсловияВыполнены = Ложь;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ВсеУсловияВыполнены Тогда
				СтрокаДерева.Действует = Истина;
				СтрокаДерева.УсловияВыполнены = Истина;
			Иначе
				СтрокаДерева.УсловияВыполнены = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьИнформациюОРасчетеСкидокПоДокументу(ВходящееДеревоСкидок)
	
	ДеревоСкидок = ВходящееДеревоСкидок.Скопировать();
	ДеревоСкидок.Колонки.Добавить("ИндексКартинки",   Новый ОписаниеТипов("Число"));
	ДеревоСкидок.Колонки.Добавить("Действует",        Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("УсловияВыполнены", Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("Разворачивать",  Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("ЭтоУсловие",     Новый ОписаниеТипов("Булево"));
	ДеревоСкидок.Колонки.Добавить("Значение",       Новый ОписаниеТипов("СправочникСсылка.СкидкиНаценки, СправочникСсылка.УсловияПредоставленияСкидокНаценок"));
	
	РассчитатьИнформациюОРасчетеСкидокПоДокументу(ДеревоСкидок);
	
	ЗначениеВРеквизитФормы(ДеревоСкидок, "ИнформацияОРасчетеСкидокПоДокументуВЦелом");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокЗначенийУправляемыхСкидок()
	
	УправляемыеСкидки = Новый СписокЗначений;
	
	ДеревоСкидок = РеквизитФормыВЗначение("ИнформацияОРасчетеСкидокПоДокументуВЦелом");
	НайденныеСтроки = ДеревоСкидок.Строки.НайтиСтроки(Новый Структура("НазначенаПользователем", Истина), Истина);
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		УправляемыеСкидки.Добавить(НайденнаяСтрока.Значение);
	КонецЦикла;
	
	Возврат УправляемыеСкидки;
	
КонецФункции

&НаКлиенте
Процедура Рассчитать(Команда)
	
	Закрыть(ПолучитьСписокЗначенийУправляемыхСкидок());
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоДоУсловийРекурсивно(СтрокаДерева, ЭлементФормы)
	
	КоллекцияЭлементов = СтрокаДерева.ПолучитьЭлементы();
	Для каждого Элемент Из КоллекцияЭлементов Цикл
	
		Если Элемент.Разворачивать Тогда
			ЭлементФормы.Развернуть(Элемент.ПолучитьИдентификатор());
			РазвернутьДеревоДоУсловийРекурсивно(Элемент, ЭлементФормы);
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьДеревоДоУсловийРекурсивно(ИнформацияОРасчетеСкидокПоДокументуВЦелом, Элементы.ИнформацияОРасчетеСкидокПоДокументуВЦелом);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////////
// Служебные

&НаСервере
Процедура ОтобразитьНадписьСегменатИсключения(СведенияДокумента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	втТовары КАК Товары
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры = &ПодарочныйСертификат
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	Запрос.УстановитьПараметр("ПодарочныйСертификат", Перечисления.ТипыНоменклатуры.ПодарочныйСертификат);
	Запрос.УстановитьПараметр("Товары", СведенияДокумента.Товары.Выгрузить());
	Выборка = Запрос.Выполнить().Выбрать();
	КоличествоСтрокВсего = 0;
	Если Выборка.Количество() > 0 Тогда
		Элементы.ТекстОбИСключениях.Видимость = Истина;
		СтрокиСИсключениями = "";
		КоличествоСтрок = 0;
		Пока Выборка.Следующий() Цикл
			КоличествоСтрок = КоличествоСтрок + 1;
			КоличествоСтрокВсего = КоличествоСтрокВсего + 1;
			Если КоличествоСтрок > 1 Тогда
				СтрокиСИсключениями = СтрокиСИсключениями + ", ";
			КонецЕсли;
			СтрокиСИсключениями = СтрокиСИсключениями + Формат(Выборка.НомерСтроки, "ЧН=0; ЧГ=0");
		КонецЦикла;
		Если КоличествоСтрок = 1 Тогда
			ТекстЗаголовка = НСтр("ru = 'В строке %1 содержится номенклатура, являющаяся подарочным сертификатом.'");
		Иначе
			ТекстЗаголовка = НСтр("ru = 'В строках %1 содержится номенклатура, являющаяся подарочным сертификатом.'");
		КонецЕсли;
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, СтрокиСИсключениями);
		Элементы.ТекстОбИСключениях.Заголовок = ТекстЗаголовка;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияДокумента.СегментИсключаемойНоменклатуры) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	втТовары КАК Товары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
		|		ПО НоменклатураСегмента.Номенклатура = Товары.Номенклатура
		|			И НоменклатураСегмента.Характеристика = Товары.Характеристика
		|ГДЕ
		|	НоменклатураСегмента.Сегмент = &Сегмент
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		Запрос.УстановитьПараметр("Сегмент", СведенияДокумента.СегментИсключаемойНоменклатуры);
		Запрос.УстановитьПараметр("Товары", СведенияДокумента.Товары.Выгрузить());
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() > 0 Тогда
			Элементы.ТекстОбИСключениях.Видимость = Истина;
			СтрокиСИсключениями = "";
			КоличествоСтрок = 0;
			Пока Выборка.Следующий() Цикл
				КоличествоСтрок = КоличествоСтрок + 1;
				КоличествоСтрокВсего = КоличествоСтрокВсего + 1;
				Если КоличествоСтрок > 1 Тогда
					СтрокиСИсключениями = СтрокиСИсключениями + ", ";
				КонецЕсли;
				СтрокиСИсключениями = СтрокиСИсключениями + Формат(Выборка.НомерСтроки, "ЧН=0; ЧГ=0");
			КонецЦикла;
			Если КоличествоСтрок = 1 Тогда
				ТекстЗаголовка = НСтр("ru = 'В строке %1 содержится номенклатура, входящая в состав сегмента-исключения скидок.'");
			Иначе
				ТекстЗаголовка = НСтр("ru = 'В строках %1 содержится номенклатура, входящая в состав сегмента-исключения скидок.'");
			КонецЕсли;
			ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, СтрокиСИсключениями);
			Элементы.ТекстОбИСключениях.Заголовок = Элементы.ТекстОбИСключениях.Заголовок + Символы.ПС + ТекстЗаголовка;
		КонецЕсли;
	КонецЕсли;
	Если КоличествоСтрокВсего = 1 Тогда
		Элементы.ТекстОбИСключениях.Заголовок = Элементы.ТекстОбИСключениях.Заголовок
			+ Символы.ПС + НСтр("ru = 'В этой строке автоматические и управляемые скидки рассчитываться не будут.'")
	Иначе
		Элементы.ТекстОбИСключениях.Заголовок = Элементы.ТекстОбИСключениях.Заголовок
			+ Символы.ПС + НСтр("ru = 'В этих строках автоматические и управляемые скидки рассчитываться не будут.'")
	КонецЕсли;
	
КонецПроцедуры

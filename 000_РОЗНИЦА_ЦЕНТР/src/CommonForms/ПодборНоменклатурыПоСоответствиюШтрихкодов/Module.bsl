////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеКолонкиНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");
	
	Если Параметры.Свойство("Штрихкоды") Тогда
		Для каждого текСтрока Из Параметры.Штрихкоды Цикл
			Строка = Товары.Добавить();
			Строка.Штрихкод   = текСтрока.Штрихкод;
			Если текСтрока.Свойство("Количество") Тогда
				Строка.Количество = текСтрока.Количество;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
           
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура КомандаПеренестиВДокумент(Команда)
	
	ОчиститьСообщения();
	
	РезультатПроверки = ВыполнитьПроверку();
	Если НЕ РезультатПроверки Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаНомеклатура = Новый Массив();
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
			
			ТаблицаНомеклатура.Добавить(Новый Структура("Штрихкод, Количество, Номенклатура, Характеристика, Упаковка",
				СтрокаТЧ.Штрихкод, СтрокаТЧ.Количество, СтрокаТЧ.Номенклатура, СтрокаТЧ.Характеристика, СтрокаТЧ.Упаковка));
				
			ОписаниеОшибки = "";
			
			Если Не ПодключаемоеОборудованиеРТ.УстановитьШтрихкод(СтрокаТЧ.Штрихкод, СтрокаТЧ.Номенклатура, СтрокаТЧ.Характеристика, 
					СтрокаТЧ.Упаковка, ОписаниеОшибки) Тогда
				Сообщить(ОписаниеОшибки);
				Возврат;
			КонецЕсли;
			
		КонецЕсли
	КонецЦикла;   

	Закрыть(ТаблицаНомеклатура);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
                   
&НаСервере
Функция ВыполнитьПроверку()
	
	ОшибокНет      = Истина;
	ВыбранныСтроки = Ложь;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
			
			ВыбранныСтроки = Истина;
			
			Если СтрокаТЧ.ХарактеристикиИспользуются И НЕ ЗначениеЗаполнено(СтрокаТЧ.Характеристика) Тогда
			
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Не указана характеристика для номенклатуры ""%1""'"), СтрокаТЧ.Номенклатура));
				ОшибокНет = Ложь;
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

	Если ОшибокНет И НЕ ВыбранныСтроки Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбрана номенклатура для переноса'"));
		ОшибокНет = Ложь;
	КонецЕсли;
		
	Возврат ОшибокНет;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущаяСтрока.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу"      , ТекущаяСтрока.Упаковка);
	
	ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Товары, ТекущаяСтрока, СтруктураДействий, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
  
	ОбработкаТабличнойЧастиТоварыКлиент.ВыбратьХарактеристикуНоменклатуры(ЭтотОбъект, Элемент, СтандартнаяОбработка, Элементы.Товары.ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыУпаковкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВыбратьУпаковкуНоменклатуры(ДанныеВыбора, СтандартнаяОбработка, Элементы.Товары.ТекущиеДанные);
	
КонецПроцедуры

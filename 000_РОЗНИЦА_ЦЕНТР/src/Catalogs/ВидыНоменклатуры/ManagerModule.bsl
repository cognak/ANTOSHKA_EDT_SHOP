#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("ТипНоменклатуры");
	
	Результат.Добавить("ИспользованиеХарактеристик");   
	Результат.Добавить("ИспользоватьХарактеристики");   
	
	Результат.Добавить("ИспользоватьСерии");
	Результат.Добавить("ПолитикиУчетаСерий");
	Результат.Добавить("НастройкаИспользованияСерий");
	Результат.Добавить("ТочностьУказанияСрокаГодностиСерии");
	Результат.Добавить("СрокГарантии");
	
	Возврат Результат;

КонецФункции

// Получает вид номенклатуры, если вид номенклатуры один в справочнике.
//
// Возвращаемое значение:
// СправочникСсылка.ВидНоменклатуры - Найденный вид номенклатуры
// Неопределено - если видов номенаклатуры нет или видов номенклатуры больше одного
//
Функция ПолучитьВидНоменклатурыПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	Не ВидыНоменклатуры.ПометкаУдаления
	|");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		ВидНоменклатуры = Выборка.ВидНоменклатуры;
	Иначе
		ВидНоменклатуры = Неопределено;
	КонецЕсли;
	
	Возврат ВидНоменклатуры;

КонецФункции // ВидНоменклатуры()

// Получает набор свойств характеристик для вида номенклатуры.
//
// Возвращаемое значение:
// СправочникСсылка.ВидНоменклатуры - Найденный вид номенклатуры
// Неопределено - если видов номенаклатуры нет или видов номенклатуры больше одного
//
Функция ПолучитьНаборСвойствХарактеристик(ВидНоменклатуры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыНоменклатуры.НаборСвойствХарактеристик КАК НаборСвойствХарактеристик
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	ВидыНоменклатуры.Ссылка = &Ссылка
	|");
	
	Запрос.Параметры.Вставить("Ссылка", ВидНоменклатуры);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		НаборСвойствХарактеристик = Выборка.НаборСвойствХарактеристик;
	КонецЕсли;
	
	Возврат НаборСвойствХарактеристик;

КонецФункции // ПолучитьНаборСвойствХарактеристик()

// Получает набор свойств для вида номенклатуры.
//
// Возвращаемое значение:
// СправочникСсылка.ВидНоменклатуры - Найденный вид номенклатуры
// Неопределено - если видов номенаклатуры нет или видов номенклатуры больше одного
//
Функция ПолучитьНаборСвойств(ВидНоменклатуры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидыНоменклатуры.НаборСвойств КАК НаборСвойств
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	ВидыНоменклатуры.Ссылка = &Ссылка
	|");
	
	Запрос.Параметры.Вставить("Ссылка", ВидНоменклатуры);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		НаборСвойств = Выборка.НаборСвойств;
	КонецЕсли;
	
	Возврат НаборСвойств;

КонецФункции // ПолучитьНаборСвойств()

//Возвращает структуру с параметрами учетной политики по сериям
// Параметры:
//		ПолитикаУчетаСерий - вид номенклатуры для которого нужно получить параметры учетной политики по сериям
Функция ПараметрыСерийНоменклатуры(ВидНоменклатуры) Экспорт
	
	СтруктураВозврата = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидНоменклатуры, "ИспользоватьНомерСерии,
																			|ИспользоватьСрокГодностиСерии,ИспользоватьКоличествоСерии,
																			|ТочностьУказанияСрокаГодностиСерии");
								
	СтруктураВозврата.Вставить("ВидНоменклатуры",ВидНоменклатуры);
	СтруктураВозврата.Вставить("ФорматнаяСтрокаСрокаГодности");
	
	СтруктураВозврата.ФорматнаяСтрокаСрокаГодности =  ФорматнаяСтрокаСрокаГодности(СтруктураВозврата.ТочностьУказанияСрокаГодностиСерии);
	
	Возврат СтруктураВозврата;
КонецФункции

//Процедура возвращает форматную строку представления срока годности
// Параметры
//		СТочностьюДоЧасов - нужно ли в сроке годности указывать часы
Функция ФорматнаяСтрокаСрокаГодности(ТочностьУказанияСрокаГодности)Экспорт
	Если ТочностьУказанияСрокаГодности = Перечисления.ТочностиУказанияСрокаГодности.СТочностьюДоЧасов Тогда
		ФорматнаяСтрока = "ДФ='dd.MM.yy-HH'";
	Иначе
		ФорматнаяСтрока = "ДФ=dd.MM.yy";
	КонецЕсли;
	
	Возврат ФорматнаяСтрока;
КонецФункции

Функция ПолучитьКодыПроектов(ВернутьСоответствие = Ложь)	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСправочник.IDN КАК IDN
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ТаблицаСправочник
	|ГДЕ
	|	НЕ ТаблицаСправочник.IDN = """""
	);
	
	Результат = Запрос.Выполнить();

	Если ВернутьСоответствие = Истина Тогда

		СписокКодов = Новый Соответствие;

		Выборка = Результат.Выбрать();

		Пока Выборка.Следующий() Цикл

			СписокКодов.Вставить(Выборка.IDN, Истина);

		КонецЦикла;

	Иначе

		СписокКодов = Результат.Выгрузить().ВыгрузитьКолонку("IDN");

	КонецЕсли;
	
	Возврат СписокКодов;

КонецФункции

#КонецЕсли






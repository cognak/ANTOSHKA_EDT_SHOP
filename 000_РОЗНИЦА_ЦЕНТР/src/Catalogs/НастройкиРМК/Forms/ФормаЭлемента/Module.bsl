&НаКлиенте
Перем КэшированныеЗначения;

// Хранит Акселератор кнопки для редактирования
&НаКлиенте
Перем СтарыйАкселератор;

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.БыстрыеТовары.Количество() = 0 Тогда
		СтрокаАкселератора = "QWERTYUASDFGHJZXCVBNM";
		Для Счетчик = 1 По 21 Цикл
			НовСтрока = Объект.БыстрыеТовары.Добавить();
			Новстрока.ИмяКнопки   = "Товар" + Строка(Счетчик);
			Новстрока.Акселератор = "Ctrl+" + Сред(СтрокаАкселератора, Счетчик, 1);
		КонецЦикла;
	КонецЕсли;
	
	Если ПланыОбмена.ПоРабочемуМесту.ЭтоРабочееМесто() Тогда
		Элементы.КонтролироватьОстаткиТоваровПриЗакрытииЧека.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ГруппаКнопкиНижнейПанели.Доступность = Объект.ИспользоватьРасширеннуюНастройкуКнопокНижнейПанели;
	
	
	ЗаполнитьТаблицуКнопокИзМакета();
	
	Элементы.КнопкиНижнейПанелиКлавиша.СписокВыбора.ЗагрузитьЗначения(МассивКлавишДляАкселераторов());
	Элементы.КнопкиНижнейПанелиПредставлениеКнопки.СписокВыбора.ЗагрузитьЗначения(МассивПредставленийКнопок());
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ДополнительныеОтчетыИОбработки
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.БыстрыеТовары);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_ПрисоединенныйФайл" Тогда
		СсылкаНаФайл = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
		Если ВыборИзображения Тогда
			ТекущаяСтрока = Элементы.БыстрыеТовары.ТекущиеДанные;
			Если НЕ ТекущаяСтрока = Неопределено Тогда
				ТекущаяСтрока.ФайлКартинки = СсылкаНаФайл;
				АдресКартинки = НавигационнаяСсылкаКартинки(ТекущаяСтрока.ФайлКартинки, УникальныйИдентификатор);
				Модифицированность = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.БыстрыеТовары);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.БыстрыеТовары);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ИспользоватьРасширеннуюНастройкуКнопокНижнейПанелиПриИзменении(Элемент)
	
	Элементы.ГруппаКнопкиНижнейПанели.Доступность = Объект.ИспользоватьРасширеннуюНастройкуКнопокНижнейПанели;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "БыстрыеТовары"

&НаКлиенте
Процедура БыстрыеТоварыНоменклатураПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.БыстрыеТовары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущаяСтрока.Характеристика);
	
	ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Объект.БыстрыеТовары, ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ТекущаяСтрока.Название = ТекущаяСтрока.Номенклатура;
	
КонецПроцедуры

&НаКлиенте
Процедура БыстрыеТоварыХарактеристикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработкаТабличнойЧастиТоварыКлиент.ВыбратьХарактеристикуНоменклатуры(ЭтотОбъект, Элемент, СтандартнаяОбработка, Элементы.БыстрыеТовары.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура БыстрыеТоварыФайлКартинкиНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗаблокироватьДанныеФормыДляРедактирования();
	ДобавитьИзображениеНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура БыстрыеТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.БыстрыеТовары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.БыстрыеТоварыФайлКартинки Тогда
		СтандартнаяОбработка = Ложь;
		ЗаблокироватьДанныеФормыДляРедактирования();
		ДобавитьИзображениеНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "КнопкиНижнейПанели"

&НаКлиенте
Процедура КнопкиНижнейПанелиПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	
	Если ТекущиеДанные.ИмяКнопки = "КнопкаВыход" Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ОтменаРедактирования Тогда
		ТекущаяСтрока		= Элементы.КнопкиНижнейПанели.ТекущиеДанные;
		ИмяКнопки			= ТекущаяСтрока.ИмяКнопки;
		ТекущийНомерСтроки	= ТекущаяСтрока.НомерСтроки;
		ПредставлениеКнопки = ТекущаяСтрока.ПредставлениеКнопки;
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ИмяКнопки", ИмяКнопки);
		
		СтрокиТаблицы = Объект.КнопкиНижнейПанели.НайтиСтроки(СтруктураПоиска);
		Для каждого СтрокиТаблицы Из СтрокиТаблицы Цикл
			Если Не СтрокиТаблицы.НомерСтроки = ТекущийНомерСтроки Тогда
				
				ТекстСообщения = НСтр("ru='Кпонка ""%ПредставлениеКнопки%"" уже есть в строке №%НомерСтроки%.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеКнопки%", ПредставлениеКнопки);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокиТаблицы.НомерСтроки);
				
				ПолеСообщения = "КнопкиНижнейПанели[%ИндексСтроки%]";
				ПолеСообщения = СтрЗаменить(ПолеСообщения, "%ИндексСтроки%", ТекущийНомерСтроки-1);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,ПолеСообщения, "Объект");
				
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиПередНачаломИзменения(Элемент, Отказ)
	ТекущаяСтрока = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	
	СтарыйАкселератор = СтроковоеПредставленияАкселератора(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиАкселераторAltПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	
	ЗаменитьНаименованиеАкселератора(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиАкселераторCtrlПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	
	ЗаменитьНаименованиеАкселератора(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиАкселераторShiftПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	
	ЗаменитьНаименованиеАкселератора(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиКлавишаПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	
	Если ПустаяСтрока(ТекущаяСтрока.Клавиша) Тогда
		ТекущаяСтрока.Клавиша = "Нет";
	КонецЕсли;
	
	Если ТекущаяСтрока.Клавиша = "Нет" Тогда
		ТекущаяСтрока.АкселераторAlt = Ложь;
		ТекущаяСтрока.АкселераторCtrl = Ложь;
		ТекущаяСтрока.АкселераторShift = Ложь;
	КонецЕсли;
	
	ЗаменитьНаименованиеАкселератора(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КнопкиНижнейПанелиПредставлениеКнопкиПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.КнопкиНижнейПанели.ТекущиеДанные;
	ПредставлениеКнопки = ТекущаяСтрока.ПредставлениеКнопки;
	СтрокиИзМакета = ТаблицаДействииКнопокНижнейПанели.НайтиСтроки(Новый Структура("ПредставлениеКнопки",ПредставлениеКнопки));
	Если Не СтрокиИзМакета.Количество() = 0  Тогда
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокиИзМакета[0]);
	КонецЕсли;
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаполнитьПоУмолчаниюНижнююПанель(Команда)
	
	Если Объект.КнопкиНижнейПанели.Количество()>0 Тогда
		Если Вопрос("Таблица кнопок заполнена. Очистить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Объект.КнопкиНижнейПанели.Очистить();
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ПоУмолчанию", Истина);
	СтрокиТаблицы = ТаблицаДействииКнопокНижнейПанели.НайтиСтроки(СтруктураПоиска);
	
	Для каждого СтрокаТаблицы Из СтрокиТаблицы Цикл
		ТекущиеДанные = Объект.КнопкиНижнейПанели.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, СтрокаТаблицы);
	КонецЦикла;
	
	Объект.МаксимальноеКоличествоКнопокВОдномРяду = 13;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзПрисоединенныхФайлов(Команда)
	ТекущаяСтрока = Элементы.БыстрыеТовары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("ВладелецФайла, ЗакрыватьПриВыборе", Объект.Ссылка, Истина);
	ЗначениеВыбора = ОткрытьФормуМодально("ОбщаяФорма.ВыборПрисоединенныхФайлов", СтруктураПараметров);
	Если ЗначениеЗаполнено(ЗначениеВыбора) Тогда
		ТекущаяСтрока.ФайлКартинки = ЗначениеВыбора;
		АдресКартинки = НавигационнаяСсылкаКартинки(ТекущаяСтрока.ФайлКартинки, УникальныйИдентификатор)
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	ТекущаяСтрока = Элементы.БыстрыеТовары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Записать();
		Иначе 
			Возврат
		КонецЕсли;
	КонецЕсли;
	
	ВыборИзображения = Истина;
	ИдентификаторФайла = Новый УникальныйИдентификатор;
	ПрисоединенныеФайлыКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла);
	ВыборИзображения = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	ТекущаяСтрока = Элементы.БыстрыеТовары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.ФайлКартинки = ПредопределенноеЗначение("Справочник.НастройкиРМКПрисоединенныеФайлы.ПустаяСсылка");
	АдресКартинки = "";
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзображение(Команда)
	
	ПросмотретьПрисоединенныйФайл();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИзображение(Команда)
	ТекущаяСтрока = Элементы.БыстрыеТовары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	Если ЗначениеЗаполнено(ТекущаяСтрока.ФайлКартинки) Тогда
		ПрисоединенныеФайлыКлиент.ОткрытьФормуПрисоединенногоФайла(ТекущаяСтрока.ФайлКартинки);
	Иначе
		ТекстСообщения = НСтр("ru='Отсутстует изображение для редактирования'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "АдресКартинки");
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Заменяет в заголовке наименование акселератора
//
// Параметры:
//  ТекущиеДанные - Строка таблицы кнопок нижней панели
//
&НаКлиенте
Процедура ЗаменитьНаименованиеАкселератора(ТекущаяСтрока)
	
	ТекущийАкселератор = СтроковоеПредставленияАкселератора(ТекущаяСтрока);
	
	Если ЗначениеЗаполнено(СтарыйАкселератор) и ЗначениеЗаполнено(ТекущийАкселератор) Тогда
		
		ТекущаяСтрока.ЗаголовокКнопки = СтрЗаменить(ТекущаяСтрока.ЗаголовокКнопки, СтарыйАкселератор, ТекущийАкселератор);
		
	ИначеЕсли ЗначениеЗаполнено(СтарыйАкселератор) Тогда
		
		ТекущаяСтрока.ЗаголовокКнопки = СтрЗаменить(ТекущаяСтрока.ЗаголовокКнопки, СтарыйАкселератор, "");
		ТекущаяСтрока.ЗаголовокКнопки = СтрЗаменить(ТекущаяСтрока.ЗаголовокКнопки, "()", "");
		
	ИначеЕсли ЗначениеЗаполнено(ТекущийАкселератор) Тогда
		
		ТекущаяСтрока.ЗаголовокКнопки = ТекущаяСтрока.ЗаголовокКнопки+ " ("+ТекущийАкселератор+")"
		
	КонецЕсли;
	
	СтарыйАкселератор = ТекущийАкселератор;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуКнопокИзМакета()

	Макет = Справочники.НастройкиРМК.ПолучитьМакет("СтандартныеДействияКнопокНижнейПанели");
	
	ТаблицаДействииКнопокНижнейПанели.Очистить();
	
	КолСтрок = Макет.ВысотаТаблицы;
	
	Для НомерСтрокиМакета = 2 По КолСтрок Цикл
		
		СтрокаТаблицы = ТаблицаДействииКнопокНижнейПанели.Добавить();
		СтрокаТаблицы.ПредставлениеКнопки = Макет.Область(НомерСтрокиМакета,1,НомерСтрокиМакета,1).Текст;
		СтрокаТаблицы.ИмяКоманды          = Макет.Область(НомерСтрокиМакета,2,НомерСтрокиМакета,2).Текст;
		СтрокаТаблицы.ИмяКнопки           = Макет.Область(НомерСтрокиМакета,3,НомерСтрокиМакета,3).Текст;
		СтрокаТаблицы.ЗаголовокКнопки     = Макет.Область(НомерСтрокиМакета,4,НомерСтрокиМакета,4).Текст;
		СтрокаТаблицы.ПроцедураКнопки     = Макет.Область(НомерСтрокиМакета,5,НомерСтрокиМакета,5).Текст;
		СтрокаТаблицы.Клавиша             = Макет.Область(НомерСтрокиМакета,6,НомерСтрокиМакета,6).Текст;
		СтрокаТаблицы.АкселераторAlt      = Булево(Макет.Область(НомерСтрокиМакета,7,НомерСтрокиМакета,7).Текст);
		СтрокаТаблицы.АкселераторCtrl     = Булево(Макет.Область(НомерСтрокиМакета,8,НомерСтрокиМакета,8).Текст);
		СтрокаТаблицы.АкселераторShift    = Булево(Макет.Область(НомерСтрокиМакета,9,НомерСтрокиМакета,9).Текст);
		СтрокаТаблицы.ПоУмолчанию         = Булево(Макет.Область(НомерСтрокиМакета,10,НомерСтрокиМакета,10).Текст);
		
	КонецЦикла;
	
	

КонецПроцедуры // ЗаполнитьТаблицуКнопокИзМакета()

// Возвращает массив клавиш для акселераторов
//
// Параметры
//
// Вовзращаемое значение:
//  Массив
//
&НаСервере
Функция МассивКлавишДляАкселераторов()
	
	МассивКлавиш = Новый Массив;
	
	// 0 ... 9
	Для Счетчик= 0 По 9 Цикл
		МассивКлавиш.Добавить("_"+Счетчик);
	КонецЦикла;
	
	// A...Z
	Для Счетчик= 65 По 90 Цикл
		МассивКлавиш.Добавить(Символ(Счетчик));
	КонецЦикла;
	
	МассивКлавиш.Добавить(Строка(Клавиша.BackSpace));
	
	// F1..F12
	Для Счетчик= 1 По 12 Цикл
		МассивКлавиш.Добавить("F"+Счетчик);
	КонецЦикла;
	
	//Num0 ... Num9 
	Для Счетчик= 0 По 9 Цикл
		МассивКлавиш.Добавить("Num"+Счетчик);
	КонецЦикла;
	
	МассивКлавиш.Добавить(Строка(Клавиша.NumAdd));
	МассивКлавиш.Добавить(Строка(Клавиша.NumDecimal));
	МассивКлавиш.Добавить(Строка(Клавиша.NumDivide));
	МассивКлавиш.Добавить(Строка(Клавиша.NumMultiply));
	МассивКлавиш.Добавить(Строка(Клавиша.NumSubtract));
	МассивКлавиш.Добавить(Строка(Клавиша.Space));
	МассивКлавиш.Добавить(Строка(Клавиша.Нет));
	
	Возврат МассивКлавиш;
	
КонецФункции

// Получает массив из таблицы действии кнопок нижней панели
//
// Параметры
//  Нет
//
// Возвращаемое значение:
//   Массив
//
&НаСервере
Функция МассивПредставленийКнопок()
	
	Возврат ТаблицаДействииКнопокНижнейПанели.Выгрузить().ВыгрузитьКолонку("ПредставлениеКнопки");
	
КонецФункции

// Возвращает по строке строковое представление Акселератора
//
// Параметры:
//  ТекущиеДанные - Строка таблицы кнопок нижней панели
//
// Возвращаемое значение:
//  Строка
//
&НаКлиенте
Функция СтроковоеПредставленияАкселератора(ТекущаяСтрока)
	
	Акселератор = "";
	
	Если Не ТекущаяСтрока.Клавиша = "Нет" Тогда
		Если ТекущаяСтрока.АкселераторCtrl Тогда
			Акселератор = Акселератор + "Ctrl+"
		КонецЕсли;
		
		Если ТекущаяСтрока.АкселераторAlt Тогда
			Акселератор = Акселератор + "Alt+"
		КонецЕсли;
		
		Если ТекущаяСтрока.АкселераторShift Тогда
			Акселератор = Акселератор + "Shift+"
		КонецЕсли;
		
		Акселератор = Акселератор + Строка(ТекущаяСтрока.Клавиша);
		
		Акселератор = СтрЗаменить(Акселератор, "_", "");
		Акселератор = СтрЗаменить(Акселератор, "NumAdd", "+");
		Акселератор = СтрЗаменить(Акселератор, "NumDecimal", ",");
		Акселератор = СтрЗаменить(Акселератор, "NumDivide", "/");
		Акселератор = СтрЗаменить(Акселератор, "NumMultiply", "*");
		Акселератор = СтрЗаменить(Акселератор, "NumSubtract", "-");
		Акселератор = СтрЗаменить(Акселератор, "Num", "");
	КонецЕсли;
	
	Возврат Акселератор;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	
	ТекущаяСтрока = Элементы.БыстрыеТовары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Записать();
		Иначе 
			Возврат
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.ФайлКартинки) Тогда
		ПросмотретьПрисоединенныйФайл();
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ВыборИзображения = Истина;
		ИдентификаторФайла = Новый УникальныйИдентификатор;
		Фильтр = НСтр("ru = 'Все картинки (*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf)|*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf"
									+ "|Все файлы(*.*)|*.*"
									+ "|Формат bmp(*.bmp*;*.dib;*.rle)|*.bmp;*.dib;*.rle"
									+ "|Формат GIF(*.gif*)|*.gif"
									+ "|Формат JPEG(*.jpeg;*.jpg)|*.jpeg;*.jpg"
									+ "|Формат PNG(*.png*)|*.png"
									+ "|Формат TIFF(*.tif)|*.tif"
									+ "|Формат icon(*.ico)|*.ico"
									+ "|Формат метафайл(*.wmf;*.emf)|*.wmf;*.emf'");
		ПрисоединенныеФайлыКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла, Фильтр);
		ВыборИзображения = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьПрисоединенныйФайл()
	
	ТекущаяСтрока = Элементы.БыстрыеТовары.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	Если ЗначениеЗаполнено(ТекущаяСтрока.ФайлКартинки) Тогда
		ДанныеФайла = ПрисоединенныеФайлыСлужебныйВызовСервера.ПолучитьДанныеФайла(ТекущаяСтрока.ФайлКартинки, УникальныйИдентификатор);
		ПрисоединенныеФайлыКлиент.ОткрытьФайл(ДанныеФайла);
	Иначе
		ТекстСообщения = НСтр("ru='Отсутстует изображение для просмотра'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "АдресКартинки");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)

	УстановитьПривилегированныйРежим(Истина);

	Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;

КонецФункции

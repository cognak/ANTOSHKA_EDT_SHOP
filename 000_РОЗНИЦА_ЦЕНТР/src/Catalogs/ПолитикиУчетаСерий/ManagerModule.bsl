#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//Возвращает структуру с параметрами учетной политики по сериям
//
//	Параметры:
//		ВидНоменклатуры - вид номенклатуры для которого нужно получить параметры учетной политики по сериям
//		Склад - склад, для которого нужно получить параметры учетной политики по сериям
//	Возвращаемое значение:
//		Структура
//
Функция ПараметрыПолитикиУчетаСерийПоВидуНоменклатуры(ВидНоменклатуры, Магазин) Экспорт
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ИспользоватьСерии");
	СтруктураВозврата.Вставить("ВидНоменклатуры");
	СтруктураВозврата.Вставить("ПолитикаУчетаСерий");
	СтруктураВозврата.Вставить("УказыватьПриПоступлении");
	СтруктураВозврата.Вставить("УказыватьПриОтгрузке");
	СтруктураВозврата.Вставить("ИспользоватьНомерСерии");
	СтруктураВозврата.Вставить("ИспользоватьСрокГодностиСерии");
	СтруктураВозврата.Вставить("ИспользоватьКоличествоСерии");
	СтруктураВозврата.Вставить("ТочностьУказанияСрокаГодностиСерии");
	СтруктураВозврата.Вставить("ФорматнаяСтрокаСрокаГодности");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыНоменклатуры.ИспользоватьСерии КАК ИспользоватьСерии,
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|	ЕСТЬNULL(ТЧПолитикиУчетаСерий.ПолитикаУчетаСерий, ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.ПустаяСсылка)) КАК ПолитикаУчетаСерий,
	|	ЕСТЬNULL(ТЧПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке, ЛОЖЬ) КАК УказыватьПриПоступлении,
	|	ЕСТЬNULL(ТЧПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузке, ЛОЖЬ) КАК УказыватьПриОтгрузке,
	|	ВидыНоменклатуры.ИспользоватьНомерСерии КАК ИспользоватьНомерСерии,
	|	ВидыНоменклатуры.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии,
	|	ВидыНоменклатуры.ИспользоватьКоличествоСерии КАК ИспользоватьКоличествоСерии,
	|	ВидыНоменклатуры.ТочностьУказанияСрокаГодностиСерии КАК ТочностьУказанияСрокаГодностиСерии
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ТЧПолитикиУчетаСерий
	|		ПО ВидыНоменклатуры.Ссылка = ТЧПолитикиУчетаСерий.Ссылка
	|			И (ТЧПолитикиУчетаСерий.Магазин = &Магазин)
	|ГДЕ
	|	ВидыНоменклатуры.Ссылка = &ВидНоменклатуры";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	Запрос.УстановитьПараметр("Магазин", Магазин);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(СтруктураВозврата,Выборка);
	
	СтруктураВозврата.ФорматнаяСтрокаСрокаГодности =  Справочники.ВидыНоменклатуры.ФорматнаяСтрокаСрокаГодности(СтруктураВозврата.ТочностьУказанияСрокаГодностиСерии);
	
	Возврат СтруктураВозврата;
КонецФункции

//Возвращает имена блокруемых реквизитов для механизма блокирования реквизитов БСП
//	Возвращаемое значание:
//		Массив - имена блокируемых реквизитов
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("ТипПолитики");
	
	Результат.Добавить("УказыватьПриОтгрузке");
	Результат.Добавить("УказыватьПриОтгрузкеВРозницу");
	Результат.Добавить("УказыватьПриОтгрузкеКлиенту");
	Результат.Добавить("УказыватьПриОтгрузкеКомплектовДляРазборки");
	Результат.Добавить("УказыватьПриОтгрузкеКомплектующихДляСборки");
	Результат.Добавить("УказыватьПриОтгрузкеПоВозвратуПоставщику");
	Результат.Добавить("УказыватьПриОтгрузкеПоПеремещению");
	
	Результат.Добавить("УказыватьПриПриемке");
	Результат.Добавить("УказыватьПриПриемкеКомплектующихПослеРазборки");
	Результат.Добавить("УказыватьПриПриемкеОтПоставщика");
	Результат.Добавить("УказыватьПриПриемкеПоВозвратуОтКлиента");
	Результат.Добавить("УказыватьПриПриемкеПоПеремещению");
	Результат.Добавить("УказыватьПриПриемкеСобранныхКомплектов");
	
	Результат.Добавить("УказыватьПриПересчетеТоваров");
	Результат.Добавить("УказыватьПриОтраженииИзлишковНедостачПорчи");
	
	Возврат Результат;

КонецФункции

#КонецЕсли

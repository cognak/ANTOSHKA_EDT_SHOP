#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Получает единицу измерения, если единица измерения одна в справочнике.
//
// Возвращаемое значение:
// СправочникСсылка.ЕдиницыИзмерения - Найденная единица измерения
// Неопределено - если единиц измерения нет или единиц измерения больше одной
//
Функция ПолучитьЕдиницуИзмеренияПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.БазовыеЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	Не ЕдиницыИзмерения.ПометкаУдаления
	|");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
	Иначе
		ЕдиницаИзмерения = Неопределено;
	КонецЕсли;
	
	Возврат ЕдиницаИзмерения;

КонецФункции // ЕдиницаИзмерения()

#Если Сервер ИЛИ ВнешнееСоединение Тогда
// Процедура заполняет справочник базовые единицы измерения значениями по умолчанию.
//
Процедура ЗаполнитьЕдиницыИзмеренияПоУмолчанию() Экспорт
	
    Дерево = Справочники.БазовыеЕдиницыИзмерения.ПолучитьДеревоКлассификатора();
	
	МассивКодов = Новый Массив;
	МассивКодов.Добавить("0101");
	МассивКодов.Добавить("0134");
	МассивКодов.Добавить("0301");
	МассивКодов.Добавить("2009");

	
	Для Каждого Код Из МассивКодов Цикл
		
		Если Не ЗначениеЗаполнено(Справочники.БазовыеЕдиницыИзмерения.НайтиПоКоду(Код)) Тогда
			
			СтуруктураПоиска = Новый Структура("КодЧисловой", Код);
			СтрокаДерева = Дерево.Строки.НайтиСтроки(СтуруктураПоиска, Истина);
			
			Если СтрокаДерева.Количество() > 0 Тогда
				СвойстваЕдИзмерения = СтрокаДерева[0];
				
				СправочникОбъект = Справочники.БазовыеЕдиницыИзмерения.СоздатьЭлемент();
				
				Если ЗначениеЗаполнено(СвойстваЕдИзмерения.УсловноеОбозначениеНациональное) Тогда
					Наименование = СвойстваЕдИзмерения.УсловноеОбозначениеНациональное;
				ИначеЕсли ЗначениеЗаполнено(СвойстваЕдИзмерения.УсловноеОбозначениеМеждународное) Тогда
					Наименование = СвойстваЕдИзмерения.УсловноеОбозначениеМеждународное;
				Иначе
					Наименование = СвойстваЕдИзмерения.Наименование;
				КонецЕсли;
				
				СправочникОбъект.Наименование            = СтрЗаменить(Наименование,Символы.ПС,"/");
				СправочникОбъект.МеждународноеСокращение = СтрЗаменить(СвойстваЕдИзмерения.УсловноеОбозначениеМеждународное,Символы.ПС,"/");
				СправочникОбъект.НаименованиеПолное      = СтрЗаменить(СвойстваЕдИзмерения.Наименование,Символы.ПС,"/");
				СправочникОбъект.Код                     = СвойстваЕдИзмерения.КодЧисловой;
				
				Попытка
					СправочникОбъект.Записать();
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
#КонецЕсли

#Если Сервер ИЛИ ВнешнееСоединение Тогда
// Функция формирует дерево классификатора из макета хранимого в конфигурации
Функция ПолучитьДеревоКлассификатора() Экспорт
	
	КлассификаторXML = Справочники.БазовыеЕдиницыИзмерения.ПолучитьМакет("КлассификаторЕдиницИзмерения").ПолучитьТекст();
	
	КлассификаторТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	
	Дерево = Новый ДеревоЗначений;
	Дерево.Колонки.Добавить("Наименование",                             Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("КодЧисловой",                              Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("УсловноеОбозначениеНациональное",          Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("УсловноеОбозначениеМеждународное",         Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("КодСОЕИ",                                  Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("ВесоваяЕдиницаИзмерения",                  Новый ОписаниеТипов("Булево"));
	Для Каждого КлассификаторЗапись Из КлассификаторТаблица Цикл
		
		Если КлассификаторЗапись.Level = "1" Тогда
			СтрокаУровень1 = Дерево.Строки.Добавить();
			НоваяСтрока = СтрокаУровень1;
		ИначеЕсли КлассификаторЗапись.Level = "2" Тогда
			СтрокаУровень2 = СтрокаУровень1.Строки.Добавить();		
			НоваяСтрока = СтрокаУровень2;
		Иначе
			НоваяСтрока = СтрокаУровень2.Строки.Добавить();		
		КонецЕсли;
		
		НоваяСтрока.Наименование                             = КлассификаторЗапись.Name;
		НоваяСтрока.КодЧисловой                              = КлассификаторЗапись.CodeNum;
		НоваяСтрока.УсловноеОбозначениеНациональное          = КлассификаторЗапись.ShortNameN;
		НоваяСтрока.УсловноеОбозначениеМеждународное         = КлассификаторЗапись.ShortNameI;
		НоваяСтрока.КодСОЕИ                                  = КлассификаторЗапись.CodeSOEI;
		
	КонецЦикла;	
	
	Возврат Дерево;

КонецФункции
#КонецЕсли

Функция ОбновитьКодЕдиницыИзмерения(Код, КодНовый)

	Ссылка = Справочники.БазовыеЕдиницыИзмерения.НайтиПоКоду(Код);

	Если НЕ Ссылка.Пустая() Тогда
		СправочникОбъект 		= Ссылка.ПолучитьОбъект();
		СправочникОбъект.Код 	= КодНовый;
		СправочникОбъект.Записать();
	КонецЕсли;

КонецФункции

//Обновление кодов единиц измерения при переходе на 2.0.4.1
Процедура КлассификаторЕдиницИзмеренияОбновитьКодыКСПОВО() Экспорт
	
	ОбновитьКодЕдиницыИзмерения("796", "2009");
	ОбновитьКодЕдиницыИзмерения("166", "0301");
	
КонецПроцедуры

#КонецЕсли

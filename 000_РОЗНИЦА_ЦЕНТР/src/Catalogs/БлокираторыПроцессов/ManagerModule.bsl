#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПроверитьСуществованиеБлокираторов(ТаблицаКлючей)	Экспорт	//	LNK 12.08.2021 12:57:54

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ключ КАК Ключ,
	|	ВЫРАЗИТЬ(Таблица.Магазин КАК Справочник.Магазины) КАК Магазин
	|ПОМЕСТИТЬ Источник
	|ИЗ
	|	&ТаблицаКлючей КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Источник.Ключ КАК Ключ,
	|	Источник.Магазин КАК Магазин
	|ИЗ
	|	Источник КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БлокираторыПроцессов КАК Фильтр
	|		ПО Источник.Ключ = Фильтр.Наименование
	|			И Источник.Магазин = Фильтр.Магазин
	|ГДЕ
	|	Фильтр.Ссылка ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Источник"
	);
	Запрос.УстановитьПараметр("ТаблицаКлючей", ТаблицаКлючей);
	
	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда

		Выборка = РезультатЗапроса.Выбрать();

		Пока Выборка.Следующий() Цикл

			Блокиратор = Справочники.БлокираторыПроцессов.СоздатьЭлемент();
			Блокиратор.ОбменДанными.Загрузка = Истина;

			Блокиратор.Наименование = Выборка.Ключ;
			Блокиратор.Магазин		= Выборка.Магазин;

			Блокиратор.УстановитьНовыйКод();

			Блокиратор.Записать();

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

#КонецЕсли













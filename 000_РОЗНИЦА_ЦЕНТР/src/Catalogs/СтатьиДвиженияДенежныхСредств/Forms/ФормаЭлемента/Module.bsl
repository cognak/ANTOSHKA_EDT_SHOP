///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	//Элементы.КорреспондирующийСчет.ТолькоПросмотр = Объект.Предопределенный;
	Элементы.Наименование.ТолькоПросмотр = Объект.Предопределенный;

	Если Объект.Предопределенный Тогда

		Элементы.ХозяйственнаяОперация.СписокВыбора.Очистить();
		Элементы.ХозяйственнаяОперация.СписокВыбора.Добавить(Справочники.СтатьиДвиженияДенежныхСредств.ХозяйственнаяОперацияПредопределеннойСтатьиДДС(Объект.Ссылка));

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ХозяйственнаяОперацияПриИзменении(Элемент)
	
	Объект.КорреспондирующийСчет = "";
	
КонецПроцедуры

&НаКлиенте
Процедура КорреспондирующийСчетНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокСчетов = Новый СписокЗначений;
	Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрочиеДоходы") Тогда
		СписокСчетов.Добавить("713", "Доход от операционной аренды активов (713)");
		СписокСчетов.Добавить("715", "Полученные штрафы пени неустойки (715)");
		СписокСчетов.Добавить("719", "Другие доходы от операционной деятельности (719)");
		СписокСчетов.Добавить("731", "Дивиденды полученные (731)");
		СписокСчетов.Добавить("732", "Проценты полученные (732)");
		СписокСчетов.Добавить("733", "Прочие доходы от финансовых операций (733)");
		СписокСчетов.Добавить("741", "Доход от реализации финансовых инвестиций (741)");
		СписокСчетов.Добавить("746", "Другие доходы от обычной деятельности (746)");
	ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПрочиеРасходы") Тогда
		СписокСчетов.Добавить("91",  "Общепроизводственные затраты (91)");
		СписокСчетов.Добавить("92",  "Административные затраты (92)");
		СписокСчетов.Добавить("93",  "Затраты на сбыт (93)");
		СписокСчетов.Добавить("941", "Затраты на исследования и разработки (941)");
		СписокСчетов.Добавить("948", "Признанные штрафы, пени, неустойки (948)");
		СписокСчетов.Добавить("949", "Другие затраты операционной деятельности (949)");
		СписокСчетов.Добавить("951", "Проценты за кредит (951)");
		СписокСчетов.Добавить("952", "Другие финансовые затраты (952)");
		СписокСчетов.Добавить("977", "Другие затраты обычной деятельности (977)");
	ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОплатаПоставщику") Тогда
		СписокСчетов.Добавить("631",  "Расчеты с отечественными поставщиками (631)");
		СписокСчетов.Добавить("632",  "Расчеты с иностранными поставщиками (632)");
		СписокСчетов.Добавить("3711", "Расчеты по выданным авансам в национальной валюте (3711)");
		СписокСчетов.Добавить("3712", "Расчеты по выданным авансам в иностранной валюте (3712)");
		СписокСчетов.Добавить("3771", "Расчеты с другими дебиторами в национальной валюте (3771)");
		СписокСчетов.Добавить("3772", "Расчеты с другими дебиторами в иностранной валюте (3772)");
		СписокСчетов.Добавить("6851", "Расчеты с другими кредиторами в национальной валюте (6851)");
		СписокСчетов.Добавить("6852", "Расчеты с другими кредиторами в иностранной валюте (6852)");
	ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента") Тогда
		СписокСчетов.Добавить("361",  "Расчеты с отечественными покупателями (361)");
		СписокСчетов.Добавить("362",  "Расчеты с иностранными покупателями (362)");
		СписокСчетов.Добавить("6811", "Расчеты по авансам полученным в национальной валюте (6811)");
		СписокСчетов.Добавить("6812", "Расчеты по авансам полученным в иностранной валюте (6812)");
		СписокСчетов.Добавить("3771", "Расчеты с другими дебиторами в национальной валюте (3771)");
		СписокСчетов.Добавить("3772", "Расчеты с другими дебиторами в иностранной валюте (3772)");
		СписокСчетов.Добавить("6851", "Расчеты с другими кредиторами в национальной валюте (6851)");
		СписокСчетов.Добавить("6852", "Расчеты с другими кредиторами в иностранной валюте (6852)");
	ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика") Тогда
		СписокСчетов.Добавить("631",  "Расчеты с отечественными поставщиками (631)");
		СписокСчетов.Добавить("632",  "Расчеты с иностранными поставщиками (632)");
		СписокСчетов.Добавить("3711", "Расчеты по выданным авансам в национальной валюте (3711)");
		СписокСчетов.Добавить("3712", "Расчеты по выданным авансам в иностранной валюте (3712)");
		СписокСчетов.Добавить("3771", "Расчеты с другими дебиторами в национальной валюте (3771)");
		СписокСчетов.Добавить("3772", "Расчеты с другими дебиторами в иностранной валюте (3772)");
		СписокСчетов.Добавить("6851", "Расчеты с другими кредиторами в национальной валюте (6851)");
		СписокСчетов.Добавить("6852", "Расчеты с другими кредиторами в иностранной валюте (6852)");
	ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту") Тогда
		СписокСчетов.Добавить("361",  "Расчеты с отечественными покупателями (361)");
		СписокСчетов.Добавить("362",  "Расчеты с иностранными покупателями (362)");
		СписокСчетов.Добавить("6811", "Расчеты по авансам полученным в национальной валюте (6811)");
		СписокСчетов.Добавить("6812", "Расчеты по авансам полученным в иностранной валюте (6812)");
		СписокСчетов.Добавить("3771", "Расчеты с другими дебиторами в национальной валюте (3771)");
		СписокСчетов.Добавить("3772", "Расчеты с другими дебиторами в иностранной валюте (3772)");
		СписокСчетов.Добавить("6851", "Расчеты с другими кредиторами в национальной валюте (6851)");
		СписокСчетов.Добавить("6852", "Расчеты с другими кредиторами в иностранной валюте (6852)");
	ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу") Тогда
		СписокСчетов.Добавить("301", "Касса в национальной валюте (301)");
	ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка") Тогда
		СписокСчетов.Добавить("311", "Текущие счета в национальной валюте (311)");
	ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк") Тогда
		СписокСчетов.Добавить("311", "Текущие счета в национальной валюте (311)");
	ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюОрганизацию") Тогда
		СписокСчетов.Добавить("361",  "Расчеты с отечественными покупателями (361)");
		СписокСчетов.Добавить("362",  "Расчеты с иностранными покупателями (362)");
		СписокСчетов.Добавить("6811", "Расчеты по авансам полученным в национальной валюте (6811)");
		СписокСчетов.Добавить("6812", "Расчеты по авансам полученным в иностранной валюте (6812)");
		СписокСчетов.Добавить("3771", "Расчеты с другими дебиторами в национальной валюте (3771)");
		СписокСчетов.Добавить("3772", "Расчеты с другими дебиторами в иностранной валюте (3772)");
		СписокСчетов.Добавить("6851", "Расчеты с другими кредиторами в национальной валюте (6851)");
		СписокСчетов.Добавить("6852", "Расчеты с другими кредиторами в иностранной валюте (6852)");
	ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ") Тогда
		СписокСчетов.Добавить("301", "Касса в национальной валюте (301)");
	ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыККМ") Тогда
		СписокСчетов.Добавить("301", "Касса в национальной валюте (301)");
	ИначеЕсли Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВыплатаЗаработнойПлатыПоВедомостям") Тогда
		СписокСчетов.Добавить("661", "Расчеты по заработной плате (661)");
	КонецЕсли;
	
	Если СписокСчетов.Количество() > 0 Тогда
		ВыбранноеЗначение = ВыбратьИзМеню(СписокСчетов, Элементы.КорреспондирующийСчет);
		Если ВыбранноеЗначение <> Неопределено Тогда
			Объект.КорреспондирующийСчет = ВыбранноеЗначение.Значение;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Обработчик команды, создаваемой механизмом запрета редактирования ключевых реквизитов.
//
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		Результат = ОткрытьФормуМодально("Справочник.СтатьиДвиженияДенежныхСредств.Форма.РазблокированиеРеквизитов");
		Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
			Если ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект) Тогда
				ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтотОбъект, Результат);
				Если Результат.Найти("СхемаКомпоновкиДанных") <> Неопределено И НЕ ОбщегоНазначенияРТСервер.ЭтоПолноправныйПользователь() Тогда
					Элементы.РедактироватьСхемуКомпоновкиДанных.Доступность = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки


&НаКлиенте
Процедура Проверить(Команда)
	ПутьКEXCEL = ПутьКФайлу;
	Файл = Новый Файл(ПутьКEXCEL);
	
	Если НЕ Файл.Существует() Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Файл отсутствует!'; uk = 'Файл відсутній!'","uk"));
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКEXCEL);
	РезультатЗагрузки = EXCELВТаблицуЗначений(ДвоичныеДанные,Файл.Расширение,ЛОЖЬ);
	
КонецПроцедуры


&НаКлиенте
Процедура Загрузить(Команда)
	ПутьКEXCEL = ПутьКФайлу;
	Файл = Новый Файл(ПутьКEXCEL);
	
	Если НЕ Файл.Существует() Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Файл отсутствует!'; uk = 'Файл відсутній!'","uk"));
		Возврат;
	КонецЕсли;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКEXCEL);
	
	РезультатЗагрузки = EXCELВТаблицуЗначений(ДвоичныеДанные,Файл.Расширение,Истина);
	

	ПараметрыВозврата = Новый Структура("Загружены",Истина);
	
	Закрыть(ПараметрыВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выбор файла";
	Диалог.Фильтр = "Excel файлы(*.xls;*.xlsx)|*.xls;*.xlsx";
	Диалог.ИндексФильтра = 0;
	Диалог.ПредварительныйПросмотр = Ложь;
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Диалог.МножественныйВыбор = Ложь; 
	Диалог.ПолноеИмяФайла = ПутьКФайлу;
	
	Если Диалог.Выбрать() Тогда
		ПутьКФайлу = Диалог.ПолноеИмяФайла;
	КонецЕсли;	
	
	РезультатЗагрузки = Новый ТабличныйДокумент;

КонецПроцедуры

&НаСервере
Функция EXCELВТаблицуЗначений(ДвоичныеДанные, Расширение, Загружать= ЛОЖЬ)
	
	РезультатЗагрузки.Очистить();
	
	
	ФайлEXCELНаСервере = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанные.Записать(ФайлEXCELНаСервере);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ФайлEXCELНаСервере);
	УдалитьФайлы(ФайлEXCELНаСервере);
	Макет = Справочники.ГруппыПолучателейСкидки.ПолучитьМакет("МакетЗагрузки");
	
	ТабличныйДокумент.ВставитьОбласть(Макет.Область("R1"),ТабличныйДокумент.Область("R1"));
	
	ОбластьТаблицы = ТабличныйДокумент.Область(1, 1, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
		
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьТаблицы);  
	ПостроительЗапроса.Выполнить();
	ТаблицаДанных = ПостроительЗапроса.Результат.Выгрузить();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеЭксель.НомерТелефона КАК НомерТелефона,
		|	ДанныеЭксель.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВР_Внешние
		|ИЗ
		|	&ДанныеЭксель КАК ДанныеЭксель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВР_Внешние.НомерТелефона КАК НомерТелефона,
		|	ВР_Внешние.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВР_Файл
		|ИЗ
		|	ВР_Внешние КАК ВР_Внешние
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВР_Файл.НомерТелефона КАК НомерТелефона,
		|	ВР_Файл.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА КонтрагентыКонтактнаяИнформация.Ссылка ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ФизЛицо,
		|	ВЫБОР
		|		КОГДА СоставГруппПолучателейСкидки.Получатель ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ -1
		|	КОНЕЦ КАК УжеЗанесен,
		|	КонтрагентыКонтактнаяИнформация.Ссылка КАК Получатель
		|ПОМЕСТИТЬ ВР_ТаблицаСФизЛицами
		|ИЗ
		|	ВР_Файл КАК ВР_Файл
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставГруппПолучателейСкидки КАК СоставГруппПолучателейСкидки
		|			ПО (КонтрагентыКонтактнаяИнформация.Ссылка = СоставГруппПолучателейСкидки.Получатель
		|					И СоставГруппПолучателейСкидки.ГруппаПолучателейСкидки = &ГруппаПолучателейСкидки)
		|		ПО ВР_Файл.НомерТелефона = КонтрагентыКонтактнаяИнформация.НомерТелефона
		|			И (КонтрагентыКонтактнаяИнформация.Ссылка.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)) И (КонтрагентыКонтактнаяИнформация.Ссылка.Родитель = &ГруппаПокупатели)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВР_ТаблицаСФизЛицами.НомерТелефона КАК НомерТелефона,
		|	ВР_ТаблицаСФизЛицами.Ссылка КАК Ссылка,
		|	СУММА(ВР_ТаблицаСФизЛицами.ФизЛицо) КАК ФизЛицо,
		|	СУММА(ВР_ТаблицаСФизЛицами.УжеЗанесен) КАК УжеЗанесен
		|ПОМЕСТИТЬ ВР_СоСтатусом
		|ИЗ
		|	ВР_ТаблицаСФизЛицами КАК ВР_ТаблицаСФизЛицами
		|
		|СГРУППИРОВАТЬ ПО
		|	ВР_ТаблицаСФизЛицами.НомерТелефона,
		|	ВР_ТаблицаСФизЛицами.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВР_СоСтатусом.НомерТелефона КАК НомерТелефона,
		|	ВР_СоСтатусом.Ссылка КАК Ссылка,
		|	ВР_СоСтатусом.ФизЛицо КАК ФизЛицо,
		|	ВР_СоСтатусом.УжеЗанесен КАК УжеЗанесен,
		|	ВЫБОР
		|		КОГДА ВР_СоСтатусом.ФизЛицо = 1
		|				И ВР_СоСтатусом.УжеЗанесен = 0
		|			ТОГДА ВР_ТаблицаСФизЛицами.Получатель
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК Получатель
		|ИЗ
		|	ВР_СоСтатусом КАК ВР_СоСтатусом
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ТаблицаСФизЛицами КАК ВР_ТаблицаСФизЛицами
		|		ПО ВР_СоСтатусом.НомерТелефона = ВР_ТаблицаСФизЛицами.НомерТелефона";
	
	Если ТипПолучателей = Перечисления.ТипыПолучателейСкидок.ФизическиеЛица Тогда
		  Запрос.Текст = СтрЗаменить(Запрос.Текст,
		  							 "Справочник.Контрагенты.",
		  							 "Справочник.ФизическиеЛица.");
		  Запрос.Текст = СтрЗаменить(Запрос.Текст,
		  							 "И (КонтрагентыКонтактнаяИнформация.Ссылка.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)) И (КонтрагентыКонтактнаяИнформация.Ссылка.Родитель = &ГруппаПокупатели)"
									 ,"");
		  Запрос.Текст = СтрЗаменить(Запрос.Текст,
		  							 "И (КонтрагентыКонтактнаяИнформация.Ссылка.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)) И (КонтрагентыКонтактнаяИнформация.Ссылка.Родитель = &ГруппаПокупатели)"
									 ,"");
	Иначе
		Запрос.УстановитьПараметр("ГруппаПокупатели",Справочники.Контрагенты.Покупатели);
	КонецЕсли;		  
		  
	
	Запрос.УстановитьПараметр("ГруппаПолучателейСкидки",ГруппаПолучателейСкидки);
		
	Запрос.УстановитьПараметр("ДанныеЭксель",ТаблицаДанных);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТаблицаПротокол = Новый ТабличныйДокумент;
	ПротоколШапка = Макет.ПолучитьОбласть("Шапка"); 
	ТаблицаПротокол.Вывести(ПротоколШапка);
	
	ПротоколСтрока = Макет.ПолучитьОбласть("Строка"); 
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПротоколСтрока.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		
		Если ВыборкаДетальныеЗаписи.УжеЗанесен < 0 Тогда
			ПротоколСтрока.Параметры.Результат = "УЖЕ В ГРУППЕ";
		ИначеЕсли ВыборкаДетальныеЗаписи.ФизЛицо = 1 Тогда
			Если Загружать ТОГДА
				МенеджерСоставГруппПолучателейСкидки = РегистрыСведений.СоставГруппПолучателейСкидки.СоздатьМенеджерЗаписи();
				МенеджерСоставГруппПолучателейСкидки.ГруппаПолучателейСкидки = ГруппаПолучателейСкидки; 
				МенеджерСоставГруппПолучателейСкидки.Получатель = ВыборкаДетальныеЗаписи.Получатель; 
				МенеджерСоставГруппПолучателейСкидки.Записать();
				ПротоколСтрока.Параметры.Результат = "ЗАГРУЖЕН";
			Иначе			
				
				ПротоколСтрока.Параметры.Результат = "ГОТОВ К ЗАГРУЗКЕ";
			КонецЕсли;
		ИначеЕсли ВыборкаДетальныеЗаписи.ФизЛицо > 1 Тогда
			ПротоколСтрока.Параметры.Результат = "КЛИЕНТ ЗАДВОЕН";
		ИначеЕсли ВыборкаДетальныеЗаписи.ФизЛицо = 0  Тогда
			ПротоколСтрока.Параметры.Результат = "КЛИЕНТ НЕ НАЙДЕН";
		КонецЕсли  ;
			
		ТаблицаПротокол.Вывести(ПротоколСтрока);
	КонецЦикла;
	
	Возврат ТаблицаПротокол;
		
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		
		Возврат;
		
	КонецЕсли;
	ТипПолучателей = Параметры.ТипПолучателейСкидок;
	Если ТипПолучателей = Перечисления.ТипыПолучателейСкидок.СмешанныйСписок Тогда
		Сообщить(НСтр("ru = 'Заполнение из файла возможно только для групп получателей Физические лица или Контрагенты!'; uk = 'Заповнення з файлу можливе лише для груп одержувачів Фізичні особи або Контрагенти!'"));
		Отказ = Истина;
	КонецЕсли;
	
	                     
	ГруппаПолучателейСкидки = Параметры.Группа.Ссылка;
	
КонецПроцедуры


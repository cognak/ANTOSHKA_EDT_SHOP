#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПредопределенныеПроцедурыИФункции

//	LNK 23.10.2016 09:32:11
Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)

	ТолькоЦифры = СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Параметры.СтрокаПоиска);

	Если СтрДлина(Параметры.СтрокаПоиска) >= 8 И ТолькоЦифры Тогда

		ДанныеВыбора = РегистрыСведений.Штрихкоды.ПолучитьДанныеПоШтрихкодам(
			ОбщегоНазначенияКлиентСервер.AAD(Параметры.СтрокаПоиска), Истина);

		Если НЕ ДанныеВыбора.Количество() = 0 Тогда

			СтандартнаяОбработка = Ложь;

		КонецЕсли;

	ИначеЕсли НЕ ТолькоЦифры Тогда

		Параметры.Вставить("СпособПоискаСтроки", СпособПоискаСтрокиПриВводеПоСтроке.ЛюбаяЧасть);

	КонецЕсли;

КонецПроцедуры
	
#КонецОбласти

#Область ПрограммныйИнтерфейс

// Возвращает список реквизитов, которые не нужно редактировать
// с помощью обработки группового изменения объектов
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	
	НеРедактируемыеРеквизиты.Добавить("Наименование");
	НеРедактируемыеРеквизиты.Добавить("ИмяПредопределенныхДанных");
	НеРедактируемыеРеквизиты.Добавить("ФайлКартинки");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

// Возвращает список реквизитов, которые разрешается редактировать
// с помощью обработки группового изменения объектов.
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	РедактируемыеРеквизиты = Новый Массив;
	
	РедактируемыеРеквизиты.Добавить("СтавкаНДС");
	РедактируемыеРеквизиты.Добавить("ЦеноваяГруппа");
	РедактируемыеРеквизиты.Добавить("НоменклатурнаяГруппа");
	РедактируемыеРеквизиты.Добавить("ТоварнаяКатегория");
	РедактируемыеРеквизиты.Добавить("Марка");
	РедактируемыеРеквизиты.Добавить("Блокирован");
	РедактируемыеРеквизиты.Добавить("Маржинальность");	//	LNK 06.11.2018 09:42:22

	Если РольДоступна(Метаданные.Роли.АдминистраторСистемы) И ТехническаяПоддержкаВызовСервера.ИсключительныйРежим() Тогда

		РедактируемыеРеквизиты.Добавить("НазначениеТовара");
		РедактируемыеРеквизиты.Добавить("ТипНоменклатуры");

	КонецЕсли;
	
	Возврат РедактируемыеРеквизиты;
	
КонецФункции

Функция ПроверитьИспользованиеХарактеристик(Номенклатура) Экспорт
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
	|			ИЛИ СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
	|				ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиИспользуются
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Возврат Выборка.ХарактеристикиИспользуются;
	
КонецФункции

Функция ПроверитьПринадлежностьХарактеристикиИУпаковкиВладельцу(Номенклатура, Характеристика, Упаковка) Экспорт

	СтруктураВозврата = Новый Структура("Характеристика, Упаковка, ХарактеристикиИспользуются");
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		СтруктураВозврата.Характеристика             = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		СтруктураВозврата.Упаковка                   = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
		СтруктураВозврата.ХарактеристикиИспользуются = Ложь;
		
		Возврат СтруктураВозврата;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕСТЬNULL(СпрУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(СпрХарактеристики.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
	|			ИЛИ СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиИспользуются
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
	|		ПО (ВЫБОР
	|				КОГДА СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры)
	|					ТОГДА СпрНоменклатура.ВидНоменклатуры
	|				КОГДА СпрНоменклатура.ВидНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры)
	|					ТОГДА СпрНоменклатура.Ссылка
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ = СпрХарактеристики.Владелец)
	|			И (СпрХарактеристики.Ссылка = &Характеристика)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК СпрУпаковки
	|		ПО (ВЫБОР
	|				КОГДА СпрНоменклатура.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
	|					ТОГДА СпрНоменклатура.Ссылка
	|				КОГДА СпрНоменклатура.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ПустаяСсылка)
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ СпрНоменклатура.НаборУпаковок
	|			КОНЕЦ = СпрУпаковки.Владелец)
	|			И (СпрУпаковки.Ссылка = &Упаковка)
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Номенклатура";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Запрос.УстановитьПараметр("Упаковка", Упаковка);
	
    Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(СтруктураВозврата,Выборка);
	
	Возврат СтруктураВозврата;

КонецФункции

Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("ВидНоменклатуры");
	Результат.Добавить("ТоварнаяКатегория");
	Результат.Добавить("ЦеноваяГруппа");
	Результат.Добавить("СтавкаНДС");
	Результат.Добавить("НаборУпаковок");
	Результат.Добавить("ЕдиницаИзмерения");
	Результат.Добавить("ТипСерийногоНомера");
	Результат.Добавить("ИспользоватьСерийныеНомера");
	Результат.Добавить("Номинал");
	Результат.Добавить("Весовой");
	Результат.Добавить("ТоварнаяКатегория");
	Результат.Добавить("Марка");
	Результат.Добавить("ПодакцизныйТовар");

	Результат.Добавить("НазначениеТовара");
	Результат.Добавить("ТипНоменклатуры");

	Возврат Результат;

КонецФункции

Функция ПолучитьРеквизитыНоменклатуры(Номенклатура) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура
	|ПОМЕСТИТЬ Фильтр
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаСправочник
	|ГДЕ
	|	ТаблицаСправочник.Ссылка = &Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СерийныеНомера.Владелец
	|ИЗ
	|	Справочник.СерийныеНомера КАК СерийныеНомера
	|ГДЕ
	|	СерийныеНомера.Ссылка = &Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСправочник.Код КАК КодНоменклатуры,
	|	ТаблицаСправочник.IDN КАК IDN,
	|	ТаблицаСправочник.Блокирован КАК Блокирован,
	|	ТаблицаСправочник.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаСправочник.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоУслуга,
	|	ВЫБОР
	|		КОГДА ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПодарочныйСертификат
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаСправочник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Фильтр КАК Фильтр
	|		ПО ТаблицаСправочник.Ссылка = Фильтр.Номенклатура"
	);
//	В некоторых случаях (например, в РМК) может имет составной тип - Номенклатура+СерийныеНомера
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);

	Результат = Запрос.Выполнить();
	СтруктураРеквизитов = ОбщегоНазначенияКлиентСервер.СтрокаТаблицыКакСтруктура(Результат.Колонки);
	СтруктураРеквизитов.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	СтруктураРеквизитов.ЭтоУслуга = Неопределено;
	СтруктураРеквизитов.ЭтоПодарочныйСертификат = Неопределено;

	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда

		ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, Выборка);

	КонецЕсли;

//	ВНИМАНИЕ! Ищем по "КодНоменклатуры"
//	ОбработкаТабличнойЧастиТоварыКлиент.ПолучитьСтруктуруПолейТЧ(СтруктураДействий);

	Возврат СтруктураРеквизитов;

КонецФункции // ПолучитьРеквизитыНоменклатуры()

Функция ТипыИсключенийНоменклатуры()	Экспорт

	ТипыИсключений = Новый Соответствие;
	ТипыИсключений.Вставить(Перечисления.ТипыНоменклатуры.ПодарочныйСертификат, Истина);
	ТипыИсключений.Вставить(Перечисления.ТипыНоменклатуры.СкидочныйКупон, Истина);

	Возврат ТипыИсключений;

КонецФункции // ТипыИсключенийНоменклатуры()

//	LNK 22.12.2021 14:56:45
Функция РеквизитыСписка(СписокНоменклатуры)	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Номенклатура,
	|	ТаблицаТовары.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.ВидНоменклатуры КАК ВидНоменклатуры
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&СписокНоменклатуры)
	|	И НЕ ТаблицаТовары.ЭтоГруппа
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерийныеНомера.Ссылка,
	|	ТаблицаСерийныеНомера.Владелец.ТипНоменклатуры,
	|	ТаблицаСерийныеНомера.Владелец.ВидНоменклатуры
	|ИЗ
	|	Справочник.СерийныеНомера КАК ТаблицаСерийныеНомера
	|ГДЕ
	|	ТаблицаСерийныеНомера.Ссылка В(&СписокНоменклатуры)"
	);
	Запрос.УстановитьПараметр("СписокНоменклатуры", ?(ТипЗнч(СписокНоменклатуры) = Тип("ТаблицаЗначений")
		, СписокНоменклатуры.ВыгрузитьКолонку("Номенклатура")
		, СписокНоменклатуры)
	);

	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	ТаблицаРезультат.Индексы.Добавить("Номенклатура");

	Возврат ТаблицаРезультат;

КонецФункции

//	LNK 10.05.2019 12:48:54
Функция СформироватьIDNGroup(IDN, Родитель, Ссылка)	Экспорт

//	Параметры "IDN" и "Родитель" являются реквизитами параметра "Ссылка".
	IDNG = "";

	Если НЕ ПустаяСтрока(IDN) Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаСправочник.Ссылка КАК Ссылка,
		|	ТаблицаСправочник.IDN КАК IDN
		|ИЗ
		|	Справочник.Номенклатура КАК ТаблицаСправочник
		|ГДЕ
		|	ТаблицаСправочник.Ссылка = &Родитель
		|ИТОГИ ПО
		|	Ссылка ИЕРАРХИЯ"
		);
		Запрос.УстановитьПараметр("Родитель", Родитель);
		
		ДанныеВыборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ДанныеВыборка.Следующий() Цикл

			IDNG = IDNG + ?(ПустаяСтрока(IDNG), "", "_") + ДанныеВыборка.IDN;

		КонецЦикла;

		IDNG = ?(ПустаяСтрока(IDNG), "", IDNG + "_") + IDN;

	КонецЕсли;

	Возврат IDNG;

КонецФункции

#КонецОбласти

#Область СпецификаОбменовMagento

Процедура ПолучитьНоменклатуруПоСпискуMagento(ТаблицаВнешняя)	Экспорт	//	LNK 08.06.2021 13:09:18

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаВнешняя.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВнешняя.IDN КАК IDN,
	|	ТаблицаВнешняя.УпаковкаИмя КАК УпаковкаИмя,
	|	ТаблицаВнешняя.Коэффициент КАК Коэффициент
	|ПОМЕСТИТЬ ТаблицаВнешняя
	|ИЗ
	|	&ТаблицаВнешняя КАК ТаблицаВнешняя
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	IDN
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВнешняя.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ТаблицаСправочник.Ссылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	ЕСТЬNULL(ТаблицаСправочник.СтавкаНДС, ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)) КАК СтавкаНДС,
	|	ТаблицаВнешняя.УпаковкаИмя КАК УпаковкаИмя,
	|	ТаблицаВнешняя.Коэффициент КАК Коэффициент
	|ПОМЕСТИТЬ ТаблицаВладельцы
	|ИЗ
	|	ТаблицаВнешняя КАК ТаблицаВнешняя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|		ПО ТаблицаВнешняя.IDN = ТаблицаСправочник.IDN
	|			И (НЕ ТаблицаВнешняя.IDN = """")
	|			И (НЕ ТаблицаСправочник.ЭтоГруппа)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	УпаковкаИмя,
	|	Коэффициент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаВнешняя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВладельцы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВладельцы.Номенклатура КАК Номенклатура,
	|	ТаблицаВладельцы.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК Упаковка,
	|	1 КАК Коэффициент
	|ИЗ
	|	ТаблицаВладельцы КАК ТаблицаВладельцы
	|ГДЕ
	|	(ТаблицаВладельцы.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ИЛИ ТаблицаВладельцы.Коэффициент <= 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВладельцы.НомерСтроки,
	|	ТаблицаВладельцы.Номенклатура,
	|	ТаблицаВладельцы.СтавкаНДС,
	|	ЕСТЬNULL(ТаблицаУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)),
	|	ТаблицаВладельцы.Коэффициент
	|ИЗ
	|	ТаблицаВладельцы КАК ТаблицаВладельцы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК ТаблицаУпаковки
	|		ПО ТаблицаВладельцы.Номенклатура = ТаблицаУпаковки.Владелец
	|			И ТаблицаВладельцы.Коэффициент = ТаблицаУпаковки.Коэффициент
	|			И ТаблицаВладельцы.УпаковкаИмя = ТаблицаУпаковки.Наименование
	|ГДЕ
	|	НЕ ТаблицаВладельцы.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ТаблицаВладельцы.Коэффициент > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаВладельцы"
	);
	Запрос.УстановитьПараметр("ТаблицаВнешняя", ТаблицаВнешняя.Скопировать(, "НомерСтроки, IDN, УпаковкаИмя, Коэффициент"));

	ДанныеВыборка = Запрос.Выполнить().Выбрать();

	Пока ДанныеВыборка.Следующий() Цикл

		СтрокаВнешняя = ТаблицаВнешняя.Найти(ДанныеВыборка.НомерСтроки, "НомерСтроки");

		Если ДанныеВыборка.Номенклатура = Справочники.Номенклатура.ПустаяСсылка() Тогда

			СтрокаВнешняя.ОписаниеОшибки = "не найден IDN [" + СтрокаВнешняя.IDN + "]";

		Иначе

			СтрокаВнешняя.Номенклатура = ДанныеВыборка.Номенклатура;
			СтрокаВнешняя.СтавкаНДС	   = ДанныеВыборка.СтавкаНДС;
			СтрокаВнешняя.Упаковка	   = ДанныеВыборка.Упаковка;
			СтрокаВнешняя.Коэффициент  = ДанныеВыборка.Коэффициент;

			Если СтрокаВнешняя.Коэффициент > 1 И ДанныеВыборка.Упаковка = Справочники.УпаковкиНоменклатуры.ПустаяСсылка() Тогда

				СтрокаВнешняя.ОписаниеОшибки = "не найден упаковка [" + СтрокаВнешняя.УпаковкаИмя + "] коэффициент [" + СтрокаВнешняя.Коэффициент + "]";
				СтрокаВнешняя.Найден = Ложь;

			Иначе

				СтрокаВнешняя.Найден = Истина;

			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры
	
#КонецОбласти

#КонецЕсли

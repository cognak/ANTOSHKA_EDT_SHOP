////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.

		Возврат;

	КонецЕсли;

	Если НЕ Пользователи.ЭтоПолноправныйПользователь(, Истина) Тогда

		Элементы.ОбновитьДанныеСправочника.Доступность = Ложь;

	КонецЕсли;

	Если Параметры.РежимВыбора Тогда

		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		Элементы.Список.РежимВыбора = Истина;
		Элементы.ОбновитьДанныеСправочника.ТолькоВоВсехДействиях = Истина;
		Параметры.Отбор.Вставить("ПометкаУдаления", Ложь);
		Параметры.Отбор.Вставить("ПометкаБудущегоУдаления", Ложь);

		Элементы.ОбновитьДанныеСправочника.Доступность = Ложь;
		Элементы.ЗарегистрироватьВоВсеУзлы.Доступность = Ложь;

	Иначе

		Элементы.ОбновитьДанныеСправочника.Доступность = Истина;
		Элементы.ЗарегистрироватьВоВсеУзлы.Доступность = ОбменДаннымиПовтИсп.ЭтоГлавныйУзел();

		Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда	//	LNK 08.07.2021 06:26:04

			Элементы.ОбновитьДанныеСправочника.КнопкаПоУмолчанию = Истина;

			Команды[Элементы.ОбновитьДанныеСправочника.ИмяКоманды].Заголовок = "Устранить проблемы";
			Команды[Элементы.ОбновитьДанныеСправочника.ИмяКоманды].Подсказка = "Корректировка ошибочных, двойных и т.п. элементов справочника";

		КонецЕсли;

	КонецЕсли;

	Параметры.Свойство("ВыбиратьГруппыОбъектовМетаданных", ВыбиратьГруппыОбъектовМетаданных);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ Список

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если НЕ ВыбиратьГруппыОбъектовМетаданных
	   И Элемент.ТекущиеДанные <> Неопределено
	   И НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Родитель) Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если Элемент.Отображение = ОтображениеТаблицы.Дерево Тогда
			Если Элемент.Развернут(Элемент.ТекущаяСтрока) Тогда
				Элемент.Свернуть(Элемент.ТекущаяСтрока);
			Иначе
				Элемент.Развернуть(Элемент.ТекущаяСтрока);
			КонецЕсли;
			
		ИначеЕсли Элемент.Отображение = ОтображениеТаблицы.ИерархическийСписок Тогда
			
			Если Элемент.ТекущийРодитель <> Элемент.ТекущаяСтрока Тогда
				Элемент.ТекущийРодитель = Элемент.ТекущаяСтрока;
			Иначе
				ТекущаяСтрока = Элемент.ТекущаяСтрока;
				Элемент.ТекущийРодитель = Неопределено;
				Элемент.ТекущаяСтрока = ТекущаяСтрока;
			КонецЕсли;
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Невозможно выбрать группу объектов метаданных.
			                          |Выберите объект метаданных.'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОбновитьДанныеСправочника(Команда)
	
	ЕстьИзменения = Ложь;
	ЕстьУдаленные = Ложь;
	
	ОбновитьДанныеСправочникаНаСервере(ЕстьИзменения, ЕстьУдаленные);

	Если ЕстьИзменения Тогда

			Текст = НСтр("ru = 'Обновление идентификаторов выполнено успешно.'");

	Иначе	Текст = НСтр("ru = 'Обновление идентификаторов не требуется.'");

	КонецЕсли;

	Если ЕстьУдаленные Тогда

		Текст = Текст
			+ Символы.ПС
			+ Символы.ПС
			+ НСтр("ru = 'Найдены удаленные объекты метаданных
			             |(см. элементы, начинающиеся с символа ""?"").'"
		);

	КонецЕсли;

	ПоказатьОповещениеПользователя("Обновление И.О.М.",, Текст, БиблиотекаКартинок.Информация32);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОбновитьДанныеСправочникаНаСервере(ЕстьИзменения, ЕстьУдаленные)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Справочники.ИдентификаторыОбъектовМетаданных.ОбновитьДанныеСправочника(ЕстьИзменения, ЕстьУдаленные);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

//	LNK 30.10.2016 09:27:33
&НаСервере
Процедура ЗарегистрироватьВоВсеУзлыНаСервере()

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаУзлы.Ссылка КАК Узел
	|ИЗ
	|	ПланОбмена.ПоМагазину КАК ТаблицаУзлы
	|ГДЕ
	|	НЕ ТаблицаУзлы.ПометкаУдаления
	|	И НЕ ТаблицаУзлы.ЭтотУзел
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаУзлы.Ссылка
	|ИЗ
	|	ПланОбмена.ПоРабочемуМесту КАК ТаблицаУзлы
	|ГДЕ
	|	НЕ ТаблицаУзлы.ПометкаУдаления
	|	И НЕ ТаблицаУзлы.ЭтотУзел"
	);
	Запрос.УстановитьПараметр("ЭтотУзел", ОбщегоНазначенияКлиентСервер.AAD(ПланыОбмена.ПоМагазину.ЭтотУзел(), ПланыОбмена.ПоРабочемуМесту.ЭтотУзел()));

	ПланыОбмена.ЗарегистрироватьИзменения(
		Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Узел"),
		Метаданные.Справочники.ИдентификаторыОбъектовМетаданных);

КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьВоВсеУзлы(Команда)

	ЗарегистрироватьВоВсеУзлыНаСервере();

	ПоказатьОповещениеПользователя("Регистрация выполнена"
		,, "Все элементы справочника зарегистрированы во все узлы планов обмена «По магазину» и «По рабочему месту»"
		, БиблиотекаКартинок.Информация32);

КонецПроцедуры












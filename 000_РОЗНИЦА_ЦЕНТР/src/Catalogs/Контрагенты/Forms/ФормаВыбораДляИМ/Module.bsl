
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;
	
	Заголовок = "Выбор клиента";
	ПоКнопке = Ложь;
	ПросмотрКлиента = Ложь;
	ФизЛицо = Истина;

	Если Параметры.Свойство("Контрагент") И Не ПустаяСтрока(Параметры.Контрагент) Тогда
		
		Если Параметры.Свойство("НомерТелефона") И Не ПустаяСтрока(Параметры.НомерТелефона) Тогда
			ЗначениеРеквизита = ПривестиНомерТелефона(Параметры.НомерТелефона);
		КонецЕсли;
		
		Клиент = Параметры.Контрагент;
		ЗаполнениеРеквизитов();

	КонецЕсли;
	
	Если Параметры.Свойство("ПросмотрКлиента") Тогда
		Заголовок = "Редактирование клиента";
		Элементы.ФормаВыбратьКлиента.Заголовок = "Записать и закрыть";
		Элементы.ЗначениеРеквизита.ТолькоПросмотр = Истина;
		Элементы.КодПоЕДРПОУ.ТолькоПросмотр = Истина;
		ПросмотрКлиента = Истина;
	КонецЕсли;

	ОтладочныйРежим = ТехническаяПоддержкаВызовСервера.ОтладочныйРежимРаботы();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ) 
	
	Подключаемый_ДоступностьWebRetail();

	Если НЕ ИнформационнаяКарта.Пустая() И НЕ ПустаяСтрока(ЗначениеРеквизита) Тогда

	//	"Нормализуем" номер телефона в соответствии с маской редактирования
		ЗначениеРеквизита = Элементы.ЗначениеРеквизита.ТекстРедактирования;

	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ПоКнопке Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗначениеРеквизитаПриИзменении(Элемент)
	Если Не СтрДлина(СтрЗаменить(ЗначениеРеквизита, " ", "")) = 13 Тогда
		
		Сообщить("Номер введен некорректно!!!", СтатусСообщения.Внимание);

	КонецЕсли;
	ПодтверждениеПолучено   = Ложь;
	Модифицированность = Ложь;
	ЗначениеРеквизитаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолПриИзменении(Элемент)

	ПолИзменен = НЕ Пол.Пустая();
	УстановитьДоступностьЭлементовФормы(Истина);

КонецПроцедуры

&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)

	СтроковыеФункцииКлиентСервер.ПривестиНаименование(Фамилия, Истина, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)

	Имя = РеквизитИмяСсылка(ИмяСсылка);
	СтроковыеФункцииКлиентСервер.ПривестиНаименование(Имя, Истина, Истина);

КонецПроцедуры

&НаКлиенте	//	LNK 20.07.2021 06:35:58
Процедура ИмяАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)

	Если НЕ ПустаяСтрока(Текст) Тогда

		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ПолучитьДанныеВыбораИмени(Текст, Пол, Истина);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИмяИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)

	Если Пол.Пустая() Тогда

		Имя = "";
		СтандартнаяОбработка = Ложь;
		ПоказатьОповещениеПользователя("Укажите пол покупателя!",, "Для определения имени человека обязательно нужно указать пол", БиблиотекаКартинок.Ошибка32);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)

	СтроковыеФункцииКлиентСервер.ПривестиНаименование(Отчество, Истина, Истина);

КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНажатие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если НЕ Контрагент.Пустая() Тогда

		ПараметрыФормы = Новый Структура("Ключ", Контрагент);
		ОткрытьФорму("Справочник.Контрагенты.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КодПодтвержденияПриИзменении(Элемент)

	ПоказатьОповещениеПользователя("Проверка номера телефона"
	,, "Отправлен запрос на получение последнего кода подтверждения ..."
	, БиблиотекаКартинок.Вопрос32, СтатусОповещенияПользователя.Информация);

	ПодтверждениеПолучено = Ложь;	//	сбросим возможное подтверждение

	Если ОтладочныйРежим Тогда

		ДанныеКлиента = Новый Структура(
			"Указан, КодКлиента"
			, Истина
			, КодПодтверждения
		);

	Иначе

		ДанныеКлиента = КодПодтвержденияПриИзмененииНаСервере(ЗначениеРеквизита);

	КонецЕсли;

	Если ДанныеКлиента.Указан Тогда

		Если СокрЛП(ДанныеКлиента.КодКлиента) = СокрЛП(КодПодтверждения) Тогда

			ПодтверждениеПолучено = Истина;

			ПоказатьОповещениеПользователя("Проверка номера телефона"
			,, "Поздравляем! Код подтверждения соответствует"
			, БиблиотекаКартинок.Информация32, СтатусОповещенияПользователя.Информация);

			ТекущийЭлемент = Элементы.ФормаВыбратьКлиента;

		Иначе

			ПоказатьОповещениеПользователя("Проверка номера телефона"
			,, "Код подтверждения не совпадает с отправленным на номер телефона «" + ЗначениеРеквизита + "»"
			, БиблиотекаКартинок.Ошибка32, СтатусОповещенияПользователя.Важное);

			ТекущийЭлемент = Элементы.КодПодтверждения;

		КонецЕсли;

	Иначе

		ПоказатьОповещениеПользователя("Проверка номера телефона"
		,, "Код подтверждения не получен. Возможно, не соответствует номер телефона «" + ЗначениеРеквизита + "»"
		, БиблиотекаКартинок.Ошибка32, СтатусОповещенияПользователя.Важное);

		ТекущийЭлемент = Элементы.КодПодтверждения;
	
	КонецЕсли;

	УстановитьДоступностьЗависимыхОтПодтверждения();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаДети

&НаКлиенте
Процедура ТаблицаДетиИмяПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ТаблицаДети.ТекущиеДанные;

	Если НЕ ТекущиеДанные = Неопределено Тогда

		СтроковыеФункцииКлиентСервер.ПривестиНаименование(ТекущиеДанные.Имя, Истина, Истина);

		Если НЕ ПроверитьИмяФизЛица(ТекущиеДанные.Имя, ТекущиеДанные.Пол) Тогда

			Сообщить("Очищено! Имя «" + ТекущиеДанные.Имя + "» НЕ найдено в справочнике имён людей.");
			ТекущиеДанные.Имя = "";

		КонецЕсли;

	КонецЕсли;
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДетиПолПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ТаблицаДети.ТекущиеДанные;

	Если НЕ ТекущиеДанные = Неопределено Тогда

		ТекущиеДанные.Имя = "";

	КонецЕсли;

КонецПроцедуры

&НаКлиенте	//	LNK 12.06.2019 13:33:17
Процедура ТаблицаДетиИмяАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)

	Если НЕ ПустаяСтрока(Текст) И НЕ Элементы.ТаблицаДети.ТекущиеДанные = Неопределено Тогда

		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ПолучитьДанныеВыбораИмени(Текст, Элементы.ТаблицаДети.ТекущиеДанные.Пол, Ложь);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьКлиента(Команда)

	Если ФизЛицо Тогда

		Если Клиент.Пустая() Тогда 
			РегистрацияКлиента();
		Иначе 
			
			ЗаписатьДанныеКонтрагента();
		КонецЕсли;
		ЗначениеРеквизитаПриИзмененииНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменаВыбора(Команда)
	
	ЗакрытьФорму(Истина); 

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКлиента(Команда)
	Если Модифицированность И ФизЛицо Тогда 
		
		Если Клиент.Пустая() И Не ПодтверждениеПолучено Тогда
			Сообщить("Нужно подтвердить номер телефона");
			Возврат;
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопрос",
			ЭтотОбъект); // Прописываем название процедуры-обработчика.

		ПоказатьВопрос(Оповещение, "Данные о клиенте модифицированы!!! Сохранить?",  // вместо привычного "Вопрос", теперь "ПоказатьВопрос"
			РежимДиалогаВопрос.ДаНетОтмена,
			0,  // задержка (секунды). необязательно
			КодВозвратаДиалога.Да, // задает кнопку по умолчанию. необязательно
			"Данные о клиенте." // устанавливаем заголовок. необязательно
			);
	Иначе		
		
		ЗакрытьФорму();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьКодПодтвержденияSMS(Команда)

	Подключаемый_ДоступностьWebRetail();

	Если НЕ РесурсWebRetailДоступен Тогда

		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(
			"SMS аутентификация"
			, "НЕТ доступа к серверу ЦБ. Попытайтесь выполнить позже позже."
		);
		Возврат;

	КонецЕсли;

	Если ПроверитьЗаполнение() Тогда

		ПоказатьВопрос(Новый ОписаниеОповещения("ОтправитьКодПодтвержденияSMSЗавершение", ЭтотОбъект)
			, "Будет отправлено SMS по указанному номеру. Подтвердите своё решение:", РежимДиалогаВопрос.ОКОтмена
			, 60, КодВозвратаДиалога.ОК, "ИДЕНТИФИКАЦИЯ", КодВозвратаДиалога.Отмена);

	//Иначе

	//	ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК("В действии отказано!", "Необходимо заполнить все обязательные поля:" + ТекстОшибокЗаполнения);

	КонецЕсли;


КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста	//	LNK 12.06.2019 13:15:50
Функция ПолучитьДанныеВыбораИмени(Текст, Пол, ВернутьСсылки)

	Возврат Справочники.ИменаЛюдей.ПолучитьДанныеВыбораИмени(Текст, Пол, ВернутьСсылки);

КонецФункции // ПолучитьДанныеВыбораИмени()//<ИмяТаблицыФормы>

&НаКлиенте
Функция РегистрацияКлиента()
	
	СоставДанных = РегистрацияКлиентаНаСервере();

	Если НЕ СоставДанных.Ошибка Тогда

	//	В случае успеха переменная "ДанныеКонтрагента" содержит структуру вида "СоставДанных".
		Клиент = СоставДанных.Контрагент;
		
	Иначе

		ОбщегоНазначенияРТКлиент.ВывестиИнформациюДляРМК(
			"Неудачная регистрация нового покупателя. Возможно, имеет место проблема связи с сервером ЦБ."
			, СоставДанных.ОписаниеОшибки
		);

	КонецЕсли;
	
	Возврат Не СоставДанных.Ошибка;
	
КонецФункции

&НаСервере	//	LNK 15.08.2019 12:49:11
Функция РегистрацияКлиентаНаСервере()

	Попытка

		ДанныеКонтрагента = ОбменMicrosoftDynamicsСервер.ИнициализацияДанныхКонтрагента();

		ДанныеКонтрагента.НомерТелефона = ОтправкаSMS.ПодготовитьНомерТелефона(ЗначениеРеквизита);
		ДанныеКонтрагента.Пол      = Пол;
		ДанныеКонтрагента.Фамилия  = СтроковыеФункцииКлиентСервер.ПривестиНаименование(Фамилия, Истина);
		ДанныеКонтрагента.Имя      = СтроковыеФункцииКлиентСервер.ПривестиНаименование(Имя, Истина);
		ДанныеКонтрагента.Отчество = СтроковыеФункцииКлиентСервер.ПривестиНаименование(Отчество, Истина);

		ДанныеКонтрагента.ДатаРождения = ДатаРождения;
		ДанныеКонтрагента.Email = СокрЛП(Электропочта);
		ДанныеКонтрагента.Дети  = ТаблицаДети.Выгрузить();

		СоставДанных = РозничныеПродажиСлужебный.ВыполнитьКомплексДанныхКонтрагента(
			  ""
			, ДанныеКонтрагента.НомерТелефона
			, ДанныеКонтрагента
			, Перечисления.НазначениеКонтрагентовОтложенных.ПроверкаВРознице
			, Неопределено
		);

		Если НЕ СоставДанных.Ошибка Тогда

			Модифицированность = Ложь;

		КонецЕсли;

	Исключение

		СоставДанных = ОбменMicrosoftDynamicsСервер.ИнициализироватьСоставДанных();

		СоставДанных.Ошибка = Истина;
		СоставДанных.ОписаниеОшибки = ОписаниеОшибки();

		ЖурналСобытий.Регистрация("Контрагент.Новый", УровеньЖурналаРегистрации.Ошибка
			, Метаданные.ПланыОбмена.ОбменMicrosoftDynamics
			,
			,
			, "Ошибка передачи:" + Символы.ПС + СоставДанных.ОписаниеОшибки
			,
			,
			Ложь
		);	//	LNK 21.05.2020 07:03:26

	КонецПопытки;

	Возврат СоставДанных;

КонецФункции

&НаСервереБезКонтекста
Функция КодПодтвержденияПриИзмененииНаСервере(НомерТелефона)

	Возврат ВерификацияКлиентовСервер.ПолучитьКодПодтверждения(ОтправкаSMS.ПодготовитьНомерТелефона(НомерТелефона), Истина);

КонецФункции // КодПодтвержденияПриИзмененииНаСервере()

&НаСервере
Процедура ЗначениеРеквизитаПриИзмененииНаСервере()
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаКонтакты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты.КонтактнаяИнформация КАК ТаблицаКонтакты
		|ГДЕ
		|	ТаблицаКонтакты.НомерТелефона = &ЗначениеРеквизита
		|	И ТаблицаКонтакты.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)"
		);
	Запрос.УстановитьПараметр("ЗначениеРеквизита", ОтправкаSMS.ПодготовитьНомерТелефона(ЗначениеРеквизита));
	
	Результат = Запрос.Выполнить();
	Найден    = НЕ Результат.Пустой();

	Если Найден Тогда

		СписокСсылок = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");

		Клиент = СписокСсылок[0];
		
	Иначе 
		
		Клиент = Справочники.Контрагенты.ПустаяСсылка();
		
	КонецЕсли;
	
	ЗаполнениеРеквизитов();

КонецПроцедуры

&НаСервере
Процедура ЗаполнениеРеквизитов()

	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ТаблицаВладельца.Ссылка, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
	|	ЕСТЬNULL(ТаблицаВладельца.Наименование, """") КАК Наименование,
	|	ЕСТЬNULL(ТаблицаФИО.Фамилия, """") КАК Фамилия,
	|	ЕСТЬNULL(ТаблицаФИО.Имя, """") КАК Имя,
	|	ЕСТЬNULL(ТаблицаФИО.Отчество, """") КАК Отчество,
	|	ЕСТЬNULL(ТаблицаВладельца.Пол, ЗНАЧЕНИЕ(Перечисление.ПолФизическогоЛица.ПустаяСсылка)) КАК Пол,
	|	ЕСТЬNULL(ТаблицаВладельца.ДатаРождения, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаРождения,
	|	ЕСТЬNULL(ТаблицаКонтактыПочта.Представление, """") КАК Электропочта,
	|	ТаблицаВладельца.Дети.(
	|		НомерСтроки КАК НомерСтроки,
	|		Имя КАК Имя,
	|		ДатаРождения КАК ДатаРождения,
	|		Пол КАК Пол) КАК Дети,
	|	ЕСТЬNULL(ИнформационныеКарты.Ссылка, ЗНАЧЕНИЕ(Справочник.ИнформационныеКарты.ПустаяСсылка)) КАК ИнформационнаяКарта,
	|	ИнформационныеКарты.ВидДисконтнойКарты КАК ВидДисконтнойКарты,
	|	ТаблицаВладельца.КодПоЕДРПОУ,
	|	ТаблицаВладельца.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо) КАК ФизЛицо
	|ИЗ
	|	Справочник.Контрагенты КАК ТаблицаВладельца
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ТаблицаФИО
	|		ПО ТаблицаВладельца.Ссылка = ТаблицаФИО.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК ТаблицаКонтактыПочта
	|		ПО ТаблицаВладельца.Ссылка = ТаблицаКонтактыПочта.Ссылка
	|		И (ТаблицаКонтактыПочта.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailКонтрагента))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИнформационныеКарты КАК ИнформационныеКарты
	|		ПО (ИнформационныеКарты.ВладелецКарты = ТаблицаВладельца.Ссылка)
	|		И (НЕ ИнформационныеКарты.Блокирован)
	|		И (НЕ ИнформационныеКарты.ПометкаУдаления)
	|ГДЕ
	|	ТаблицаВладельца.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылка", Клиент);

	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда 
		
		Контрагент = Выборка.Контрагент;
		Пол        = Выборка.Пол;
		ДатаРождения  = Выборка.ДатаРождения;
		Электропочта  = Выборка.Электропочта;
		ИнформационнаяКарта  = Выборка.ИнформационнаяКарта;
		ВидДисконтнойКарты  = Выборка.ВидДисконтнойКарты; 
		КодПоЕДРПОУ = Выборка.КодПоЕДРПОУ;

		Наименование = СокрЛП(Выборка.Наименование);
		
		Если КонтактнаяИнформацияКлиентСервер.ЭтоПустоеНаименование(Наименование) Тогда
			
			Фамилия  = "";
			Имя      = "";
			Отчество = "";
			Наименование = "";
			
		Иначе
			
			Если ПустаяСтрока(Выборка.Фамилия) И ПустаяСтрока(Выборка.Имя) И ПустаяСтрока(Выборка.Отчество) Тогда
				
				СоставНаименования = ОбщегоНазначенияКлиентСервер.lx_FillValueList(, Наименование,, " ", 3,, Новый ОписаниеТипов("Строка"));
				
				Фамилия  = СоставНаименования[0];
				Имя      = СоставНаименования[1];
				Отчество = СоставНаименования[2];
				
			Иначе
				
				Фамилия  = СокрЛП(Выборка.Фамилия);
				Имя      = СокрЛП(Выборка.Имя);
				Отчество = СокрЛП(Выборка.Отчество);
				
			КонецЕсли;
			
		КонецЕсли;
		
		УстановитьИмяСсылка();
		Имя = РеквизитИмяСсылка(ИмяСсылка);
		ТаблицаДети.Загрузить(Выборка.Дети.Выгрузить());
		
		ФизЛицо = Выборка.ФизЛицо;
		
		Если Выборка.ФизЛицо Тогда
			
			Элементы.СтраницыКлиентов.ТекущаяСтраница = Элементы.СтраницаФизЛицо;
			
		Иначе

			Элементы.СтраницыКлиентов.ТекущаяСтраница = Элементы.СтраницаЮрЛицо;
			
		КонецЕсли;
		
		Если ПросмотрКлиента Тогда
			
			Элементы.СтраницаФизЛицо.Видимость = Выборка.ФизЛицо;
			Элементы.СтраницаЮрЛицо.Видимость = Не Выборка.ФизЛицо;
			
		КонецЕсли;
	Иначе 
		
		ОчиститьРеквизитыФормы();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере	//	LNK 05.02.2019 13:18:25
Процедура УстановитьИмяСсылка()

	Если ПустаяСтрока(Имя) Тогда

		ИмяСсылка = Неопределено;

	Иначе

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ИменаЛюдей.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ИменаЛюдей КАК ИменаЛюдей
		|ГДЕ
		|	(ИменаЛюдей.Наименование = &Имя
		|			ИЛИ ИменаЛюдей.НаименованиеУкраинское = &Имя)
		|	И ИменаЛюдей.Пол = &Пол"
		);
		Запрос.УстановитьПараметр("Имя", Имя);
		Запрос.УстановитьПараметр("Пол", Пол);

		Выборка = Запрос.Выполнить().Выбрать();

		Если Выборка.Следующий() Тогда

			ИмяСсылка = Выборка.Ссылка;

		Иначе

			ИмяСсылка = Неопределено;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПривестиНомерТелефона(Знач НомерПредставление)

	НомерПредставление = СтрЗаменить(НомерПредставление, "(", "");
	НомерПредставление = СтрЗаменить(НомерПредставление, ")", "");
	НомерПредставление = СтрЗаменить(НомерПредставление, " ", "");
	НомерПредставление = СтрЗаменить(НомерПредставление, "+", "");

	Если Лев(НомерПредставление, 2) = "38" Тогда

		НомерПредставление = Сред(НомерПредставление, 3);

	КонецЕсли;

	Возврат НомерПредставление;

КонецФункции // ПривестиНомерТелефона()

&НаСервере
Процедура ОчиститьРеквизитыФормы()

	Для каждого Реквизит Из ПолучитьРеквизиты() Цикл

		Если Реквизит.СохраняемыеДанные Тогда

			ЭтотОбъект[Реквизит.Имя] = Реквизит.ТипЗначения.ПривестиЗначение();

		КонецЕсли;

	КонецЦикла;
	
	ТаблицаДети.Очистить();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементовФормы(УстановитьТекущийЭлемент = Ложь)

	ПараметрыВыбораИмя = Новый Массив;	//	LNK 05.02.2019 13:43:48
	ПараметрыВыбораИмя.Добавить(Новый ПараметрВыбора("Отбор.Пол", Пол));
	Элементы.Имя.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораИмя);

	Элементы.Контрагент.Гиперссылка = НЕ Контрагент.Пустая();

	УстановитьДоступностьЗависимыхОтПодтверждения();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЗависимыхОтПодтверждения(ПослеОтправкиПодтверждения = Ложь)

	УстановитьКлючиКомандныхКнопок();

КонецПроцедуры

&НаСервере
Процедура УстановитьКлючиКомандныхКнопок()

	Для каждого Элемент Из Элементы Цикл

		Если ТипЗнч(Элемент) = Тип("КнопкаФормы")
		И НЕ ПустаяСтрока(Элемент.ИмяКоманды)
		И    Элемент.СочетаниеКлавиш.Клавиша = Клавиша.Нет	Тогда

			Элемент.СочетаниеКлавиш = Команды[Элемент.ИмяКоманды].СочетаниеКлавиш;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ЗаписатьДанныеКонтрагента()

	Для каждого СтрокаТаблицы Из ТаблицаДети.НайтиСтроки(Новый Структура("Пол", Перечисления.ПолФизическогоЛица.ПустаяСсылка())) Цикл

		ТаблицаДети.Удалить(СтрокаТаблицы);

	КонецЦикла;

	ДанныеКонтрагента = Новый Структура;
	ДанныеКонтрагента.Вставить("Контрагент"   , Контрагент);
	ДанныеКонтрагента.Вставить("ИнформационнаяКарта", ИнформационнаяКарта);
	ДанныеКонтрагента.Вставить("ВидДисконтнойКарты" , ВидДисконтнойКарты);
	ДанныеКонтрагента.Вставить("Пол"          , Пол);
	ДанныеКонтрагента.Вставить("Фамилия"      , Фамилия);
	ДанныеКонтрагента.Вставить("Имя"          , Имя);
	ДанныеКонтрагента.Вставить("Отчество"     , Отчество);
	ДанныеКонтрагента.Вставить("НомерТелефона", ЗначениеРеквизита);
	ДанныеКонтрагента.Вставить("ДатаРождения" , ДатаРождения);
	ДанныеКонтрагента.Вставить("Электропочта" , Электропочта);
	ДанныеКонтрагента.Вставить("Дети"         , ТаблицаДети.Выгрузить());

	ДанныеКонтрагента.Вставить("РасширенныеДанные", Истина);

	Результат = ВерификацияКлиентовСервер.ЗаписатьВерифицированныеДанныеКонтрагента(ДанныеКонтрагента);
	
	Возврат Результат.Выполнено;

КонецФункции

&НаСервереБезКонтекста	//	LNK 08.02.2019 09:47:25
Функция ПроверитьИмяФизЛица(Имя, Пол)

	Возврат Справочники.ИменаЛюдей.ИмяКорректно(Имя, Пол);

КонецФункции

&НаКлиенте	//	LNK 20.07.2021 09:39:55
Процедура Подключаемый_ДоступностьWebRetail()

	РесурсWebRetailДоступен = РозничныеПродажиСлужебный.РесурсWebRetailДоступен();

	Если РесурсWebRetailДоступен Тогда

			Элементы.ИндикаторПодключения.Картинка = БиблиотекаКартинок.RFDIОперацииВыполнены;

	Иначе	Элементы.ИндикаторПодключения.Картинка = БиблиотекаКартинок.RFDIЗапись;

	КонецЕсли;

КонецПроцедуры

&НаСервере	//	LNK 20.07.2021 18:35:21
Функция РеквизитИмяСсылка(ИмяСсылка)
	
	ИмяРеквизита = ?(ОбщегоНазначенияРТповтИсп.ПолучитьУчетнуюПолитику().ИспользоватьУкраинскоеНаименование
		, "НаименованиеУкраинское"
		, "Наименование"
	);

	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИмяСсылка, ИмяРеквизита, "", Ложь);

КонецФункции


&НаКлиенте
Процедура ПослеОтветаНаВопрос(Результат, Параметры) Экспорт // здесь, думаю, комментировать нечего

	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Если Клиент.Пустая() Тогда 
			РезультатПоКлиенту = РегистрацияКлиента();
		Иначе 
			
			РезультатПоКлиенту = ЗаписатьДанныеКонтрагента();
		КонецЕсли;
		
		
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Нет Или Результат = КодВозвратаДиалога.Отмена Или РезультатПоКлиенту Тогда 
		
		ЗакрытьФорму(Результат = КодВозвратаДиалога.Нет Или Результат = КодВозвратаДиалога.Отмена);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(ОтменаВыбора = Ложь)
	
	ПоКнопке = Истина;
	Результат = Новый Структура;
	Результат.Вставить("Контрагент", Клиент); 
	Результат.Вставить("ФизЛицо", ФизЛицо); 
	Результат.Вставить("ОтменаВыбора", ОтменаВыбора); 
	Закрыть(Результат);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьКодПодтвержденияSMSЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		
		СтруктураОтвета = ОтправитьКодПодтвержденияSMSНаСервере(ЗначениеРеквизита, ИмяКомпьютера(), Контрагент);
		
		Если СтруктураОтвета.ОшибкаВНомере Тогда
			
			Сообщить(СтруктураОтвета.ТекстОшибки);

		ИначеЕсли ОтладочныйРежим ИЛИ СтруктураОтвета.КодОтправлен Тогда

			ПодтверждениеОтправлено = Истина;
			ПоказатьОповещениеПользователя("Код успешно отправлен на телефон" + Символы.ПС + "«" + ЗначениеРеквизита + "»");
			
		Иначе
			
			Сообщить(СтруктураОтвета.ТекстОшибки);

		КонецЕсли;

		УстановитьДоступностьЭлементовФормы(Истина);

		ТекущийЭлемент = Элементы.КодПодтверждения;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КодПоЕДРПОУПриИзменении(Элемент)
	КодПоЕДРПОУПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура КодПоЕДРПОУПриИзмененииНаСервере()
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Контрагенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.КодПоЕДРПОУ = &КодПоЕДРПОУ
		|	И НЕ Контрагенты.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
		|	И НЕ Контрагенты.Блокирован
		|	И НЕ Контрагенты.ПометкаУдаления"
		);
	Запрос.УстановитьПараметр("КодПоЕДРПОУ", СокрЛП(КодПоЕДРПОУ));
	
	Результат = Запрос.Выполнить();
	Найден    = НЕ Результат.Пустой();

	Если Найден Тогда

		СписокСсылок = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");

		Клиент = СписокСсылок[0];
		
	Иначе 
		
		Клиент = Справочники.Контрагенты.ПустаяСсылка();
		
	КонецЕсли;
	
	ЗаполнениеРеквизитов();

КонецПроцедуры


&НаСервереБезКонтекста
Функция ОтправитьКодПодтвержденияSMSНаСервере(НомерТелефона, ИмяКлиентскогоКомпьютера, Контрагент)

	ДополнительныеПараметры = Новый Структура(
		"ИмяКомпьютера, Контрагент", ИмяКлиентскогоКомпьютера, Контрагент);
		
	СтруктураОтвета = Новый Структура(
		"КодОтправлен, ТекстОшибки, ОшибкаВНомере", Ложь, "", Ложь);
		
	НомерТелефонаКлиента = ОтправкаSMS.ПодготовитьНомерТелефона(НомерТелефона);
	
	Если СтрДлина(НомерТелефонаКлиента) = 12 Тогда
		
		ОтветОбОтправке = ВерификацияКлиентовСервер.ОтправитьКодПодтверждения(ОтправкаSMS.ПодготовитьНомерТелефона(НомерТелефона), ДополнительныеПараметры, Истина);
		
		Если ОтветОбОтправке Тогда
			
			СтруктураОтвета.КодОтправлен = Истина;
			
		Иначе
			
			СтруктураОтвета.ТекстОшибки = "Ошибка в отправке";
			
		КонецЕсли;
		 
	Иначе
		
		СтруктураОтвета.ТекстОшибки = "Неверный номер";
		СтруктураОтвета.ОшибкаВНомере = Истина;
		
	КонецЕсли;
		

	Возврат СтруктураОтвета;

КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;
	
	РазрешитьПросмотр = УправлениеПользователями.ПолучитьБулевоЗначениеПраваПользователя(
						ПланыВидовХарактеристик.ПраваПользователей.РазрешитьПросмотрКонтрагента, 
						Ложь)
						ИЛИ Параметры.Свойство("ПросмотрВладельца");	//	LNK 05.08.2020 05:53:05

	Если НЕ(РольДоступна(Метаданные.Роли.АдминистраторСистемы)
		ИЛИ РольДоступна(Метаданные.Роли.ДобавлениеИзменениеИнформацииПоКонтрагентам)
		ИЛИ РазрешитьПросмотр = Истина) Тогда

		Отказ = Истина;	//	LNK 24.04.2020 06:37:04
		Возврат;

	КонецЕсли;

	ИспользоватьБонуснуюСистему = БонусныеБаллыПовтИсп.ИспользоватьБонуснуюСистему();	

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, Объект, "СтраницаДополнительныеРеквизиты");
	// Конец СтандартныеПодсистемы.Свойства
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация");
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

	Если НЕ ОбщегоНазначенияРТ.УпрощенныйВводДоступен() Тогда
		Элементы.ИНН.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;

	Элементы.КонтактнаяИнформацияПоле2.УстановитьДействие("ОкончаниеВводаТекста", "КонтактнаяИнформацияПоле2ПриИзменении"); 
	Элементы.КонтактнаяИнформацияПоле2.Заголовок = "Телефон особистий. !!! Введіть номер телефону у форматі 380ХХХХХХХХХ"; 
	Элементы.КонтактнаяИнформацияПоле3.Заголовок = "Телефон службовий. !!! Введіть номер телефону у форматі 380ХХХХХХХХХ"; 	
	Элементы.КонтактнаяИнформацияПоле3.УстановитьДействие("ОкончаниеВводаТекста", "КонтактнаяИнформацияПоле3ПриИзменении");

	ЗаполнитьФИО();
	КлючевыеАтрибутыКонтрагентовПрочитать();	//	LNK 02.12.2020 05:39:20
			
	УправлениеДоступностьюЭлементов(Объект, ЭтотОбъект);

	Если Параметры.Свойство("ТолькоПросмотр") И ТипЗнч(Параметры.ТолькоПросмотр) = Тип("Булево") Тогда

		ТолькоПросмотр = Параметры.ТолькоПросмотр;	//	LNK 05.08.2020 06:00:34

	КонецЕсли;

	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеЭлемента(Объект, СостояниеЭлемента, КартинкаСостоянияЭлемента);
	КомандаОбновитьСостояниеБонусногоСчетаНаСервере();

	Элементы.КомандаСброситьГраницуПоследовательности.Доступность = ТехническаяПоддержкаПовтИсп.ИсключительныйРежим();
	Элементы.КомандаУстановитьIDNпоКоду.Доступность = ТехническаяПоддержкаВызовСервера.ОтладочныйРежимРаботы();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если НЕ ПустаяСтрока(ИмяТекущейСтраницы) Тогда

		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы[ИмяТекущейСтраницы];

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	ИмяТекущейСтраницы = Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства

	Если ИмяСобытия = "ИзмененыКлючевыеАтрибутыКонтрагентов" Тогда

		Если Параметр = Объект.Ссылка Тогда

			КлючевыеАтрибутыКонтрагентовПрочитать();

		КонецЕсли;

	ИначеЕсли ИмяСобытия = "ЗАПИСЬ_ЭЛЕМЕНТА" И Параметр.Объект = Объект.Ссылка Тогда

		ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеЭлемента(Объект, СостояниеЭлемента, КартинкаСостоянияЭлемента);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.КодПоЕДРПОУ) И (Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент"))	Тогда

		Объект.КодПоЕДРПОУ = "";

	КонецЕсли;

	Если НЕ ПараметрыЗаписи.Свойство("ПроверкаПройдена") Тогда

		ПроверитьКорректностьНомераТелефона(Отказ, ПараметрыЗаписи);

	КонецЕсли;

	Если НЕ Отказ И Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") Тогда

		Если КонтактнаяИнформацияКлиентСервер.ЭтоПустоеНаименование(Объект.Наименование) Тогда

			Объект.НаименованиеПолное = "";
			Фамилия  = "";
			Имя      = "";
			Отчество = "";

		Иначе

			СтроковыеФункцииКлиентСервер.ПривестиНаименование(Фамилия, Истина, Истина);
			СтроковыеФункцииКлиентСервер.ПривестиНаименование(Имя, Истина, Истина);
			СтроковыеФункцииКлиентСервер.ПривестиНаименование(Отчество, Истина, Истина);

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте	//	LNK 25.02.2019 14:05:43
Процедура ПослеЗаписи(ПараметрыЗаписи)

	ОбщегоНазначенияРТКлиентСервер.ОбновитьСостояниеЭлемента(Объект, СостояниеЭлемента, КартинкаСостоянияЭлемента);
	ОповеститьОбИзменении(Объект.Ссылка);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если ЗначениеЗаполнено(Объект.ИННПлательщикаНДС) Тогда

		ВыборкаКонтрагент = ОбщегоНазначенияРТ.ИННУжеИспользуетсяВИнформационнойБазе(Объект.ИННПлательщикаНДС,Объект.Ссылка);

		Если НЕ ВыборкаКонтрагент = Неопределено Тогда

			Отказ = Истина;	//	LNK 30.01.2019 14:22:48
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Данные ИНН уже указаны для контрагента с кодом %1'"),ВыборкаКонтрагент.Код),
			,"Объект.ИННПлательщикаНДС",,);

		КонецЕсли;

	КонецЕсли;

	Если НЕ Отказ Тогда

		Если Объект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда

			ТекущийОбъект.ДополнительныеСвойства.Вставить("ФИО"
				, Новый Структура(
					"Фамилия, Имя, Отчество"
					, Фамилия, Имя, Отчество
				)
			);

		КонецЕсли;

		Если Объект.Покупатель Тогда

			ТекущийОбъект.ДополнительныеСвойства.Вставить("ПрисвоитьВиртуальнуюКарту", Истина);

		КонецЕсли;

	КонецЕсли;

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ Объект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда

		Индекс = ПроверяемыеРеквизиты.Найти("Фамилия");

		Если НЕ Индекс = Неопределено Тогда

			ПроверяемыеРеквизиты.Удалить(Индекс);

		КонецЕсли;

	КонецЕсли;

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	

	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

КонецПроцедуры

#КонецОбласти

&НаКлиенте	//	LNK 30.07.2019 06:45:47
Процедура ДетиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НЕ Элемент.ТекущиеДанные = Неопределено Тогда

		Если НоваяСтрока И Копирование Тогда

			Элемент.ТекущиеДанные.УникальныйИдентификатор = "";

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#Область КлючевыеАтрибутыКонтрагентов

&НаСервере
Процедура КлючевыеАтрибутыКонтрагентовПрочитать()

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаРегистра.ID КАК ID,
	|	ТаблицаРегистра.Фамилия КАК Фамилия,
	|	ТаблицаРегистра.Имя КАК Имя,
	|	ТаблицаРегистра.Отчество КАК Отчество,
	|	ТаблицаРегистра.КодПоЕДРПОУ КАК КодПоЕДРПОУ,
	|	ТаблицаРегистра.ДатаСоздания КАК ДатаСоздания,
	|	ТаблицаРегистра.Язык КАК Язык,
	|	ТаблицаРегистра.Период КАК Период
	|ИЗ
	|	РегистрСведений.КлючевыеАтрибутыКонтрагентов.СрезПоследних КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.Объект = &ТекущаяСсылка
	|	И ТаблицаРегистра.УчетнаяСистема = ЗНАЧЕНИЕ(Перечисление.УчетныеСистемыКомпании.Magento)"
	);
	Запрос.УстановитьПараметр("ТекущаяСсылка", Объект.Ссылка);
	
	Результат = Запрос.Выполнить();

	Если НЕ Результат.Пустой() Тогда

		Выборка = Результат.Выбрать();
		Выборка.Следующий();

		СайтID = Выборка.ID;
		СайтФамилия = Выборка.Фамилия;
		СайтИмя = Выборка.Имя;
		СайтОтчество = Выборка.Отчество;
		СайтКодПоЕДРПОУ = Выборка.КодПоЕДРПОУ;
		СайтДатаСоздания = Выборка.ДатаСоздания;
		СайтЯзык = Выборка.Язык;
		СайтПериод = Выборка.Период;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПроверкаКорректностиНомераТелефонаИРазрешениеЗаписи

&НаКлиенте	//	LNK 15.06.2018 10:50:47
Процедура ПроверитьКорректностьНомераТелефона(Отказ, ПараметрыЗаписи)

	Перем ПредставлениеНомера;

	СтрокиТелефон = ЭтотОбъект["КонтактнаяИнформацияОписаниеДополнительныхРеквизитов"].НайтиСтроки(Новый Структура("Тип", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон")));

	Если НЕ СтрокиТелефон.Количество() = 0 Тогда

		Для каждого СтрокаКонтакта Из СтрокиТелефон Цикл

			Если ПустаяСтрока(СтрокаКонтакта.Представление) Тогда

				Продолжить;

			КонецЕсли;

			ПроверитьКорректностьНомераТелефонаНаСервере(Отказ, Новый Структура("ЗначенияПолей, Представление", СтрокаКонтакта.ЗначенияПолей, СтрокаКонтакта.Представление), ПредставлениеНомера);

			Если Отказ Тогда

				ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьКорректностьНомераТелефонаЗавершение", ЭтотОбъект, ПараметрыЗаписи);
				ПоказатьВопрос(ОписаниеОповещения
					, "Номер телефона «" + ПредставлениеНомера + "» нуждается в корректном указании
					  |(используйте детализацию ввода номера в специальном диалоге)
					  |Желаете исправить ошибочные данные?"
					, РежимДиалогаВопрос.ДаНет, 30, КодВозвратаДиалога.Да, "Контроль номеров телефонов"
				);

				Прервать;

			КонецЕсли;

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте	//	LNK 15.06.2018 11:21:45
Процедура ПроверитьКорректностьНомераТелефонаЗавершение(КодВозврата, ДополнительныеПараметры)	Экспорт

	Если КодВозврата = КодВозвратаДиалога.Нет Тогда

		ДополнительныеПараметры.Вставить("ПроверкаПройдена");
		Записать(ДополнительныеПараметры);

	КонецЕсли;

КонецПроцедуры

&НаСервере	//	LNK 15.06.2018 12:24:47
Функция ПроверитьКорректностьНомераТелефонаНаСервере(Отказ, ДанныеСтроки, ПредставлениеНомера)

	ДанныеТелефона = КонтактнаяИнформацияСлужебный.ДесериализацияТелефона(
		ДанныеСтроки.ЗначенияПолей, ДанныеСтроки.Представление, Перечисления.ТипыКонтактнойИнформации.Телефон);

	Если ПустаяСтрока(ДанныеТелефона.Состав.Номер) ИЛИ ПустаяСтрока(ДанныеТелефона.Состав.КодСтраны) ИЛИ ПустаяСтрока(ДанныеТелефона.Состав.КодГорода) Тогда

		ПредставлениеНомера = СокрЛП(ДанныеТелефона.Состав.КодСтраны) + СокрЛП(ДанныеТелефона.Состав.КодГорода) + СокрЛП(ДанныеТелефона.Состав.Номер);
		Отказ = Истина;

	КонецЕсли;

	Возврат НЕ Отказ;

КонецФункции

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ЮрФизЛицоПриИзменении(Элемент)
	
	Если НЕ МожетБытьПлательщикомНДС(Объект.ЮрФизЛицо) Тогда

		Объект.ПлательщикНДС = Ложь;
		Объект.ИННПлательщикаНДС = "";
		Объект.НомерСвидетельстваПлательщикаНДС = "";

	Иначе

		Объект.Наименование       = "";
		Объект.НаименованиеПолное = "";
		Фамилия  = "";
		Имя      = "";
		Отчество = "";

	КонецЕсли; 
	
	ЗаполнитьФИО();

	УправлениеДоступностьюЭлементов(Объект, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте	//	LNK 07.08.2018 10:58:41
Процедура ПокупательПриИзменении(Элемент)

	УправлениеДоступностьюЭлементов(Объект, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте	//	LNK 07.08.2018 10:58:57
Процедура ПоставщикПриИзменении(Элемент)

	УправлениеДоступностьюЭлементов(Объект, ЭтотОбъект);

КонецПроцедуры

//	LNK 22.05.2017 11:49:21
&НаКлиенте
Процедура ПолПриИзменении(Элемент)

	УправлениеДоступностьюЭлементов(Объект, ЭтотОбъект);

КонецПроцедуры


&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ОткрытьФормуРедактированияКомментария(Элемент.ТекстРедактирования, Объект.Комментарий, Модифицированность);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлательщикНДСПриИзменении(Элемент)
	
	УправлениеДоступностьюЭлементов(Объект, ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаСервере
Процедура КомандаОбновитьСостояниеБонусногоСчетаНаСервере()

	Если ИспользоватьБонуснуюСистему Тогда

		ПараметрыЗапроса = Новый Структура(
			"ТипыБонусов, ТолькоТекущийОстаток, Команда"
			, ОбщегоНазначенияКлиентСервер.AAD(Перечисления.ТипыБонусов.Привлечение, Перечисления.ТипыБонусов.Органический, Перечисления.ТипыБонусов.Акционный)
			, Истина
			, "ОбщееСостояниеСчёта"
		);

		ДанныеОтвета = БонусныеБаллыСервер.BPS_ПолучитьОстатокБонусныхБаллов(Объект.Ссылка, ПараметрыЗапроса);

		Если ДанныеОтвета.Ошибка = Истина ИЛИ НЕ ДанныеОтвета.Свойство("ДанныеСчёта") Тогда
			
			ББ_ПериодРасчета = '00010101';

			СуммаБонусныхБаллов 					= 0;
			СуммаБонусныхБалловВРезерве 			= 0;
			СуммаБонусныхБалловАкционных 			= 0;
			СуммаБонусныхБалловВРезервеАкционных 	= 0;

			ББ_ПоследовательностьВПорядке	= Ложь;
			ББ_СостояниеПоследовательности	= ?(ДанныеОтвета.Ошибка = Истина
				, ДанныеОтвета.ОписаниеОшибки
				, "в ответе сервера нет информации о состоянии бонусного счёта ([ДанныеСчёта])"
			);

		Иначе

			ББ_ПериодРасчета = ДанныеОтвета.ДанныеСчёта.Период;

			СуммаБонусныхБаллов 					= ДанныеОтвета.ДанныеСчёта.СуммаБонусныхБаллов;
			СуммаБонусныхБалловВРезерве 			= ДанныеОтвета.ДанныеСчёта.СуммаБонусныхБалловВРезерве;
			СуммаБонусныхБалловАкционных 			= ДанныеОтвета.ДанныеСчёта.СуммаБонусныхБалловАкционных;
			СуммаБонусныхБалловВРезервеАкционных 	= ДанныеОтвета.ДанныеСчёта.СуммаБонусныхБалловВРезервеАкционных;

			ББ_ПоследовательностьВПорядке = (ДанныеОтвета.ДанныеСчёта.Регистратор_П = ДанныеОтвета.ДанныеСчёта.Регистратор_ГП);

			Если ББ_ПоследовательностьВПорядке Тогда

					ББ_СостояниеПоследовательности = "Последовательность списания бонусных баллов восстановлена!";

			Иначе	ББ_СостояниеПоследовательности = "Проблема! Последовательность списания бонусных баллов нарушена и не восстановлена!";

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьСостояниеБонусногоСчета(Команда)

	КомандаОбновитьСостояниеБонусногоСчетаНаСервере();

КонецПроцедуры

&НаСервере	//	LNK 08.12.2021 06:56:24
Процедура КомандаВосстановитьПоследовательностьНаСервере()

	Если ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		ПараметрыЗадания = Новый Массив;
		ПараметрыЗадания.Добавить(Объект.Ссылка);
		ПараметрыЗадания.Добавить(Истина);
		ПараметрыЗадания.Добавить(Истина);
		ПараметрыЗадания.Добавить(Истина);

		ФоновыеЗадания.Выполнить("БонусныеБаллыПоследовательность.ВыполнитьВосстановлениеПоследовательности", ПараметрыЗадания, Объект.Код);
	//	БонусныеБаллыПоследовательность.ВыполнитьВосстановлениеПоследовательности(Объект.Ссылка, Истина, Истина, Истина);

	Иначе

		БонусныеБаллыСервер.BPS_АвторизацияКонтрагента(Объект.Ссылка, Новый Структура);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте	//	LNK 08.12.2021 06:56:24
Процедура КомандаВосстановитьПоследовательность(Команда)

	КомандаВосстановитьПоследовательностьНаСервере();

КонецПроцедуры

&НаСервереБезКонтекста	//	LNK 06.11.2022 06:40:18
Функция КомандаСброситьГраницуПоследовательностиНаСервере(Контрагент)

	Выполнено = Ложь;

	Если НЕ Контрагент.Пустая() Тогда

		Выполнено = БонусныеБаллыПоследовательность.СброситьГраницуВНачалоПоследовательности(Контрагент);

	КонецЕсли;

	Возврат Выполнено;

КонецФункции

&НаКлиенте	//	LNK 06.11.2022 06:40:14
Процедура КомандаСброситьГраницуПоследовательности(Команда)

	Если КомандаСброситьГраницуПоследовательностиНаСервере(Объект.Ссылка) Тогда

		ПоказатьОповещениеПользователя(
			  "МП скинута на початок!"
			,
			, "Межа перенесена на перший документ у послідовності."
			, БиблиотекаКартинок.Информация32
		);

	Иначе

		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда

			ПоказатьОповещениеПользователя(
				  "Відмовлено!"
				,
				, "Документів у послідовності не виявлено."
				, БиблиотекаКартинок.Предупреждение32
			);

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//Отвечает за доступность элементов форм
//
&НаКлиентеНаСервереБезКонтекста	//	LNK 17.09.2020 08:13:48
Процедура УправлениеДоступностьюЭлементов(Объект, ЭтотОбъект)

	Если Объект.ЮрФизЛицо =  ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") 
		ИЛИ Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент") Тогда
		
		ЭтотОбъект.Элементы.ГруппаЮрФизЛицо.ТекущаяСтраница = ЭтотОбъект.Элементы.ЮрЛицо;
		
	Иначе	
		
		ЭтотОбъект.Элементы.ГруппаЮрФизЛицо.ТекущаяСтраница = ЭтотОбъект.Элементы.ГруппаФизЛицо;
		
	КонецЕсли;	
	
	ЭтотОбъект.Элементы.СтраницаБонусныйСчет.Видимость = ЭтотОбъект.ИспользоватьБонуснуюСистему;

	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "ПлательщикНДС"      , "Доступность", МожетБытьПлательщикомНДС(Объект.ЮрФизЛицо));
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "ГруппаПлательщикНДС", "Доступность", Объект.ПлательщикНДС);
//	LNK 17.08.2016
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "ГруппаДанныеФизЛица", "Видимость"  , Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо"));
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, "СтраницаДети"       , "Видимость"  , Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо"));

//	---------------------------------------------------------------------------------------

	Если ЭтотОбъект.Свойства_ИспользоватьДопРеквизиты Тогда

		СписокИмён = Новый Массив;
		СписокИмён.Добавить("ИмяРеквизитаЗначение");
		СписокИмён.Добавить("ИмяРеквизитаСвойство");

		Для каждого СтрокаОписания Из ЭтотОбъект.Свойства_ОписаниеДополнительныхРеквизитов Цикл

			Если СтрокаОписания.Свойство = ПредопределенноеЗначение("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.СрокБеременности") Тогда

				Для каждого ИмяСведений Из СписокИмён Цикл

					Если НЕ ПустаяСтрока(СтрокаОписания[ИмяСведений]) Тогда

						ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, СтрокаОписания[ИмяСведений], "Видимость"
							, Объект.Пол = ПредопределенноеЗначение("Перечисление.ПолФизическогоЛица.Женский") И Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо"));

					КонецЕсли;

				КонецЦикла;

			КонецЕсли;

		КонецЦикла;

	КонецЕсли;
	
	#Если Клиент ИЛИ ТонкийКлиент ИЛИ ВебКлиент Тогда
	ЭтотОбъект.ОтключитьОтметкуНезаполненного();
	#КонецЕсли
	
КонецПроцедуры

// Параметры:
//  ЮрФизЛицо - ПеречислениеСсылка.ЮрФизЛицо - Ссылка на значение перечесления, для которого необходимопроверить, 
//                               может ли оно быть плательщиком НДС
// Возвращаемое значение: Булево 
&НаКлиентеНаСервереБезКонтекста
Функция МожетБытьПлательщикомНДС(ЮрФизЛицо)

	 Возврат НЕ (ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") ИЛИ ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицоНеРезидент"));

КонецФункции // МожетБытьПлательщикомНДС()

// СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	ОбновитьКонтактнуюИнформацию(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеОчистка(ЭтотОбъект, Элемент.Имя);
	ОбновитьКонтактнуюИнформацию(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПодключаемаяКоманда(ЭтотОбъект, Команда.Имя);
	ОбновитьКонтактнуюИнформацию(Результат);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуВводаАдреса(ЭтотОбъект, Результат);
	
КонецПроцедуры

&НаСервере
Функция ОбновитьКонтактнуюИнформацию(Результат = Неопределено)
	
	Возврат УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	
КонецФункции

// Конец СтандартныеПодсистемы.КонтактнаяИнформация


// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПоле2ПриИзменении(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	//Если Элемент.ТекстРедактирования <>"" тогда	
	//	Если Лев(Элемент.ТекстРедактирования,4) <> "+380" или  СтрДлина(Элемент.ТекстРедактирования) <> 13 тогда
	//		Сообщить("Вы ввели номер в неправильном формате. Вводите номер телефона в формате +380ХХХХХХХХХ");
	//		КонтактнаяИнформацияПоле2 = ЭтотОбъект.КонтактнаяИнформацияПоле2;
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПоле3ПриИзменении(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	//Если Элемент.ТекстРедактирования <> "" тогда	
	//	Если  Лев(Элемент.ТекстРедактирования,4) <> "+380" или  СтрДлина(Элемент.ТекстРедактирования) <> 13 тогда
	//		Сообщить("Вы ввели номер в неправильном формате. Вводите номер телефона в формате +380ХХХХХХХХХ");
	//		КонтактнаяИнформацияПоле2 = ЭтотОбъект.КонтактнаяИнформацияПоле2;
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

//	LNK 09.10.2017 12:30:50
&НаСервере
Процедура ЗаполнитьФИО()

	Если Объект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда

		Если КонтактнаяИнформацияКлиентСервер.ЭтоПустоеНаименование(Объект.Наименование) Тогда

			Объект.НаименованиеПолное = "";
			Фамилия  = "";
			Имя      = "";
			Отчество = "";

		Иначе

			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ТаблицаРегистра.Фамилия КАК Фамилия,
			|	ТаблицаРегистра.Имя КАК Имя,
			|	ТаблицаРегистра.Отчество КАК Отчество
			|ИЗ
			|	РегистрСведений.ФИОФизЛиц.СрезПоследних(, ФизЛицо ССЫЛКА Справочник.Контрагенты) КАК ТаблицаРегистра
			|ГДЕ
			|	ТаблицаРегистра.ФизЛицо = &ФизЛицо"
			);
			Запрос.УстановитьПараметр("ФизЛицо", Объект.Ссылка);

			Выборка = Запрос.Выполнить().Выбрать();

			Если Выборка.Следующий() Тогда

				Фамилия  = Выборка.Фамилия;
				Имя      = Выборка.Имя;
				Отчество = Выборка.Отчество;

			Иначе

				СоставНаименования = ОбщегоНазначенияКлиентСервер.lx_FillValueList(, СокрЛП(Объект.Наименование),, " ", 3,, Новый ОписаниеТипов("Строка"));

				Фамилия  = СоставНаименования[0];
				Имя      = СоставНаименования[1];
				Отчество = СоставНаименования[2];

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте	//	LNK 28.02.2019 06:53:58
Процедура НаименованиеПриИзменении(Элемент)

	Если КонтактнаяИнформацияКлиентСервер.ЭтоПустоеНаименование(Объект.Наименование) Тогда

		Объект.НаименованиеПолное = "";
		Фамилия  = "";
		Имя      = "";
		Отчество = "";

	КонецЕсли;

КонецПроцедуры

&НаКлиенте	//	LNK 09.10.2017 12:44:05
Процедура ФамилияПриИзменении(Элемент)

	СтроковыеФункцииКлиентСервер.ПривестиНаименование(Фамилия, Истина, Истина);
	АвтоНаименованиеФизЛица();

КонецПроцедуры

&НаКлиенте	//	LNK 09.10.2017 12:44:05
Процедура ИмяПриИзменении(Элемент)

	СтроковыеФункцииКлиентСервер.ПривестиНаименование(Имя, Истина, Истина);

	Если НЕ ПроверитьИмяФизЛица(Имя, Объект.Пол) Тогда

		Сообщить("Очищено! Имя «" + Имя + "» НЕ найдено в справочнике имён людей.");
		Имя = "";

	КонецЕсли;

	АвтоНаименованиеФизЛица();

КонецПроцедуры

&НаКлиенте	//	LNK 09.10.2017 12:44:05
Процедура ОтчествоПриИзменении(Элемент)

	СтроковыеФункцииКлиентСервер.ПривестиНаименование(Отчество, Истина, Истина);
	АвтоНаименованиеФизЛица();

КонецПроцедуры

&НаКлиенте	//	LNK 07.06.2019 11:28:40
Процедура ДетиИмяПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Дети.ТекущиеДанные;

	Если НЕ ТекущиеДанные = Неопределено Тогда
		
		СтроковыеФункцииКлиентСервер.ПривестиНаименование(ТекущиеДанные.Имя, Истина, Истина);

		Если НЕ ПроверитьИмяФизЛица(ТекущиеДанные.Имя, ТекущиеДанные.Пол,Истина) Тогда
			
			//А++ 20250116 по задаче  https://awdev.atlassian.net/browse/RETAIL1C-1055
			//Сообщить("Очищено! Имя «" + ТекущиеДанные.Имя + "» НЕ найдено в справочнике имён людей.");
			//ТекущиеДанные.Имя = "";
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Имя «%1» НЕ найдено в справочнике имён людей.'; uk = 'Ім''я %1 не знайдено у довіднику імен людей.'"),
							ТекущиеДанные.Имя);
			Сообщить(ТекстСообщения);
			//А++ 20250116 по задаче  https://awdev.atlassian.net/browse/RETAIL1C-1055

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте	//	LNK 07.06.2019 11:28:40
Процедура ДетиОтчествоПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Дети.ТекущиеДанные;

	Если НЕ ТекущиеДанные = Неопределено Тогда

		СтроковыеФункцииКлиентСервер.ПривестиНаименование(ТекущиеДанные.Отчество, Истина, Истина);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте	//	LNK 07.06.2019 11:28:40
Процедура ДетиФамилияПриИзменении(Элемент)

	ТекущиеДанные = Элементы.Дети.ТекущиеДанные;

	Если НЕ ТекущиеДанные = Неопределено Тогда

		СтроковыеФункцииКлиентСервер.ПривестиНаименование(ТекущиеДанные.Фамилия, Истина, Истина);

	КонецЕсли;

КонецПроцедуры

//А++ 20250116 по задаче  https://awdev.atlassian.net/browse/RETAIL1C-1055//&НаСервереБезКонтекста	//	LNK 08.02.2019 09:47:25
&НаСервере	//	LNK 08.02.2019 09:47:25
Функция ПроверитьИмяФизЛица(Имя, Пол,ИмяРебенка = ЛОЖЬ)
	Если Параметры.Ключ.Пустая() Тогда
		Возврат Справочники.ИменаЛюдей.ИмяКорректно(Имя, Пол,,Истина);
	Иначе
		Возврат Справочники.ИменаЛюдей.ИмяКорректно(Имя, Пол, Объект.Ссылка,Истина);
	КонецЕсли;
КонецФункции

&НаКлиенте	//	LNK 09.10.2017 12:44:05
Процедура АвтоНаименованиеФизЛица()

//	Выполним минимальную нормализацию наименования..
	Объект.Наименование = СтроковыеФункцииКлиентСервер.ПривестиНаименование(Фамилия + " " + Имя + " " + Отчество, Ложь, Истина);

КонецПроцедуры

&НаКлиенте	//	LNK 12.06.2019 13:12:58
Процедура ДетиИмяАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)

	Если НЕ ПустаяСтрока(Текст) И НЕ Элементы.Дети.ТекущиеДанные = Неопределено Тогда

		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ПолучитьДанныеВыбораИмени(Текст, Элементы.Дети.ТекущиеДанные.Пол);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте	//	LNK 12.06.2019 13:21:18
Процедура ИмяАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)

	Если НЕ ПустаяСтрока(Текст) И Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо") Тогда

		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ПолучитьДанныеВыбораИмени(Текст, Объект.Пол);

	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста	//	LNK 12.06.2019 13:15:50
Функция ПолучитьДанныеВыбораИмени(Текст, Пол)

	Возврат Справочники.ИменаЛюдей.ПолучитьДанныеВыбораИмени(Текст, Пол);

КонецФункции

&НаКлиенте	//	LNK 13.04.2023 05:56:43
Процедура КомандаУстановитьIDNпоКоду(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаУстановитьIDNпоКодуЗавершение", ЭтотОбъект);

	ПоказатьВопрос(ОписаниеОповещения
		, "Буде виконано скидання коду синхронізації (IDN)!
		  |Ви впевнені у необхідності цього впливу?"
		, РежимДиалогаВопрос.ОКОтмена
		, 30
		, КодВозвратаДиалога.ОК
		, "Встановлення IDN згідно коду"
		, КодВозвратаДиалога.Отмена
	);

КонецПроцедуры

&НаКлиенте	//	LNK 13.04.2023 06:05:54
Процедура КомандаУстановитьIDNпоКодуЗавершение(КодВозврата, ДополнительныеПараметры)	Экспорт

	Если КодВозврата = КодВозвратаДиалога.ОК Тогда

		Объект.IDN = Объект.Код;
		Модифицированность = Истина;

		ПоказатьОповещениеПользователя("IDN змінено!",
			, "IDN встановлено згідно коду. Необхідно виконати запис контрагенту!"
			, БиблиотекаКартинок.Информация32
		);

	Иначе

		ПоказатьОповещениеПользователя("Дію не виконано!",
			, "Вплив не підтверджено користувачем."
			, БиблиотекаКартинок.Предупреждение32
		);

	КонецЕсли;

КонецПроцедуры
















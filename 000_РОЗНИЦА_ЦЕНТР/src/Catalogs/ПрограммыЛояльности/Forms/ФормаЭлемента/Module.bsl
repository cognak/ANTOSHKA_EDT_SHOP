#Область ОбработчикиСобытий

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)


КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	ПриСозданииЧтенииНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.

		Возврат;

	КонецЕсли;

	ПриСозданииЧтенииНаСервере();

КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура СпособПримененияСкидкиПриИзменении(Элемент)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура НачислятьБаллыНаАкционныйТоварПриИзменении(Элемент)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура НачислятьБаллыПоКредитнойПрограммеПриИзменении(Элемент)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура СовместноеНачислениеСкидокИБонусовПриИзменении(Элемент)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

#Область ПериодыДействия

&НаКлиенте
Процедура ИспользоватьПериодДействияПриИзменении(Элемент)

	УстановитьОформлениеЭлементов();

	Объект.КоличествоПериодовДействия = ИспользоватьПериодДействия;

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтсрочкуНачалаДействияПриИзменении(Элемент)

	УстановитьОформлениеЭлементов();

	Объект.КоличествоПериодовОтсрочкиНачалаДействия = ИспользоватьОтсрочкуНачалаДействия;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиНоменклатураПредоставления

&НаКлиенте
Процедура НоменклатураПредоставленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ТекущиеДанные = Элемент.ТекущиеДанные;

	Если НЕ ТекущиеДанные = Неопределено И Поле = Элементы.НоменклатураПредоставленияКнопкаExcel Тогда

		СтандартнаяОбработка = Ложь;
		ВыборКомандыЗагрузкиСегментаНоменклатуры(ТекущиеДанные);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПредоставленияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НоваяСтрока И НЕ Копирование И НЕ Элемент.ТекущиеДанные = Неопределено Тогда

		Элемент.ТекущиеДанные.Номенклатура = ПредопределенноеЗначение("Справочник.СегментыНоменклатуры.ПустаяСсылка");
		НазначитьКолонкеИндексКартинки(Элемент.ТекущиеДанные);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПредоставленияНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	НоменклатураНачалоВыбора(Элемент, Элементы.НоменклатураПредоставления.ТекущиеДанные.Номенклатура, ДанныеВыбора, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПредоставленияНоменклатураПриИзменении(Элемент)

	НазначитьКолонкеИндексКартинки(Элементы.НоменклатураПредоставления.ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПредоставленияНоменклатураОчистка(Элемент, СтандартнаяОбработка)

	НазначитьКолонкеИндексКартинки(Элементы.НоменклатураПредоставления.ТекущиеДанные);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()

	ИспользоватьПериодДействия         = ?(Объект.КоличествоПериодовДействия > 0, 1, 0);
	ИспользоватьОтсрочкуНачалаДействия = ?(Объект.КоличествоПериодовОтсрочкиНачалаДействия > 0, 1, 0);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОформлениеЭлементов()

	НачислитьБонусныеБаллы = (Объект.СпособПримененияСкидки = ПредопределенноеЗначение("Перечисление.СпособыПримененияСкидокНаценок.НачислитьБонусныеБаллы"));

	Элементы.ГруппаБонуснаяСистема.Видимость = НачислитьБонусныеБаллы;

	Если НачислитьБонусныеБаллы Тогда

		Элементы.НачислятьБаллыНаАкционныйТовар.ШрифтЗаголовка     = Новый Шрифт(,, Объект.НачислятьБаллыНаАкционныйТовар);
		Элементы.НачислятьБаллыПоКредитнойПрограмме.ШрифтЗаголовка = Новый Шрифт(,, Объект.НачислятьБаллыПоКредитнойПрограмме);
		Элементы.СовместноеНачислениеСкидокИБонусов.ШрифтЗаголовка = Новый Шрифт(,, Объект.СовместноеНачислениеСкидокИБонусов);

		Элементы.ГруппаСрокДействияПраво.Доступность = (ИспользоватьПериодДействия = 1);
		Элементы.ГруппаОтсрочкаПраво.Доступность     = (ИспользоватьОтсрочкуНачалаДействия = 1);

		Для каждого ТекущиеДанные Из Объект.НоменклатураПредоставления Цикл

			НазначитьКолонкеИндексКартинки(ТекущиеДанные);

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НазначитьКолонкеИндексКартинки(ТекущиеДанные)

	Если НЕ ТекущиеДанные = Неопределено Тогда

		ТекущиеДанные.КнопкаExcel = ?(ЗначениеЗаполнено(ТекущиеДанные.Номенклатура), ?(ТипЗнч(ТекущиеДанные.Номенклатура) = Тип("СправочникСсылка.СегментыНоменклатуры"), 8, 16), 0);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, Значение, ДанныеВыбора, СтандартнаяОбработка)

	Если НЕ Значение = Неопределено Тогда

		СтандартнаяОбработка = Ложь;

		ОтборПоСпособу = Новый СписокЗначений;
		ОтборПоСпособу.Добавить(ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьВручную"), ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьВручную"));
		ОтборПоСпособу.Добавить(ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьДинамически"), ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьДинамически"));

		ПараметрыФормыВыбора = Новый Структура;
		ПараметрыФормыВыбора.Вставить("ТекущийЭлемент"    , Значение);
		ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна" , РежимОткрытияОкнаФормы.Независимый);
		ПараметрыФормыВыбора.Вставить("РежимВыбора"       , Истина);
		ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
		ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Ложь);
		ПараметрыФормыВыбора.Вставить("Отбор"             , Новый Структура("СпособФормирования, ПометкаУдаления", ОтборПоСпособу, Ложь));

		ОткрытьФорму("Справочник." + ?(ТипЗнч(Значение) = Тип("СправочникСсылка.СегментыНоменклатуры"), "СегментыНоменклатуры", "Номенклатура") + ".ФормаВыбора", ПараметрыФормыВыбора, Элемент);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПроцедурыЗагрузкиСоставаСегментаИзТаблицыExcel

&НаКлиенте
Процедура ВыборКомандыЗагрузкиСегментаНоменклатуры(ТекущиеДанные)

	СегментНоменклатуры = ТекущиеДанные.Номенклатура;

	Если ЗначениеЗаполнено(СегментНоменклатуры) И ТипЗнч(СегментНоменклатуры) = Тип("СправочникСсылка.СегментыНоменклатуры") Тогда

		ДополнительныеПараметры = Новый Структура(
			"СегментНоменклатуры, ФайлВыбран", СегментНоменклатуры, Ложь);

		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВыборКомандыЗагрузкиСегментаНоменклатурыЗавершение", ЭтотОбъект, ДополнительныеПараметры);

		ПоказатьВопрос(ОписаниеОповещения
		, "Сегмент «" + СегментНоменклатуры + "» будет загружен из указанного Вами файла.
		  |Текущий состав сегмента перед загрузкой очищается!
		  |Подтвердите своё решение:", РежимДиалогаВопрос.ОКОтмена, 60, КодВозвратаДиалога.ОК
		, "Загрузка сегмента из таблицы «Excel»", КодВозвратаДиалога.Отмена);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыборКомандыЗагрузкиСегментаНоменклатурыЗавершение(КодВозврата, ДополнительныеПараметры)	Экспорт

	Если НЕ КодВозврата = КодВозвратаДиалога.ОК Тогда

		Возврат;

	КонецЕсли;

	Если ДополнительныеПараметры.ФайлВыбран = Ложь Тогда

		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ДиалогВыбораФайлаExcelЗавершение", ЭтотОбъект, ДополнительныеПараметры);

		ДиалогВыбораФайла  = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогВыбораФайла.Заголовок = "Выберите файл книги Excel";
		ДиалогВыбораФайла.Фильтр = НСтр("ru = 'Лист Excel'") + " (*.xls)|*.xls|" + НСтр("ru = 'Лист Excel2007'") + " (*.xlsx)|*.xlsx";
		ДиалогВыбораФайла.ПолноеИмяФайла = ПолноеИмяИмпортируемогоФайла;
		ДиалогВыбораФайла.МножественныйВыбор = Ложь;
		ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;

		ДиалогВыбораФайла.Показать(ОписаниеОповещения);

	ИначеЕсли ДополнительныеПараметры.ФайлВыбран = Истина Тогда

		ФайлЗагрузки = Новый Файл(ДополнительныеПараметры.ПолноеИмяИмпортируемогоФайла);

		Если НЕ ФайлЗагрузки.Существует() Тогда

			ПоказатьОповещениеПользователя("Загрузка невозможна",, "Указанный файл не обнаружен - укажите существующий файл!", БиблиотекаКартинок.Вопрос32);

		Иначе

			ПолноеИмяИмпортируемогоФайла = ДополнительныеПараметры.ПолноеИмяИмпортируемогоФайла;	//	запомним на следующую загрузку

			ПоказатьОповещениеПользователя("Загрузка данных из файла ...",, "Выполняется загрузка «" + ПолноеИмяИмпортируемогоФайла + "»", БиблиотекаКартинок.Предупреждение32);

			АдресВХранилище = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПолноеИмяИмпортируемогоФайла), УникальныйИдентификатор);
			ЗагрузитьСоставСегментаИзТаблицыExcel(ДополнительныеПараметры.СегментНоменклатуры, АдресВХранилище, ФайлЗагрузки.Расширение);

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораФайлаExcelЗавершение(СписокФайлов, ДополнительныеПараметры)	Экспорт

	Если ТипЗнч(СписокФайлов) = Тип("Массив") И НЕ СписокФайлов.Количество() = 0 Тогда

		ДополнительныеПараметры.ФайлВыбран = Истина;
		ДополнительныеПараметры.Вставить("ПолноеИмяИмпортируемогоФайла", СписокФайлов[0]);

		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВыборКомандыЗагрузкиСегментаНоменклатурыЗавершение", ЭтотОбъект, ДополнительныеПараметры);

		ПоказатьВопрос(ОписаниеОповещения
		, "Ещё раз нужно подтвердить - сегмент «" + ДополнительныеПараметры.СегментНоменклатуры + "» будет загружен из файла
		  |«" + ДополнительныеПараметры.ПолноеИмяИмпортируемогоФайла + "».
		  |ТЕКУЩИЙ СОСТАВ СЕГМЕНТА ПЕРЕД ЗАГРУЗКОЙ ОЧИЩАЕТСЯ!
		  |Подтвердите своё решение:", РежимДиалогаВопрос.ОКОтмена, 60, КодВозвратаДиалога.ОК
		, "Загрузка сегмента из таблицы «Excel»", КодВозвратаДиалога.Отмена);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСоставСегментаИзТаблицыExcel(СегментНоменклатуры, АдресВХранилище, РасширениеИмени)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаСправочник
	|ГДЕ
	|	ТаблицаСправочник.Ссылка В(&СписокТоваров)
	|	И НЕ ТаблицаСправочник.ЭтоГруппа"
	);
	Запрос.УстановитьПараметр("СписокТоваров", ЗаполнениеОбъектов.ЗагрузитьДанныеВМассивИзТаблицыExcel(АдресВХранилище, РасширениеИмени, Истина));
	
	СегментыСервер.СформироватьНоменклатуруСегмента(СегментНоменклатуры,, Запрос.Выполнить().Выгрузить());

КонецПроцедуры

#КонецОбласти















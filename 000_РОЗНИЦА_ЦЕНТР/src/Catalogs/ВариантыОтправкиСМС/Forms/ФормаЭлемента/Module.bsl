///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		
		СКД = Объект.Ссылка.СхемаКомпоновкиДанных.Получить();   
		
	Иначе
		
		Если Параметры.ЗначениеКопирования.Пустая() Тогда 
			
			СКД = Справочники.ВариантыОтправкиСМС.ПолучитьМакет("ОсновнаяСхема");
			
		Иначе 
			
			СКД = Параметры.ЗначениеКопирования.СхемаКомпоновкиДанных.Получить(); 
			
		КонецЕсли;
		
	КонецЕсли; 
	
	АдресСКД = ПоместитьВоВременноеХранилище(СКД, Новый УникальныйИдентификатор);

	УстановитьДоступностьЭлементов();

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.СхемаКомпоновкиДанных =
		Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСКД));
	
КонецПроцедуры

//&НаСервере	//	LNK 25.06.2022 06:58:13
//Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

//	Если НастройкиИзменены Тогда

//		ФиксироватьСобытиеИзмененияСКД(ТекущийОбъект);

//	КонецЕсли;

//	НастройкиИзменены = Ложь;

//КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);

	УстановитьДоступностьЭлементов();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ОткрытьФормуРедактированияМногострочногоТекста(Элемент.ТекстРедактирования , Объект.Описание, Модифицированность, "Описание шаблона"); 
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьНастройкиСхемыКомпоновкиДанных(Команда)

	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = НСтр("ru = 'Настройки шаблона СМС ""%ИмяШаблона%""'");
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = СтрЗаменить(ЗаголовокФормыНастройкиСхемыКомпоновкиДанных, "%ИмяШаблона%", Объект.Наименование);
	
	Результат = ОткрытьФормуМодально("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных",
									 Новый Структура("АдресСхемыКомпоновкиДанных,
													 |ИсточникШаблонов,
													 |Заголовок,
													 |УникальныйИдентификатор,
													 |ИмяШаблонаСКД,
													 |ВозвращатьИмяТекущегоШаблонаСКД",
													 АдресСКД,
													 Объект.Ссылка,
													 ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
													 УникальныйИдентификатор,
													 Объект.ИмяШаблонаСКД,
													 Истина));  
													 
	Если НЕ Результат = Неопределено Тогда   
														 
			
		

		Объект.ИмяШаблонаСКД = Результат.ИмяТекущегоШаблонаСКД;
		//НастройкиИзменены = Истина;

	КонецЕсли;

КонецПроцедуры

//&НаСервереБезКонтекста	//	LNK 25.06.2022 06:51:02
//Процедура ФиксироватьСобытиеИзмененияСКД(Объект)

//	ЖурналСобытий.Регистрация("НОМ.СЕГМЕНТА." + ОбщегоНазначенияКлиентСервер.РеквизитПеречисления(Объект.СпособФормирования,, "undef")
//		, УровеньЖурналаРегистрации.Предупреждение
//		, Метаданные.Справочники.СегментыНоменклатуры
//		, Объект.Ссылка
//		,
//		, "Интерактивное изменение настроек сегмента (СКД)"
//		, СокрЛП(Объект.Код) + " : " + СокрЛП(Объект.Наименование)
//		, Ложь
//		, Ложь
//	);

//КонецПроцедуры

// Обработчик команды, создаваемой механизмом запрета редактирования ключевых реквизитов.
//
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	МассивРеквизитов = Новый Массив;
	//МассивРеквизитов.Добавить("СпособФормирования");
	
	Если ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект) Тогда
		ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтотОбъект, МассивРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

////Процедура формирует сегмент номенклатуры
////
//&НаКлиенте
//Процедура СформироватьСегмент(Команда)

//	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
//		ПоказатьПредупреждение(, НСтр("ru='Сначала необходимо записать сегмент.'"));
//		Возврат;
//	КонецЕсли;

//	Если Объект.СпособФормирования =
//			ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьДинамически") Тогда
//		ПоказатьПредупреждение(, НСтр("ru='Формирование доступно только для нединамических сегментов.'"));
//		Возврат;
//	КонецЕсли;
//	
//	Если Модифицированность Тогда
//		Если Вопрос(
//				НСтр("ru='Перед формированием необходимо записать сегмент. Записать?'"),
//				РежимДиалогаВопрос.ДаНет
//			) = КодВозвратаДиалога.Нет Тогда
//			Возврат;
//		Иначе
//			Записать();
//		КонецЕсли;
//	КонецЕсли;

//	СформироватьСегментНаСервере();	//	LNK 21.05.2019 13:31:48

//	ПоказатьОповещениеПользователя(
//		НСтр("ru='Формирование сегмента номенклатуры'"),,
//		НСтр("ru='Сегмент сформирован.'")
//	);

//КонецПроцедуры

//&НаСервере	//	LNK 21.05.2019 13:31:52
//Процедура СформироватьСегментНаСервере()

	//СегментыСервер.СформироватьНоменклатуруСегмента(Объект.Ссылка, Объект.СпособФормирования);

//КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере	//	LNK 24.09.2018 14:52:56
Процедура УстановитьДоступностьЭлементов()

	//Если Объект.Предопределенный И НЕ ТехническаяПоддержкаВызовСервера.ИсключительныйРежим() Тогда
	//	
	//	ТолькоПросмотр = Истина;

	//ИначеЕсли НЕ РольДоступна(Метаданные.Роли.АдминистраторСистемы)
	//	И НЕ Объект.Ссылка.Пустая()
	//	И НЕ УправлениеПользователями.СегментНоменклатурыДоступен(Объект.Ссылка)	Тогда
	//	
	//	ТолькоПросмотр = Истина;

	//КонецЕсли;

	//Если ТолькоПросмотр Тогда

	//	Элементы.Сформировать.Доступность = Ложь;
	//	Элементы.Настройки.Доступность    = Ложь;

	//КонецЕсли;

КонецПроцедуры



&НаКлиенте
Процедура ИмяКонтрагентаНажатие(Элемент) 
	
	МассивСтрок = РазбитьТекстШаблона();
	Объект.ШаблонСМС = МассивСтрок[0] + "[ИмяКонтрагента]" + МассивСтрок[2];

КонецПроцедуры 

&НаКлиенте
Функция РазбитьТекстШаблона()
	
	а1=0;
	а2=0;
	а3=0;
	а4=0;    
    Элементы.ШаблонСМС.ПолучитьГраницыВыделения(а1,а2,а3,а4); 
    Текст = Элементы.ШаблонСМС.ТекстРедактирования;
    ВиделенТекст = Элементы.ШаблонСМС.ВыделенныйТекст;
    ТекстДо="";
	ТекстПосле="";
	тт2="";
    Для Х = 1 По СтрЧислоСтрок(Текст) Цикл
        т = СтрПолучитьСтроку(Текст, х);
        Если х < а1 Тогда 
            ТекстДо=ТекстДо + т + Символы.ВК + Символы.ПС;
        ИначеЕсли х = а1 Тогда 
            тт1 = Лев(т, а2-1);
            тт2 = Прав(т, СтрДлина(т) - а2 + 1) + Символы.ВК + Символы.ПС;
        ИначеЕсли х>а1 Тогда 
             ТекстПосле = ТекстПосле + т +Символы.ПС;
        КонецЕсли;
    КонецЦикла;
    Спис = Новый Массив();
    если ВиделенТекст<>"" Тогда 
        ТекстПосле2= СтрЗаменить(тт2 + ТекстПосле, ВиделенТекст, "");
    Иначе 
        ТекстПосле2=тт2 + ТекстПосле;
    КонецЕсли;
    спис.Добавить(ТекстДо+тт1);
    Спис.Добавить(ВиделенТекст);
    Спис.Добавить(ТекстПосле2); 
	Возврат Спис;
	
КонецФункции // РазбитьТекстШаблона()

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	КомпоновкаДанных = ПолучитьИзВременногоХранилища(АдресСКД);  
	ЗапросКомпоновкиДанных = КомпоновкаДанных.НаборыДанных[0].Запрос;
	
	ДатаЕсть = Ложь;

	Для Каждого ПараметрКомпоновки Из КомпоновкаДанных.Параметры Цикл
		
		Если ВРег(ПараметрКомпоновки.Имя) = "ДАТАНАЧАЛА" Тогда 
			ДатаЕсть = Истина;
		КонецЕсли;
		
	КонецЦикла; 
	
	Если Не ДатаЕсть Тогда 
		
		ПоказатьПредупреждение(, НСтр("ru='Нет обязательного условия ДатаНачала!!!'"));
		Отказ = Истина;
		
	КонецЕсли; 
	
	Если Не КомпоновкаДанных.НаборыДанных.Количество() = 1 Тогда 
		
		ПоказатьПредупреждение(, НСтр("ru='Набор данных может быть только один!!!'"));
		Отказ = Истина;
		
	КонецЕсли;
	
	КонтагентЕсть = Ложь;
	СсылкаЕсть = Ложь;

	Для Каждого НаборДанныхКомпоновки Из КомпоновкаДанных.НаборыДанных Цикл
		Для Каждого ПоляКомпоновки Из НаборДанныхКомпоновки.Поля Цикл
			
			Если ВРег(ПоляКомпоновки.Поле) = "КОНТРАГЕНТ" Тогда 
				КонтагентЕсть = Истина;
			КонецЕсли;
			
			Если ВРег(ПоляКомпоновки.Поле) = "ССЫЛКА" Тогда 
				СсылкаЕсть = Истина;
			КонецЕсли;
			
		КонецЦикла; 
	КонецЦикла; 
	
	Если Не КонтагентЕсть Тогда 
		
		ПоказатьПредупреждение(, НСтр("ru='Нет обязательного поля Контрагент!!!'"));
		Отказ = Истина;
		
	КонецЕсли;
	
	Если Не СсылкаЕсть Тогда 
		
		ПоказатьПредупреждение(, НСтр("ru='Нет обязательного поля Ссылка!!!'"));
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры





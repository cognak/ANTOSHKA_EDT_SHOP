#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Обновляет справочник стран мира по данным макета - классификатора
// Идентификация существующих элементов в справочнике выполняется по полю Код.
//
// Параметры:
//    Добавлять - Булево - если Истина, то добавляются страны, которые есть в классфикаторе,
//                         но отсутствуют в справочнике стран мира.
//
Процедура ОбновитьСтраныМираПоКлассификатору(Знач Добавлять = Ложь) Экспорт
	ВсеОшибки = "";
	
	Фильтр = Новый Структура("Код");
	
	// Сравнивать в запросе нельзя из-за возможной регистронезависимости базы данных
	Для Каждого СтрокаКлассификатора Из ТаблицаКлассификатора() Цикл
		Фильтр.Код = СтрокаКлассификатора.Код;
		Выборка = Справочники.СтраныМира.Выбрать(,,Фильтр);
		СтранаНайдена = Выборка.Следующий();
		Если Не СтранаНайдена И Добавлять Тогда
			// Добавление страны
			Страна = Справочники.СтраныМира.СоздатьЭлемент();
		ИначеЕсли СтранаНайдена И (
			      Выборка.Наименование<>СтрокаКлассификатора.Наименование И НЕ ПустаяСтрока(СтрокаКлассификатора.Наименование)
			  Или Выборка.КодАльфа2<>СтрокаКлассификатора.КодАльфа2 И НЕ ПустаяСтрока(СтрокаКлассификатора.КодАльфа2)
			  Или Выборка.КодАльфа3<>СтрокаКлассификатора.КодАльфа3 И НЕ ПустаяСтрока(СтрокаКлассификатора.КодАльфа3)
			  Или Выборка.НаименованиеПолное<>СтрокаКлассификатора.НаименованиеПолное И НЕ ПустаяСтрока(СтрокаКлассификатора.НаименованиеПолное)
			) Тогда
			// Изменение страны
			Страна = Выборка.ПолучитьОбъект();
		Иначе
			Продолжить;
		КонецЕсли;
		
		НачатьТранзакцию();
		Попытка
			Если Не Страна.ЭтоНовый() Тогда
				ЗаблокироватьДанныеДляРедактирования(Страна.Ссылка);
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(Страна, СтрокаКлассификатора, "Код, Наименование, КодАльфа2, КодАльфа3, НаименованиеПолное");		
			Страна.ДополнительныеСвойства.Вставить("НеПроверятьУникальность");
			Страна.Записать();
			ЗафиксироватьТранзакцию();
		Исключение
			Инфо = ИнформацияОбОшибке();
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Ошибка записи страны мира %1 (код %2) при обновлении классификатора, %3';uk='Помилка запису країни світу %1 (код %2) при оновленні класифікатора, %3'"),
				Выборка.Код, Выборка.Наименование, КраткоеПредставлениеОшибки(Инфо));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка,,,
				ТекстОшибки + Символы.ПС + ПодробноеПредставлениеОшибки(Инфо));
			ВсеОшибки = ВсеОшибки + Символы.ПС + ТекстОшибки;
			ОтменитьТранзакцию();
		КонецПопытки;
		
	КонецЦикла;
	
	Если Не ПустаяСтрока(ВсеОшибки) Тогда
		ВызватьИсключение СокрЛП(ВсеОшибки);
	КонецЕсли;
КонецПроцедуры


// Возвращает полные данные ОКСМ классификатора.
//
// Возвращаемое значение:
//     ТаблицаЗначений - данные классифкатора с колонками:
//         * Код                - Строка - данные страны
//         * Наименование       - Строка - данные страны
//         * НаименованиеПолное - Строка - данные страны
//         * КодАльфа2          - Строка - данные страны
//         * КодАльфа3          - Строка - данные страны
//
//     Таблица значений проиндексирована по полям "Код", "Наименование"
//
Функция ТаблицаКлассификатора() Экспорт
	Макет = Справочники.СтраныМира.ПолучитьМакет("Классификатор");
	
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(Макет.ПолучитьТекст());
	
	Возврат ПолучитьТаблицуПоКодуЯзыкаИБ(СериализаторXDTO.ПрочитатьXML(Чтение));
КонецФункции

Функция ПолучитьТаблицуПоКодуЯзыкаИБ(Данные)

	Если ТипЗнч(Данные) <> Тип("ТаблицаЗначений") Тогда
		Возврат Данные;
	КонецЕсли;
	
	// Определим список колонок имеющих синонимы на русском и украинских языках
	ИменаКолонокССинонимами = Новый Массив;
	Для Каждого КолонкаКоллекции Из Данные.Колонки Цикл
		Если Прав(КолонкаКоллекции.Имя, 3) = "Ukr" Тогда
			ИменаКолонокССинонимами.Добавить(Лев(КолонкаКоллекции.Имя, СтрДлина(КолонкаКоллекции.Имя) - 3));
		КонецЕсли;
	КонецЦикла;
	
	// Оставим только колонки на нужном языке
	ТребуетсяУкраинскийСиноним = Истина;//(Локализация.КодЯзыкаИнформационнойБазы() = "uk");
	Для Каждого ИмяКолонкиРус Из ИменаКолонокССинонимами Цикл
		Если ТребуетсяУкраинскийСиноним Тогда				
			Данные.Колонки.Удалить(Данные.Колонки.Найти(ИмяКолонкиРус));
			Данные.Колонки[ИмяКолонкиРус+"Ukr"].Имя = ИмяКолонкиРус;
		Иначе
			Данные.Колонки.Удалить(Данные.Колонки.Найти(ИмяКолонкиРус+"Ukr"));
		КонецЕсли;
	КонецЦикла;
	
	Возврат Данные;

КонецФункции // ПолучитьТаблицуПоКодуЯзыкаИБ()

#КонецЕсли

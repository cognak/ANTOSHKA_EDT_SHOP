#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//	LNK 22.02.2022 09:29:16
Функция ПолучитьСписокОборудования(ТипыОборудования = Неопределено, Идентификатор = Неопределено, Знач РабочееМесто = Неопределено, ТипВозврата = 0, КлючПРРО = 0) Экспорт

//	Подготовка параметров запроса.

	Если Идентификатор = Неопределено И НЕ ЗначениеЗаполнено(РабочееМесто) Тогда

	//	В этом случае используется фильтр по рабочему месту, за которое
	//	принимается текущее значение из параметров сеанса
		РабочееМесто = МенеджерОборудованияСервер.ПолучитьРабочееМестоКлиента();

	КонецЕсли;

	СписокТиповОборудования = Новый Массив;

	Если ТипЗнч(ТипыОборудования) = Тип("Структура") ИЛИ ТипЗнч(ТипыОборудования) = Тип("Массив") Тогда

		НуженКлюч = (ТипЗнч(ТипыОборудования) = Тип("Структура"));

		Для каждого ТипОборудования Из ТипыОборудования Цикл

			Если НуженКлюч Тогда

					СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования[ТипОборудования.Ключ]);

			Иначе	СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования[ТипОборудования]);

			КонецЕсли;

		КонецЦикла;

	ИначеЕсли ТипЗнч(ТипыОборудования) = Тип("Строка") Тогда

		СписокТиповОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования[ТипыОборудования]);

	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Идентификатор"	, Идентификатор);
	Запрос.УстановитьПараметр("РабочееМесто"	, РабочееМесто);
	Запрос.УстановитьПараметр("ТипыОборудования", СписокТиповОборудования);
	Запрос.УстановитьПараметр("ТипыУказаны"		, НЕ СписокТиповОборудования.Количество() = 0);
	Запрос.УстановитьПараметр("КлючПРРО"		, КлючПРРО);
//	КлючПРРО = 1	только ФР типа "DeviceManager"
//	КлючПРРО = 2	все ФР, кроме типа "DeviceManager"
//	КлючПРРО = любое другое значение	фильтр НЕ работает

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОборудование.Ссылка КАК Ссылка,
	|	ТаблицаОборудование.ИдентификаторУстройства КАК ИдентификаторУстройства,
	|	ТаблицаОборудование.Наименование КАК Наименование,
	|	ТаблицаОборудование.ТипОборудования КАК ТипОборудования,
	|	ТаблицаОборудование.ОбработчикДрайвера КАК ОбработчикДрайвера,
	|	ТаблицаОборудование.РабочееМесто КАК РабочееМесто,
	|	ТаблицаОборудование.РежимВиртуальный КАК РежимВиртуальный,
	|	ТаблицаРабочиеМеста.ИмяКомпьютера КАК ИмяКомпьютера,
	|	ТаблицаРабочиеМеста.СетевойПорт КАК СетевойПорт,
	|	1 КАК НомерЗапроса
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ТаблицаОборудование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РабочиеМеста КАК ТаблицаРабочиеМеста
	|		ПО (ТаблицаРабочиеМеста.Ссылка = ТаблицаОборудование.РабочееМесто)
	|ГДЕ
	|	НЕ ТаблицаОборудование.УстройствоОтключено
	|	И НЕ ТаблицаОборудование.ПометкаУдаления
	|	И НЕ ТаблицаОборудование.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка)
	|	И ВЫБОР
	|			КОГДА НЕ(&РабочееМесто = НЕОПРЕДЕЛЕНО
	|						ИЛИ &РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка))
	|				ТОГДА ТаблицаОборудование.РабочееМесто = &РабочееМесто
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ(&Идентификатор = НЕОПРЕДЕЛЕНО
	|						ИЛИ &Идентификатор = ЗНАЧЕНИЕ(Справочник.ПодключаемоеОборудование.ПустаяСсылка))
	|				ТОГДА ТаблицаОборудование.Ссылка = &Идентификатор
	|						ИЛИ ТаблицаОборудование.ИдентификаторУстройства = &Идентификатор
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ТипыУказаны = ИСТИНА
	|				ТОГДА ТаблицаОборудование.ТипОборудования В (&ТипыОборудования)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &КлючПРРО = 1
	|				ТОГДА ТаблицаОборудование.ОбработчикДрайвера = ЗНАЧЕНИЕ(Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикDeviceManagerФискальныйРегистратор)
	|			КОГДА &КлючПРРО = 2
	|				ТОГДА НЕ ТаблицаОборудование.ОбработчикДрайвера = ЗНАЧЕНИЕ(Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикDeviceManagerФискальныйРегистратор)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаОборудование.Ссылка,
	|	ТаблицаОборудование.ИдентификаторУстройства,
	|	ТаблицаОборудование.Наименование,
	|	ТаблицаОборудование.ТипОборудования,
	|	ТаблицаОборудование.ОбработчикДрайвера,
	|	ТаблицаРабочиеМеста.РабочееМесто,
	|	ТаблицаОборудование.РежимВиртуальный,
	|	ТаблицаРабочиеМеста.РабочееМесто.ИмяКомпьютера,
	|	ТаблицаРабочиеМеста.РабочееМесто.СетевойПорт,
	|	2
	|ИЗ
	|	РегистрСведений.ПодключаемоеОборудованиеПоРабочимМестам КАК ТаблицаРабочиеМеста
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПодключаемоеОборудование КАК ТаблицаОборудование
	|		ПО ТаблицаРабочиеМеста.Устройство = ТаблицаОборудование.Ссылка
	|ГДЕ
	|	НЕ ТаблицаОборудование.УстройствоОтключено
	|	И НЕ ТаблицаОборудование.ПометкаУдаления
	|	И НЕ ТаблицаРабочиеМеста.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка)
	|	И ВЫБОР
	|			КОГДА НЕ(&РабочееМесто = НЕОПРЕДЕЛЕНО
	|						ИЛИ &РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка))
	|				ТОГДА ТаблицаРабочиеМеста.РабочееМесто = &РабочееМесто
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА НЕ(&Идентификатор = НЕОПРЕДЕЛЕНО
	|						ИЛИ &Идентификатор = ЗНАЧЕНИЕ(Справочник.ПодключаемоеОборудование.ПустаяСсылка))
	|				ТОГДА ТаблицаОборудование.Ссылка = &Идентификатор
	|						ИЛИ ТаблицаОборудование.ИдентификаторУстройства = &Идентификатор
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ТипыУказаны = ИСТИНА
	|				ТОГДА ТаблицаОборудование.ТипОборудования В (&ТипыОборудования)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &КлючПРРО = 1
	|				ТОГДА ТаблицаОборудование.ОбработчикДрайвера = ЗНАЧЕНИЕ(Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикDeviceManagerФискальныйРегистратор)
	|			КОГДА &КлючПРРО = 2
	|				ТОГДА НЕ ТаблицаОборудование.ОбработчикДрайвера = ЗНАЧЕНИЕ(Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ОбработчикDeviceManagerФискальныйРегистратор)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипОборудования,
	|	Наименование"
	;

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

//	ТипВозврата = 0		Массив структур с реквизитами оборудования
//	ТипВозврата = 1		Массив ссылок (для отборов на формах выбора, например)
//	ТипВозврата = 2		Соответствие структур с реквизитами оборудования (для контроля при записи, например)

	Если ТипВозврата = 2 Тогда
		
			СписокОборудования = Новый Соответствие;

	Иначе	СписокОборудования = Новый Массив;

	КонецЕсли;

//	Обходим выборку и составляем список устройств

	Пока Выборка.Следующий() Цикл

	//	Заполним структуру данных очередного устройства
		Если ТипВозврата = 2 Тогда

			СписокОборудования.Вставить(Выборка.Ссылка, ОбщегоНазначенияКлиентСервер.СтрокаТаблицыКакСтруктура(РезультатЗапроса.Колонки, Выборка, Истина));

		Иначе

			Если ТипВозврата = 1 Тогда

					СписокОборудования.Добавить(Выборка.Ссылка);

			Иначе	СписокОборудования.Добавить(ОбщегоНазначенияКлиентСервер.СтрокаТаблицыКакСтруктура(РезультатЗапроса.Колонки, Выборка, Истина));

			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

//	Возвращаем полученный список с данными всех найденных устройств
	Возврат СписокОборудования;

КонецФункции

// Функция возвращает список подключенного в справочнике ПО
Функция ПолучитьСписокОборудования_УДАЛИТЬ(ТипыПО = Неопределено, Идентификатор = Неопределено, РабочееМесто = Неопределено) Экспорт

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ПодключаемоеОборудование.Ссылка КАК Ссылка,
	|	ПодключаемоеОборудование.ИдентификаторУстройства,
	|	ПодключаемоеОборудование.Наименование КАК Наименование,
	|	ПодключаемоеОборудование.ТипОборудования КАК ТипОборудования,
	|	ПодключаемоеОборудование.ОбработчикДрайвера КАК ОбработчикДрайвера,
	|	ПодключаемоеОборудование.РабочееМесто КАК РабочееМесто,
	|	ПодключаемоеОборудование.РежимВиртуальный КАК РежимВиртуальный,
	|	РабочиеМеста.ИмяКомпьютера КАК ИмяКомпьютера,
	|	РабочиеМеста.СетевойПорт КАК СетевойПорт
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РабочиеМеста КАК РабочиеМеста
	|		ПО (РабочиеМеста.Ссылка = ПодключаемоеОборудование.РабочееМесто)
	|ГДЕ
	|	(НЕ ПодключаемоеОборудование.УстройствоОтключено)" +
		// Добавим в текст запроса условия-фильтры переданые в параметрах вызова
		?(Идентификатор = Неопределено,
			// Добавим в текст запроса фильтр по типам оборудования (если задан)
		  ?(ТипыПО <> Неопределено,
		    "
		    |	И (ПодключаемоеОборудование.РабочееМесто <> ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка))
		    |	И (ПодключаемоеОборудование.ТипОборудования В (&ТипОборудования))
		    |	И (РабочиеМеста.Ссылка = &РабочееМесто)",
		    "
		    |	И РабочиеМеста.Ссылка = &РабочееМесто"),
			// Добавим в текст запроса фильтр по конкретному устройству (имеет приоритет над другими фильтрами)
		  "
		  |	И (ПодключаемоеОборудование.РабочееМесто <> ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка))
		  |	И (ПодключаемоеОборудование.Ссылка = &Идентификатор ИЛИ
		  |	   ПодключаемоеОборудование.ИдентификаторУстройства = &Идентификатор)") +
	"
	|	И (НЕ ПодключаемоеОборудование.ПометкаУдаления)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство КАК ПодключаемоеОборудование,
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство.ИдентификаторУстройства КАК ИдентификаторУстройства,
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство.Наименование КАК Наименование,
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство.ТипОборудования КАК ТипОборудования,
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство.ОбработчикДрайвера КАК ОбработчикДрайвера,
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство.РабочееМесто КАК РабочееМесто,
	|	ПодключаемоеОборудованиеПоРабочимМестам.Устройство.РежимВиртуальный КАК РежимВиртуальный,
	|	ПодключаемоеОборудованиеПоРабочимМестам.РабочееМесто.ИмяКомпьютера КАК ИмяКомпьютера,
	|	ПодключаемоеОборудованиеПоРабочимМестам.РабочееМесто.СетевойПорт КАК СетевойПорт
	|ИЗ
	|	РегистрСведений.ПодключаемоеОборудованиеПоРабочимМестам КАК ПодключаемоеОборудованиеПоРабочимМестам
	|ГДЕ
	|	(НЕ ПодключаемоеОборудованиеПоРабочимМестам.Устройство.УстройствоОтключено)" +
		// Добавим в текст запроса условия-фильтры переданые в параметрах вызова
		?(Идентификатор = Неопределено,
			// Добавим в текст запроса фильтр по типам оборудования (если задан)
		  ?(ТипыПО <> Неопределено,
		    "
		    |	И (ПодключаемоеОборудованиеПоРабочимМестам.Устройство.РабочееМесто <> ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка))
		    |	И (ПодключаемоеОборудованиеПоРабочимМестам.Устройство.ТипОборудования В (&ТипОборудования))
		    |	И (ПодключаемоеОборудованиеПоРабочимМестам.РабочееМесто = &РабочееМесто)",
		    "
		    |	И ПодключаемоеОборудованиеПоРабочимМестам.РабочееМесто = &РабочееМесто"),

		  // Добавим в текст запроса фильтр по конкретному устройству (имеет приоритет над другими фильтрами)
		  "
		  |	И (ПодключаемоеОборудованиеПоРабочимМестам.Устройство.РабочееМесто <> ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка))
		  |	И (ПодключаемоеОборудованиеПоРабочимМестам.Устройство.Ссылка = &Идентификатор ИЛИ
		  |	   ПодключаемоеОборудованиеПоРабочимМестам.Устройство.ИдентификаторУстройства = &Идентификатор)") +
	"
	|	И (НЕ ПодключаемоеОборудованиеПоРабочимМестам.Устройство.ПометкаУдаления)
	|";

	// Добавим полученное условие отбора к тексту запроса
	ТекстЗапроса = ТекстЗапроса + "
	|УПОРЯДОЧИТЬ ПО
	|	ТипОборудования,
	|	Наименование;";

	Запрос = Новый Запрос(ТекстЗапроса);
	
	// Установим параметры запроса (фильтрующие выборку значения)
	Если Идентификатор = Неопределено Тогда
		// То используется фильтр по рабочему месту
		Если НЕ ЗначениеЗаполнено(РабочееМесто) Тогда
			// Если РМ не задано в параметрах, то всегда текущее из параметров сеанса
			РабочееМесто = МенеджерОборудованияСервер.ПолучитьРабочееМестоКлиента();
		КонецЕсли;

		Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
		// И возможно фильтр по типам оборудования
		Если ТипыПО <> Неопределено Тогда
			//Подготовка перечислений типов ТО для запроса
			МассивТиповПО = Новый Массив();
			Если ТипЗнч(ТипыПО) = Тип("Структура") Тогда
				Для Каждого ТипПО Из ТипыПО Цикл
					МассивТиповПО.Добавить(Перечисления.ТипыПодключаемогоОборудования[ТипПО.Ключ]);
				КонецЦикла;

			ИначеЕсли ТипЗнч(ТипыПО) = Тип("Массив") Тогда
				Для Каждого ТипПО Из ТипыПО Цикл
					МассивТиповПО.Добавить(Перечисления.ТипыПодключаемогоОборудования[ТипПО]);
				КонецЦикла;

			Иначе
				МассивТиповПО.Добавить(Перечисления.ТипыПодключаемогоОборудования[ТипыПО]);
			КонецЕсли;

			Запрос.УстановитьПараметр("ТипОборудования", МассивТиповПО);
		КонецЕсли;
	Иначе // Фильтр по конкретному устройству
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	КонецЕсли;

	Выборка = Запрос.Выполнить().Выбрать();

	// Перебирая выборку составляем список устройств
	СписокОборудования = Новый Массив();
	Пока Выборка.Следующий() Цикл
		// Заполним структуру данных очередного устройства
		ДанныеУстройста = Новый Структура();
		ДанныеУстройста.Вставить("Ссылка"                 , Выборка.Ссылка);
		ДанныеУстройста.Вставить("ИдентификаторУстройства", Выборка.ИдентификаторУстройства);
		ДанныеУстройста.Вставить("Наименование"           , Выборка.Наименование);
		ДанныеУстройста.Вставить("ТипОборудования"        , Выборка.ТипОборудования);
		ДанныеУстройста.Вставить("ОбработчикДрайвера"     , Выборка.ОбработчикДрайвера);
		ДанныеУстройста.Вставить("РабочееМесто"           , Выборка.РабочееМесто);
		ДанныеУстройста.Вставить("ИмяКомпьютера"          , Выборка.ИмяКомпьютера);
		ДанныеУстройста.Вставить("СетевойПорт"            , Выборка.СетевойПорт);
		ДанныеУстройста.Вставить("РежимВиртуальный"       , Выборка.РежимВиртуальный);	//	LNK 04.10.2017 09:19:42
		СписокОборудования.Добавить(ДанныеУстройста);
	КонецЦикла;

	// Возвращаем полученный список с данными всех найденных устройств
	Возврат СписокОборудования;

КонецФункции

// Функция возвращает по идентификатору устройства его параметры
//
Функция ПолучитьПараметрыУстройства(Идентификатор) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Параметры КАК Параметры,
	|	ТаблицаСправочник.ТипОборудования КАК ТипОборудования,
	|	ТаблицаСправочник.РежимВиртуальный КАК РежимВиртуальный,
	|	ТаблицаСправочник.ОбработчикДрайвера КАК ОбработчикДрайвера
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК ТаблицаСправочник
	|ГДЕ
	|	(ТаблицаСправочник.Ссылка = &Идентификатор
	|			ИЛИ ТаблицаСправочник.ИдентификаторУстройства = &Идентификатор)"
	);
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	Выборка = Запрос.Выполнить().Выбрать();

	Выборка.Следующий();
	ПараметрыУстройства = Выборка.Параметры.Получить();

	Если ПараметрыНеЗаполнены(Выборка.РежимВиртуальный, ПараметрыУстройства) Тогда

		ПараметрыУстройства = Новый Структура(
			"P_AddAmount, P_BaudRate, P_CurrencyCode, P_LastErrorDescription, P_MerchantNum, P_PortNumber"
			, 0, 115200, "643", "", 1, 1);

	КонецЕсли;

	Возврат ПараметрыУстройства;

КонецФункции

// Процедура предназначена для сохранения параметров устройства
//в реквизит Параметры типа хранилище значения в элементе справочника
Функция СохранитьПараметрыУстройства(Идентификатор, Параметры) Экспорт

	Попытка

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПодключаемоеОборудование.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование
		|ГДЕ
		|	(ПодключаемоеОборудование.Ссылка = &Идентификатор
		|			ИЛИ ПодключаемоеОборудование.ИдентификаторУстройства = &Идентификатор)"
		);
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		ТаблицаРезультатов = Запрос.Выполнить().Выгрузить();

		ОбъектСправочника = ТаблицаРезультатов[0].Ссылка.ПолучитьОбъект();
		ОбъектСправочника.Параметры = Новый ХранилищеЗначения(Параметры);
		ОбъектСправочника.Записать();

		Результат = Истина;

	Исключение

		Результат = Ложь;

	КонецПопытки;

	Возврат Результат;

КонецФункции

// Функция возвращает структуру с данными устройства
//(со значениями реквизитов элемента справочника)
Функция ПолучитьДанныеУстройства(Идентификатор) Экспорт

	ДанныеУстройста = Новый Структура();

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СпрПодключаемоеОборудование.Ссылка КАК Ссылка,
	|	СпрПодключаемоеОборудование.ИдентификаторУстройства КАК ИдентификаторУстройства,
	|	СпрПодключаемоеОборудование.Наименование КАК Наименование,
	|	СпрПодключаемоеОборудование.ТипОборудования КАК ТипОборудования,
	|	СпрПодключаемоеОборудование.ОбработчикДрайвера КАК ОбработчикДрайвера,
	|	СпрПодключаемоеОборудование.РабочееМесто КАК РабочееМесто,
	|	РабочиеМеста.ИмяКомпьютера КАК ИмяКомпьютера,
	|	РабочиеМеста.СетевойПорт КАК СетевойПорт
	|ИЗ
	|	Справочник.ПодключаемоеОборудование КАК СпрПодключаемоеОборудование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РабочиеМеста КАК РабочиеМеста
	|		ПО СпрПодключаемоеОборудование.РабочееМесто = РабочиеМеста.Ссылка
	|ГДЕ
	|	(СпрПодключаемоеОборудование.ИдентификаторУстройства = &Идентификатор
	|			ИЛИ СпрПодключаемоеОборудование.Ссылка = &Идентификатор)"
	);

	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);

	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда

		ДанныеУстройста.Вставить("Ссылка"                 , Выборка.Ссылка);
		ДанныеУстройста.Вставить("ИдентификаторУстройства", Выборка.ИдентификаторУстройства);
		ДанныеУстройста.Вставить("Наименование"           , Выборка.Наименование);
		ДанныеУстройста.Вставить("ТипОборудования"        , Выборка.ТипОборудования);
		ДанныеУстройста.Вставить("ОбработчикДрайвера"     , Выборка.ОбработчикДрайвера);
		ДанныеУстройста.Вставить("РабочееМесто"           , Выборка.РабочееМесто);
		ДанныеУстройста.Вставить("ИмяКомпьютера"          , Выборка.ИмяКомпьютера);
		ДанныеУстройста.Вставить("СетевойПорт"            , Выборка.СетевойПорт);

	КонецЕсли;

	Возврат ДанныеУстройста;

КонецФункции

//	LNK 04.10.2017 10:01:07
Функция ПараметрыНеЗаполнены(РежимВиртуальный, ПараметрыУстройства)

	НеЗаполнены = Ложь;

	Если РежимВиртуальный = Истина Тогда

		Если ТипЗнч(ПараметрыУстройства) = Тип("Структура") ИЛИ ТипЗнч(ПараметрыУстройства) = Тип("Массив") Тогда

			НеЗаполнены = ПараметрыУстройства.Количество() = 0;

		ИначеЕсли ПараметрыУстройства = Неопределено Тогда

			НеЗаполнены = Истина;

		КонецЕсли;

	КонецЕсли;

	Возврат НеЗаполнены;

КонецФункции

#КонецЕсли

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	ОбновитьПользовательскийИнтерфейс();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзмененоРабочееМестоТекущегоСеанса" Тогда
		ОбновитьПараметрыРабочегоМеста();
	ИначеЕсли ИмяСобытия = "ИзмененыДоступныеТипыПодключаемогоОборудования" Тогда
		ОбновитьПользовательскийИнтерфейс();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Модифицированность Тогда
		ОбновитьПовторноИспользуемыеЗначения();
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПереключательСтраницПриИзменении(Элемент)

	СписокУстройств.Отбор.Элементы[0].ПравоеЗначение = ПереключательТиповПО;

КонецПроцедуры

&НаКлиенте
Процедура СписокУстройствВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если ТипЗнч(ВыбраннаяСтрока) <> Тип("СправочникСсылка.ПодключаемоеОборудование") Тогда
		Если Элементы.СписокУстройств.Развернут(ВыбраннаяСтрока) Тогда
			Элементы.СписокУстройств.Свернуть(ВыбраннаяСтрока);
		Иначе
			Элементы.СписокУстройств.Развернуть(ВыбраннаяСтрока);
		КонецЕсли;

		СтандартнаяОбработка = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВсеТипыОборудованияПриИзменении(Элемент)

	СписокУстройств.Отбор.Элементы[0].Использование = (Не ВсеТипыОборудования);
	Элементы.ПереключательТиповПО.Доступность = (Не ВсеТипыОборудования);
	СписокУстройств.Группировка.Элементы[1].Использование = ВсеТипыОборудования; // Группировать по типу оборудования

	Если Элементы.СписокУстройств.ТекущаяСтрока <> Неопределено Тогда
		Элементы.СписокУстройств.Развернуть(Элементы.СписокУстройств.ТекущаяСтрока, Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВсеРабочиеМестаПриИзменении(Элемент)

	Элементы.ГруппироватьПоРабочемуМесту.Доступность = ВсеРабочиеМеста;
	СписокУстройств.Группировка.Элементы[0].Использование = ВсеРабочиеМеста И ГруппироватьПоРабочемуМесту;

	Если Элементы.СписокУстройств.ТекущаяСтрока <> Неопределено Тогда
		Элементы.СписокУстройств.Развернуть(Элементы.СписокУстройств.ТекущаяСтрока, Истина);
	КонецЕсли;

	СписокУстройств.Отбор.Элементы[1].Использование = (Не ВсеРабочиеМеста);

КонецПроцедуры

&НаКлиенте
Процедура ГруппироватьПоРабочемуМестуПриИзменении(Элемент)

	СписокУстройств.Группировка.Элементы[0].Использование = ГруппироватьПоРабочемуМесту;

	Если Элементы.СписокУстройств.ТекущаяСтрока <> Неопределено Тогда
		Элементы.СписокУстройств.Развернуть(Элементы.СписокУстройств.ТекущаяСтрока, Истина);
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ <ИМЯ ТАБЛИЧНОЙ ЧАСТИ>

&НаКлиенте
Процедура СписокУстройствОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)

	ОбновитьПараметрыРабочегоМеста();
	
	#Если НЕ ВебКлиент Тогда 
	Источник.Прочитать();
	#КонецЕсли 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокУстройствПослеУдаления(Элемент)

	ОбновитьПараметрыРабочегоМеста();

КонецПроцедуры

&НаКлиенте
Процедура СписокУстройствПриАктивизацииСтроки(Элемент)

	Если Элементы.Найти("Настроить") <> Неопределено Тогда
		Элементы.Настроить.Доступность = (ТипЗнч(Элемент.ТекущаяСтрока) = Тип("СправочникСсылка.ПодключаемоеОборудование"));
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыбратьРабочееМесто(Команда)

	ОткрытьФормуВыбораРМПриПервомОбращении = Ложь;
	СписокНастроек = МенеджерОборудованияКлиентПовтИсп.ПолучитьПользовательскиеНастройкиПодключаемогоОборудования();
	Для Каждого Параметр Из СписокНастроек Цикл
		Если Параметр.Ключ = "ОткрытьФормуВыбораРМПриПервомОбращении" Тогда
			ОткрытьФормуВыбораРМПриПервомОбращении = Параметр.Значение;
		КонецЕсли;
	КонецЦикла;

	МенеджерОборудованияКлиент.ВыбратьРабочееМесто(ОткрытьФормуВыбораРМПриПервомОбращении);

КонецПроцедуры

&НаКлиенте
Процедура НастроитьВыполнить()

	ОчиститьСообщения();
	СообщениеОбОшибке = "";
	НастройкиИзменены = Ложь;

	Если Элементы.СписокУстройств.ТекущиеДанные = Неопределено Тогда

		Возврат;

	КонецЕсли;
	
//	LNK 22.07.2019 11:59:31
	Если НЕ МенеджерОборудованияКлиент.ДрайверУстановлен(Элементы.СписокУстройств.ТекущиеДанные.Ссылка) Тогда

		Результат = Вопрос(НСтр("ru = 'Установить драйвер?'"), РежимДиалогаВопрос.ДаНет);

		Если Результат = КодВозвратаДиалога.Да Тогда

			МенеджерОборудованияКлиент.УстановитьДрайвер(Элементы.СписокУстройств.ТекущиеДанные.Ссылка);

		КонецЕсли;

	КонецЕсли;
	
	Результат = МенеджерОборудованияКлиент.ВыполнитьНастройкуОборудования(
				Элементы.СписокУстройств.ТекущиеДанные.Ссылка,
				НастройкиИзменены,
				СообщениеОбОшибке
	);

	Если Результат И НастройкиИзменены Тогда

	//	Настройки были изменены
		ОбновитьПовторноИспользуемыеЗначения();

	ИначеЕсли НЕ Результат Тогда

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СписокРабочихМест(Команда)

	ОткрытьФормуМодально("Справочник.РабочиеМеста.ФормаСписка");

КонецПроцедуры

&НаКлиенте
Процедура СписокУдаленныхУстройств(Команда)

	ОткрытьФормуМодально("РегистрСведений.ПодключаемоеОборудованиеПоРабочимМестам.ФормаСписка");

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОбновитьПользовательскийИнтерфейс()
	
	ТекущееРабочееМесто = ПараметрыСеанса.РабочееМестоКлиента;
	СписокОборудования = МенеджерОборудованияСерверПереопределяемый.ПолучитьДоступныеТипыОборудования();

	Элементы.ПереключательТиповПО.СписокВыбора.Очистить();
	
	Пока Элементы.ГруппаКартинокПО.ПодчиненныеЭлементы.Количество() > 0  Цикл
		Элементы.Удалить(Элементы.ГруппаКартинокПО.ПодчиненныеЭлементы[0]);
	КонецЦикла;
	
	Элементы.ПереключательТиповПО.ВысотаЭлемента = 4;

	Для Каждого ТипПО Из СписокОборудования Цикл

		Элементы.ПереключательТиповПО.СписокВыбора.Добавить(ТипПО);
		НоваяКартинка = Элементы.Добавить("Картинка" + XMLСтрока(ТипПО), Тип("ДекорацияФормы"), Элементы.ГруппаКартинокПО);
    	НоваяКартинка.Вид = ВидДекорацииФормы.Картинка;
		НоваяКартинка.Картинка = БиблиотекаКартинок["ПодключаемоеОборудование" + XMLСтрока(ТипПО) + "32"];
		//НоваяКартинка.Ширина = 5;
		//НоваяКартинка.Высота = 2;
		//НоваяКартинка.АвтоМаксимальнаяВысота = Ложь;
		//НоваяКартинка.АвтоМаксимальнаяШирина = Ложь;

	КонецЦикла;
	
	ПереключательТиповПО = СписокОборудования[0];
//	СписокУстройств.Отбор.Элементы[0].ПравоеЗначение = ПереключательТиповПО;

	// Предустановленные настройки, которые пользователь не должен видеть и изменять.
	
	ЭлементГруппировки = СписокУстройств.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ЭлементГруппировки.Поле = Новый ПолеКомпоновкиДанных("РабочееМесто");
	ЭлементГруппировки.Использование = Ложь;
	
	ЭлементГруппировки = СписокУстройств.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ЭлементГруппировки.Поле = Новый ПолеКомпоновкиДанных("ТипОборудования");
	ЭлементГруппировки.Использование = Ложь;
	
	ЭлементОтбора = СписокУстройств.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипОборудования");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = ПереключательТиповПО;
	ЭлементОтбора.Использование = Истина;
	
	ЭлементОтбора = СписокУстройств.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РабочееМесто");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Неопределено;
	ЭлементОтбора.Использование = Истина;

	ОбновитьПараметрыРабочегоМеста();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыРабочегоМеста()

	Если ТекущееРабочееМесто = Справочники.РабочиеМеста.ПустаяСсылка()
	 Или ТекущееРабочееМесто <> ПараметрыСеанса.РабочееМестоКлиента Тогда
		ТекущееРабочееМесто = ПараметрыСеанса.РабочееМестоКлиента;
		Заголовок = "";
	КонецЕсли;

	Если ПустаяСтрока(Заголовок) Тогда
		Заголовок = НСтр("ru='Подключение и настройка оборудования для РМ'") + " """
		          + Строка(ТекущееРабочееМесто) + """";
		СписокУстройств.Отбор.Элементы[1].ПравоеЗначение = ТекущееРабочееМесто;
	КонецЕсли;

КонецПроцедуры

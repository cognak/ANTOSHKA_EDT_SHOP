#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
///////////////////////////////////////////////////////////////////////////////
#Область ВнешнийИнтерфейс

#Область РеквизитыПараметрыСсылки

// Функция пролучает реквизиты кассы
//
// Параметры:
//  КассаККМ - СправочникСсылка.КассыККМ - Ссылка на кассу ККМ
//
// Возвращаемое значение:
//	Структура - Организация и Валюта выбранной кассы ККМ
//
Функция РеквизитыКассыККМ(КассаККМ) Экспорт

	Если НЕ ПривилегированныйРежим() Тогда	//	LNK 24.02.2023 15:43:54

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСправочник.Ссылка КАК КассаККМ,
	|	ТаблицаСправочник.Владелец КАК Организация,
	|	ТаблицаСправочник.РабочееМесто КАК РабочееМесто,
	|	ТаблицаСправочник.Магазин КАК Магазин,
	|	ТаблицаСправочник.НомерВМагазине КАК НомерВМагазине,
	|	ТаблицаСправочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование,
	|	ЕСТЬNULL(ТаблицаСправочник.ПодключаемоеОборудование.ОбработчикДрайвера, ЗНАЧЕНИЕ(Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ПустаяСсылка)) КАК ОбработчикДрайвера,
	|	ТаблицаСправочник.ШиринаЛенты КАК ШиринаЛенты
	|ИЗ
	|	Справочник.КассыККМ КАК ТаблицаСправочник
	|ГДЕ
	|	ТаблицаСправочник.Ссылка = &КассаККМ"
	);
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);

	РезультатЗапроса = Запрос.Выполнить();
	Выборка   = РезультатЗапроса.Выбрать();
	Выборка.Следующий();

	СоставРеквизитов = ОбщегоНазначенияРТ.СоздатьСтруктуруПоСтрокеВыборки(РезультатЗапроса
		, Выборка
		, Истина
		, ПолучитьПараметрыКассыККМ(КассаККМ)
		, Ложь
	);

	Возврат СоставРеквизитов;

КонецФункции

//	LNK 08.02.2023 06:17:57 - перенесено
Функция ПолучитьПараметрыКассыККМ(КассаККМ)	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда	//	LNK 14.03.2023 08:31:09

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСправочник.Магазин КАК Магазин,
	|	Ведущая.КассаККМ КАК КассаККМ,
	|	ЕСТЬNULL(ТаблицаСправочник.ПодключаемоеОборудование, ЗНАЧЕНИЕ(Справочник.ПодключаемоеОборудование.ПустаяСсылка)) КАК ИдентификаторУстройства,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСправочник.ПодключаемоеОборудование, ЗНАЧЕНИЕ(Справочник.ПодключаемоеОборудование.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ПодключаемоеОборудование.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользоватьБезПодключенияОборудования,
	|	ЕСТЬNULL(ТаблицаСправочник.ПодключаемоеОборудование.ОбработчикДрайвера, ЗНАЧЕНИЕ(Перечисление.ОбработчикиДрайверовПодключаемогоОборудования.ПустаяСсылка)) КАК ОбработчикДрайвера,
	|	ЕСТЬNULL(ТаблицаСправочник.ПечатьКодQR, ЛОЖЬ) КАК ПечатьКодQR,
	|	ТаблицаСправочник.ШиринаЛенты КАК ШиринаЛенты,
	|	ЕСТЬNULL(ТаблицаСправочник.ПечатьЧековНаПринтер, ЛОЖЬ) КАК ПечатьЧековНаПринтер,
	|	ЕСТЬNULL(ТаблицаСправочник.ПРРО_ПД_Печать_Z_Отчета, ЛОЖЬ) КАК ПРРО_ПД_Печать_Z_Отчета,
	|	ЕСТЬNULL(ТаблицаСправочник.ПРРО_ПД_ПечатьЧеков, ЛОЖЬ) КАК ПРРО_ПД_ПечатьЧеков,
	|	ЛОЖЬ КАК РасширенныйПериодескийОтчет,
	|	&ТекущийПользователь КАК Кассир,
	|	ТаблицаСправочник.РегистрационныйНомер КАК РегистрационныйНомер,
	|	ТаблицаСправочник.СерийныйНомер КАК СерийныйНомер
	|ИЗ
	|	(ВЫБРАТЬ
	|		&Ссылка КАК КассаККМ) КАК Ведущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КассыККМ КАК ТаблицаСправочник
	|		ПО Ведущая.КассаККМ = ТаблицаСправочник.Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылка"				, КассаККМ);
	Запрос.УстановитьПараметр("ТекущийПользователь"	, ПараметрыСеанса.ТекущийПользователь);

	РезультатЗапроса = Запрос.Выполнить();
	ПараметрыВыборка = РезультатЗапроса.Выбрать();
	ПараметрыВыборка.Следующий();

	ПараметрыКассы	 = Новый Структура;
	ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВСтруктуру(РезультатЗапроса, ПараметрыВыборка, ПараметрыКассы,, Истина); 

	Возврат ПараметрыКассы;

КонецФункции

#КонецОбласти

// Получает кассу по организации и магазину
//
// Параметры:
//  Организация - Справочник Организации
//  Магазин - Справочник Магазины
//
// Вовзращаемое значение:
//  Справочник КассыККМ
//
Функция КассаПоУмолчанию(Организация, Магазин = Неопределено) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаСправочник.Код КАК Код,
	|	ТаблицаСправочник.Ссылка КАК Касса
	|ИЗ
	|	Справочник.КассыККМ КАК ТаблицаСправочник
	|ГДЕ
	|	ТаблицаСправочник.Владелец = &Организация
	|	И НЕ ТаблицаСправочник.ПометкаУдаления
	|	И ВЫБОР
	|			КОГДА &Магазин В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаСправочник.Магазин = &Магазин
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код УБЫВ"
	);
	Запрос.УстановитьПараметр("Организация"	, Организация);
	Запрос.УстановитьПараметр("Магазин"		, Магазин);
	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда

			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();	//	LNK 12.03.2024 09:32:30 - убрал условие по количеству в выборке

			КассаПоУмолчанию = Выборка.Касса;

	Иначе	КассаПоУмолчанию = Справочники.КассыККМ.ПустаяСсылка();

	КонецЕсли;

	Возврат КассаПоУмолчанию;

КонецФункции

Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("Владелец");
	Результат.Добавить("Магазин");
	Результат.Добавить("НомерВМагазине");
	Результат.Добавить("ПРРО");
	
	Возврат Результат;

КонецФункции

// Возвращает список реквизитов, которые разрешается редактировать
// с помощью обработки группового изменения объектов.
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	РедактируемыеРеквизиты = Новый Массив;
	
	РедактируемыеРеквизиты.Добавить("ФормироватьНефискальныеЧеки");
	РедактируемыеРеквизиты.Добавить("ШиринаЛенты");
	РедактируемыеРеквизиты.Добавить("РучнойРежимФормированияЧека");
	РедактируемыеРеквизиты.Добавить("НоваяФормаЧека");
	РедактируемыеРеквизиты.Добавить("ПечатьКодQR");
	
	Возврат РедактируемыеРеквизиты;
	
КонецФункции

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#КонецЕсли

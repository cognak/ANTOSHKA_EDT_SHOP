///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, Объект, "СтраницаДополнительныеРеквизиты");
	// Конец СтандартныеПодсистемы.Свойства
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	Элементы.ГруппаПраво.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьПодключаемоеОборудование");
	Элементы.ШиринаЛенты.Видимость = Элементы.ГруппаПраво.Видимость;
		
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ДополнительныеОтчетыИОбработки
	
	НастройкаШаблонов = Неопределено;
	ПараметрыВыбораОборудования = ПолучитьПараметрыВыбораОборудования(Объект.ТипКассы, НастройкаШаблонов);
	Если ЗначениеЗаполнено(ПараметрыВыбораОборудования) Тогда
		Элементы.ВнешнееОборудование.ПараметрыВыбора = ПараметрыВыбораОборудования;
	КонецЕсли;

	ОформитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере	//	LNK 19.01.2018 10:35:13
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

//	LNK 08.09.2017 07:45:10
&НаКлиенте
Процедура ПриОткрытии(Отказ)

	СформироватьАвтоНаименование();

КонецПроцедуры

&НаСервере	//	LNK 19.01.2018 10:35:29
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте	//	LNK 19.01.2018 10:35:21
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере	//	LNK 19.01.2018 10:36:10
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

//	LNK 03.05.2017 11:18:38
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)


КонецПроцедуры

//	LNK 03.05.2017 11:18:55
&НаКлиенте
Процедура МагазинПриИзменении(Элемент)

	ОформитьЭлементыФормы();
	СформироватьАвтоНаименование();

КонецПроцедуры

&НаКлиенте
Процедура КодПриИзменении(Элемент)

	СформироватьАвтоНаименование();

КонецПроцедуры

//	LNK 08.10.2016 07:26:31
&НаКлиенте
Процедура РабочееМестоПриИзменении(Элемент)

	Объект.ПодключаемоеОборудование = Неопределено;

	НастройкаШаблонов = Неопределено;
	ПараметрыВыбораОборудования = ПолучитьПараметрыВыбораОборудования(Объект.ТипКассы, НастройкаШаблонов);
	Если ЗначениеЗаполнено(ПараметрыВыбораОборудования) Тогда
		Элементы.ВнешнееОборудование.ПараметрыВыбора = ПараметрыВыбораОборудования;
	КонецЕсли;
	
	Элементы.СтраницаШаблоны.Доступность = НастройкаШаблонов;

КонецПроцедуры

&НаКлиенте	//	LNK 25.02.2023 06:01:51
Процедура ВнешнееОборудованиеПриИзменении(Элемент)

	ОформитьЭлементыФормы();

КонецПроцедуры

&НаКлиенте	//	LNK 22.02.2022 10:03:58
Процедура ВнешнееОборудованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Если Объект.ТипКассы = ПредопределенноеЗначение("Перечисление.ТипыКассККМ.ФискальныйРегистратор") Тогда

		ДанныеВыбораФискальногоРегистратора(ДанныеВыбора);
		СтандартнаяОбработка = Ложь;

	КонецЕсли;

КонецПроцедуры

&НаСервере	//	LNK 22.02.2022 10:14:27
Процедура ДанныеВыбораФискальногоРегистратора(ДанныеВыбора)

	ДанныеВыбора = Новый СписокЗначений;

	Если НЕ Объект.РабочееМесто.Пустая() Тогда

		ДанныеВыбора.ЗагрузитьЗначения(Справочники.ПодключаемоеОборудование.ПолучитьСписокОборудования("ФискальныйРегистратор"
			,
			, Объект.РабочееМесто
			, 1
			, ?(Объект.ПРРО, 1, 2)
			)
		);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПРРОПриИзменении(Элемент)

	ОформитьЭлементыФормы();

КонецПроцедуры

&НаКлиенте	//	LNK 16.05.2023 05:59:31
Процедура ПечатьЧековНаПринтерПриИзменении(Элемент)

	ПроверитьРеквизитыПечатиЧеков();
	ОформитьЭлементыФормы();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// Обработчик команды, создаваемой механизмом запрета редактирования ключевых реквизитов.
//
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		Результат = ОткрытьФормуМодально("Справочник.КассыККМ.Форма.РазблокированиеРеквизитов");
		Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
			Если ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект) Тогда
				ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтотОбъект, Результат);
				Если Результат.Найти("СхемаКомпоновкиДанных") <> Неопределено И НЕ ОбщегоНазначенияРТСервер.ЭтоПолноправныйПользователь() Тогда
					Элементы.РедактироватьСхемуКомпоновкиДанных.Доступность = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьПараметрыВыбораОборудования(ТипКассы, НастройкаШаблонов)

	Если ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор Тогда

		ПараметрТип   = Новый ПараметрВыбора("Отбор.ТипОборудования", Перечисления.ТипыПодключаемогоОборудования.ФискальныйРегистратор);
		ПараметрМесто = Новый ПараметрВыбора("Отбор.РабочееМесто"   , Объект.РабочееМесто);
		НастройкаШаблонов = Истина;

	Иначе

		ПараметрТип = Новый ПараметрВыбора("Отбор.ТипОборудования", Перечисления.ТипыПодключаемогоОборудования.ККМOffline);
		ПараметрМесто = Новый ПараметрВыбора("Отбор.РабочееМесто" , Объект.РабочееМесто);
		НастройкаШаблонов = Ложь;

	КонецЕсли;                        

	СтруктураПараметров = Новый Массив;
	СтруктураПараметров.Добавить(ПараметрТип);
	СтруктураПараметров.Добавить(ПараметрМесто);

	Возврат Новый ФиксированныйМассив(СтруктураПараметров);

КонецФункции

&НаКлиенте
Функция СформироватьАвтоНаименование()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	СтрокаНаименования = Формат(НомерМагазина, "ЧН=0; ЧГ=") + ". РРО № " + Формат(Объект.НомерВМагазине, "ЧДЦ=; ЧН=0; ЧГ=") + ", " + СокрЛП(Объект.Магазин);
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Возврат СтрокаНаименования;

КонецФункции

&НаКлиенте
Процедура ТипКассыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Объект.ТипКассы <> ВыбранноеЗначение Тогда
		Объект.ТипКассы = ВыбранноеЗначение;
		Модифицированность = Истина;
		
		Объект.ПодключаемоеОборудование = ПредопределенноеЗначение("Справочник.ПодключаемоеОборудование.ПустаяСсылка");
		
		НастройкаШаблонов = Неопределено;
		ПараметрыВыбораОборудования = ПолучитьПараметрыВыбораОборудования(Объект.ТипКассы, НастройкаШаблонов);
		Если ЗначениеЗаполнено(ПараметрыВыбораОборудования) Тогда
			Элементы.ВнешнееОборудование.ПараметрыВыбора = ПараметрыВыбораОборудования;
		КонецЕсли;
		
		Элементы.СтраницаШаблоны.Доступность = НастройкаШаблонов;
		
	КонецЕсли;  
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

//	LNK 06.09.2017 12:39:36
&НаСервере
Процедура ОформитьЭлементыФормы()

	СтруктураПараметров = Новый Массив;

	Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РабочиеМеста.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.РабочиеМеста КАК РабочиеМеста
		|ГДЕ
		|	РабочиеМеста.Магазин = &Магазин
		|	И НЕ РабочиеМеста.ПометкаУдаления"
		);
		Запрос.УстановитьПараметр("Магазин", Объект.Магазин);
		
		Результат = Запрос.Выполнить();

		Если НЕ Результат.Пустой() Тогда

			СтруктураПараметров.Добавить(Новый ПараметрВыбора(
				"Отбор.Ссылка"
				, Новый ФиксированныйМассив(Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"))));

		КонецЕсли;

	КонецЕсли;

	Элементы.РабочееМесто.ПараметрыВыбора = Новый ФиксированныйМассив(СтруктураПараметров);

	НомерМагазина = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Магазин, "НомерМагазина", 0);

//	LNK 24.02.2023 14:33:04
	Элементы.ПРРО.ШрифтЗаголовка = Новый Шрифт(,, Объект.ПРРО);

	Элементы.ПРРО_ПД_Печать_Z_Отчета.Доступность	= Объект.ПРРО И Объект.ПечатьЧековНаПринтер И ЗначениеЗаполнено(Объект.ПодключаемоеОборудование);
	Элементы.ПРРО_ПД_ПечатьЧеков.Доступность		= Объект.ПРРО И Объект.ПечатьЧековНаПринтер И ЗначениеЗаполнено(Объект.ПодключаемоеОборудование);

КонецПроцедуры

&НаКлиенте	//	LNK 16.05.2023 06:01:18
Процедура ПроверитьРеквизитыПечатиЧеков()

	Если НЕ Объект.ПечатьЧековНаПринтер Тогда

		Объект.ПРРО_ПД_Печать_Z_Отчета	= Ложь;
		Объект.ПРРО_ПД_ПечатьЧеков		= Ложь;

	КонецЕсли;

КонецПроцедуры

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства





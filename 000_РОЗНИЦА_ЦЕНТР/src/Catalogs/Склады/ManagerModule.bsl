#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

//	LNK 15.11.2023 17:09:48
Функция РеквизитыСклада(Склад, ДатаСреза = '00010101')	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаВедущая.Код КАК Код,
	|	ТаблицаВедущая.Наименование КАК Наименование,
	|	ТаблицаВедущая.IDN КАК IDN,
	|	ТаблицаВедущая.Магазин КАК Магазин,
	|	ТаблицаВедущая.НазначениеСклада КАК НазначениеСклада,
	|	ТаблицаВедущая.Отдел КАК Отдел,
	|	ТаблицаВедущая.ТипСклада КАК ТипСклада,
	|	ЕСТЬNULL(ТаблицаОрганизаций.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация
	|ИЗ
	|	Справочник.Склады КАК ТаблицаВедущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОрганизацииПодразделений.СрезПоследних КАК ТаблицаОрганизаций
	|		ПО ТаблицаВедущая.Магазин = ТаблицаОрганизаций.Владелец
	|ГДЕ
	|	ТаблицаВедущая.Ссылка = &Склад"
	);
	Запрос.УстановитьПараметр("Склад"  , Склад);
	Запрос.УстановитьПараметр("ДатаСреза", КонецДня(?(ДатаСреза = '00010101' ИЛИ ДатаСреза = Неопределено, ТекущаяДатаСеанса(), ДатаСреза)));

	РезультатЗапроса = Запрос.Выполнить();
	Выборка			 = РезультатЗапроса.Выбрать();
	Выборка.Следующий();

	СоставРеквизитов = ОбщегоНазначенияРТ.СоздатьСтруктуруПоСтрокеВыборки(РезультатЗапроса, Выборка, Истина);
	
	Возврат СоставРеквизитов;

КонецФункции

// Получает склад, если склад один в справочнике
// Параметры:
// Магазин - СправочникСсылка.Магазины
// ТипСклада - ПеречислениеСсылка.ТипыСкладов
//
// Возвращаемое значение:
// СправочникСсылка.Склады - Найденный склад
// Неопределено - если складов нет или больше одного
//
Функция ПолучитьСкладПоУмолчанию(Магазин, ТипСклада) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	Склады.Ссылка КАК Склад
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	(НЕ Склады.ПометкаУдаления)
	|	И (Склады.Магазин = &Магазин
	|			ИЛИ &Магазин = НЕОПРЕДЕЛЕНО)
	|	И (Склады.ТипСклада = &ТипСклада
	|			ИЛИ &ТипСклада = НЕОПРЕДЕЛЕНО)");
	
	Запрос.УстановитьПараметр("Магазин", ?(ЗначениеЗаполнено(Магазин), Магазин, Неопределено));
	Запрос.УстановитьПараметр("ТипСклада", ?(ЗначениеЗаполнено(ТипСклада), ТипСклада, Неопределено));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И Выборка.Количество() = 1 Тогда
		Склад = Выборка.Склад;
	Иначе
		Склад = Справочники.Склады.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Склад;

КонецФункции

// Получает склад поступления по умолчанию
// Параметры:
// Магазин - СправочникСсылка.Магазины
// ТипСклада - ПеречислениеСсылка.ТипыСкладов
//
// Возвращаемое значение:
// СправочникСсылка.Склады - Найденный склад
// Неопределено - если склад не найден
//
Функция ПолучитьСкладПоступленияПоУмолчанию(Магазин, ТипСклада) Экспорт
	
	Возврат ПолучитьСкладПоУмолчанию(Магазин, ТипСклада);

КонецФункции

// Получает склад поступления по умолчанию
// Параметры:
// Магазин - СправочникСсылка.Магазины
// ТипСклада - ПеречислениеСсылка.ТипыСкладов
//
// Возвращаемое значение:
// СправочникСсылка.Склады - Найденный склад
// Неопределено - если склад не найден
//
Функция ПолучитьСкладПродажиПоУмолчанию(Магазин, ТипСклада) Экспорт
	
	Возврат ПолучитьСкладПоУмолчанию(Магазин, ТипСклада);

КонецФункции

// Проверяет принадлежность склада магазину
// Параметры:
// Магазин - СправочникСсылка.Магазины
// Склад - СправочникСсылка.Склады
// Возвращаемое значение:
// Результат проверки - Булево
Функция ПроверитьПринадлежностьСкладаМагазину(Магазин, Склад) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Склады.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Склады КАК Склады
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Магазины КАК Магазины
	|		ПО Склады.Магазин = Магазины.Ссылка
	|ГДЕ
	|	Склады.Магазин = &Магазин
	|	И Склады.Ссылка = &Склад
	|	И НЕ Магазины.СкладУправляющейСистемы"
	);
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("Склад", Склад);

	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

// Получает реквизиты объекта, которые необходимо блокировать от изменения
//
// Возвращаемое значение:
//	Массив - блокируемые реквизиты объекта
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("Магазин");
	Результат.Добавить("ТипСклада");
		
	Возврат Результат;

КонецФункции

#Область ОбработчикиСобытийМенеджераОбъекта

//	LNK 08.11.2017 15:43:40
Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)

	а = 22;

КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#КонецЕсли


&НаКлиенте
Перем КэшированныеЗначения;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);

//	Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	ДополнительныеКолонкиНоменклатуры = ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ДополнительнаяКолонкаПриОтображенииНоменклатуры");

	СкидкиНаценкиСерверПереопределяемый.ПолучитьСписокЗначенийСпособовПредоставленияСкидки(Элементы.СпособПредоставления.СписокВыбора);

	УстановитьОформлениеЭлементов();

//	Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи Тогда
		Элементы.Управляемая.Доступность = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Наименование = СформироватьАвтоНаименованиеНаСервере();
		ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.НаборПодарков);
	Иначе
		СформироватьАвтоНаименованиеНаСервере();
	КонецЕсли;

	Для каждого ВариантНаименования Из Элементы.Наименование.СписокВыбора Цикл
		Если Объект.Наименование = ВариантНаименования.Значение Тогда
			ИспользуетсяАвтоНаименование = Истина;
		КонецЕсли;
	КонецЦикла;
	Если НЕ ЗначениеЗаполнено(Объект.ТипСкидкиНаценки) тогда 
		Объект.ТипСкидкиНаценки = Перечисления.ТипСкидкиНаценки.СложнаяМеханика;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.НаборПодарков);
	
	Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи Тогда
		Элементы.Управляемая.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте	//	LNK 26.09.2018 13:16:54
Процедура ПриОткрытии(Отказ)

	Если Объект.ПрограммаЛояльности.Пустая() Тогда

		ЭтотОбъект.ТекущийЭлемент = Элементы.ПрограммаЛояльности;

	КонецЕсли;

	УстановитьСписокВыбораСпособПредоставления();

	НазначитьРежимВыдачиПодарков("из_реквизита");

КонецПроцедуры

&НаСервере	//	LNK 09.01.2021 10:12:53
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)


КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	Если Объект.СпособПримененияСкидки.Пустая() Тогда	//	LNK 12.01.2021 05:09:01

		Объект.СпособПримененияСкидки = ПредопределенноеЗначение("Перечисление.СпособыПримененияСкидокНаценок.ПрименитьВМоментРасчетаСкидокНаценок");

	КонецЕсли;
	
	Если Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Подарок") Тогда

		Если Объект.УчитыватьПодарокКакПродажу ИЛИ Объект.ПодарокИзКорзиныПокупателя Тогда

			Если Объект.ЦенаПодарка < 0.1 Тогда

				Отказ = Истина;
				Сообщить("Необходимо указать цену подарка! Цена не может быть меньше 10 копеек.");

			КонецЕсли;

		КонецЕсли;

	Иначе

		Объект.ЦенаПодарка = 0;

	КонецЕсли;

	ОбновитьАвтонаименование(Модифицированность);
	Если ЗначениеЗаполнено(Объект.Поставщик) тогда
		Если НЕ ЗначениеЗаполнено(Объект.ДоляКомпенсации) тогда 
			Сообщить("Заполните долю компенсации!");
			Отказ = Истина;
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(Объект.ТипКомпенсации) тогда 
			Сообщить("Заполните тип компенсации!");
			Отказ = Истина;
		КонецЕсли;	
    КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбработкаТабличнойЧастиТоварыСервер.ЗаполнитьПризнакИспользованияХарактеристик(Объект.НаборПодарков);
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ВидЦеныПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеСкидкиНаценкиПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
	Если Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Сообщение") тогда
		Если Объект.ПечататьСерийныйНомер И Объект.ВариантВыдачиКупона = ПредопределенноеЗначение("Перечисление.ВариантыВыдачиКупона.ПечататьНаЧекеСНоминалом") тогда 
			Если Объект.ЗначениеСкидкиНаценки > 100 или Объект.ЗначениеСкидкиНаценки < 0 тогда 
				Объект.ЗначениеСкидкиНаценки = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СформироватьАвтоНаименованиеНаКлиенте();
	ВыбранныйЭлемент = ВыбратьИзСписка(Элементы.Наименование.СписокВыбора, Элемент);
	Если ВыбранныйЭлемент <> Неопределено Тогда
		
		Объект.Наименование = ВыбранныйЭлемент.Значение;
		
		НаименованиеИзмененоПользователем = Истина;
		Модифицированность                = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	НаименованиеИзмененоПользователем = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбластьПредоставленияПриИзменении(Элемент)
	
	УстановитьОформлениеЭлементов();
	
	ОбновитьАвтонаименование(Истина);
	
КонецПроцедуры

&НаКлиенте	//	LNK 26.09.2018 13:04:05
Процедура РежимВыдачиПодарковПриИзменении(Элемент)

	НазначитьРежимВыдачиПодарков("из_элемента");

	УстановитьОформлениеЭлементов();

	ОбновитьАвтонаименование(Истина);

КонецПроцедуры

&НаКлиенте	//	LNK 10.10.2019 10:37:48
Процедура УчитыватьПодарокКакПродажуПриИзменении(Элемент)

	УстановитьОформлениеЭлементов();

	ОбновитьАвтонаименование(Истина);

КонецПроцедуры

&НаКлиенте	//	LNK 26.09.2018 13:04:05
Процедура НазначитьРежимВыдачиПодарков(Направление)

	Если Направление = "из_элемента" Тогда

		Если РежимВыдачиПодарков = "ПодарокИзКорзиныПокупателя" Тогда

			Объект.ПодарокИзКорзиныПокупателя = Истина;
			Объект.ПодарокИзСписка            = Ложь;

		ИначеЕсли РежимВыдачиПодарков = "ПодарокИзСписка" Тогда

			Объект.ПодарокИзКорзиныПокупателя = Ложь;
			Объект.ПодарокИзСписка            = Истина;

		КонецЕсли;

	ИначеЕсли Направление = "из_реквизита" Тогда

		Если Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Подарок") Тогда

			Если Объект.ПодарокИзКорзиныПокупателя Тогда

				РежимВыдачиПодарков = "ПодарокИзКорзиныПокупателя";

			ИначеЕсли Объект.ПодарокИзСписка Тогда

				РежимВыдачиПодарков = "ПодарокИзСписка";

			КонецЕсли;

		Иначе

			РежимВыдачиПодарков = "";
			Объект.ПодарокИзКорзиныПокупателя = Ложь;
			Объект.ПодарокИзСписка            = Ложь;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СегментНоменклатурыПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СпособПредоставленияПриИзменении(Элемент)
	
	Если Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Подарок") Тогда

		Объект.ПодарокИзКорзиныПокупателя = Истина;
		НазначитьРежимВыдачиПодарков("из_реквизита");

	Иначе

		НазначитьРежимВыдачиПодарков("из_реквизита");

	КонецЕсли;

	УстановитьОформлениеЭлементов();
	СпособПредоставленияПриИзмененииСервер();
	
	ОбновитьАвтонаименование(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособПредоставленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Элемент.СписокВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура УправляемаяПриИзменении(Элемент)
	УправляемаяПриИзмененииСервер();
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "ЦеновыеГруппы"

&НаКлиенте
Процедура ЦеновыеГруппыПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "УсловияПредоставления"

&НаКлиенте
Процедура УсловияПредоставленияПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЧНОЙ ЧАСТИ "НаборПодарков"

&НаКлиенте
Процедура НаборПодарковНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.НаборПодарков.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу"   , ТекущаяСтрока.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", ТекущаяСтрока.Упаковка);
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	ОбработкаТабличнойЧастиТоварыКлиент.ПриИзмененииРеквизитовВТЧКлиент(Объект.НаборПодарков, ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

	Если ТекущаяСтрока.КоличествоУпаковок = 0 Тогда

		ТекущаяСтрока.Количество         = 1;
		ТекущаяСтрока.КоличествоУпаковок = 1;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборПодарковХарактеристикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЦенообразованиеКлиент.ВыбратьХарактеристикуНоменклатуры(ЭтотОбъект, Элемент, СтандартнаяОбработка, Элементы.НаборПодарков.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборПодарковУпаковкаПриИзменении(Элемент)
	
	ПриИзмененииУпаковки(Элементы.НаборПодарков.ТекущиеДанные)
	
КонецПроцедуры

&НаКлиенте
Процедура НаборПодарковУпаковкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЦенообразованиеКлиент.ВыбратьУпаковкуНоменклатуры(ДанныеВыбора, СтандартнаяОбработка, Элементы.НаборПодарков.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура НаборПодарковКоличествоУпаковокПриИзменении(Элемент)
	
	ПриИзмененииУпаковки(Элементы.НаборПодарков.ТекущиеДанные)
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект) Тогда
		ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтотОбъект);
	КонецЕсли;

//	LNK 31.08.2020 10:23:20
	УстановитьОформлениеЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьУсловияПредоставления(Команда)
	
	СписокУсловийПредоставления = Новый СписокЗначений();
	Для Каждого ТекСтрока Из Объект.УсловияПредоставления Цикл
		СписокУсловийПредоставления.Добавить(ТекСтрока.УсловиеПредоставления);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Документ",      Объект.Ссылка);
	ПараметрыФормы.Вставить("УсловияПредоставления", СписокУсловийПредоставления);
	Если Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи") Тогда
		СтруктураОтбораУсловий = Новый Структура;
		СтруктураОтбораУсловий.Вставить("УсловиеПредоставления", ПредопределенноеЗначение("Перечисление.УсловияПредоставленияСкидокНаценок.ЗаВремяПродажи"));
		ПараметрыФормы.Вставить("Отбор", СтруктураОтбораУсловий);
	КонецЕсли;
	
	СписокУсловийПредоставления = ОткрытьФормуМодально("Справочник.УсловияПредоставленияСкидокНаценок.Форма.ФормаПодбора", ПараметрыФормы, ЭтотОбъект);
	
	Если СписокУсловийПредоставления <> Неопределено Тогда
		
		Объект.УсловияПредоставления.Очистить();
		
		Для Каждого ТекСтрока Из СписокУсловийПредоставления Цикл
			
			НоваяСтрока = Объект.УсловияПредоставления.Добавить();
			НоваяСтрока.УсловиеПредоставления = ТекСтрока.Значение;
			
		КонецЦикла;
		
		ОбновитьАвтонаименование(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// + HVOYA 13.09.2016 15:06:50, Латышев А.А.
&НаСервереБезКонтекста
Функция hiПолучитьРодителяНаСервере(Условие)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Условие,"Родитель");
КонецФункции // hiПолучитьРодителяНаСервере(Объект.УсловияПредоставления[0])()

&НаКлиенте
Процедура ДиапазонПроцентовПриИзменении(Элемент)
	ОбновитьАвтонаименование(Истина);
КонецПроцедуры
// - HVOYA 13.09.2016 15:06:50, Латышев А.А.

// +HVOYA. 26.09.2016 11:01:07, Львова Е.А.
&НаКлиенте
Процедура ВыдатьСкидочныйКупонПриИзменении(Элемент)
	УстановитьОформлениеЭлементов();
КонецПроцедуры
// -HVOYA. 26.09.2016 11:01:15, Львова Е.А.


&НаКлиенте
Процедура ПечататьСерийныйНомерПриИзменении(Элемент)
	Если Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Сообщение") тогда
		Если Объект.ПечататьСерийныйНомер И Объект.ВариантВыдачиКупона = ПредопределенноеЗначение("Перечисление.ВариантыВыдачиКупона.ПечататьНаЧекеСНоминалом") тогда 
			Элементы.ЗначениеСкидкиНаценки.Видимость 	 =  Истина;
			Элементы.ЗначениеСкидкиНаценки.Доступность 	 =  Истина;
			Элементы.ДекорацияПроцент.Видимость 	 	 =  Истина;				
		Иначе	
			Элементы.ЗначениеСкидкиНаценки.Видимость 	 =  Ложь;
			Элементы.ЗначениеСкидкиНаценки.Видимость 	 =  Ложь;			
			Элементы.ДекорацияПроцент.Видимость 		 =  Ложь;  
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ВариантВыдачиКупонаПриИзменении(Элемент)
	
	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаКлиенте	//	LNK 14.01.2021 12:42:35
Процедура ПрограммаЛояльностиПриИзменении(Элемент)

	УстановитьСпособПримененияСкидки();
	УстановитьСписокВыбораСпособПредоставления();
	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаСервере
Процедура УстановитьСпособПримененияСкидки()

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаСправочник.СпособПримененияСкидки КАК СпособПримененияСкидки
	|ИЗ
	|	Справочник.ПрограммыЛояльности КАК ТаблицаСправочник
	|ГДЕ
	|	ТаблицаСправочник.Ссылка = &ПрограммаЛояльности"
	);
	Запрос.УстановитьПараметр("ПрограммаЛояльности", Объект.ПрограммаЛояльности);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда

		ЗаполнитьЗначенияСвойств(Объект, Выборка);

	КонецЕсли;

КонецПроцедуры

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьСписокВыбораСпособПредоставления()

	СписокВыбора = Новый Массив;

	Если Объект.СпособПримененияСкидки = ПредопределенноеЗначение("Перечисление.СпособыПримененияСкидокНаценок.НачислитьБонусныеБаллы") Тогда

		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Процент"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Сумма"));

	ИначеЕсли Объект.СпособПримененияСкидки = ПредопределенноеЗначение("Перечисление.СпособыПримененияСкидокНаценок.ПрименитьВМоментРасчетаСкидокНаценок") Тогда

		СписокВыбора = ПолучитьВсеСпособыПредоставленияСкидки();

	Иначе

	//	установим только одно значение, которое назначено объекту.
		СписокВыбора.Добавить(Объект.СпособПредоставления);

	КонецЕсли;

	Элементы.СпособПредоставления.СписокВыбора.ЗагрузитьЗначения(СписокВыбора);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВсеСпособыПредоставленияСкидки()

	СписокЭлементов = Новый Массив;

	Для каждого ЭлементПеречисления Из Перечисления.СпособыПредоставленияСкидокНаценок Цикл
		
		СписокЭлементов.Добавить(ЭлементПеречисления);

	КонецЦикла;

	Возврат СписокЭлементов;

КонецФункции

&НаСервере
Процедура УстановитьОформлениеЭлементов()

	Элементы.Страницы.ТолькоПросмотр = Объект.ПрограммаЛояльности.Пустая();
//	.. определим критерий "наполнения" формы:
	НачислениеБонусныхБаллов = (Объект.СпособПримененияСкидки = ПредопределенноеЗначение("Перечисление.СпособыПримененияСкидокНаценок.НачислитьБонусныеБаллы"));

	Элементы.ДекорацияПроцент.Заголовок		 = "%";
	Элементы.ЗначениеСкидкиНаценки.Заголовок = "";	//	LNK 11.09.2018 13:46:30
	Элементы.ЗначениеСкидкиНаценки.Подсказка = Метаданные.Справочники.СкидкиНаценки.Реквизиты.ЗначениеСкидкиНаценки.Подсказка;
	Элементы.ЗначениеСкидкиНаценки.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	Элементы.ОбластьПредоставления.ТолькоПросмотр = Ложь;
	Элементы.ГруппаШкалаКратностей.Видимость	  = Ложь;
	Элементы.ГруппаКомплекснаяПокупка.Видимость   = Ложь;
	Элементы.СегментНоменклатурыПредоставления.Видимость = Истина;

	Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВидЦены Тогда
		
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь;	// В виде цен есть собственные ценовые группы.
		Элементы.ГруппаУправляемаяИВыдачаКупона.Видимость = Истина;	//	LNK 18.09.2018 10:36:33
		
		Элементы.ВидЦены.Видимость               = Истина;
		
		Элементы.ГруппаПодаркиУправление.Видимость = Ложь;
		Элементы.ГруппаНаборПодарков.Видимость     = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.ГруппаОбластьПредоставления.Видимость = Истина;
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
		
		Элементы.ТипСкидкиНаценки.Видимость     = Истина;	//	LNK 18.09.2018 10:28:47
		Элементы.УчаствуетВПереоценке.Видимость = Истина;	//	LNK 18.09.2018 10:28:47

		Элементы.ВыдатьСкидочныйКупон.Видимость = Ложь;
		Элементы.ГруппаВыдачаКупона.Видимость = Ложь;	//	LNK 18.09.2018 10:44:05

	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Процент
		ИЛИ Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыПредыдущейПокупки Тогда

		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ДекорацияПроцент.Видимость      = Истина;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Истина;
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Истина;
		Элементы.ГруппаУправляемаяИВыдачаКупона.Видимость = Истина;	//	LNK 18.09.2018 10:36:33
		
		Элементы.ГруппаПодаркиУправление.Видимость = Ложь;
		Элементы.ГруппаНаборПодарков.Видимость   = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.ГруппаОбластьПредоставления.Видимость = Истина;
		
		Элементы.ТипСкидкиНаценки.Видимость     = Истина;	//	LNK 18.09.2018 10:28:47
		Элементы.УчаствуетВПереоценке.Видимость = Истина;	//	LNK 18.09.2018 10:28:47

		Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыПредыдущейПокупки Тогда
			Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Истина;
		Иначе
			Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
		КонецЕсли;
		
		Элементы.ВыдатьСкидочныйКупон.Видимость = Ложь;
		Элементы.ГруппаВыдачаКупона.Видимость = Ложь;	//	LNK 18.09.2018 10:44:05

	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.НоминалКупона Тогда

	//	LNK 11.09.2018 13:41:08
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ДекорацияПроцент.Видимость      = Истина;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Истина;
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь;
		Элементы.ГруппаУправляемаяИВыдачаКупона.Видимость = Ложь;	//	LNK 18.09.2018 10:36:33
		
		Элементы.ГруппаПодаркиУправление.Видимость = Ложь;
		Элементы.ГруппаНаборПодарков.Видимость     = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.ГруппаОбластьПредоставления.Видимость = Истина;
		
		Элементы.ВыдатьСкидочныйКупон.Видимость = Ложь;
		
		Элементы.ТипСкидкиНаценки.Видимость     = Истина;	//	LNK 18.09.2018 10:28:47
		Элементы.УчаствуетВПереоценке.Видимость = Истина;	//	LNK 18.09.2018 10:28:47

		Элементы.ЗначениеСкидкиНаценки.Доступность = Истина;
		Элементы.ЗначениеСкидкиНаценки.Заголовок   = "ограничение";
		Элементы.ЗначениеСкидкиНаценки.Подсказка   = "Процент ограничения от суммы продажи относительно номинала купона";
		Элементы.ЗначениеСкидкиНаценки.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;

		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Истина;

		Элементы.ГруппаВыдачаКупона.Видимость = Ложь;	//	LNK 18.09.2018 10:44:05

	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ПакетКупоновКратныйСумме Тогда
		
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ДекорацияПроцент.Видимость      = Истина;
		Элементы.ДекорацияПроцент.Заголовок		 = "грн";
		Элементы.ЗначениеСкидкиНаценки.Видимость = Истина;
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь;
		Элементы.ГруппаУправляемаяИВыдачаКупона.Видимость = Ложь;
		
		Элементы.ГруппаПодаркиУправление.Видимость = Ложь;
		Элементы.ГруппаНаборПодарков.Видимость     = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Истина; 
		Элементы.ГруппаОбластьПредоставления.Видимость = Истина;

		Элементы.ОбластьПредоставления.ТолькоПросмотр = Истина;

		Если НЕ Объект.ОбластьПредоставления = ПредопределенноеЗначение("Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе") Тогда

			Объект.ОбластьПредоставления = ПредопределенноеЗначение("Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе"); 

		КонецЕсли;
		
		Элементы.ВыдатьСкидочныйКупон.Видимость = Ложь;
		
		Элементы.ТипСкидкиНаценки.Видимость     = Ложь;
		Элементы.УчаствуетВПереоценке.Видимость = Ложь;

		Элементы.ЗначениеСкидкиНаценки.Доступность = Истина;
		Элементы.ЗначениеСкидкиНаценки.Заголовок   = "Делитель";
		Элементы.ЗначениеСкидкиНаценки.Подсказка   = "Сумма определяет делитель полной суммы документа продажи";
		Элементы.ЗначениеСкидкиНаценки.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Лево;

		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Истина;

		Элементы.ГруппаШкалаКратностей.Видимость = Истина;

		Элементы.ГруппаВыдачаКупона.Видимость = Ложь;
		Элементы.ГруппаПодвалЧека.Видимость  = Ложь;
		Элементы.ГруппаКомпенсация.Видимость = Ложь;

	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сумма Тогда
		
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ЗначениеСкидкиНаценки.Видимость = Истина;
		
		Если Объект.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе Тогда
			
			Элементы.ГруппаЦеновыеГруппы.Видимость = Ложь;
			
		ИначеЕсли Объект.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВСтроке Тогда
			
			Элементы.ГруппаЦеновыеГруппы.Видимость = Истина;
			
		Иначе
			
			Элементы.ГруппаЦеновыеГруппы.Видимость = Ложь;
			
		КонецЕсли;
		
		Элементы.ГруппаУправляемаяИВыдачаКупона.Видимость = Истина;	//	LNK 18.09.2018 10:36:33

		Элементы.ГруппаПодаркиУправление.Видимость = Ложь;
		Элементы.ГруппаНаборПодарков.Видимость     = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.ГруппаОбластьПредоставления.Видимость = Истина;
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
		
		Элементы.ТипСкидкиНаценки.Видимость     = Истина;	//	LNK 18.09.2018 10:28:47
		Элементы.УчаствуетВПереоценке.Видимость = Истина;	//	LNK 18.09.2018 10:28:47
		
		Элементы.ВыдатьСкидочныйКупон.Видимость = Ложь;
		Элементы.ГруппаВыдачаКупона.Видимость = Ложь;	//	LNK 18.09.2018 10:44:05

	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Подарок Тогда
		
		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь; 
		Элементы.ГруппаУправляемаяИВыдачаКупона.Видимость = Истина;	//	LNK 18.09.2018 10:36:33
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ГруппаОбластьПредоставления.Видимость = Объект.ПодарокИзКорзиныПокупателя;
		
		Элементы.ТипСкидкиНаценки.Видимость     = Истина;	//	LNK 18.09.2018 10:28:47
		Элементы.УчаствуетВПереоценке.Видимость = Истина;	//	LNK 18.09.2018 10:28:47
		
		Элементы.КоличествоПодарковИзКорзиныПокупателя.Видимость = Истина;
		Элементы.ЦенаПодарка.Видимость = Объект.УчитыватьПодарокКакПродажу ИЛИ Объект.ПодарокИзКорзиныПокупателя;
		Элементы.ЦенаПодарка.АвтоОтметкаНезаполненного = Элементы.ЦенаПодарка.Видимость;

		Элементы.ГруппаПодаркиУправление.Видимость = Истина;
		Элементы.ГруппаНаборПодарков.Видимость     = Объект.ПодарокИзСписка; 

		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь;
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;

		Элементы.ВыдатьСкидочныйКупон.Видимость = Ложь;
		Элементы.ГруппаВыдачаКупона.Видимость = Ложь;	//	LNK 18.09.2018 10:44:05

	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.БесплатнаяДоставка Тогда	//	LNK 11.11.2021 14:05:39

		Элементы.ГруппаЦеновыеГруппы.Видимость = Ложь; 
		Элементы.ГруппаУправляемаяИВыдачаКупона.Видимость = Ложь;	//	LNK 18.09.2018 10:36:33
		Элементы.ВидЦены.Видимость = Ложь;
		
		Элементы.ГруппаОбластьПредоставления.Видимость		 = Истина;
		
		Элементы.ГруппаПодаркиУправление.Видимость = Ложь;
		Элементы.ГруппаНаборПодарков.Видимость     = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь;
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
		
		Элементы.ВыдатьСкидочныйКупон.Видимость = Ложь;

		Элементы.ГруппаВыдачаКупона.Видимость   = Ложь;	//	LNK 18.09.2018 10:44:05
		Элементы.ГруппаСкидочныйКупон.Видимость = Объект.ВыдатьСкидочныйКупон;	// +HVOYA. 26.09.2016 10:56:27, Львова Е.А.

		Элементы.ЗначениеСкидкиНаценки.Видимость   = Ложь;
		Элементы.ЗначениеСкидкиНаценки.Доступность = Ложь;
		Элементы.ДекорацияПроцент.Видимость        = Ложь;

		Элементы.УчаствуетВПереоценке.Видимость = Ложь;

	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сообщение Тогда

		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь; 
		Элементы.ГруппаУправляемаяИВыдачаКупона.Видимость = Истина;	//	LNK 18.09.2018 10:36:33
		Элементы.ВидЦены.Видимость = Ложь;
		
		Элементы.ГруппаОбластьПредоставления.Видимость		 = Ложь;
		
		Элементы.ГруппаПодаркиУправление.Видимость = Ложь;
		Элементы.ГруппаНаборПодарков.Видимость     = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Истина;
		Элементы.ГруппаСообщение.Видимость       = Истина;
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
		
		Элементы.ВыдатьСкидочныйКупон.Видимость = Истина;

		Элементы.ГруппаВыдачаКупона.Видимость   = Истина;	//	LNK 18.09.2018 10:44:05
		Элементы.ГруппаСкидочныйКупон.Видимость = Объект.ВыдатьСкидочныйКупон;	// +HVOYA. 26.09.2016 10:56:27, Львова Е.А.

		Если Объект.ПечататьСерийныйНомер И Объект.ВариантВыдачиКупона = Перечисления.ВариантыВыдачиКупона.ПечататьНаЧекеСНоминалом Тогда

			Элементы.ЗначениеСкидкиНаценки.Видимость	 =  Истина;
			Элементы.ЗначениеСкидкиНаценки.Доступность 	 =  Истина;
			Элементы.ДекорацияПроцент.Видимость 	 	 =  Истина;

		Иначе

			Элементы.ЗначениеСкидкиНаценки.Видимость   = Ложь;
			Элементы.ЗначениеСкидкиНаценки.Доступность = Ложь;
			Элементы.ДекорацияПроцент.Видимость        = Ложь;

		КонецЕсли;

	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи Тогда

		Элементы.ДекорацияПроцент.Видимость      = Ложь;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь; 
		Элементы.ГруппаУправляемаяИВыдачаКупона.Видимость = Истина;	//	LNK 18.09.2018 10:36:33
		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ГруппаОбластьПредоставления.Видимость = Ложь;
		
		Элементы.ГруппаПодаркиУправление.Видимость = Ложь;
		Элементы.ГруппаНаборПодарков.Видимость     = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Истина;

		Элементы.ВыдатьСкидочныйКупон.Видимость = Ложь;

		Элементы.ГруппаВыдачаКупона.Видимость = Ложь;	//	LNK 18.09.2018 10:44:05
		
	// + HVOYA 13.09.2016 13:42:44, Латышев А.А.
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ДиапазонПроцентов Тогда

		Элементы.ВидЦены.Видимость = Ложь;
		
		Элементы.ГруппаЦеновыеГруппы.Видимость = Ложь;
		Элементы.ГруппаУправляемаяИВыдачаКупона.Видимость = Истина;	//	LNK 18.09.2018 10:36:33
		
		Элементы.ГруппаПодаркиУправление.Видимость = Ложь;
		Элементы.ГруппаНаборПодарков.Видимость     = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.ГруппаОбластьПредоставления.Видимость = Истина;
		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
		
		Элементы.ТипСкидкиНаценки.Видимость     = Истина;	//	LNK 18.09.2018 10:28:47
		Элементы.УчаствуетВПереоценке.Видимость = Истина;	//	LNK 18.09.2018 10:28:47
		
		Элементы.ГруппаДиапазонСкидок.Видимость = Истина;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		Элементы.ДекорацияПроцент.Видимость = Ложь;
		Элементы.СегментНоменклатурыПредоставления.Видимость = Ложь;

		Элементы.ГруппаВыдачаКупона.Видимость = Ложь;	//	LNK 18.09.2018 10:44:05
	
	// + HVOYA 13.09.2016 13:42:44, Латышев А.А.
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.КомплекснаяПокупка Тогда

		Элементы.ВидЦены.Видимость               = Ложь;
		
		Элементы.ГруппаЦеновыеГруппы.Видимость   = Ложь;
		Элементы.ГруппаУправляемаяИВыдачаКупона.Видимость = Истина;	//	LNK 18.09.2018 10:36:33
		
		Элементы.ГруппаПодаркиУправление.Видимость = Ложь;
		Элементы.ГруппаНаборПодарков.Видимость     = Ложь; 
		
		Элементы.МоментВыдачиСообщения.Видимость = Ложь;
		Элементы.ГруппаСообщение.Видимость       = Ложь; 
		Элементы.ГруппаОбластьПредоставления.Видимость = Истина;

		Элементы.УсловияПредоставления.АвтоОтметкаНезаполненного = Ложь;
		
		Элементы.ТипСкидкиНаценки.Видимость     = Истина;	//	LNK 18.09.2018 10:28:47
		Элементы.УчаствуетВПереоценке.Видимость = Истина;	//	LNK 18.09.2018 10:28:47
		
		Элементы.ГруппаКомплекснаяПокупка.Видимость = Истина;
		Элементы.ЗначениеСкидкиНаценки.Видимость = Ложь;
		Элементы.ДекорацияПроцент.Видимость = Ложь;
		Элементы.СегментНоменклатурыПредоставления.Видимость = Истина;

		Элементы.ГруппаВыдачаКупона.Видимость = Ложь;	//	LNK 18.09.2018 10:44:05

	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьАвтонаименование(Обновить = Истина)
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) ИЛИ (Обновить И ИспользуетсяАвтоНаименование И Не НаименованиеИзмененоПользователем) Тогда
		Объект.Наименование = СформироватьАвтоНаименованиеНаКлиенте();
		ИспользуетсяАвтоНаименование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция КоэффициентУпаковки(Упаковка)

	Возврат Упаковка.Коэффициент

КонецФункции

&НаКлиенте
Процедура ПриИзмененииУпаковки(ТекДанные)

	Если ЗначениеЗаполнено(ТекДанные.Упаковка)  Тогда
	
		Коэффициент = КоэффициентУпаковки(ТекДанные.Упаковка);
		
	Иначе
		
		Коэффициент = 1;
	
	КонецЕсли;
	
	ТекДанные.Количество = Коэффициент * ТекДанные.КоличествоУпаковок;

КонецПроцедуры

&НаКлиенте
Функция СформироватьАвтоНаименованиеНаКлиенте()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокаНаименования = "";
	
	Если Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Процент") Тогда
		
		СтрокаНаименования = "" + Объект.ЗначениеСкидкиНаценки + НСтр("ru = '%'") + 
		?(Объект.ОбластьПредоставления = ПредопределенноеЗначение("Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе"),
		?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " + НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,""),
		" " +НСтр("ru = 'в строке'")+?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления),НСтр("ru = ', если номенклатура входит в сегмент'")+ " " +Объект.СегментНоменклатурыПредоставления,"")
		);
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Сумма") Тогда
		
		СтрокаНаименования = "" + Объект.ЗначениеСкидкиНаценки + 
		?(Объект.ОбластьПредоставления = ПредопределенноеЗначение("Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе"),
		?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " +НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,""),
		" " +НСтр("ru = 'на строку'")+?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления),НСтр("ru = ', если номенклатура входит в сегмент'")+ " " +Объект.СегментНоменклатурыПредоставления,"")
		);
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ВидЦены") Тогда
		
		СтрокаНаименования = НСтр("ru = 'Вид цены'") + " " + Объект.ВидЦены + 
		?(Объект.ОбластьПредоставления = ПредопределенноеЗначение("Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе"),
		?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " +НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,""),
		" " +НСтр("ru = 'в строке'")+?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления),НСтр("ru = ', если номенклатура входит в сегмент'")+ " " +Объект.СегментНоменклатурыПредоставления,"")
		);
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Подарок") Тогда
		
		СтрокаНаименования = НСтр("ru = 'Подарок'");
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.Сообщение")  Тогда
		
		СтрокаНаименования = НСтр("ru = 'Сообщение кассиру'");
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ПроцентОтСуммыПредыдущейПокупки") Тогда
		
		СтрокаНаименования = "" + Объект.ЗначениеСкидкиНаценки + НСтр("ru = '% от суммы предыдущей покупки'");
		Если Объект.ОбластьПредоставления = ПредопределенноеЗначение("Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе") Тогда
			СтрокаНаименования = СтрокаНаименования
				+ ?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " + НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,"");
		Иначе
			СтрокаНаименования = СтрокаНаименования + " " + НСтр("ru = 'в строке'")
				+ ?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления), НСтр("ru = ', если номенклатура входит в сегмент'")+ " " + Объект.СегментНоменклатурыПредоставления, "");
		КонецЕсли;
		
		
	ИначеЕсли Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи") Тогда
		
		СтрокаНаименования = НСтр("ru = 'Запрет розничной продажи'");
		
	КонецЕсли;
	
	Если Объект.Управляемая Тогда
		СтрокаНаименования = НСтр("ru = 'Назначается вручную:'") + " " + СтрокаНаименования;
	КонецЕсли;
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Если Объект.УсловияПредоставления.Количество() = 1 Тогда
		СтрокаНаименования = СтрокаНаименования + " ("+Объект.УсловияПредоставления[0].УсловиеПредоставления+")";
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	ИначеЕсли Объект.УсловияПредоставления.Количество() > 1 Тогда
		
		КоличествоУсловий = Объект.УсловияПредоставления.Количество();
		
		Если КоличествоУсловий >= 2 Тогда
			СтрокаНаименования = СтрокаНаименования + " " +НСтр("ru = '(несколько условий)'");
			Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		КонецЕсли;
		
	ИначеЕсли Объект.УсловияПредоставления.Количество() = 0 Тогда
		СтрокаНаименования = СтрокаНаименования + " " + НСтр("ru = 'без условий'");
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Если Объект.ЦеновыеГруппы.Количество() > 0 Тогда
		СтрокаНаименования = СтрокаНаименования + " " +НСтр("ru = '(с уточнением по ценовым группам)'");
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	// + HVOYA 13.09.2016 14:21:14, Латышев А.А.
	Если Объект.СпособПредоставления = ПредопределенноеЗначение("Перечисление.СпособыПредоставленияСкидокНаценок.ДиапазонПроцентов") Тогда
		СтрокаНаименования = "";
		КоличествоСегментов = Объект.УсловияПредоставления.Количество();
		Если КоличествоСегментов > 0 Тогда
			Программа = hiПолучитьРодителяНаСервере(Объект.УсловияПредоставления[0].УсловиеПредоставления); 
		Иначе
			Программа = " ";
		КонецЕсли; 
		СтрокаНаименования = "Комплексная покупка по программе " + Программа + ", на " + Объект.УсловияПредоставления.Количество() + " сегментов, ";
		Для каждого Строка Из Объект.ДиапазонПроцентов Цикл
			СтрокаНаименования = СтрокаНаименования + Строка.Процент + "% "
		КонецЦикла;
		СтрокаНаименования = СтрокаНаименования + " соответственно."
	КонецЕсли;
	// - HVOYA 13.09.2016 14:21:14, Латышев А.А. 
	
	Возврат СтрокаНаименования;

КонецФункции

&НаСервере
Функция СформироватьАвтоНаименованиеНаСервере()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	СтрокаНаименования = "";
	
	Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Процент Тогда
		
		СтрокаНаименования = "" + Объект.ЗначениеСкидкиНаценки + НСтр("ru = '%'") + 
		?(Объект.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе,
		?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " + НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,""),
		" " +НСтр("ru = 'в строке'")+?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления),НСтр("ru = ', если номенклатура входит в сегмент'")+ " " +Объект.СегментНоменклатурыПредоставления,"")
		);
		
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сумма Тогда
		
		СтрокаНаименования = "" + Объект.ЗначениеСкидкиНаценки + 
		?(Объект.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе,
		?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " +НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,""),
		" " +НСтр("ru = 'на строку'")+?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления),НСтр("ru = ', если номенклатура входит в сегмент'")+ " " +Объект.СегментНоменклатурыПредоставления,"")
		);
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ВидЦены Тогда
		
		СтрокаНаименования = НСтр("ru = 'Вид цены'") + " " + Объект.ВидЦены + 
		?(Объект.ОбластьПредоставления = Перечисления.ВариантыОбластейОграниченияСкидокНаценок.ВДокументе,
		?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления)," " +НСтр("ru = 'на номенклатуру сегмента'")+ " " +Объект.СегментНоменклатурыПредоставления,""),
		" " +НСтр("ru = 'в строке'")+?(ЗначениеЗаполнено(Объект.СегментНоменклатурыПредоставления),НСтр("ru = ', если номенклатура входит в сегмент'")+ " " +Объект.СегментНоменклатурыПредоставления,"")
		);
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Подарок Тогда
		
		СтрокаНаименования = НСтр("ru = 'Подарок'");
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.Сообщение Тогда
		
		СтрокаНаименования = НСтр("ru = 'Сообщение кассиру'");
		
	ИначеЕсли Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи Тогда
		
		СтрокаНаименования = НСтр("ru = 'Запрет розничной продажи'");
		
	КонецЕсли;
	
	Если Объект.Управляемая Тогда
		СтрокаНаименования = НСтр("ru = 'Назначается вручную:'") + " " + СтрокаНаименования;
	КонецЕсли;
	
	Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	
	Если Объект.УсловияПредоставления.Количество() = 1 Тогда
		СтрокаНаименования = СтрокаНаименования + " ("+Объект.УсловияПредоставления[0].УсловиеПредоставления+")";
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	ИначеЕсли Объект.УсловияПредоставления.Количество() > 1 Тогда
		
		КоличествоУсловий = Объект.УсловияПредоставления.Количество();
		
		Если КоличествоУсловий >= 2 Тогда
			СтрокаНаименования = СтрокаНаименования + " " +НСтр("ru = '(несколько условий)'");
			Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		КонецЕсли;
		
	ИначеЕсли Объект.УсловияПредоставления.Количество() = 0 Тогда
		СтрокаНаименования = СтрокаНаименования + " " + НСтр("ru = 'без условий'");
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Если Объект.ЦеновыеГруппы.Количество() > 0 Тогда
		СтрокаНаименования = СтрокаНаименования + " " +НСтр("ru = '(с уточнением по ценовым группам)'");
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
	КонецЕсли;
	
	Возврат СтрокаНаименования;

КонецФункции

&НаСервере
Процедура УправляемаяПриИзмененииСервер()
	Если Объект.Управляемая
		И Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи Тогда
		Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ПустаяСсылка();
		ТекстСообщения = НСтр("ru = 'Запрет розничной продажи используется только в автоматических скидках'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			Объект,
			"Объект.СпособПредоставления",
			,
			Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СпособПредоставленияПриИзмененииСервер()

	Если Объект.СпособПредоставления = Перечисления.СпособыПредоставленияСкидокНаценок.ЗапретРозничнойПродажи Тогда

		Элементы.Управляемая.Доступность = Ложь;

		Если Объект.Управляемая Тогда

			Объект.Управляемая = Ложь;
			ТекстСообщения = НСтр("ru = 'Запрет розничной продажи используется только в автоматических скидках'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				Объект,
				"Объект.Управляемая",
				,
				Истина);

		КонецЕсли;

	Иначе

		Элементы.Управляемая.Доступность = Истина;

	КонецЕсли;

КонецПроцедуры
	
#КонецОбласти















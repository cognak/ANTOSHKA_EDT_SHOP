#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Функция определяет банковский счет выбранного контрагента или физического лица.
//
// Возвращает банковский счет получателя, если найден один банковский счет.
// Возвращает Неопределено, если банковский счет не найден или счетов больше одного
//
// Параметры:
//  Получатель - СправочникСсылка.Контрагенты или СправочникСсылка.ФизическиеЛица - Ссылка на получателя
//	Валюта - СправочникСсылка.Валюты - Валюта банковского счета
//
// Возвращаемое значение:
//	СправочникСсылка.БанковскиеСчетаКонтрагентов - Найденный банковский счет получателя
//
Функция ПолучитьБанковскийСчетПоУмолчанию(Получатель) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	БанковскиеСчетаКонтрагентов.Ссылка КАК БанковскийСчетПолучателя
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|ГДЕ
	|	Не БанковскиеСчетаКонтрагентов.ПометкаУдаления
	|	И БанковскиеСчетаКонтрагентов.Владелец = &Получатель
	|");
	
	Запрос.УстановитьПараметр("Получатель", Получатель);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		БанковскийСчетПолучателя = Выборка.БанковскийСчетПолучателя;
	Иначе
		БанковскийСчетПолучателя = Справочники.БанковскиеСчетаКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	
	Возврат БанковскийСчетПолучателя;

КонецФункции // ПолучитьБанковскийСчетПоУмолчанию()

// Функция получает реквизиты банковского счета.
//
// Параметры:
//  БанковскийСчетОрганизации - СправочникСсылка.БанковскиеСчетаОрганизаций - Ссылка на банковский счет
//
// Возвращаемое значение:
//	Структура - Организация и валюта банковского счета
//
Функция ПолучитьРеквизитыБанковскогоСчета(БанковскийСчет) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	БанковскиеСчетаКонтрагентов.НомерСчета КАК НомерСчета,
	|	БанковскиеСчетаКонтрагентов.Банк КАК Банк,
	|
	|	ВЫБОР
	|		КОГДА БанковскиеСчетаКонтрагентов.РучноеИзменениеРеквизитовБанка
	|			ТОГДА БанковскиеСчетаКонтрагентов.КодБанка
	|		ИНАЧЕ БанковскиеСчетаКонтрагентов.Банк.Код
	|	КОНЕЦ КАК КодБанка
	|ИЗ
	|	Справочник.БанковскиеСчетаКонтрагентов КАК БанковскиеСчетаКонтрагентов
	|ГДЕ
	|	БанковскиеСчетаКонтрагентов.Ссылка = &БанковскийСчет
	|");
	
	Запрос.УстановитьПараметр("БанковскийСчет", БанковскийСчет);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		НомерСчета = Выборка.НомерСчета;
		Банк = Выборка.Банк;
		КодБанка = Выборка.КодБанка;
	Иначе
		НомерСчета = "";
		Банк = Неопределено;
		//КоррСчет = "";
		КодБанка = "";
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("НомерСчета, Банк, КодБанка",
		НомерСчета,
		Банк,
		КодБанка
	);

	
	Возврат СтруктураРеквизитов;

КонецФункции

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	Результат = Новый Массив;
	Результат.Добавить("Владелец");
	Возврат Результат;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 

#КонецЕсли

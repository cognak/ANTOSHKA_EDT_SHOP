///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;
	
	ПроверитьДоступностьРеквизитов();
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, Объект, "СтраницаДополнительныеРеквизиты");
	// Конец СтандартныеПодсистемы.Свойства
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ДополнительныеОтчетыИОбработки
	
	// Обработчик подсистемы "Контактная информация"
	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "СтраницаКонтактнаяИнформация");
	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.СкладПоступления) Тогда
		НоваяСтрока = ЭтотОбъект.ПараметрыЗапретаРедактированияРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизита","СкладПоступления"))[0];
		НоваяСтрока.РедактированиеРазрешено = НоваяСтрока.ПравоРедактирования;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.СкладПродажи) Тогда
		НоваяСтрока = ЭтотОбъект.ПараметрыЗапретаРедактированияРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизита","СкладПродажи"))[0];
		НоваяСтрока.РедактированиеРазрешено = НоваяСтрока.ПравоРедактирования;
	КонецЕсли;
	
//	LNK 14.11.2022 06:42:37
	Элементы.ФормаОбщаяКомандаСброситьКодИзменения.Видимость = РольДоступна(Метаданные.Роли.АдминистраторСистемы) И ТехническаяПоддержкаВызовСервера.ИсключительныйРежим();

	Если Объект.СкладУправляющейСистемы Тогда

	//	LNK 30.08.2016 14:59:03
	//	Элементы.СтраницаОсновные.Видимость = Ложь;
		Элементы.ГруппаСкладНомерМагазина.Видимость     = Ложь;
		Элементы.ГруппаОрдернаяСхема.Видимость          = Ложь;
		Элементы.ГруппаЦенообразование.Видимость        = Ложь;
		Элементы.ИспользоватьПрямуюИнкассацию.Видимость = Ложь;
	//	LNK 13.09.2016 08:04:58
		Элементы.ГруппаПараметрыЭксплуатации.Видимость  = Ложь;
	//	LNK 11.11.2022 06:27:05
		Элементы.СкладСвязи.Видимость = ТехническаяПоддержкаВызовСервера.ОтладочныйРежимРаботы();

	Иначе

		Элементы.СкладПереброски.Видимость	= Ложь;
		Элементы.СкладСвязи.Видимость		= Ложь;

	КонецЕсли;
	
	УстановитьПараметрыВыбораВидаМинимальныхЦенПродажи();
	
	ИспользоватьАссортимент = АссортиментСервер.ПолучитьФункциональнуюОпциюИспользованияАссортимента();
	Если ИспользоватьАссортимент Тогда
		Элементы.ГруппаЦенообразование.Заголовок = НСтр("ru = 'Ценообразование и ассортиментная политика'");
		Элементы.ПравилоЦенообразования.Доступность = НЕ Объект.КонтролироватьАссортимент;
		Элементы.ФорматМагазина.АвтоОтметкаНезаполненного = Объект.КонтролироватьАссортимент;
	Иначе
		Элементы.ГруппаЦенообразование.Заголовок = НСтр("ru = 'Ценообразование'");
		Элементы.ФорматМагазина.Видимость=Ложь;
		Элементы.КонтролироватьАссортимент.Видимость=Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОформлениеНекоторыхЭлементов();

	Если НЕ ЗначениеЗаполнено(Объект.СкладПоступления) Тогда
		Элементы.СкладПоступления.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.СкладПродажи) Тогда
		Элементы.СкладПродажи.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	Если ИспользоватьАссортимент Тогда
		Элементы.ФорматМагазина.АвтоОтметкаНезаполненного = Объект.КонтролироватьАссортимент;
	КонецЕсли;
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
		
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	// Обработчик подсистемы "Контактная информация"
	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект, Отказ);
	
	Если ЭтоАдресВременногоХранилища(СсылкаНаПодпись) тогда
		ТекущийОбъект.Подпись = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(СсылкаНаПодпись));
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.СкладПродажи) Тогда
		Элементы.СкладПродажи.ТолькоПросмотр = Ложь;
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.СкладПоступления) Тогда
		Элементы.СкладПоступления.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	

	// СтандартныеПодсистемы.КонтактнаяИнформация
	Если НЕ ТехническаяПоддержкаПовтИсп.ОтладочныйРежимРаботы() Тогда	//	LNK 11.11.2022 06:37:11

		УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);

	КонецЕсли;
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ПравилоЦенообразованияПриИзменении(Элемент)
	
	ПриИзмененииПравилоЦенообразования();
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоЦенообразованияАкцияПриИзменении(Элемент)

	
КонецПроцедуры

&НаКлиенте
Процедура ФорматМагазинаПриИзменении(Элемент)
	ФорматМагазинаПриИзмененииСервер();
КонецПроцедуры

&НаКлиенте
Процедура КонтролироватьАссортиментПриИзменении(Элемент)
	
	Элементы.ФорматМагазина.АвтоОтметкаНезаполненного = Объект.КонтролироватьАссортимент;
	Элементы.ПравилоЦенообразования.Доступность = НЕ Объект.КонтролироватьАссортимент;
	ФорматМагазинаПриИзмененииСервер();
	
КонецПроцедуры

//	LNK 13.09.2016 08:03:07
&НаКлиенте
Процедура ВведенВЭксплуатациюПриИзменении(Элемент)

	ОформлениеНекоторыхЭлементов();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// Обработчик команды, создаваемой механизмом запрета редактирования ключевых реквизитов.
//
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если НЕ Объект.Ссылка.Пустая() Тогда

		ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект);
		ОткрытьФорму("Справочник.Магазины.Форма.РазблокированиеРеквизитов",, ЭтотОбъект, УникальныйИдентификатор,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры)	Экспорт

	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		Если ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект) Тогда
			ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтотОбъект, Результат);
			Если Результат.Найти("СхемаКомпоновкиДанных") <> Неопределено И НЕ ОбщегоНазначенияРТСервер.ЭтоПолноправныйПользователь() Тогда
				Элементы.РедактироватьСхемуКомпоновкиДанных.Доступность = Ложь;
			КонецЕсли;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.СкладПоступления) Тогда
			Элементы.СкладПоступления.ТолькоПросмотр = Ложь;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.СкладПродажи) Тогда
			Элементы.СкладПродажи.ТолькоПросмотр = Ложь;
		КонецЕсли;
		
	КонецЕсли;

	ОформлениеНекоторыхЭлементов();

КонецПроцедуры

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтотОбъект, Объект.Ссылка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПриИзмененииПравилоЦенообразования()
	
	Если ЗначениеЗаполнено(Объект.ВидМинимальныхЦенПродажи)
	  	И ЗначениеЗаполнено(Объект.ПравилоЦенообразования) Тогда
		Если Объект.ПравилоЦенообразования.ЦенаВключаетНДС <> Объект.ВидМинимальныхЦенПродажи.ЦенаВключаетНДС Тогда
			Объект.ВидМинимальныхЦенПродажи = Справочники.ВидыЦен.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	ЦенаВключаетНДС = Объект.ПравилоЦенообразования.ЦенаВключаетНДС;
	
	УстановитьПараметрыВыбораВидаМинимальныхЦенПродажи();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыВыбораВидаМинимальныхЦенПродажи()
	
	Если ЗначениеЗаполнено(Объект.ПравилоЦенообразования) Тогда
		ПараметрВыбора = Новый ПараметрВыбора("Отбор.ЦенаВключаетНДС", ЦенаВключаетНДС);
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(ПараметрВыбора);
		МассивПараметровВыбора = Новый ФиксированныйМассив(МассивПараметров);
		Элементы.ВидМинимальныхЦенПродажи.ПараметрыВыбора = МассивПараметровВыбора;
	Иначе
		Элементы.ВидМинимальныхЦенПродажи.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьДоступностьРеквизитов()
	
	ДоступностьПравилаЦенообразования = ОбщегоНазначенияРТСервер.ПроверитьДоступКРеквизиту(Объект, "ПравилоЦенообразования"  , "Справочник.ПравилаЦенообразования");
	ДоступностьВидаЦен                = ОбщегоНазначенияРТСервер.ПроверитьДоступКРеквизиту(Объект, "ВидМинимальныхЦенПродажи", "Справочник.ВидыЦен");
	
	Элементы.ПравилоЦенообразования.Видимость   = ДоступностьПравилаЦенообразования;
	Элементы.ВидМинимальныхЦенПродажи.Видимость = ДоступностьВидаЦен;
	
	ЦенаВключаетНДС = ОбщегоНазначенияРТСервер.ПолучитьЗначениеРеквизитаВПривилегированномРежиме(Объект.ПравилоЦенообразования, "ЦенаВключаетНДС");
	
КонецПроцедуры

//	LNK 13.09.2016 08:33:16
&НаКлиенте
Процедура ОформлениеНекоторыхЭлементов()

	Если Объект.ВведенВЭксплуатацию Тогда

		Элементы.ВведенВЭксплуатацию.Доступность = Ложь;

	КонецЕсли;

	Элементы.ВведенВЭксплуатацию.Шрифт = Новый Шрифт(,,, Объект.ВведенВЭксплуатацию);

КонецПроцедуры // ОформлениеНекоторыхЭлементов()

///////////////////////////////////////////////////////////////////////////////
// Прочее

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	ОбновитьКонтактнуюИнформацию(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеОчистка(ЭтотОбъект, Элемент.Имя);
	ОбновитьКонтактнуюИнформацию(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	Результат = УправлениеКонтактнойИнформациейКлиент.ПодключаемаяКоманда(ЭтотОбъект, Команда.Имя);
	ОбновитьКонтактнуюИнформацию(Результат);
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуВводаАдреса(ЭтотОбъект, Результат);
	
КонецПроцедуры

&НаСервере
Функция ОбновитьКонтактнуюИнформацию(Результат = Неопределено)
	
	Возврат УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
	
КонецФункции

&НаСервере
Процедура ФорматМагазинаПриИзмененииСервер()
	
	Если Объект.КонтролироватьАссортимент Тогда
		Если ЗначениеЗаполнено(Объект.ФорматМагазина) Тогда
			Если ЗначениеЗаполнено(Объект.ПравилоЦенообразования) Тогда
				Если Объект.ПравилоЦенообразования <> Объект.ФорматМагазина.ПравилоЦенообразования Тогда
					ТекстСообщения = НСтр("ru='Правило ценообразования установлено в соответствии с правилом формата.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения,
						,
						"Объект.ПравилоЦенообразования");
					Объект.ПравилоЦенообразования = Объект.ФорматМагазина.ПравилоЦенообразования;
					ПриИзмененииПравилоЦенообразования();
				КонецЕсли;
			Иначе
				Объект.ПравилоЦенообразования = Объект.ФорматМагазина.ПравилоЦенообразования;
				ПриИзмененииПравилоЦенообразования();
			КонецЕсли;
		Иначе
			Объект.ПравилоЦенообразования = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////

// СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтотОбъект, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПодписьНаСервере(ПутьФайла)
//Хранилище = Новый ХранилищеЗначения(ПутьФайла, Новый СжатиеДанных()); 
	

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПодпись(Команда)
ОПовещение = Новый ОписаниеОповещения("ОбработкаФайлавыбора",ЭтотОбъект);	
НачатьПомещениеФайла(ОПовещение,,,Истина,УникальныйИдентификатор);
	
	КонецПроцедуры

	
&НаСервере
Процедура ОбработкаФайлавыбора(Результат, Адрес, ВыбранноеИмя,ДополнительныеПараметры)
	
	Если Не Результат тогда
		Возврат;
	КонецЕсли;
	СсылкаНаПодпись = Адрес;
	
КонецПроцедуры
	
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)


КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)


КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если Объект.Предопределенный И НЕ ТехническаяПоддержкаВызовСервера.ИсключительныйРежим() Тогда

		ТолькоПросмотр = Истина;

	КонецЕсли;

	Если НЕ ПустаяСтрока(ИмяТекущейСтраницы) Тогда

		Попытка

			Элементы.Страницы.ТекущаяСтраница = Элементы[ИмяТекущейСтраницы];

		Исключение	КонецПопытки;

	КонецЕсли;

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	ИмяТекущейСтраницы = Элементы.Страницы.ТекущаяСтраница.Имя;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	УстановитьОформлениеЭлементов();

	Оповестить("УслугаБанкаИзменение",, Объект.Ссылка);

КонецПроцедуры

&НаСервере	//	LNK 13.11.2020 06:34:57
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)


КонецПроцедуры

#КонецОбласти

//	---------------------------------------------------------------------------------------

&НаКлиенте
Процедура ТипУслугиПриИзменении(Элемент)

	Если ПустаяСтрока(Объект.Наименование) Тогда

		Объект.Наименование = СокрЛП(Объект.ТипУслуги);

	КонецЕсли;

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСкидкиНаценкиПриИзменении(Элемент)

	УстановитьОформлениеЭлементов();

КонецПроцедуры

&НаКлиенте
Процедура БлокированПриИзменении(Элемент)

	ОбщегоНазначенияКлиент.УстановитьТолькоПросмотрДляФормы(Элементы, Команды, Объект.Блокирован, "ТипУслуги, Блокирован");

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПредоставленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ТекущиеДанные = Элемент.ТекущиеДанные;

	Если НЕ ТекущиеДанные = Неопределено И Поле = Элементы.НоменклатураПредоставленияКнопкаExcel Тогда

		СтандартнаяОбработка = Ложь;
		ВыборКомандыЗагрузкиСегментаНоменклатуры(ТекущиеДанные);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураИсключенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ТекущиеДанные = Элемент.ТекущиеДанные;

	Если НЕ ТекущиеДанные = Неопределено И  Поле = Элементы.НоменклатураИсключенияКнопкаExcel Тогда

		СтандартнаяОбработка = Ложь;
		ВыборКомандыЗагрузкиСегментаНоменклатуры(ТекущиеДанные);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураНачалоВыбора(Элемент, Значение, ДанныеВыбора, СтандартнаяОбработка)

	Если НЕ Значение = Неопределено Тогда

		СтандартнаяОбработка = Ложь;

		ОтборПоСпособу = Новый СписокЗначений;
		ОтборПоСпособу.Добавить(ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьВручную"), ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьВручную"));
		ОтборПоСпособу.Добавить(ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьДинамически"), ПредопределенноеЗначение("Перечисление.СпособыФормированияСегментов.ФормироватьДинамически"));

		ПараметрыФормыВыбора = Новый Структура;
		ПараметрыФормыВыбора.Вставить("ТекущийЭлемент"    , Значение);
		ПараметрыФормыВыбора.Вставить("РежимОткрытияОкна" , РежимОткрытияОкнаФормы.Независимый);
		ПараметрыФормыВыбора.Вставить("РежимВыбора"       , Истина);
		ПараметрыФормыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
		ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Ложь);
		ПараметрыФормыВыбора.Вставить("Отбор"             , Новый Структура("СпособФормирования, ПометкаУдаления", ОтборПоСпособу, Ложь));

		ОткрытьФорму("Справочник." + ?(ТипЗнч(Значение) = Тип("СправочникСсылка.СегментыНоменклатуры"), "СегментыНоменклатуры", "Номенклатура") + ".ФормаВыбора", ПараметрыФормыВыбора, Элемент);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПредоставленияНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	НоменклатураНачалоВыбора(Элемент, Элементы.НоменклатураПредоставления.ТекущиеДанные.Номенклатура, ДанныеВыбора, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураИсключенияНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	НоменклатураНачалоВыбора(Элемент, Элементы.НоменклатураИсключения.ТекущиеДанные.Номенклатура, ДанныеВыбора, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПредоставленияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НоваяСтрока И НЕ Копирование И НЕ Элемент.ТекущиеДанные = Неопределено Тогда

		Элемент.ТекущиеДанные.Номенклатура = ПредопределенноеЗначение("Справочник.СегментыНоменклатуры.ПустаяСсылка");
		НазначитьКолонкеИндексКартинки(Элемент.ТекущиеДанные);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураИсключенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НоваяСтрока И НЕ Копирование И НЕ Элемент.ТекущиеДанные = Неопределено Тогда

		Элемент.ТекущиеДанные.Номенклатура = ПредопределенноеЗначение("Справочник.СегментыНоменклатуры.ПустаяСсылка");
		НазначитьКолонкеИндексКартинки(Элемент.ТекущиеДанные);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПредоставленияНоменклатураПриИзменении(Элемент)

	НазначитьКолонкеИндексКартинки(Элементы.НоменклатураПредоставления.ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураИсключенияНоменклатураПриИзменении(Элемент)

	НазначитьКолонкеИндексКартинки(Элементы.НоменклатураИсключения.ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПредоставленияНоменклатураОчистка(Элемент, СтандартнаяОбработка)

	НазначитьКолонкеИндексКартинки(Элементы.НоменклатураПредоставления.ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураИсключенияНоменклатураОчистка(Элемент, СтандартнаяОбработка)

	НазначитьКолонкеИндексКартинки(Элементы.НоменклатураИсключения.ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура НазначитьКолонкеИндексКартинки(ТекущиеДанные)

	Если НЕ ТекущиеДанные = Неопределено Тогда

		ТекущиеДанные.КнопкаExcel = ?(ЗначениеЗаполнено(ТекущиеДанные.Номенклатура), ?(ТипЗнч(ТекущиеДанные.Номенклатура) = Тип("СправочникСсылка.СегментыНоменклатуры"), 8, 16), 0);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьОформлениеЭлементов()

	ОбщегоНазначенияКлиент.УстановитьТолькоПросмотрДляФормы(Элементы, Команды, Объект.Блокирован, "ТипУслуги, Блокирован");

	МгновеннаяРассрочка = (Объект.ТипУслуги = ПредопределенноеЗначение("Перечисление.ТипыУслугБанка.МгновеннаяРассрочка"));
	ПакетМалыша = (Объект.ТипУслуги = ПредопределенноеЗначение("Перечисление.ТипыУслугБанка.ПакетМалыша"));

	Элементы.Страницы.Видимость = НЕ МгновеннаяРассрочка;
	Элементы.Блокирован.Видимость = НЕ МгновеннаяРассрочка;
	Элементы.ПериодПредоставления.Видимость = НЕ (МгновеннаяРассрочка ИЛИ ПакетМалыша);
	Элементы.Эквайрер.Видимость = НЕ МгновеннаяРассрочка;

	Элементы.ИспользоватьСкидкиНаценки.ШрифтЗаголовка = Новый Шрифт(,, Объект.ИспользоватьСкидкиНаценки);

	Если НЕ МгновеннаяРассрочка Тогда

		Для каждого ТекущиеДанные Из Объект.НоменклатураПредоставления Цикл

			НазначитьКолонкеИндексКартинки(ТекущиеДанные);

		КонецЦикла;

		Для каждого ТекущиеДанные Из Объект.НоменклатураИсключения Цикл

			НазначитьКолонкеИндексКартинки(ТекущиеДанные);

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

#Область ПроцедурыЗагрузкиСоставаСегментаИзТаблицыExcel

&НаКлиенте
Процедура ВыборКомандыЗагрузкиСегментаНоменклатуры(ТекущиеДанные)

	СегментНоменклатуры = ТекущиеДанные.Номенклатура;

	Если ЗначениеЗаполнено(СегментНоменклатуры) И ТипЗнч(СегментНоменклатуры) = Тип("СправочникСсылка.СегментыНоменклатуры") Тогда

		ДополнительныеПараметры = Новый Структура(
			"СегментНоменклатуры, ФайлВыбран", СегментНоменклатуры, Ложь);

		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВыборКомандыЗагрузкиСегментаНоменклатурыЗавершение", ЭтотОбъект, ДополнительныеПараметры);

		ПоказатьВопрос(ОписаниеОповещения
		, "Сегмент «" + СегментНоменклатуры + "» будет загружен из указанного Вами файла.
		  |Текущий состав сегмента перед загрузкой очищается!
		  |Подтвердите своё решение:", РежимДиалогаВопрос.ОКОтмена, 60, КодВозвратаДиалога.ОК
		, "Загрузка сегмента из таблицы «Excel»", КодВозвратаДиалога.Отмена);

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыборКомандыЗагрузкиСегментаНоменклатурыЗавершение(КодВозврата, ДополнительныеПараметры)	Экспорт

	Если НЕ КодВозврата = КодВозвратаДиалога.ОК Тогда

		Возврат;

	КонецЕсли;

	Если ДополнительныеПараметры.ФайлВыбран = Ложь Тогда

		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ДиалогВыбораФайлаExcelЗавершение", ЭтотОбъект, ДополнительныеПараметры);

		ДиалогВыбораФайла  = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогВыбораФайла.Заголовок = "Выберите файл книги Excel";
		ДиалогВыбораФайла.Фильтр = НСтр("ru = 'Лист Excel'") + " (*.xls)|*.xls|" + НСтр("ru = 'Лист Excel2007'") + " (*.xlsx)|*.xlsx";
		ДиалогВыбораФайла.ПолноеИмяФайла = ПолноеИмяИмпортируемогоФайла;
		ДиалогВыбораФайла.МножественныйВыбор = Ложь;
		ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;

		ДиалогВыбораФайла.Показать(ОписаниеОповещения);

	ИначеЕсли ДополнительныеПараметры.ФайлВыбран = Истина Тогда

		ФайлЗагрузки = Новый Файл(ДополнительныеПараметры.ПолноеИмяИмпортируемогоФайла);

		Если НЕ ФайлЗагрузки.Существует() Тогда

			ПоказатьОповещениеПользователя("Загрузка невозможна",, "Указанный файл не обнаружен - укажите существующий файл!", БиблиотекаКартинок.Вопрос32);

		Иначе

			ПолноеИмяИмпортируемогоФайла = ДополнительныеПараметры.ПолноеИмяИмпортируемогоФайла;	//	запомним на следующую загрузку

			ПоказатьОповещениеПользователя("Загрузка данных из файла ...",, "Выполняется загрузка «" + ПолноеИмяИмпортируемогоФайла + "»", БиблиотекаКартинок.Предупреждение32);

			АдресВХранилище = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПолноеИмяИмпортируемогоФайла), УникальныйИдентификатор);
			ЗагрузитьСоставСегментаИзТаблицыExcel(ДополнительныеПараметры.СегментНоменклатуры, АдресВХранилище, ФайлЗагрузки.Расширение);

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораФайлаExcelЗавершение(СписокФайлов, ДополнительныеПараметры)	Экспорт

	Если ТипЗнч(СписокФайлов) = Тип("Массив") И НЕ СписокФайлов.Количество() = 0 Тогда

		ДополнительныеПараметры.ФайлВыбран = Истина;
		ДополнительныеПараметры.Вставить("ПолноеИмяИмпортируемогоФайла", СписокФайлов[0]);

		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВыборКомандыЗагрузкиСегментаНоменклатурыЗавершение", ЭтотОбъект, ДополнительныеПараметры);

		ПоказатьВопрос(ОписаниеОповещения
		, "Ещё раз нужно подтвердить - сегмент «" + ДополнительныеПараметры.СегментНоменклатуры + "» будет загружен из файла
		  |«" + ДополнительныеПараметры.ПолноеИмяИмпортируемогоФайла + "».
		  |ТЕКУЩИЙ СОСТАВ СЕГМЕНТА ПЕРЕД ЗАГРУЗКОЙ ОЧИЩАЕТСЯ!
		  |Подтвердите своё решение:", РежимДиалогаВопрос.ОКОтмена, 60, КодВозвратаДиалога.ОК
		, "Загрузка сегмента из таблицы «Excel»", КодВозвратаДиалога.Отмена);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСоставСегментаИзТаблицыExcel(СегментНоменклатуры, АдресВХранилище, РасширениеИмени)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаСправочник
	|ГДЕ
	|	ТаблицаСправочник.Ссылка В(&СписокТоваров)
	|	И НЕ ТаблицаСправочник.ЭтоГруппа"
	);
	Запрос.УстановитьПараметр("СписокТоваров", ЗаполнениеОбъектов.ЗагрузитьДанныеВМассивИзТаблицыExcel(АдресВХранилище, РасширениеИмени, Истина));
	
	СегментыСервер.СформироватьНоменклатуруСегмента(СегментНоменклатуры,, Запрос.Выполнить().Выгрузить());

КонецПроцедуры

#КонецОбласти





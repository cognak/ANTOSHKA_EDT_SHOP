#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
//	Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда

		Возврат;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "УслугаБанкаИзменение" Тогда

		Элементы.Список.Обновить();

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Если Не Копирование И Не Группа Тогда

		Отказ = Истина;
		НовыйЭлементУслугаБанка("ОплатаЧастями");

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСоздатьПакетШкольника(Команда)

	НовыйЭлементУслугаБанка("ПакетШкольника");

КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьОплатаЧастями(Команда)

	НовыйЭлементУслугаБанка("ОплатаЧастями");

КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьКредит(Команда)

	НовыйЭлементУслугаБанка("Кредит");

КонецПроцедуры

&НаКлиенте
Процедура КомандаСоздатьПакетМалыша(Команда)

	НовыйЭлементУслугаБанка("ПакетМалыша");

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НовыйЭлементУслугаБанка(ИмяПеречисления)

	СтруктураПараметры = Новый Структура("Основание", Новый Структура);
	СтруктураПараметры.Основание.Вставить("ТипУслуги", ПредопределенноеЗначение("Перечисление.ТипыУслугБанка."
		+ ИмяПеречисления));

	ОткрытьФорму("Справочник.УслугиБанка.ФормаОбъекта", СтруктураПараметры, Элементы.Список);

КонецПроцедуры

#КонецОбласти
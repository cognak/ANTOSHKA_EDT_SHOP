
&НаКлиенте
Процедура ЗагрузитьИзТаблицыExcel(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзТаблицыExcelЗавершение", ЭтотОбъект);
	ДиалогВыбораФайла  = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = "Выберите файл книги MS Excel";
	ДиалогВыбораФайла.Фильтр = НСтр("ru = 'Лист Excel'") + " (*.xls)|*.xls|" + НСтр("ru = 'Лист Excel2007'") + " (*.xlsx)|*.xlsx";
	ДиалогВыбораФайла.ПолноеИмяФайла = ПолноеИмяИмпортируемогоФайла;
	ДиалогВыбораФайла.МножественныйВыбор = Ложь;
	ДиалогВыбораФайла.ПроверятьСуществованиеФайла = Истина;

	ДиалогВыбораФайла.Показать(ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзТаблицыExcelЗавершение(СписокФайлов, ДополнительныеПараметры)	Экспорт

	Если ТипЗнч(СписокФайлов) = Тип("Массив") И НЕ СписокФайлов.Количество() = 0 Тогда

		ПолноеИмяИмпортируемогоФайла = СписокФайлов[0];
		ТекстСообщения = "";

		Если ВыполнитьЗагрузкуИмёнИзФайлаExcel(
				ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПолноеИмяИмпортируемогоФайла), УникальныйИдентификатор),
				ОбщегоНазначенияКлиентСервер.lx_GetTooken(ПолноеИмяИмпортируемогоФайла, "."),
				ТекстСообщения) Тогда

			ПоказатьОповещениеПользователя("Операция выполнена",, ТекстСообщения, БиблиотекаКартинок.Информация2_32);

		Иначе

			ПоказатьОповещениеПользователя("Операция не выполнена из-за ошибки",, ТекстСообщения, БиблиотекаКартинок.Ошибка32);

		КонецЕсли;

	Иначе

		ПоказатьОповещениеПользователя("Операция не выполнена",, "Выбор файла не был сделан пользователем", БиблиотекаКартинок.Ошибка32);

	КонецЕсли;

КонецПроцедуры

&НаСервере	//	LNK 14.01.2019 10:56:13
Функция ВыполнитьЗагрузкуИмёнИзФайлаExcel(АдресВХранилище, Расширение, ТекстСообщения)

	Выполнено = Истина;

	Попытка

		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);
		ДвоичныеДанные.Записать(ИмяВременногоФайла);

		ТабличныйДокумент = Новый ТабличныйДокумент;

		ТабличныйДокумент.Прочитать(ИмяВременногоФайла, СпособЧтенияЗначенийТабличногоДокумента.Значение);

		Колонки = Новый Массив;
		Колонки.Добавить(Новый Структура("Имя, Номер", "Наименование", 1));
		Колонки.Добавить(Новый Структура("Имя, Номер", "НаименованиеУкраинское", 2));
		Колонки.Добавить(Новый Структура("Имя, Номер", "Пол", 3));

		ТаблицаЗначений = Новый ТаблицаЗначений;
		ТаблицаЗначений.Колонки.Добавить("НомерСтроки" , Новый ОписаниеТипов("Число"));
		ТаблицаЗначений.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
		ТаблицаЗначений.Колонки.Добавить("НаименованиеУкраинское", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
		ТаблицаЗначений.Колонки.Добавить("Пол", Новый ОписаниеТипов("ПеречислениеСсылка.ПолФизическогоЛица"));

		Для НомерСтроки = 1 По ТабличныйДокумент.ВысотаТаблицы Цикл

			СтрокаТаблицы = ТаблицаЗначений.Добавить();
			СтрокаТаблицы.НомерСтроки = НомерСтроки;

			Для каждого Колонка Из Колонки Цикл

				ТекущаяОбласть = ТабличныйДокумент.ПолучитьОбласть(
					"R" + Формат(НомерСтроки, "ЧДЦ=; ЧН=0; ЧГ=") +
					"C" + Формат(Колонка.Номер, "ЧДЦ=; ЧН=0; ЧГ=")).ТекущаяОбласть;

				Если НЕ ПустаяСтрока(ТекущаяОбласть.Текст) Тогда

					Если Колонка.Имя = "Пол" Тогда

							Определение = НРег(СокрЛП(ТекущаяОбласть.Текст));
							СтрокаТаблицы[Колонка.Имя] =
								?(Определение = "м" ИЛИ Определение = "муж" ИЛИ Определение = "мужской"
									, Перечисления.ПолФизическогоЛица.Мужской,
								?(Определение = "ж" ИЛИ Определение = "жен" ИЛИ Определение = "женский"
									, Перечисления.ПолФизическогоЛица.Женский
									, Перечисления.ПолФизическогоЛица.ПустаяСсылка()));

					Иначе	СтрокаТаблицы[Колонка.Имя] = СокрЛП(ТекущаяОбласть.Текст);

					КонецЕсли;

				КонецЕсли;

			КонецЦикла;

		КонецЦикла;

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.НомерСтроки КАК НомерСтроки,
		|	Таблица.Наименование КАК Наименование,
		|	Таблица.НаименованиеУкраинское КАК НаименованиеУкраинское,
		|	Таблица.Пол КАК Пол
		|ПОМЕСТИТЬ Источник
		|ИЗ
		|	&ТаблицаЗначений КАК Таблица
		|ГДЕ
		|	НЕ Таблица.Наименование = """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Источник.НомерСтроки КАК НомерСтроки,
		|	Источник.Наименование КАК Наименование,
		|	Источник.НаименованиеУкраинское КАК НаименованиеУкраинское,
		|	Источник.Пол КАК Пол,
		|	ТаблицаСправочник.Ссылка КАК Элемент
		|ИЗ
		|	Источник КАК Источник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИменаЛюдей КАК ТаблицаСправочник
		|		ПО Источник.Наименование = ТаблицаСправочник.Наименование
		|ГДЕ
		|	ТаблицаСправочник.Ссылка ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"
		);
		Запрос.УстановитьПараметр("ТаблицаЗначений", ТаблицаЗначений);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Счётчик = 0;

		Пока Выборка.Следующий() Цикл

			Если НЕ Выборка.Элемент = NULL Тогда

					СправочникОбъект = Выборка.Элемент.ПолучитьОбъект();

			Иначе	СправочникОбъект = Справочники.ИменаЛюдей.СоздатьЭлемент();

			КонецЕсли;

			Наименование = Выборка.Наименование;
		//	Выполним минимальную нормализацию наименования..
			СтроковыеФункцииКлиентСервер.ПривестиНаименование(Наименование, Истина, Истина);

			Если ПустаяСтрока(Наименование) Тогда

				ВызватьИсключение "Отказано! Имя «" + Выборка.Наименование + "» недопустимо";

			КонецЕсли;

			СправочникОбъект.Наименование = Наименование;
			СправочникОбъект.НаименованиеУкраинское = Выборка.НаименованиеУкраинское;
			СправочникОбъект.Пол = Выборка.Пол;

			СправочникОбъект.Записать();

			Счётчик = Счётчик + 1;

		КонецЦикла;

		ТекстСообщения = "Загружено " + Формат(Счётчик, "ЧДЦ=; ЧН=НЕТ; ЧГ=") + " имён людей.";

	Исключение

		Выполнено = Ложь;
		ТекстСообщения = ОписаниеОшибки();

	КонецПопытки;

	Возврат Выполнено;

КонецФункции // ВыполнитьЗагрузкуИмёнИзФайлаExcel()










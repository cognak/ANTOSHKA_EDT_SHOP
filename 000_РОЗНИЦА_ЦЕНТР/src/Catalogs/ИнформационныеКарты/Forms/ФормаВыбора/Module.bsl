
///////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Обработка данных подключаемого оборудования
//
// Параметры:
//  СтруктураПараметров - Структура действий на сервере
//  СтруктураПараметровКлиента - структура последующих действий на клиенте
//
&НаСервере
Функция ОбработатьДанныеПОВФормеСервер(СтруктураПараметров, СтруктураПараметровКлиента) Экспорт
	
	Если НЕ СтруктураПараметров.НеизвестныеДанныеПО Тогда
		
		Если СтруктураПараметров.Действие = "ПроверкаКарт" Тогда
			КоличествоКарт = СтруктураПараметров.ЗначенияПоиска.Количество();
			Если КоличествоКарт = 1 Тогда
				ИнформационнаяКарта = СтруктураПараметров.ЗначенияПоиска[0].ИнформационнаяКарта;
				Если ЗначениеЗаполнено(ИнформационнаяКарта) Тогда
					СтруктураПараметровКлиента.Вставить("НайденаКарта", ИнформационнаяКарта);
					СтруктураПараметровКлиента.Вставить("ПрекратитьПоиск");
				КонецЕсли;
			ИначеЕсли КоличествоКарт > 1 Тогда
				МассивТиповВладельцев = Новый Массив;
				МассивТиповВладельцев.Добавить(Тип("СправочникСсылка.Контрагенты"));
				МассивТиповВладельцев.Добавить(Тип("СправочникСсылка.Пользователи"));
				МассивТиповВладельцев.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
				ТаблицаКарт = Новый ТаблицаЗначений;
				ТаблицаКарт.Колонки.Добавить("ИнформационнаяКарта", Новый ОписаниеТипов("СправочникСсылка.ИнформационныеКарты"));
				ТаблицаКарт.Колонки.Добавить("ВладелецКарты", Новый ОписаниеТипов(МассивТиповВладельцев));
				
				Для каждого ЗначениеПоиска Из СтруктураПараметров.ЗначенияПоиска Цикл
					ТекущаяСтрока = ТаблицаКарт.Добавить();
					ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ЗначениеПоиска);
				КонецЦикла;
				
				СтруктураПараметровКлиента.Вставить("ВыборКарт", ПоместитьВоВременноеХранилище(ТаблицаКарт));
				СтруктураПараметровКлиента.Вставить("ПрекратитьПоиск");
			КонецЕсли;
		ИначеЕсли СтруктураПараметров.Действие = "РегистрацияНовойКарты" Тогда
			
			Если СтруктураПараметров.ЗначенияПоиска.Количество() > 0 Тогда
				
				Если СтруктураПараметров.ЗначенияПоиска.Количество() > 1 Тогда
					
					ТаблицаШаблонов = Новый ТаблицаЗначений;
					ТаблицаШаблонов.Колонки.Добавить("ТипШтрихкода");
					ТаблицаШаблонов.Колонки.Добавить("КодКарты");
					
					Для каждого КлючИЗначение Из СтруктураПараметров.ЗначенияПоиска[0] Цикл
						ТаблицаШаблонов.Колонки.Добавить(КлючИЗначение.Ключ);
					КонецЦикла;
					
					Для каждого ЗначениеПоиска Из СтруктураПараметров.ЗначенияПоиска Цикл
						ТекущаяСтрока = ТаблицаШаблонов.Добавить();
						ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ЗначениеПоиска);
					КонецЦикла;
					ТаблицаШаблонов.ЗаполнитьЗначения(СтруктураПараметров.ТипШтрихкода, "ТипШтрихкода");
					ТаблицаШаблонов.ЗаполнитьЗначения(СтруктураПараметров.КодКарты, "КодКарты");
					СтруктураПараметровКлиента.Вставить("РегистрацияНовойКартыВыборШаблона", ПоместитьВоВременноеХранилище(ТаблицаШаблонов, Новый УникальныйИдентификатор()));
					
					ТекстВопроса = НСтр("ru = 'Создать новую информационную карту? Карта %КодКарты%.'");
					ТекстВопроса = СтрЗаменить(ТекстВопроса, "%КодКарты%", СтруктураПараметров.КодКарты);
					
					СтруктураПараметровКлиента.Вставить("ТекстВопросаНовойКарты", ТекстВопроса);
				Иначе
					СтруктураПараметровКлиентаРегистрацииНовойКарты = СтруктураПараметров.ЗначенияПоиска[0];
					СтруктураПараметровКлиентаРегистрацииНовойКарты.Вставить("ТипШтрихкода", СтруктураПараметров.ТипШтрихкода);
					СтруктураПараметровКлиентаРегистрацииНовойКарты.Вставить("КодКарты"    , СтруктураПараметров.КодКарты);
					
					СтруктураПараметровКлиента.Вставить("РегистрацияНовойКарты", СтруктураПараметровКлиентаРегистрацииНовойКарты);
					
					ТекстВопроса = НСтр("ru = 'Создать новую информационную карту? Карта %КодКарты%%НаименованиеШаблона%'");
					ТекстВопроса = СтрЗаменить(ТекстВопроса, "%КодКарты%", СтруктураПараметров.КодКарты);
					Если СтруктураПараметровКлиентаРегистрацииНовойКарты.Свойство("НаименованиеШаблона") Тогда
						Если ПустаяСтрока(СтруктураПараметровКлиентаРегистрацииНовойКарты.НаименованиеШаблона) Тогда
							ТекстВопроса = СтрЗаменить(ТекстВопроса, "%НаименованиеШаблона%", ".");
						Иначе
							ТекстВопроса = СтрЗаменить(ТекстВопроса, "%НаименованиеШаблона%", " (" + СтруктураПараметровКлиентаРегистрацииНовойКарты.НаименованиеШаблона+").");
						КонецЕсли;
					КонецЕсли;
					
					СтруктураПараметровКлиента.Вставить("ТекстВопросаНовойКарты", ТекстВопроса);
				КонецЕсли;
				
				СтруктураПараметровКлиента.Вставить("ПрекратитьПоиск");
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат СтруктураПараметровКлиента;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьПодключаемоеОборудование = ЗначениеНастроекПовтИсп.ИспользоватьПодключаемоеОборудование();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	Если ИспользоватьПодключаемоеОборудование
	   И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ОписаниеОшибки = "";

		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");

		Если Не МенеджерОборудованияКлиент.ПодключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО, ОписаниеОшибки) Тогда
			ТекстСообщения = НСтр("ru = 'При подключении оборудования произошла ошибка:
			                      |""%ОписаниеОшибки%"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%", ОписаниеОшибки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	// ПодключаемоеОборудование
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");

	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
	   И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			Если Параметр[1] = Неопределено Тогда
				ТекКод = Параметр[0];
			Иначе
				ТекКод = Параметр[1][1];
			КонецЕсли;
			СтруктураПараметровКлиента = ПолученШтрихкодИзСШК(ТекКод);
			ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента, ТекКод);
		ИначеЕсли ИмяСобытия ="TracksData" Тогда
			ТекКод = Параметр[0];
			ПодключаемоеОборудованиеРТКлиент.ВыбратьМагнитныйКод(ТекКод);
			Если ПустаяСтрока(ТекКод) Тогда
				Возврат;
			КонецЕсли;
			СтруктураПараметровКлиента = ПолученМагнитныйКод(ТекКод);
			ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента, ТекКод);
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ДобавитьНайденныеИнформационныеКарты(ВыбранноеЗначение, АдресШаблоновВХранилище);
	
	ТаблицаШаблонов = ПолучитьИзВременногоХранилища(АдресШаблоновВХранилище);
	СтрокиШаблонов = ТаблицаШаблонов.НайтиСтроки(ВыбранноеЗначение);
	Если СтрокиШаблонов.Количество() > 0 Тогда
		СтруктураШаблонов = Новый Структура;
		ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВСтруктуру(ТаблицаШаблонов, СтрокиШаблонов[0], СтруктураШаблонов);
		Возврат ИнформационныеКарты.СоздатьДисконтнуюКарту(СтруктураШаблонов);
	Иначе
		Возврат Справочники.ИнформационныеКарты.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаКлиенте
// Обработка магнитного или штрихового кода на клиенте
//
// Параметры
//  СтруктураПараметровКлиента - структура параметров
//
Процедура ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента, ТекКод)
	Перем ИнформационнаяКарта;
	
	Если СтруктураПараметровКлиента.Свойство("НеизвестныеДанныеПО") 
		И СтруктураПараметровКлиента.НеизвестныеДанныеПО Тогда
		
		СтрокаСообщения = НСтр("ru = 'Данные по коду не найдены: %1%'");
		СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%1%", ТекКод);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		
	ИначеЕсли СтруктураПараметровКлиента.Свойство("НайденаКарта") Тогда
		
		ПозиционироватьНаСчитаннойКарте(СтруктураПараметровКлиента.НайденаКарта);
		
	ИначеЕсли СтруктураПараметровКлиента.Свойство("ТекстПредупреждения") Тогда
		
		ПоказатьПредупреждение(, СтруктураПараметровКлиента.ТекстПредупреждения);
		
	ИначеЕсли СтруктураПараметровКлиента.Свойство("РегистрацияНовойКарты") Тогда
		
		Если ИнформационныеКартыКлиент.ПолучитьРазрешениеПользователяНаСозданиеКарты(СтруктураПараметровКлиента.ТекстВопросаНовойКарты) Тогда
			
			ИнформационнаяКарта = ИнформационныеКарты.СоздатьДисконтнуюКарту(СтруктураПараметровКлиента.РегистрацияНовойКарты);
			
			Если ЗначениеЗаполнено(ИнформационнаяКарта)  Тогда
				ПозиционироватьНаСчитаннойКарте(ИнформационнаяКарта);
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли СтруктураПараметровКлиента.Свойство("РегистрацияНовойКартыВыборШаблона") Тогда
		
		Если ИнформационныеКартыКлиент.ПолучитьРазрешениеПользователяНаСозданиеКарты(СтруктураПараметровКлиента.ТекстВопросаНовойКарты) Тогда
			
			ВыбранноеЗначение = ОткрытьФормуМодально("РегистрСведений.ШаблоныРегистрацииНовыхКарт.Форма.ШаблоныНовыхКарт", Новый Структура("АдресШаблоновВХранилище", СтруктураПараметровКлиента.РегистрацияНовойКартыВыборШаблона), ЭтотОбъект);
			Если ВыбранноеЗначение <> Неопределено Тогда
			
				ИнформационнаяКарта = ДобавитьНайденныеИнформационныеКарты(ВыбранноеЗначение, СтруктураПараметровКлиента.РегистрацияНовойКартыВыборШаблона);
				
				Если ЗначениеЗаполнено(ИнформационнаяКарта)  Тогда
					ПозиционироватьНаСчитаннойКарте(ИнформационнаяКарта);
				КонецЕсли;
				
			КонецЕсли;
		
		КонецЕсли;
		
	ИначеЕсли СтруктураПараметровКлиента.Свойство("ВыборКарт") Тогда
		
		ВыбранноеЗначение = ОткрытьФормуМодально("ОбщаяФорма.ВыборИнформационнойКарты", Новый Структура("АдресКартВХранилище", СтруктураПараметровКлиента.ВыборКарт));
		Если ВыбранноеЗначение <> Неопределено Тогда
			
			Если ЗначениеЗаполнено(ВыбранноеЗначение.ИнформационнаяКарта) Тогда
				ПозиционироватьНаСчитаннойКарте(ВыбранноеЗначение.ИнформационнаяКарта);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолученМагнитныйКод(МагнитныйКод) 
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверкаСерийныхНомеров");
	
	СтруктураПараметровДействия = Новый Структура;
	СтруктураПараметровДействия.Вставить("РегистрацияНовойКарты", Истина);
	
	СтруктураДействий.Вставить("ПроверкаКарт", СтруктураПараметровДействия);
	
	Возврат ПодключаемоеОборудованиеРТ.ПолученМагнитныйКод(МагнитныйКод, ЭтотОбъект, СтруктураДействий);
	
КонецФункции

&НаСервере
Функция ПолученШтрихкодИзСШК(Штрихкод) 
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверкаСерийныхНомеров");
	
	СтруктураПараметровДействия = Новый Структура;
	СтруктураПараметровДействия.Вставить("РегистрацияНовойКарты", Истина);
	
	СтруктураДействий.Вставить("ПроверкаКарт", СтруктураПараметровДействия);
	
	Возврат ПодключаемоеОборудованиеРТ.ПолученШтрихкодИзСШК(Штрихкод, ЭтотОбъект, СтруктураДействий);
	
КонецФункции

&НаКлиенте
//Попытка позиционировать на карте
//
Процедура ПозиционироватьНаСчитаннойКарте(ИнформационнаяКарта)
	
	Элементы.Список.ТекущаяСтрока = ИнформационнаяКарта;
	
	Если Элементы.Список.ТекущаяСтрока <> ИнформационнаяКарта Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Карта с указанным кодом обнаружена, но не соответствует установленному отбору!'"));
	КонецЕсли;
	
КонецПроцедуры

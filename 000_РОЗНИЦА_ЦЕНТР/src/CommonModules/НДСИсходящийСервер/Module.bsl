
////////////////////////////////////////////////////////////////////////////////
// АВТОРАСЧЕТ НДС

// Выполняет округление числовых значений с накоплением погрешностей округления, образовавшихся
//		в результате предыдущих вызовов функции
//
// Параметры
//  Число 		– Число. Округляемое значение
//  Точность	– Число. Точность округления
//	Погрешность	- Число. Переменная, в которой накапливается погрешность с предыдущих вызовов
//
// Возвращаемое значение:
//   Число   – округленное значение
//
Функция ОкруглитьСУчетомПогрешности(Число, Точность, Погрешность = 0, 
	               СоответствиеПогрешностей = Неопределено, Ключ = Неопределено) Экспорт

	Если НЕ СоответствиеПогрешностей = Неопределено И ЗначениеЗаполнено(Ключ) Тогда
	
		// считываем погрешность округления, накопленную ранее при расчетах
		Погрешность = СоответствиеПогрешностей[Ключ];
		// погрешности округления еще нет -- первая сумма
		Если Погрешность = Неопределено Тогда
			Погрешность = 0;
		КонецЕсли;
		// округлим с учетом погрешности
		Округленное = ОкруглитьСУчетомПогрешности(Число, Точность, Погрешность);
		// сохраним погрешность округления
		СоответствиеПогрешностей.Вставить(Ключ, Погрешность);
	
	Иначе
		
		Если Число = 0 Тогда
			Возврат 0;
		КонецЕсли; 
	
		// выравнивание разрядности
		Число = Окр(Число, 27, ?(Число<0, РежимОкругления.Окр15как10, РежимОкругления.Окр15как20));
		
		// сумма с учетом погрешности предыдущих вычислений
		Округляемое = Число + Погрешность;

		// для отрицательного числа меняем направление округления, чтобы избежать ошибки Окр(-0.5) = -1
		Округленное	= Окр(Округляемое, Точность, ?(Округляемое<0, РежимОкругления.Окр15как10, РежимОкругления.Окр15как20));
		
		// рассчитаем новую погрешность округления
		Погрешность	= Округляемое - Округленное;
		
	КонецЕсли;
	
	Возврат Округленное;

КонецФункции // ОкруглитьСУчетомПогрешности()

// Рассчитывает сумму НДС исходя из суммы и флагов налогообложения
//
// Параметры: 
//  Сумма            - число, сумма от которой надо рассчитывать налоги, 
//  УчитыватьНДС     - булево, признак учета НДС в сумме, 
//  СуммаВключаетНДС - булево, признак включения НДС в сумму ("внутри" или "сверху"),
//  СтавкаНДС        - число , процентная ставка НДС,
//
// Возвращаемое значение:
//  Число, полученная сумма НДС
//
Функция РассчитатьСуммуНДСсУчетомПогрешности(Сумма, ЦенаВключаетНДС, ПеречислениеСтавкаНДС,
	               СоответствиеПогрешностей = Неопределено) Экспорт

	ПроцентНДС = НДСОбщегоНазначенияКлиентСервер.ПолучитьСтавкуНДСЧислом(ПеречислениеСтавкаНДС);
	
	Если ЦенаВключаетНДС Тогда
		СуммаНДС = ОкруглитьСУчетомПогрешности(Сумма * ПроцентНДС / (1 + ПроцентНДС), 2, , СоответствиеПогрешностей, ПеречислениеСтавкаНДС);
	Иначе
		СуммаНДС = ОкруглитьСУчетомПогрешности(Сумма * ПроцентНДС                   , 2, , СоответствиеПогрешностей, ПеречислениеСтавкаНДС);
	КонецЕсли;

	Возврат СуммаНДС;

КонецФункции // РассчитатьСуммуНДССУчетомПогрешности()

// Процедура корректирует построчные ошибки округления НДС так, 
// чтобы итоговый НДС по ставке совпадал с расчитанным НДС по базе
//
// Параметры:
//  ТабличнаяЧасть       - табличная часть, для которой следует пересчитать НДС
//  КлючДанных           - объект редактируемого документа.
//
Процедура ПересчитатьНДСсУчетомПогрешностиОкругления(ТабличнаяЧасть, КлючДанных, ЦенаВключаетНДС, ПогрешностиОкругления, ПредставлениеТабличнойЧасти = "", ПредставлениеВалюты = "", 
													ИмяРеквизитаСумма = "Сумма", ИмяРеквизитаСуммаНДС = "СуммаНДС", ИмяРеквизитаСуммаСНДС = "СуммаСНДС", 
													ИмяРеквизитаОтменено = Неопределено, ЗначениеФлагаДляОтменыСтроки = Истина, ДополнениеКТексту ="") Экспорт
	
	Перем СуммаНДСДоОкругления;    // для проверки наличия изменения в сумме НДС по документу
    Перем СуммаНДСПослеОкругления; // для проверки наличия изменения в сумме НДС по документу
	
	
	// Запомним сумма с НДС и сумму НДС
	СуммаНДСДоОкругления     = 0;
	СуммаСНДСДоОкругления    = 0;
	СуммаНДСПослеОкругления  = 0;
	СуммаСНДСПослеОкругления = 0;
	
	Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		
		Если (НЕ ИмяРеквизитаОтменено = Неопределено) И СтрокаТаблицы[ИмяРеквизитаОтменено] = ЗначениеФлагаДляОтменыСтроки Тогда
			Продолжить;
		КонецЕсли;
		
		// Запомним сумма и сумму НДС до округления
		СуммаНДСДоОкругления  = СуммаНДСДоОкругления + СтрокаТаблицы[ИмяРеквизитаСуммаНДС];
		Если НЕ (ИмяРеквизитаСуммаСНДС = Неопределено) Тогда
			СуммаСНДСДоОкругления = СуммаСНДСДоОкругления + СтрокаТаблицы[ИмяРеквизитаСуммаСНДС];
		КонецЕсли;
		
		СтрокаТаблицы[ИмяРеквизитаСуммаНДС] = РассчитатьСуммуНДСсУчетомПогрешности(СтрокаТаблицы[ИмяРеквизитаСумма],
	                                                   ЦенаВключаетНДС,
	                                                   СтрокаТаблицы.СтавкаНДС,
	                                                   ПогрешностиОкругления);
													   
		Если НЕ (ИмяРеквизитаСуммаСНДС = Неопределено) Тогда
			Если НЕ ЦенаВключаетНДС Тогда   
				СтрокаТаблицы[ИмяРеквизитаСуммаСНДС] = СтрокаТаблицы[ИмяРеквизитаСумма] + СтрокаТаблицы[ИмяРеквизитаСуммаНДС];
			КонецЕсли;
		КонецЕсли;
		
		// Рассчитаем сумму НДС после устранения ошибок округления
		СуммаНДСПослеОкругления  = СуммаНДСПослеОкругления + СтрокаТаблицы[ИмяРеквизитаСуммаНДС];
		Если НЕ (ИмяРеквизитаСуммаСНДС = Неопределено) Тогда
			СуммаСНДСПослеОкругления = СуммаСНДСПослеОкругления + СтрокаТаблицы[ИмяРеквизитаСуммаСНДС];
		КонецЕсли;
		
	КонецЦикла;
	
	// Сравним суммы до и после округления
	Если СуммаНДСПослеОкругления <> СуммаНДСДоОкругления Тогда
		
		ПриставкаСообщенияСуммаНДС = НСтр("ru = 'После исправления погрешностей округления сумма НДС '");
		ПриставкаСообщенияОбщаяСумма = НСтр("ru = 'После исправления погрешностей округления общая сумма с НДС '");
		
		ШаблонТекстаСообщения = НСтр("ru = '%1 табличной части %2 изменилась (было %3 %4, стало %5 %4)'");
		
		// Если суммы отличаются, сообщим об этом пользователю
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ШаблонТекстаСообщения,
						ДополнениеКТексту,
						ПредставлениеТабличнойЧасти,
						Строка(СуммаНДСДоОкругления),
						ПредставлениеВалюты,
						Строка(СуммаНДСПослеОкругления));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПриставкаСообщенияСуммаНДС + ТекстСообщения, КлючДанных);
		
		// изменилась общая сумма документа - сообщим об этом пользователю 
		Если НЕ ЦенаВключаетНДС Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							ШаблонТекстаСообщения,
							ДополнениеКТексту,
							ПредставлениеТабличнойЧасти,
							Строка(СуммаСНДСДоОкругления),
							ПредставлениеВалюты,
							Строка(СуммаСНДСПослеОкругления));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПриставкаСообщенияОбщаяСумма + ТекстСообщения, КлючДанных);
			
		КонецЕсли;	
	КонецЕсли;
	

КонецПроцедуры // ПересчитатьНДСсУчетомПогрешностиОкругления

// Выполняет проверку нужен ли перерасчет НДС
//
// Параметры: 
//  СуммаНДС         - число, сумма НДС по документу, 
//  СуммаСНДС        - число, сумма с НДС по документу,
//
// Возвращаемое значение:
//  Булево, признак необходимости провести расчет
//
Функция НуженАвторасчетНДС(ТабличнаяЧасть, ЦенаВключаетНДС
						, ИмяРеквизитаСтавкаНДС = "СтавкаНДС"
						, ИмяРеквизитаСумма = "Сумма", ИмяРеквизитаСуммаНДС = "СуммаНДС", ИмяРеквизитаСуммаСНДС = "СуммаСНДС"
						, ИмяРеквизитаОтменено = Неопределено, ЗначениеФлагаДляОтменыСтроки = Истина) Экспорт
	
	МассивСтавок = Новый Массив;
	МассивСтавок.Добавить(Перечисления.СтавкиНДС.НДС20);
	МассивСтавок.Добавить(Перечисления.СтавкиНДС.НДС14);
	МассивСтавок.Добавить(Перечисления.СтавкиНДС.НДС7);
	
	СуммаНДС = 0;
	СуммаНДСРасчетная = 0;
	
	Для каждого ПеречислениеСтавкаНДС Из МассивСтавок Цикл

		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить(ИмяРеквизитаСтавкаНДС, ПеречислениеСтавкаНДС);
		Если (НЕ ИмяРеквизитаОтменено = Неопределено) Тогда
			СтруктураОтбора.Вставить(ИмяРеквизитаОтменено,  НЕ ЗначениеФлагаДляОтменыСтроки);
		КонецЕсли;
		
		ПроцентНДС = НДСОбщегоНазначенияКлиентСервер.ПолучитьСтавкуНДСЧислом(ПеречислениеСтавкаНДС);
		
		Если НЕ (ИмяРеквизитаСуммаСНДС = Неопределено) Тогда
			Таблица = ТабличнаяЧасть.Выгрузить(СтруктураОтбора, ИмяРеквизитаСуммаНДС + ", " + ИмяРеквизитаСуммаСНДС);
		Иначе
			Таблица = ТабличнаяЧасть.Выгрузить(СтруктураОтбора, ИмяРеквизитаСуммаНДС + ", " + ИмяРеквизитаСумма);
		КонецЕсли;
		
		СуммаНДС = СуммаНДС + Таблица.Итог(ИмяРеквизитаСуммаНДС);
		Если НЕ (ИмяРеквизитаСуммаСНДС = Неопределено) Тогда
			СуммаСНДС = Таблица.Итог(ИмяРеквизитаСуммаСНДС);
		Иначе
			Если ЦенаВключаетНДС Тогда   
				СуммаСНДС = Таблица.Итог(ИмяРеквизитаСумма);
			Иначе
				СуммаСНДС = Таблица.Итог(ИмяРеквизитаСумма) + Таблица.Итог(ИмяРеквизитаСуммаНДС);
			КонецЕсли;
		КонецЕсли;

		СуммаНДСРасчетная = СуммаНДСРасчетная + ОкруглитьСУчетомПогрешности(СуммаСНДС * ПроцентНДС / (1 + ПроцентНДС), 2);

	КонецЦикла;

	Если СуммаНДСРасчетная = СуммаНДС Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;

КонецФункции

// Возвращает галку авторасчет НДС
//
// Параметры:
// Организация - СправочникСсылка.Организации
// Контрагент - СправочникСсылка.Контрагент
//
// Возвращаемое значение:
// ПеречислениеСсылка.ТипыНалогообложенияНДС
//
Функция ПолучитьФлагАвторасчетНДС(НалогообложениеНДС, Магазин, ДатаСреза = '00010101', ОбъектРРО = Ложь) Экспорт

	АвторасчетНДС = (НалогообложениеНДС = Истина);

	Если АвторасчетНДС = Истина Тогда	//	уточняем по магазину и назначению документа

		АвторасчетНДС = ПродажиПовтИсп.ПолучитьАвторасчетНДС(Магазин, ДатаСреза, ОбъектРРО);

	КонецЕсли;

	Возврат АвторасчетНДС;

КонецФункции

// Процедура сбрасывает флаг СкидкиРассчитаны и делает недоступными колонки табличной части.
//
Функция ПолучитьФлагИОбработатьДоступностьАвторасчетаНДС(НалогообложениеНДС, Магазин, ДатаСреза = '00010101', ЭлементыФормы, МассивИменЭлементов, ОбъектРРО = Ложь) Экспорт
	
	ОбщегоНазначенияРТКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭлементыФормы, МассивИменЭлементов, "Доступность", НалогообложениеНДС = Истина);
	
	Возврат ПолучитьФлагАвторасчетНДС(НалогообложениеНДС, Магазин, ДатаСреза, ОбъектРРО);
	
КонецФункции





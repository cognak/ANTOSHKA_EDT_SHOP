#Область СлужебныеПроцедурыИФункции

// Отправляет SMS через GMSU.
//
// Параметры:
//  НомераПолучателей - Массив - номера получателей в формате 38ХХХХХХХХХХ (строкой без плюса);
//  Текст             - Строка - текст сообщения, длиной не более 1000 символов;
//  ИмяОтправителя 	  - Строка - имя отправителя, которое будет отображаться вместо номера входящего SMS;
//  Логин             - Строка - логин пользователя услуги отправки sms;
//  Пароль            - Строка - пароль пользователя услуги отправки sms.
//
// Возвращаемое значение:
//  Структура: ОтправленныеСообщения - Массив структур: НомерОтправителя.
//                                                  ИдентификаторСообщения.
//             ОписаниеОшибки    - Строка - пользовательское представление ошибки, если пустая строка,
//                                          то ошибки нет.
Функция ОтправитьSMS(НомераПолучателей, Текст, ИмяОтправителя, Логин, Знач Пароль, Таймаут) Экспорт

	Результат = Новый Структура("ОтправленныеСообщения, ОписаниеОшибки, Ошибка, КодОтвета", Новый Массив, "", Ложь, 0);
	Результат.Вставить("Идентификатор", СтрЗаменить(Новый УникальныйИдентификатор, "-", ""));

//	Подготовка параметров запроса.
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("login"   , Логин);
	ПараметрыЗапроса.Вставить("password", Пароль);
	ПараметрыЗапроса.Вставить("text"    , Текст);
	ПараметрыЗапроса.Вставить("aname"   , ИмяОтправителя);
	ПараметрыЗапроса.Вставить("id"      , Результат.Идентификатор);

	Для каждого НомерТелефона Из НомераПолучателей Цикл

		ПараметрыЗапроса.Вставить("number", ПодготовитьНомерТелефона(НомерТелефона));
		
	//	Отправка запроса и получения результата обработки
		ТекстJSON = ВыполнитьЗапрос(ПараметрыЗапроса, Результат, Таймаут);

		Если НЕ ТекстJSON = Неопределено Тогда

		//	Можно как-то парсить. Ответ выглядит примерно так:
		//	{"message_id":"61931e7d-8fe0-11ed-972a-005056010cc1"}

		КонецЕсли;

	КонецЦикла;

	Возврат Результат;

КонецФункции

Функция ВыполнитьЗапрос(ПараметрыЗапроса, Результат, Таймаут)

	Перем ТекстJSON;

	ТекстЗапроса = ПолучитьТекстPOSTЗапроса(ПараметрыЗапроса);

	Попытка

	//	Выполняем подключение к серверу "https://api-v2.hyber.im/285"...
		HTTP = Новый HTTPСоединение("api-v2.hyber.im", 443, ПараметрыЗапроса.login, ПараметрыЗапроса.password,, Таймаут, Новый ЗащищенноеСоединениеOpenSSL);

		Попытка

		//	формирование заголовка
			Заголовки = Новый Соответствие;
			Заголовки.Вставить("Content-Type", "application/json");
			Заголовки.Вставить("Content-Length", XMLСтрока(СтрДлина(ТекстЗапроса)));

			HTTPЗапрос = Новый HTTPЗапрос("/285", Заголовки);
			HTTPЗапрос.УстановитьТелоИзСтроки(ТекстЗапроса);

			HTTPОтвет = HTTP.ОтправитьДляОбработки(HTTPЗапрос);
			ТекстJSON = HTTPОтвет.ПолучитьТелоКакСтроку();

			Результат.КодОтвета = HTTPОтвет.КодСостояния;
			ДанныеRFC2616 = СервисыСерверПовтИсп.КодыRFC2616(HTTPОтвет.КодСостояния);

			Результат.Ошибка = НЕ Результат.КодОтвета = 200;
			Результат.ОписаниеОшибки = Формат(Результат.КодОтвета, "ЧДЦ=; ЧН=000; ЧГ=")
				+ ?(ТипЗнч(ТекстJSON) = Тип("Строка"), Символы.ПС + ТекстJSON, "")
				+ Символы.ПС + ДанныеRFC2616.Описание;

		Исключение

			Результат.Ошибка = Истина;
			Результат.ОписаниеОшибки = "помилка надсилання повідомлення: " + ОписаниеОшибки();

		КонецПопытки;	 

	Исключение

		Результат.Ошибка = Истина;
		Результат.ОписаниеОшибки = "помилка підключення до сервера: " + ОписаниеОшибки();

	КонецПопытки;

	Если Результат.Ошибка = Истина Тогда

		ЗаписьЖурналаРегистрации("ОтправитьSMS", УровеньЖурналаРегистрации.Ошибка
		,,, Результат.ОписаниеОшибки , РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);

	КонецЕсли;
	
	Возврат ТекстJSON;

КонецФункции

Функция ПолучитьТекстPOSTЗапроса(ПараметрыЗапроса)

	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();

	ЗаписьJSON.ЗаписатьНачалоОбъекта();

		ЗаписьJSON.ЗаписатьИмяСвойства("phone_number");
		ЗаписьJSON.ЗаписатьЗначение(Число(ПараметрыЗапроса.number));

		ЗаписьJSON.ЗаписатьИмяСвойства("extra_id");
		ЗаписьJSON.ЗаписатьЗначение(ПараметрыЗапроса.id);

		ЗаписьJSON.ЗаписатьИмяСвойства("tag");
		ЗаписьJSON.ЗаписатьЗначение("check");

		//ЗаписьJSON.ЗаписатьИмяСвойства("is_promotional");
		//ЗаписьJSON.ЗаписатьЗначение(Ложь);

		ЗаписьJSON.ЗаписатьИмяСвойства("channels");
			ЗаписьJSON.ЗаписатьНачалоМассива();
			ЗаписьJSON.ЗаписатьЗначение("sms");
			ЗаписьJSON.ЗаписатьКонецМассива();

		ЗаписьJSON.ЗаписатьИмяСвойства("channel_options");

			ЗаписьJSON.ЗаписатьНачалоОбъекта();

				ЗаписьJSON.ЗаписатьИмяСвойства("sms");

					ЗаписьJSON.ЗаписатьНачалоОбъекта();

						ЗаписьJSON.ЗаписатьИмяСвойства("text");
						ЗаписьJSON.ЗаписатьЗначение(ПараметрыЗапроса.text);

						ЗаписьJSON.ЗаписатьИмяСвойства("alpha_name");
						ЗаписьJSON.ЗаписатьЗначение(ПараметрыЗапроса.aname);

						ЗаписьJSON.ЗаписатьИмяСвойства("ttl");
						ЗаписьJSON.ЗаписатьЗначение(300);	//	было 60

					ЗаписьJSON.ЗаписатьКонецОбъекта();

			ЗаписьJSON.ЗаписатьКонецОбъекта();

	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
	Возврат ЗаписьJSON.Закрыть();

КонецФункции

// Возвращает текстовое представление статуса доставки сообщения.
//
// Параметры:
//  ИдентификаторСообщения - Строка - идентификатор, присвоенный sms при отправке;
//  НастройкиОтправкиSMS   - Структура - см. ОтправкаSMSПовтИсп.НастройкиОтправкиSMS;
//
// Возвращаемое значение:
//  Строка - статус доставки. См. описание функции ОтправкаSMS.СтатусДоставки.
Функция СтатусДоставки(ИдентификаторСообщения, НастройкиОтправкиSMS) Экспорт

	Возврат "";

КонецФункции

Функция ПодготовитьНомерТелефона(Знач НомерТелефона)	Экспорт

	НомерТелефона = СокрЛП(НомерТелефона);

	Для каждого СимволУдалить Из ОбщегоНазначенияКлиентСервер.AAD(" ", "+", "(", ")", "-", "=", "_") Цикл

		НомерТелефона = СтрЗаменить(НомерТелефона, СимволУдалить, ""); 

	КонецЦикла;

	Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(НомерТелефона,, Ложь) Тогда	//	LNK 21.03.2021 10:54:49

		Если НЕ Лев(НомерТелефона, 1) = "0" И НЕ Лев(НомерТелефона, 2) = "38" Тогда

			НомерТелефона = "0" + НомерТелефона;

		КонецЕсли;

		Если НЕ Лев(НомерТелефона, 2) = "38" Тогда

			НомерТелефона = "38" + НомерТелефона;

		КонецЕсли;
	
	Иначе

		НомерТелефона = "";

	КонецЕсли;

	Возврат НомерТелефона;

КонецФункции

#КонецОбласти



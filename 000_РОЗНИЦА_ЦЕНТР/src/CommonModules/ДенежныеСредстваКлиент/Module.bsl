// Процедура - выполняет внесение ДС в кассу ККМ, отправляет команду внесения на ФР и создает документ Внесение ДС в кассу ККМ
// Параметры:
//           СуммаВнесения - Число - Сумма внесения в кассу ККМ
//           РКО - ДокументСсылка.РасходныйКассовыйОрдер - РКО на основании которого будет создан документ Внесение ДС в кассу ККМ.
//           КассаККМ - Тип СправочникСсылка.КассыККМ - Касса ККМ в которую вносятся ДС.
//           УникальныйИдентификатор - Тип УникальныйИдентификатор или Форма - форма с которой выполняется внесение ДС.
//           ОшибкаТранзакции - Необязательный выходной параметр, будет содержать признак неуспешного выполнения внесения ДС.
//           ТекстСообщения - Необязательный выходной параметр, будет содержать информационный текст ошибки при неуспешном выполнении внесения ДС.
//           ДокументВнесениеДС - Необязательный выходной параметр, будет содержать документ Внесение ДС в кассу ККМ.
Процедура ВнесениеДенег(
	СуммаВнесения,
	РКО,
	КассаККМ,
	УникальныйИдентификатор,
	ОшибкаТранзакции = Неопределено,
	ТекстСообщения = "",
	ДокументВнесениеДС = Неопределено
	) Экспорт
	
	Результат = Ложь;
	ОшибкаТранзакции = Ложь;
	
	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		
		ОписаниеОшибки = "";
		ПараметрыКассыККМ = ЗначениеНастроекПовтИсп.ПолучитьПараметрыКассыККМ(КассаККМ);
		ИдентификаторУстройства = ПараметрыКассыККМ.ИдентификаторУстройства;
	//	LNK 28.09.2016 07:53:02
		УстройствоИспользуется = ?(ИдентификаторУстройства = Неопределено
									, Ложь
								, ?(ТипЗнч(ИдентификаторУстройства) = Тип("СправочникСсылка.ПодключаемоеОборудование")
									, ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(ИдентификаторУстройства, "УстройствоИспользуется") = Истина
									, Истина));
		
		Если НЕ ЗначениеНастроекПовтИсп.ИспользоватьПодключаемоеОборудование() ИЛИ НЕ УстройствоИспользуется Тогда
			
			ДокументВнесениеДС = ДенежныеСредстваСервер.СоздатьДокументВнесениеДенежныхСредствВКассуККМ(СуммаВнесения, РКО, КассаККМ);
			
		Иначе

			Если УстройствоИспользуется Тогда
					
				// Подключаем ФР
				Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
				                                                                              ИдентификаторУстройства,
				                                                                              ОписаниеОшибки
				);
				
				Если Результат Тогда
					
					//Готовим данные
					ВходныеПараметры  = Новый Массив();
					ВыходныеПараметры = Неопределено;
					
					ВходныеПараметры.Добавить(1);
					ВходныеПараметры.Добавить(СуммаВнесения);
					
					// Печатаем чек.
					Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
																			"Encash",
																			ВходныеПараметры,
																			ВыходныеПараметры
					);
					
					Если Результат Тогда

					//	Итоговое действие.
						ДокументВнесениеДС = ДенежныеСредстваСервер.СоздатьДокументВнесениеДенежныхСредствВКассуККМ(СуммаВнесения, РКО, КассаККМ);
						
					Иначе
						
						ТекстСообщения = СтрЗаменить(
							"Під час друку чека сталася помилка.
	                        |Чек не надруковано на фіскальному реєстраторі.
	                        |Додатковий опис:
	                        |%ДополнительноеОписание%"
							, "%ДополнительноеОписание%"
							, ВыходныеПараметры[1]
						);
						
					КонецЕсли;
					
					// Отключаем ФР
					МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор, ИдентификаторУстройства);
					
				Иначе
					
					ТекстСообщения = СтрЗаменить(
						"При підключенні пристрою сталася помилка.
                        |Чек не надруковано на фіскальному реєстраторі.
                        |Додатковий опис:
                        |%ДополнительноеОписание%"
						, "%ДополнительноеОписание%"
						, ОписаниеОшибки
					);
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	Иначе
		
		ТекстСообщения = "Попередньо потрібно вибрати робоче місце зовнішнього обладнання поточного сеансу.";
		
	КонецЕсли;
	
	ОшибкаТранзакции = НЕ ПустаяСтрока(ТекстСообщения);
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Процедура вызывается из интерфейса менеджера (тонкий клиент) и РМК (толстый клиент),                               //
	// В случае ошибки при выполнении, сообщение пользователю выполняется по двум алгоритмам                              //
	// 1. Если процедура вызвана из толстого клиента (РМК), то текст ошибки помещается в выходной параметр ТекстСообщения //
	//    и отправляется в форму РМК, где и будет происходить сообщение                                                   //
	// 2. Если процедура вызвана из интерфейса менеджера, сообщение выполняется в самой процедуре                         //
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда
	Если ОшибкаТранзакции Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

// Процедура - выполняет выемку ДС из кассу ККМ, отправляет команду выемки на ФР и создает документ Выемка ДС из кассы ККМ
// Параметры:
// СтруктураВыбранныеДанные - Тип Структура - Содержит ключи:
//           КассаККМ - Тип СправочникСсылка.КассыККМ - Касса ККМ из которой изымаются ДС
//           УникальныйИдентификатор - Тип УникальныйИдентификатор или Форма - форма из которой выполняется изъятие ДС
//           ИзымаемаяСумма - Число - Изымаемая сумма из кассы ККМ
//           ОшибкаТранзакции - Необязательный выходной параметр, будет содержать признак неуспешного выполнения выемки ДС
//           ТекстСообщения - Необязательный выходной параметр, будет содержать информационный текст ошибки при неуспешном выполнении внесения ДС
//           ДокументВыемкаДС - Необязательный выходной параметр, будет содержать ссылку на документ Выемка денежных средств
Процедура ВыемкаДенег(
	ИзымаемаяСумма,
	КассаККМ,
	УникальныйИдентификатор,
	ОшибкаТранзакции = Неопределено,
	ТекстСообщения = "",
	ДокументВыемка = Неопределено,
	СсылкаНаОтчет = Неопределено
	) Экспорт
	
	Результат = Ложь;
	ОшибкаТранзакции = Ложь;
	
	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		
		ОписаниеОшибки = "";
		ПараметрыКассыККМ = ЗначениеНастроекПовтИсп.ПолучитьПараметрыКассыККМ(КассаККМ);
		ИдентификаторУстройства = ПараметрыКассыККМ.ИдентификаторУстройства;
	//	LNK 28.09.2016 07:53:02
		УстройствоИспользуется = ?(ИдентификаторУстройства = Неопределено
									, Ложь
								, ?(ТипЗнч(ИдентификаторУстройства) = Тип("СправочникСсылка.ПодключаемоеОборудование")
									, ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(ИдентификаторУстройства, "УстройствоИспользуется") = Истина
									, Истина));
		
		Если НЕ ЗначениеНастроекПовтИсп.ИспользоватьПодключаемоеОборудование() ИЛИ НЕ УстройствоИспользуется Тогда
			
			ДокументВыемка = ДенежныеСредстваСервер.СоздатьДокументВыемкаДенежныхСредствИзКассыККМ(ИзымаемаяСумма, КассаККМ, СсылкаНаОтчет);
			
		Иначе
			
			Если УстройствоИспользуется Тогда
				
					// Подключаем ФР
					Результат = МенеджерОборудованияКлиент.ПодключитьОборудованиеПоИдентификатору(УникальныйИдентификатор,
					                                                                              ИдентификаторУстройства,
					                                                                              ОписаниеОшибки
					);
				
				Если Результат Тогда
					
					//Готовим данные
					ВходныеПараметры  = Новый Массив();
					ВыходныеПараметры = Неопределено;
					
					ВходныеПараметры.Добавить(0);
					ВходныеПараметры.Добавить(ИзымаемаяСумма);
					
					// Печатаем чек.
					Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
																			"Encash",
																			ВходныеПараметры,
																			ВыходныеПараметры
					);
					
					Если Результат Тогда
						
						// Итоговое действие.
						ДокументВыемка = ДенежныеСредстваСервер.СоздатьДокументВыемкаДенежныхСредствИзКассыККМ(ИзымаемаяСумма, КассаККМ, СсылкаНаОтчет);
						
					Иначе
						
						ТекстСообщения = "Під час друку чека сталася помилка.
										|Чек не надруковано на фіскальному реєстраторі.
										|Додатковий опис:
										|%ДодатковийОпис%";
						ТекстСообщения = СтрЗаменить(ТекстСообщения,
						                             "%ДополнительноеОписание%",
						                             ВыходныеПараметры[1]
						);
						
					КонецЕсли;
						
						// Отключаем ФР
						МенеджерОборудованияКлиент.ОтключитьОборудованиеПоИдентификатору(УникальныйИдентификатор, ИдентификаторУстройства);
						
				Иначе
					
					ТекстСообщения = "При підключенні пристрою сталася помилка.
									|Чек не надруковано на фіскальному реєстраторі.
									|Додатковий опис:
									|%ДодатковийОпис%";
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ОписаниеОшибки);
					
				КонецЕсли;
				
			КонецЕсли;

		КонецЕсли;

	Иначе

		ТекстСообщения = "Попередньо потрібно вибрати робоче місце зовнішнього обладнання поточного сеансу.";

	КонецЕсли;
	
	ОшибкаТранзакции = НЕ ПустаяСтрока(ТекстСообщения);
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Процедура вызывается из интерфейса менеджера (тонкий клиент) и РМК (толстый клиент),                               //
	// В случае ошибки при выполнении, сообщение пользователю выполняется по двум алгоритмам                              //
	// 1. Если процедура вызвана из толстого клиента (РМК), то текст ошибки помещается в выходной параметр ТекстСообщения //
	//    и отправляется в форму РМК, где и будет происходить сообщение                                                   //
	// 2. Если процедура вызвана из интерфейса менеджера, сообщение выполняется в самой процедуре                         //
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда
	Если ОшибкаТранзакции Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	#КонецЕсли

КонецПроцедуры













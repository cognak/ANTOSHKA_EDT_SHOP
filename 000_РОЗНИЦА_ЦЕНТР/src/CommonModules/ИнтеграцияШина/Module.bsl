
#Область ПрограммныйИнтерфейс
Процедура ЗаданиеВыполнитьОбмен(КодУзлаОбмена) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	УзелОбмена = ПланыОбмена.ИнтеграцияШина.НайтиПоКоду(КодУзлаОбмена);
	
	Если НЕ ЗначениеЗаполнено(УзелОбмена) Тогда
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Обмен с ЕСпутником'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			УзелОбмена.Метаданные(),
			УзелОбмена,
			НСтр("ru = 'Не найден узел обмена с кодом'") + " " + КодУзлаОбмена);
		
		Возврат;
		
	КонецЕсли;
	
	Если УзелОбмена.ПометкаУдаления Тогда
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Обмен с ЕСпутником'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Информация,
			УзелОбмена.Метаданные(),
			УзелОбмена,
			НСтр("ru = 'Настройка обмена помечена на удаление. Обмен отменен.'"));
		
		Возврат;
		
	КонецЕсли;
	
	ВыполнитьОбмен(УзелОбмена);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьОбмен(УзелОбмена)
	
	Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		ТекстСообщения = НСтр("ru = 'Отказано! Объем разрешен в центральном узле!'");

		ВызватьИсключение ТекстСообщения;

	КонецЕсли;
	
	ТекстСообщения = "";
	
	СтруктураВыгрузки = Новый Структура("УзелОбмена, ДанныеДляОтправки, ТекстЗапроса");
	СтруктураВыгрузки.УзелОбмена = УзелОбмена;

	Выборка = ПланыОбмена.ВыбратьИзменения(УзелОбмена, 1);
	Пока Выборка.Следующий() Цикл
		ДанныеДляОтправки = Выборка.Получить();


		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
		СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON, ДанныеДляОтправки, НазначениеТипаXML.Явное);
		
		ТекстСообщения = ЗаписьJSON.Закрыть();
		
		Сообщение = СервисыИнтеграции.ИнтеграцияЦентрМагазин.СоздатьСообщение();

		Сообщение.КодПолучателя = "";
		Тело = Сообщение.ПолучитьТелоКакПоток();

		Буфер = ПолучитьБуферДвоичныхДанныхИзСтроки(ТекстСообщения);
		Тело.Записать(Буфер, 0, Буфер.Размер);
		Тело.Закрыть();
		
		Сообщение.Параметры.Вставить("РазмерСообщения", Буфер.Размер);
		СервисыИнтеграции.ИнтеграцияЦентрМагазин.ИзЦБВМагазины.ОтправитьСообщение(Сообщение);
		СервисыИнтеграции.ВыполнитьОбработку();

		ПланыОбмена.УдалитьРегистрациюИзменений(УзелОбмена, ДанныеДляОтправки);

	КонецЦикла;
	
	
КонецПроцедуры

// Код процедур и функций

#КонецОбласти

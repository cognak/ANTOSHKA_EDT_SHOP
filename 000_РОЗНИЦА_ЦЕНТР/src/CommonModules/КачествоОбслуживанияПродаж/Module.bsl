//	LNK 04.06.2018 13:49:54
Процедура РегистрацияКонтроляКачестваОбслуживания(ДокументПродажи)	Экспорт

	Возврат;	//	LNK 16.12.2020 05:45:39

	Попытка

		Если НЕ ПривилегированныйРежим() Тогда

			УстановитьПривилегированныйРежим(Истина);

		КонецЕсли;

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК ДокументПродажи,
		|	ТаблицаДокумента.Магазин КАК Магазин,
		|	ТаблицаДокумента.КассаККМ КАК КассаККМ,
		|	ТаблицаДокумента.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	ТаблицаДокумента.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты
		|ПОМЕСТИТЬ Реестр
		|ИЗ
		|	Документ.ЧекККМ КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &ДокументПродажи
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.Магазин,
		|	ТаблицаДокумента.КассаККМ,
		|	ТаблицаДокумента.ДисконтнаяКарта,
		|	ТаблицаДокумента.ВладелецДисконтнойКарты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Реестр.ДокументПродажи КАК ДокументПродажи,
		|	Реестр.КассаККМ КАК КассаККМ
		|ИЗ
		|	Реестр КАК Реестр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
		|	ТабличнаяЧасть.Продавец КАК Продавец,
		|	ТаблицаДокумента.ДокументПродажи КАК ДокументПродажи,
		|	ТаблицаДокумента.Магазин КАК Магазин,
		|	ТаблицаДокумента.КассаККМ КАК КассаККМ,
		|	ТаблицаДокумента.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	ТаблицаДокумента.ВладелецДисконтнойКарты КАК ВладелецДисконтнойКарты,
		|	СУММА(ТабличнаяЧасть.Количество) КАК Количество,
		|	МИНИМУМ(ТабличнаяЧасть.НомерСтроки) КАК КлючПорядка
		|ИЗ
		|	Реестр КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ.Товары КАК ТабличнаяЧасть
		|		ПО ТаблицаДокумента.ДокументПродажи = ТабличнаяЧасть.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Продавец,
		|	ТаблицаДокумента.ДокументПродажи,
		|	ТаблицаДокумента.Магазин,
		|	ТаблицаДокумента.КассаККМ,
		|	ТаблицаДокумента.ДисконтнаяКарта,
		|	ТаблицаДокумента.ВладелецДисконтнойКарты
		|
		|УПОРЯДОЧИТЬ ПО
		|	КлючПорядка
		|ИТОГИ
		|	МАКСИМУМ(Магазин),
		|	МАКСИМУМ(КассаККМ),
		|	МАКСИМУМ(ДисконтнаяКарта),
		|	МАКСИМУМ(ВладелецДисконтнойКарты)
		|ПО
		|	ДокументПродажи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Реестр"
		);
		Запрос.УстановитьПараметр("ДокументПродажи", ДокументПродажи);
		
		Результаты = Запрос.ВыполнитьПакет();

		Если НЕ Результаты[1].Пустой() Тогда

			ПериодЗаписей = ТекущаяДата();
			ТребованиеВыборка = Результаты[1].Выбрать();

			Если ТребованиеВыборка.Следующий() Тогда

				НаборЗаписей = РегистрыСведений.КачествоОбслуживанияПродажТребование.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Период.Установить(ПериодЗаписей);
				НаборЗаписей.Отбор.ДокументПродажи.Установить(ТребованиеВыборка.ДокументПродажи);
				НаборЗаписей.Отбор.КассаККМ.Установить(ТребованиеВыборка.КассаККМ);

				ЗаписьНабора = НаборЗаписей.Добавить();

				ЗаписьНабора.Период = НаборЗаписей.Отбор.Период.Значение;
				ЗаписьНабора.ДокументПродажи = НаборЗаписей.Отбор.ДокументПродажи.Значение;
				ЗаписьНабора.КассаККМ = НаборЗаписей.Отбор.КассаККМ.Значение;

				НаборЗаписей.Записать();

			КонецЕсли;

			ВедущаяВыборка = Результаты[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Если ВедущаяВыборка.Следующий() Тогда

				НаборЗаписей = РегистрыСведений.КачествоОбслуживанияПродаж.СоздатьНаборЗаписей();

				НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов", Истина);
				НаборЗаписей.ДополнительныеСвойства.Вставить("ПропуститьПроверкуЗапретаИзменения"  , Истина);
				НаборЗаписей.ДополнительныеСвойства.Вставить("СлужебнаяЗапись", Истина);
				НаборЗаписей.ОбменДанными.Загрузка = Истина;
				ОбменДаннымиСервер.УстановитьВсехПолучателей(НаборЗаписей.ОбменДанными.Получатели, "ПоМагазину");

				НаборЗаписей.Отбор.Период.Установить(ПериодЗаписей);
				НаборЗаписей.Отбор.ДокументПродажи.Установить(ВедущаяВыборка.ДокументПродажи);
				НаборЗаписей.Отбор.Магазин.Установить(ВедущаяВыборка.Магазин);

				ДеталиВыборка = ВедущаяВыборка.Выбрать();

				Пока ДеталиВыборка.Следующий() Цикл

					ЗаписьНабора = НаборЗаписей.Добавить();

					ЗаписьНабора.Период = НаборЗаписей.Отбор.Период.Значение;
					ЗаписьНабора.ДокументПродажи = НаборЗаписей.Отбор.ДокументПродажи.Значение;
					ЗаписьНабора.Магазин = НаборЗаписей.Отбор.Магазин.Значение;

					ЗаписьНабора.Номенклатура = ДеталиВыборка.Номенклатура;
					ЗаписьНабора.Продавец = ДеталиВыборка.Продавец;

					ЗаписьНабора.КассаККМ = ДеталиВыборка.КассаККМ;
					ЗаписьНабора.ДисконтнаяКарта = ДеталиВыборка.ДисконтнаяКарта;
					ЗаписьНабора.ВладелецДисконтнойКарты = ДеталиВыборка.ВладелецДисконтнойКарты;
					ЗаписьНабора.Количество = ДеталиВыборка.Количество;

				КонецЦикла;

				НаборЗаписей.Записать();

			КонецЕсли;

		КонецЕсли;

	Исключение

		ТекстОшибки = ОписаниеОшибки();

	КонецПопытки;

КонецПроцедуры











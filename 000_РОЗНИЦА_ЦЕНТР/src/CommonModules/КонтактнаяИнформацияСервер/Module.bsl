

//2025-03-12 sa Используется для очистки контактной информации о клиенте по его запросу.
Функция ОчиститьДанныеКлиента(КонтрагентСсылка) Экспорт
	
	//Проверяем есть ли на клиенте не закрытые заказы
	ОтветПроверки = ПроверкаНеЗакрытыхЗаказовНаКлиента(КонтрагентСсылка);
	Если Не ОтветПроверки.Успешно Тогда
		Возврат ОтветПроверки;
	КонецЕсли;
	
	//Очищаем карточку клиента
	ОтветОчистки = ОчиститьКарточкуКлиента(КонтрагентСсылка);
	
	Возврат ОтветОчистки;
	
КонецФункции

Функция ПроверкаНеЗакрытыхЗаказовНаКлиента(КонтрагентСсылка)
	СтруктураОтвета = Новый Структура("Успешно,ОписаниеОшибки",Истина,"");
	
	ДопустимыеСтатусы = Новый Массив;
	ДопустимыеСтатусы.Добавить(Перечисления.СтатусыЗаказовПокупателей.Закрыт);
	ДопустимыеСтатусы.Добавить(Перечисления.СтатусыЗаказовПокупателей.Отменён);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ЗаказПокупателя.Номер КАК Номер,
	               |	ЗаказПокупателя.Дата КАК Дата,
	               |	ЗаказПокупателя.Статус КАК Статус
	               |ИЗ
	               |	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	               |ГДЕ
	               |	ЗаказПокупателя.Проведен
	               |	И ЗаказПокупателя.Дата > &Дата
	               |	И НЕ ЗаказПокупателя.Статус В (&ДопустимыеСтатусы)
	               |	И ЗаказПокупателя.Контрагент = &Контрагент";
	
	Запрос.УстановитьПараметр("Дата",ТекущаяДата() - 30*86400);
	Запрос.УстановитьПараметр("ДопустимыеСтатусы",ДопустимыеСтатусы);
	Запрос.УстановитьПараметр("Контрагент",КонтрагентСсылка);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		СтруктураОтвета.Успешно = Ложь;
		СтруктураОтвета.ОписаниеОшибки = "Обнаружен незакрытый заказ №"+Результат.Номер+" от "+Формат(Результат.Дата,"ДФ=dd.MM.yyyy")+" в статусе: "+Результат.Статус;
	КонецЕсли;
	
	Возврат СтруктураОтвета;
КонецФункции

Функция ОчиститьКарточкуКлиента(КонтрагентСсылка)
	СтруктураОтвета = Новый Структура("Успешно,ОписаниеОшибки",Истина,"");
	
	//на всякий случай проверяем что контрагент не пустой
	Если Не ЗначениеЗаполнено(КонтрагентСсылка) Тогда
		Возврат Новый Структура("Успешно,ОписаниеОшибки",Ложь,"Передан не валидный контрагент <"+КонтрагентСсылка+">");
	КонецЕсли;
	
	//на всякий случай проверяем что контрагент это не юр.лицо
	Если КонтрагентСсылка.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		Возврат Новый Структура("Успешно,ОписаниеОшибки",Ложь,"Клиент не является физ.лицом. Данным способом можно удалять только физ.лиц");
	КонецЕсли;
	
	
	Попытка
		//Убираем ФИО из регистра сведений
		Рег = РегистрыСведений.ФИОФизЛиц.СоздатьНаборЗаписей();
		Рег.Отбор.ФизЛицо.Установить(КонтрагентСсылка);
		Рег.Прочитать();
		ЕстьФИО = Ложь;
		Если Рег.Количество()>0 Тогда
			ЕстьФИО = Истина;
			Рег.Очистить();
		КонецЕсли;
		
		//пишем только если была очистка (так быстрее)
		Если ЕстьФИО Тогда
			Рег.Записать(Истина);
		КонецЕсли;
		
		
		//Очищаем карточку клиента
		КонтрагентОбъект = КонтрагентСсылка.ПолучитьОбъект();
		
		КонтрагентОбъект.Наименование = "##Клиент+IDN##"+КонтрагентОбъект.IDN;
		КонтрагентОбъект.НаименованиеПолное = "##Клиент+IDN##"+КонтрагентОбъект.IDN;
		КонтрагентОбъект.Пол = "";
		КонтрагентОбъект.ДатаРождения = "";
		КонтрагентОбъект.Дети.Очистить();
		КонтрагентОбъект.КонтактнаяИнформация.Очистить();
		КонтрагентОбъект.Родитель = Справочники.Контрагенты.Корзина;
		
		КонтрагентОбъект.ОбменДанными.Загрузка = Истина;
		КонтрагентОбъект.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		КонтрагентОбъект.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов", Истина);
		ОбменДаннымиСервер.УстановитьВсехПолучателей(КонтрагентОбъект.ОбменДанными.Получатели, "ПоМагазину");
		КонтрагентОбъект.Записать();	
	Исключение
		Возврат Новый Структура("Успешно,ОписаниеОшибки",Ложь,"Ошибка: "+ОписаниеОшибки());
	КонецПопытки;
	
	Возврат СтруктураОтвета;
	
КонецФункции
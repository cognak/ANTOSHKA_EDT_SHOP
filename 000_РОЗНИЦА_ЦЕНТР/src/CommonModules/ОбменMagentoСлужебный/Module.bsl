#Область ВспомогательныйФункционал

Функция ИнициализацияТаблицыКонтрагентовДляВнешнихДанных()	Экспорт

	ТаблицаВнешняя = Новый ТаблицаЗначений;

	ТаблицаВнешняя.Колонки.Добавить("НомерСтроки"		, Новый ОписаниеТипов("Число"));
	ТаблицаВнешняя.Колонки.Добавить("IDC"				, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(36)));
	ТаблицаВнешняя.Колонки.Добавить("НомерТелефона"		, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(150)));
	ТаблицаВнешняя.Колонки.Добавить("Email"				, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(150)));
	ТаблицаВнешняя.Колонки.Добавить("EmailТекущий"		, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(150)));
	ТаблицаВнешняя.Колонки.Добавить("ДанныеКонтрагента"	, Новый ОписаниеТипов("Структура"));
	ТаблицаВнешняя.Колонки.Добавить("Контрагент"		, Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаВнешняя.Колонки.Добавить("Найден"			, Новый ОписаниеТипов("Булево"));
	ТаблицаВнешняя.Колонки.Добавить("ОписаниеОшибки"	, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(500)));
	ТаблицаВнешняя.Индексы.Добавить("НомерСтроки");

//	LNK 08.06.2021 10:31:54
	ТаблицаВнешняя.Колонки.Добавить("ДисконтнаяКарта"	, Новый ОписаниеТипов("СправочникСсылка.ИнформационныеКарты"));
	ТаблицаВнешняя.Колонки.Добавить("КодКарты"			, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(Метаданные.Справочники.ИнформационныеКарты.ДлинаКода)));

	Возврат ТаблицаВнешняя;

КонецФункции

Функция ИнициализацияТаблицыНоменклатурыДляВнешнихДанных()	Экспорт	//	LNK 08.06.2021 12:14:36

	ТаблицаВнешняя = Новый ТаблицаЗначений;

	ТаблицаВнешняя.Колонки.Добавить("НомерСтроки"		, Новый ОписаниеТипов("Число"));
	ТаблицаВнешняя.Колонки.Добавить("IDN"				, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20)));
	ТаблицаВнешняя.Колонки.Добавить("УпаковкаИмя"		, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50)));
	ТаблицаВнешняя.Колонки.Добавить("Коэффициент"		, Новый ОписаниеТипов("Число"));
	ТаблицаВнешняя.Колонки.Добавить("ДанныеСтроки"		, Новый ОписаниеТипов("Структура"));

	ТаблицаВнешняя.Колонки.Добавить("Номенклатура"		, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаВнешняя.Колонки.Добавить("Упаковка"			, Новый ОписаниеТипов("СправочникСсылка.УпаковкиНоменклатуры"));
	ТаблицаВнешняя.Колонки.Добавить("СтавкаНДС"			, Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));

	ТаблицаВнешняя.Колонки.Добавить("Найден"			, Новый ОписаниеТипов("Булево"));
	ТаблицаВнешняя.Колонки.Добавить("ОписаниеОшибки"	, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(500)));

	ТаблицаВнешняя.Колонки.Добавить("Склад"				, Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаВнешняя.Колонки.Добавить("ТипДоставки"		, Новый ОписаниеТипов("ПеречислениеСсылка.ТипДоставкиЗаказПокупателя"));
	ТаблицаВнешняя.Колонки.Добавить("Самовывоз"			, Новый ОписаниеТипов("Булево"));
	ТаблицаВнешняя.Колонки.Добавить("МагазинПолучатель"	, Новый ОписаниеТипов("СправочникСсылка.Магазины"));

	Возврат ТаблицаВнешняя;

КонецФункции

#Область ПреобразованиеВнешнихИдентификаторовВПеречисления

//	LNK 13.11.2021 06:22:51
Функция СтатусЗаказаПокупателя(Значение, СоставОшибки)	Экспорт

//	Вызывается только при загрузке заказа от ИМ.

	СоответствиеЗначений = Новый Соответствие;
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.pending			, Перечисления.СтатусыЗаказовПокупателей.Новый);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.send_to_1c		, Перечисления.СтатусыЗаказовПокупателей.Согласован);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.in_complectation	, Перечисления.СтатусыЗаказовПокупателей.НеСогласован);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.delivered		, Перечисления.СтатусыЗаказовПокупателей.Закрыт);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.canceled			, Перечисления.СтатусыЗаказовПокупателей.Отменён);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.paid				, Перечисления.СтатусыЗаказовПокупателей.Новый);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.selection_document_printed, Перечисления.СтатусыЗаказовПокупателей.НеСогласован);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.sent_to_shop		, Перечисления.СтатусыЗаказовПокупателей.Согласован);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.logistic			, Перечисления.СтатусыЗаказовПокупателей.Согласован);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.in_moving		, Перечисления.СтатусыЗаказовПокупателей.Согласован);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.ready_to_warehouse		, Перечисления.СтатусыЗаказовПокупателей.НеСогласован);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.ready					, Перечисления.СтатусыЗаказовПокупателей.Согласован);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.carrier_return_delivered	, Перечисления.СтатусыЗаказовПокупателей.Отменён);
	СоответствиеЗначений.Вставить(Перечисления.СтатусыИнтернетМагазина.returned_cash			, Перечисления.СтатусыЗаказовПокупателей.Отменён);

	ЗначениеВозврата = СоответствиеЗначений.Получить(Значение);

	Если ЗначениеВозврата = Неопределено Тогда

		СоставОшибки.Отказ			= Истина;
		СоставОшибки.СтатусОшибки	= "ATTR:OrderStatus(in)";
		СоставОшибки.ОписаниеОшибки = ?(ПустаяСтрока(СоставОшибки.ОписаниеОшибки)
			, ""
			, СокрЛП(СоставОшибки.ОписаниеОшибки) + Символы.ПС) + "[Статус]: отримано поганий статус інтернет-магазину";

	КонецЕсли;

	Возврат ЗначениеВозврата;

КонецФункции

//	LNK 13.11.2021 05:37:58
Функция СтатусИнтернетМагазина(Значение, СоставОшибки)	Экспорт

	Попытка

		Если ТипЗнч(Значение) = Тип("ПеречислениеСсылка.СтатусыИнтернетМагазина") Тогда

		//	здесь возвращаем имя перечисления, то есть Идентификатор
			ЗначениеВозврата = ОбщегоНазначенияКлиентСервер.РеквизитПеречисления(Значение);

		Иначе

			ЗначениеВозврата = Перечисления.СтатусыИнтернетМагазина[Значение];

		КонецЕсли;

	Исключение

		СоставОшибки.Отказ			= Истина;
		СоставОшибки.СтатусОшибки	= "ATTR:OrderStatus";
		СоставОшибки.ОписаниеОшибки = ?(ПустаяСтрока(СоставОшибки.ОписаниеОшибки)
			, ""
			, СокрЛП(СоставОшибки.ОписаниеОшибки) + Символы.ПС) + "[СтатусИМ]: " + ОписаниеОшибки();

		Если ТипЗнч(Значение) = Тип("ПеречислениеСсылка.СтатусыИнтернетМагазина") Тогда

			ЗначениеВозврата = "";	//	в режиме выгрузки нужно вернуть пустую строку

		КонецЕсли;

	КонецПопытки;

	Возврат ЗначениеВозврата;

КонецФункции

//	LNK 13.11.2021 06:53:09
Функция ТипДоставкиИнтернетМагазина(Значение, СоставОшибки)	Экспорт

	БазаСоответствия = Новый Массив;
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "opsway_shipping_shop_pickup"	, Перечисления.ТипДоставкиЗаказПокупателя.Самовывоз));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "opsway_shipping_opsway_shipping", Перечисления.ТипДоставкиЗаказПокупателя.Самовывоз));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "freeshipping_freeshipping"		, Перечисления.ТипДоставкиЗаказПокупателя.НоваяПочтаДоставкаВОтделение));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "flatrate_flatrate"				, Перечисления.ТипДоставкиЗаказПокупателя.НоваяПочтаДоставкаПоАдресу));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "meest_warehouse_meest_warehouse", Перечисления.ТипДоставкиЗаказПокупателя.MeestExpressДоставкаВОтделение));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "meest_house_meest_house"		, Перечисления.ТипДоставкиЗаказПокупателя.MeestExpressДоставкаПоАдресу));
	//БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "freeshipping_freeshipping"		, Перечисления.ТипДоставкиЗаказПокупателя.СлужбаДоставки));
	//БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "flatrate_flatrate"				, Перечисления.ТипДоставкиЗаказПокупателя.СлужбаДоставки));
	//БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "meest_warehouse_meest_warehouse", Перечисления.ТипДоставкиЗаказПокупателя.СлужбаДоставки));
	//БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "meest_house_meest_house"		, Перечисления.ТипДоставкиЗаказПокупателя.СлужбаДоставки));

	СоответствиеЗначений = УстановитьСоответствиеЗначений(БазаСоответствия, Значение);

	ЗначениеТипа = СоответствиеЗначений.Получить(Значение);

	Если ЗначениеТипа = Неопределено Тогда

		Если ТипЗнч(Значение) = Тип("Строка") Тогда	//	тут работаем в режиме загрузки заказа от ИМ

			СоставОшибки.ОписаниеОшибки = ?(ПустаяСтрока(СоставОшибки.ОписаниеОшибки)
				, ""
				, СокрЛП(СоставОшибки.ОписаниеОшибки) + Символы.ПС) + "[ТипДоставки]: отримано поганий тип доставки [" + Значение + "] інтернет-магазину";

		Иначе	//	при выгрузке НЕ ругаемся.. пустое и пустое.

			ЗначениеТипа = "";

		КонецЕсли;

	КонецЕсли;

	Возврат ЗначениеТипа;

КонецФункции

Функция ОператорыДоставкиИнтернетМагазина(Значение, СоставОшибки)	Экспорт

	БазаСоответствия = Новый Массив;
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "opsway_shipping_shop_pickup"	, Перечисления.ОператорыДоставки.ВнутренняяЛогистика));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "opsway_shipping_opsway_shipping", Перечисления.ОператорыДоставки.ВнутренняяЛогистика));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "freeshipping_freeshipping"		, Перечисления.ОператорыДоставки.НоваяПочта));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "flatrate_flatrate"				, Перечисления.ОператорыДоставки.НоваяПочта));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "meest_warehouse_meest_warehouse", Перечисления.ОператорыДоставки.MeestExpress));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "meest_house_meest_house"		, Перечисления.ОператорыДоставки.MeestExpress));

	СоответствиеЗначений = УстановитьСоответствиеЗначений(БазаСоответствия, Значение);

	ЗначениеТипа = СоответствиеЗначений.Получить(Значение);

	Если ЗначениеТипа = Неопределено Тогда

		Если ТипЗнч(Значение) = Тип("Строка") Тогда	//	тут работаем в режиме загрузки заказа от ИМ

			СоставОшибки.ОписаниеОшибки = ?(ПустаяСтрока(СоставОшибки.ОписаниеОшибки)
				, ""
				, СокрЛП(СоставОшибки.ОписаниеОшибки) + Символы.ПС) + "[ТипДоставки]: отримано поганий тип доставки [" + Значение + "] інтернет-магазину";

		Иначе	//	при выгрузке НЕ ругаемся.. пустое и пустое.

			ЗначениеТипа = "";

		КонецЕсли;

	КонецЕсли;

	Возврат ЗначениеТипа;

КонецФункции

Функция ДоставкаНаАдресИнтернетМагазина(Значение, СоставОшибки)	Экспорт

	БазаСоответствия = Новый Массив;
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "opsway_shipping_shop_pickup"	, Истина));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "opsway_shipping_opsway_shipping", Истина));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "freeshipping_freeshipping"		, Ложь));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "flatrate_flatrate"				, Истина));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "meest_warehouse_meest_warehouse", Ложь));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "meest_house_meest_house"		, Истина));

	СоответствиеЗначений = УстановитьСоответствиеЗначений(БазаСоответствия, Значение);

	ЗначениеТипа = СоответствиеЗначений.Получить(Значение);

	Если ЗначениеТипа = Неопределено Тогда

		Если ТипЗнч(Значение) = Тип("Строка") Тогда	//	тут работаем в режиме загрузки заказа от ИМ

			СоставОшибки.ОписаниеОшибки = ?(ПустаяСтрока(СоставОшибки.ОписаниеОшибки)
				, ""
				, СокрЛП(СоставОшибки.ОписаниеОшибки) + Символы.ПС) + "[ТипДоставки]: отримано поганий тип доставки [" + Значение + "] інтернет-магазину";

		Иначе	//	при выгрузке НЕ ругаемся.. пустое и пустое.

			ЗначениеТипа = "";

		КонецЕсли;

	КонецЕсли;

	Возврат ЗначениеТипа;

КонецФункции

//	LNK 13.11.2021 06:53:41
Функция ТипОплатыИнтернетМагазина(Значение, СоставОшибки)	Экспорт

	БазаСоответствия = Новый Массив;
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "banktransfer"	, Перечисления.ТипОплатыЗаказПокупателя.БезналичныйРасчет));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "checkmo"		, Перечисления.ТипОплатыЗаказПокупателя.Наличные));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "liqpay"			, Перечисления.ТипОплатыЗаказПокупателя.ОплатаКартойПриват));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "upcpayment"		, Перечисления.ТипОплатыЗаказПокупателя.БанковскаяКарта));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "ipay"			, Перечисления.ТипОплатыЗаказПокупателя.ipay));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "amida_payparts"	, Перечисления.ТипОплатыЗаказПокупателя.amida_payparts));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "monobank"		, Перечисления.ТипОплатыЗаказПокупателя.monobank));
	БазаСоответствия.Добавить(Новый Структура("Имя, Значение", "alfabank"		, Перечисления.ТипОплатыЗаказПокупателя.alfabank));

	СоответствиеЗначений = УстановитьСоответствиеЗначений(БазаСоответствия, Значение);

	ЗначениеТипа = СоответствиеЗначений.Получить(Значение);

	Если ЗначениеТипа = Неопределено Тогда

		Если ТипЗнч(Значение) = Тип("Строка") Тогда	//	тут работаем в режиме загрузки заказа от ИМ

			СоставОшибки.ОписаниеОшибки = ?(ПустаяСтрока(СоставОшибки.ОписаниеОшибки)
				, ""
				, СокрЛП(СоставОшибки.ОписаниеОшибки) + Символы.ПС) + "[ТипОплаты]: отримано поганий тип оплати [" + Значение + "] інтернет-магазину";

		Иначе	//	при выгрузке НЕ ругаемся.. пустое и пустое.

			ЗначениеТипа = "";

		КонецЕсли;

	КонецЕсли;

	Возврат ЗначениеТипа;

КонецФункции

Функция УстановитьСоответствиеЗначений(БазаСоответствия, Значение)	//	LNK 13.11.2021 07:06:04

	СоответствиеЗначений = Новый Соответствие;

	Если ТипЗнч(Значение) = Тип("Строка") Тогда

		Для каждого ЭлементБазы Из БазаСоответствия Цикл

			СоответствиеЗначений.Вставить(ЭлементБазы.Имя, ЭлементБазы.Значение);

		КонецЦикла;

	Иначе

		Для каждого ЭлементБазы Из БазаСоответствия Цикл

			СоответствиеЗначений.Вставить(ЭлементБазы.Значение, ЭлементБазы.Имя);

		КонецЦикла;

	КонецЕсли;

	Возврат СоответствиеЗначений;

КонецФункции

#КонецОбласти

Функция ОшибкаMagento(ОписаниеОшибки, ТекстОшибкиЕщё, Отказ = Неопределено)	Экспорт	//	LNK 14.11.2021 06:10:12

	Если НЕ ТипЗнч(ОписаниеОшибки) = Тип("Строка") Тогда
		
		ОписаниеОшибки = "";

	КонецЕсли;

	Если НЕ ПустаяСтрока(ТекстОшибкиЕщё) Тогда

		ОписаниеОшибки = ОписаниеОшибки + ?(ПустаяСтрока(ОписаниеОшибки), "", Символы.ПС)
		+ ТекстОшибкиЕщё;
	//	если будет передан "Отказ", то он будет установлен. Не нужно "Отказ" устанавливать - не передавайте!
		Отказ = Истина;

	КонецЕсли;

	Возврат ОписаниеОшибки;

КонецФункции

//	LNK 12.11.2021 11:12:51
Функция IDC_Строкой(Ссылка)	Экспорт

	Если ЗначениеЗаполнено(Ссылка) Тогда

		Идентификатор = СокрЛП(Ссылка.УникальныйИдентификатор());

	Иначе

		Идентификатор = "";

	КонецЕсли;

	Возврат Идентификатор;

КонецФункции

#КонецОбласти




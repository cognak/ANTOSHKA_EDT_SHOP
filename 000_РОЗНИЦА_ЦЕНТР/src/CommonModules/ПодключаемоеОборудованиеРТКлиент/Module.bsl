/////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ РАБОТЫ С ПОДКЛЮЧАЕМЫМ ОБОРУДОВАНИЕМ

// Очистка полученного магнитного кода, выбор из нескольких полученных форматов
//
// Параметры:
//  МагнитныйКод - магнитные данные считанные СМК, в данном параметры возвращается обработанный код
//
Процедура ВыбратьМагнитныйКод(МагнитныйКод) Экспорт
	
	СписокКодовКарты = ПодключаемоеОборудованиеРТ.ПолучитьСписокКодовКарты(МагнитныйКод);
	
	Если СписокКодовКарты.Количество() > 1 Тогда

		ВыбранныйКодКарты = СписокКодовКарты.ВыбратьЭлемент("Выберите считанный код:");
		Если ВыбранныйКодКарты <> Неопределено Тогда
			МагнитныйКод = ВыбранныйКодКарты.Значение;
		КонецЕсли;

	ИначеЕсли СписокКодовКарты.Количество() = 1 Тогда
		
		МагнитныйКод = СписокКодовКарты[0].Значение;
		
	КонецЕсли;
	
КонецПроцедуры

// Загружает в таблицу данные из терминала сбора данных
//
Процедура ПолучитьДанныеИзТСД(Форма, ДопПараметры = Неопределено) Экспорт
	
	ДанныеШтрихкодов = Неопределено;
	ПострочнаяЗагрузка = Истина;
	Если ДопПараметры <> Неопределено Тогда
		Если ДопПараметры.Свойство("ПострочнаяЗагрузка") Тогда
			ПострочнаяЗагрузка = ДопПараметры.ПострочнаяЗагрузка;
		КонецЕсли;
	КонецЕсли;
	
	ОчиститьСообщения();
	        
	Если НЕ МенеджерОборудованияКлиент.ЗагрузитьДанныеИзТСД(Форма.УникальныйИдентификатор, ДанныеШтрихкодов) Тогда
		Возврат;
	КонецЕсли;
		
	ТекстВопроса = НСтр("ru='Перезаполнить количество в строках табличной части?'") 
		+ Символы.ПС
		+ НСтр("ru='Да - Количество в строках табличной части будет заполнено количеством из ТСД'") 
		+ Символы.ПС 
		+ НСтр("ru='Нет - Количество из ТСД будет добавлено к количеству в строках табличной части'");

	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	ОбновитьКоличество = (Ответ = КодВозвратаДиалога.Да);
	
	Если ПострочнаяЗагрузка Тогда
		НеОпознанныеШтрихкоды = Новый Массив();

		Для Индекс = 0 По ДанныеШтрихкодов.Количество() - 1 Цикл
			ТекКод = ДанныеШтрихкодов[Индекс].Штрихкод;
			ТекКоличество = ДанныеШтрихкодов[Индекс].Количество;
			
			СтруктураПараметровКлиента = Форма.ПолученШтрихкодИзСШК(ТекКод, ТекКоличество, ОбновитьКоличество);
			
			Если СтруктураПараметровКлиента.Свойство("НеизвестныеДанныеПО") 
				И СтруктураПараметровКлиента.НеизвестныеДанныеПО Тогда
				НеОпознанныеШтрихкоды.Добавить(Новый Структура("Штрихкод, Количество", ТекКод, ТекКоличество));
			Иначе
				Форма.ОбработатьДанныеПоКодуКлиент(СтруктураПараметровКлиента, ТекКод);
			КонецЕсли

		КонецЦикла;
	Иначе
		СтруктураМассивов = ПодключаемоеОборудованиеРТ.СформироватьМассивТоваров(ДанныеШтрихкодов, ОбновитьКоличество);
		
		ОпознанныеШтрихкоды = СтруктураМассивов.ОпознанныеШтрихкоды;
		Если ОпознанныеШтрихкоды.Количество() > 0 Тогда
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("ЗначенияПоиска", ОпознанныеШтрихкоды);
			СтруктураПараметров.Вставить("ОбновитьКоличество", ОбновитьКоличество);
			РезультатОбработкиФормы = Форма.ОбработатьМассивДанныхПОВФормеСервер(СтруктураПараметров);
		КонецЕсли;
		
		НеОпознанныеШтрихкоды = СтруктураМассивов.НеОпознанныеШтрихкоды;
	КонецЕсли;

	Если НеОпознанныеШтрихкоды.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Штрихкоды", НеОпознанныеШтрихкоды);

	Ответ = ОткрытьФормуМодально("ОбщаяФорма.ПодборНоменклатурыПоСоответствиюШтрихкодов", ПараметрыФормы);

	Если ТипЗнч(Ответ) = Тип("Массив") Тогда

		Если ПострочнаяЗагрузка Тогда
			СтруктураПараметровКлиента = Новый Структура;

			Для Каждого Строка Из Ответ Цикл

				НеизвестныеДанныеПО = Ложь;
				СтруктураПараметров = Новый Структура;
				СтруктураПараметров.Вставить("НеизвестныеДанныеПО", НеизвестныеДанныеПО);
				СтруктураПараметров.Вставить("ЗначенияПоиска", Новый Массив);
				СтруктураПараметров.Вставить("Действие", "ПроверкаТоваров");
				СтруктураПараметров.Вставить("ИспользоватьКоличество", Строка.Количество);
				Если ОбновитьКоличество Тогда
					СтруктураПараметров.Вставить("ОбновитьКоличество", Строка.Количество);
				КонецЕсли;

				СтруктураШтрихкода  = Новый Структура;
				СтруктураШтрихкода.Вставить("Номенклатура",  Строка.Номенклатура);
				СтруктураШтрихкода.Вставить("Характеристика", Строка.Характеристика);
				СтруктураШтрихкода.Вставить("Упаковка", Строка.Упаковка);
				СтруктураПараметров.ЗначенияПоиска.Добавить(СтруктураШтрихкода);
				СтруктураПараметровКлиента = Форма.ОбработатьДанныеПОВФормеСервер(СтруктураПараметров, СтруктураПараметровКлиента);
			КонецЦикла;
		Иначе
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("ЗначенияПоиска", Ответ);
			СтруктураПараметров.Вставить("ОбновитьКоличество", ОбновитьКоличество);
			РезультатОбработкиФормы = Форма.ОбработатьМассивДанныхПОВФормеСервер(СтруктураПараметров);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Выгружает таблицу с данными в терминал сбора данных
// 
Процедура ВыгрузитьДокументВТСД(Форма, ВыгружатьЦену = Ложь) Экспорт
	
	Если  ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда
		Если Форма.Модифицированность Тогда
			
			ТекстВопроса = НСтр("ru = 'Документ был изменен, записать изменения?'");
			ОтветНаВопрос = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
			
			Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
				Если НЕ Форма.Записать() Тогда
					Возврат;
				КонецЕсли;
			Иначе 
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		ТекстВопроса = НСтр("ru = 'Документ необходимо записать. Записать документ?'");
		ОтветНаВопрос = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		
		Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			Если Не Форма.Записать() Тогда
				Возврат;
			КонецЕсли;
		Иначе 
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ВариантЗаполнения, Документ, ВыгружатьЦену", "ПоДокументу", Форма.Объект.Ссылка, ВыгружатьЦену);
	ОткрытьФормуМодально("Обработка.ВыгрузкаТоваровВТСД.Форма", ПараметрыФормы);
	
КонецПроцедуры

// Получает вес с электронных весов для табличной части
//
Функция ПолучитьВесСЭлектронныхВесовДляТабличнойЧасти(Форма, ИмяТабличнойЧасти = "Товары", КоличествоФакт = Ложь) Экспорт
	
	Результат = Ложь;
	
	// Проверим текущую строку табличной части.
	Если ЗначениеЗаполнено(ИмяТабличнойЧасти) Тогда
		
		ТекущаяСтрока = Форма.Элементы[ИмяТабличнойЧасти].ТекущиеДанные;
		Если ТекущаяСтрока = Неопределено Тогда
			
			ТекстСообщения = НСтр("ru='Необходимо выбрать строку, для которой необходимо получить вес.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
		Иначе
			
			Вес = 0; 
			Если МенеджерОборудованияКлиент.ПолучитьВесСЭлектронныхВесов(Форма.УникальныйИдентификатор, Вес) Тогда
				Если Вес = 0 Тогда
					ТекстСообщения = НСтр("ru = 'Электронные весы вернули нулевой вес.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Иначе
					
					Если КоличествоФакт Тогда
						ТекущаяСтрока.КоличествоУпаковокФакт = Вес; // Вес получен
					Иначе
						ТекущаяСтрока.КоличествоУпаковок = Вес; // Вес получен
					КонецЕсли;
						
					Результат = Истина;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

//	LNK 04.10.2017 11:43:05
Функция ДанныеЭквайринговогоТерминала(ТерминалЭлемент)	Экспорт

	Возврат ПодключаемоеОборудованиеРТПовтИсп.ДанныеЭквайринговогоТерминала(ТерминалЭлемент);

КонецФункции // ДанныеЭквайринговогоТерминала()

//	LNK 31.12.2019 09:46:58
Функция ПолучитьТипШтрихкода(Штрихкод)	Экспорт

	ФорматШтрихкода = "CODE128";

	Если СтрДлина(Штрихкод) = 13 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Штрихкод) Тогда

		Если Прав(Штрихкод, 1) = ПодключаемоеОборудованиеРТ.КонтрольныйСимволEAN13(Штрихкод) Тогда

			ФорматШтрихкода = "EAN13";

		КонецЕсли;

	КонецЕсли;

	Возврат ФорматШтрихкода;

КонецФункции

#Область ПрограммныйИнтерфейс
// Структура подсчета оплат.
// 
// Возвращаемое значение:
//   Структура:
//     * СуммаОплачено - Число
//     * СуммаОжидаетОплаты - Число
//     * СуммаСформированныхОплат - Число
//     * СуммаСформированныхВозвратов - Число
//     * СуммаВсегоДляОплаты - Число
//     * СуммаВсегоОплаты - Число
//     * СуммаВсего - Число
Функция СтруктураПодсчетаОплат() Экспорт
	
	СтруктураОплат = Новый Структура;
	СтруктураОплат.Вставить("СуммаОплачено", 0);
	СтруктураОплат.Вставить("СуммаОжидаетОплаты", 0);
	СтруктураОплат.Вставить("СуммаСформированныхОплат", 0);
	СтруктураОплат.Вставить("СуммаСформированныхВозвратов", 0);
	СтруктураОплат.Вставить("СуммаВсегоДляОплаты", 0);
	СтруктураОплат.Вставить("СуммаВсегоОплаты", 0);
	СтруктураОплат.Вставить("СуммаВсего", 0);
	
	Возврат СтруктураОплат;
	
КонецФункции

// Подсчет оплаты.
// 
// Параметры:
// ДокументОбъект - ДокументОбъект.ЗаказПокупателя - объект документа Заказ покупателя
// СтруктураОплат см. ЗаказыПокупателейКлиентСервер.СтруктураПодсчетаОплат
// 
// Возвращаемое значение:
//   Структура:
//     * Оплачено - Булево
//     * Предоплата - Булево
//     * ЗаголовокДляФормы - Строка
Функция ПодсчетОплаты(ДокументОбъект, СтруктураОплат) Экспорт
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("Оплачено", Ложь);
	СтруктураОтвета.Вставить("Предоплата", Ложь);
	СтруктураОтвета.Вставить("ЗаголовокДляФормы", "");
	
	Для Каждого СтрокаОплаты Из ДокументОбъект.ОплатаЗаказа Цикл 
		
		Если СтрокаОплаты.Отменён Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не (СтрокаОплаты.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипОплатыЗаказПокупателя.Наличные") 
					Или СтрокаОплаты.ТипОплаты = ПредопределенноеЗначение("Перечисление.ТипОплатыЗаказПокупателя.БРПостоплата"))
				И Не СтруктураОтвета.Предоплата Тогда 
			СтруктураОтвета.Предоплата = Истина;
		КонецЕсли;
		
		Если СтрокаОплаты.ВидОплаты = ПредопределенноеЗначение("Перечисление.ВидыОплатыЗаказаПокупателя.Оплата") Тогда
		
			СтруктураОплат.СуммаСформированныхОплат = СтруктураОплат.СуммаСформированныхОплат + СтрокаОплаты.Сумма;
			
			Если СтрокаОплаты.СтатусОплаты = ПредопределенноеЗначение("Перечисление.СтатусОплаты.Оплачен") Тогда 
				СтруктураОплат.СуммаОплачено = СтруктураОплат.СуммаОплачено + СтрокаОплаты.Сумма;
			КонецЕсли;

			Если СтрокаОплаты.СтатусОплаты = ПредопределенноеЗначение("Перечисление.СтатусОплаты.ОтправленаСсылка") Тогда
				СтруктураОплат.СуммаОжидаетОплаты = СтруктураОплат.СуммаОжидаетОплаты + СтрокаОплаты.Сумма;
			КонецЕсли;
			
		Иначе
			
			СтруктураОплат.СуммаСформированныхВозвратов = СтруктураОплат.СуммаСформированныхВозвратов + СтрокаОплаты.Сумма;
			
		КонецЕсли;
		
	КонецЦикла; 
	
	СтруктураОплат.СуммаВсегоДляОплаты = СтруктураОплат.СуммаВсего + ДокументОбъект.СуммаДоставки; 
	СтруктураОплат.СуммаВсегоОплаты = СтруктураОплат.СуммаОплачено - СтруктураОплат.СуммаСформированныхВозвратов; 
	
	Если СтруктураОплат.СуммаВсегоДляОплаты = СтруктураОплат.СуммаВсегоОплаты Тогда 
		Если Не СтруктураОплат.СуммаОжидаетОплаты = 0 
				Или Не СтруктураОплат.СуммаСформированныхОплат = СтруктураОплат.СуммаОплачено Тогда 
			СтруктураОтвета.ЗаголовокДляФормы = "Удалите не нужные оплаты или сделайте возврат!!!"; 
		Иначе 
			СтруктураОтвета.ЗаголовокДляФормы = "Заказ оплачен!!!"; 
			СтруктураОтвета.Оплачено = Истина;
		КонецЕсли;
	ИначеЕсли СтруктураОплат.СуммаВсегоДляОплаты > СтруктураОплат.СуммаВсегоОплаты Тогда
		СтруктураОтвета.ЗаголовокДляФормы = "Недостаточно оплат!!!";
	Иначе
		СтруктураОтвета.ЗаголовокДляФормы = "Переплата заказа!!!";
	КонецЕсли;

	Если Не СтруктураОтвета.Предоплата И ДокументОбъект.ДокументОснование.Пустая() Тогда
		
		СтруктураОтвета.ЗаголовокДляФормы = "";
	
	КонецЕсли;
	
	Возврат СтруктураОтвета;
	
КонецФункции

Процедура ПодсчетСтрокиВозврата(Объект, СтрокаВозврата) Экспорт
	
	СтруктураОтвета = ЗаказыПокупателейСервер.ДанныеСтрокиЗаказа(Объект, СтрокаВозврата.КлючСвязиЗапросаДоступности);
	
	СтрокаВозврата.Цена = СтруктураОтвета.Цена;
	СтрокаВозврата.СуммаАвтоматическойСкидки = СтруктураОтвета.СуммаАвтоматическойСкидки * СтрокаВозврата.ВозвращенноеКоличествоУпаковок / СтрокаВозврата.КоличествоУпаковок;
	СтрокаВозврата.СуммаРучнойСкидки = СтруктураОтвета.СуммаРучнойСкидки * СтрокаВозврата.ВозвращенноеКоличествоУпаковок / СтрокаВозврата.КоличествоУпаковок;
	СтрокаВозврата.СуммаБонусныхБалловНачислено = СтруктураОтвета.СуммаБонусныхБалловНачислено * СтрокаВозврата.ВозвращенноеКоличествоУпаковок / СтрокаВозврата.КоличествоУпаковок;
	СтрокаВозврата.СуммаБонусныхБалловСписано = СтруктураОтвета.СуммаБонусныхБалловСписано * СтрокаВозврата.ВозвращенноеКоличествоУпаковок / СтрокаВозврата.КоличествоУпаковок;
	СтрокаВозврата.СуммаОкругления = СтруктураОтвета.СуммаОкругления * СтрокаВозврата.ВозвращенноеКоличествоУпаковок / СтрокаВозврата.КоличествоУпаковок;
	СтрокаВозврата.Сумма = СтрокаВозврата.Цена * СтрокаВозврата.ВозвращенноеКоличествоУпаковок
		- СтрокаВозврата.СуммаАвтоматическойСкидки
		- СтрокаВозврата.СуммаРучнойСкидки
		- СтрокаВозврата.СуммаБонусныхБалловСписано
		- СтрокаВозврата.СуммаОкругления;
	
КонецПроцедуры

#КонецОбласти

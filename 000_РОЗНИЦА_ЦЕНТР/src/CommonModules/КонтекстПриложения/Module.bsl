#Область ОпределениеКонтекстаТекущегоСоединения

//	LNK 18.05.2018 13:13:31
Функция ЭтоКлиентскоеСоединение()	Экспорт

	ОписательПриложения = КонтекстПриложенияПовтИсп.ИменаСоединений().Получить(НРег(ИмяПриложенияТекущегоСоединения()));

	Возврат ?(ОписательПриложения = Неопределено, Ложь, ОписательПриложения.Клиент = Истина);

КонецФункции // ЭтоКлиентскоеСоединение()

//	LNK 06.06.2018 09:26:22
Функция ЭтоФоновоеЗадание()	Экспорт

	ОписательПриложения = КонтекстПриложенияПовтИсп.ИменаСоединений().Получить(НРег(ИмяПриложенияТекущегоСоединения()));

	Возврат ?(ОписательПриложения = Неопределено, Ложь, ОписательПриложения.ФоновоеЗадание = Истина);

КонецФункции // ЭтоФоновоеЗадание()

//	LNK 12.10.2018 09:07:16
Функция ЭтоWebСервис()	Экспорт	

	ОписательПриложения = КонтекстПриложенияПовтИсп.ИменаСоединений().Получить(НРег(ИмяПриложенияТекущегоСоединения()));

	Возврат ?(ОписательПриложения = Неопределено, Ложь, ОписательПриложения.WebСервис = Истина);

КонецФункции // ЭтоWebСервис()

//	LNK 18.05.2018 12:00:59
Функция ИмяПриложенияТекущегоСоединения()

	УстановитьПривилегированныйРежим(Истина);

	ИмяПриложения   = "";
	НомерСоединения = НомерСоединенияИнформационнойБазы();

//	ПолучитьТекущийСеансИнформационнойБазы() не используем, так как кол-во сеансов меньше кол-во соединений

	Для каждого Соединение Из ПолучитьСоединенияИнформационнойБазы() Цикл

		Если Соединение.НомерСоединения = НомерСоединения Тогда

			ИмяПриложения = Соединение.ИмяПриложения;
			Прервать;

		КонецЕсли;

	КонецЦикла;

	Возврат ИмяПриложения;

КонецФункции // ИмяПриложенияТекущегоСоединения()

#КонецОбласти

#Область ФиксацияРаботыВКонтекстеФоновогоЗадания

//	LNK 06.06.2018 10:32:30
Процедура РегистрацияВыполненияФоновогоЗадания()	Экспорт

	УстановитьПривилегированныйРежим(Истина);

	ФоновоеЗадание = ПолучитьТекущийСеансИнформационнойБазы().ПолучитьФоновоеЗадание();

	Если НЕ ФоновоеЗадание = Неопределено Тогда

		Комментарий = "Метод: " + ФоновоеЗадание.ИмяМетода + Символы.ПС
					+ "Ключ: " + ФоновоеЗадание.Ключ + Символы.ПС
					+ "Начало: " + ФоновоеЗадание.Начало;

		ЗаписьЖурналаРегистрации("ФоновыеЗадания", УровеньЖурналаРегистрации.Информация
		,,, Комментарий, РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);

	КонецЕсли;

КонецПроцедуры
	
#КонецОбласти

#Область ФиксацияРаботыВКонтекстеWebСервисов

//	LNK 12.10.2018 09:33:07
Процедура РегистрацияВыполненияWebСервиса(ИмяWS, ИмяПроцедуры, Параметр1 = "", Параметр2 = "", Параметр3 = "", Параметр4 = "", Параметр5 = "")	Экспорт

	СписокПараметров = ОбщегоНазначенияКлиентСервер.AAD(Параметр1, Параметр2, Параметр3, Параметр4, Параметр5);

	Комментарий    = "";
	НомерПараметра = 0;

	Для каждого Параметр Из СписокПараметров Цикл

		Параметр = СокрЛП(Параметр);
		НомерПараметра = НомерПараметра + 1;

		Если НЕ ПустаяСтрока(Параметр) Тогда

			Комментарий = Комментарий + ?(ПустаяСтрока(Комментарий), "", Символы.ПС)
			 + "par" + СокрЛП(НомерПараметра) + "> " + Параметр;

		КонецЕсли;

	КонецЦикла;

	ЗаписьЖурналаРегистрации("WebСервисы", УровеньЖурналаРегистрации.Информация
	, Метаданные.WebСервисы[ИмяWS]//.Операции[ИмяПроцедуры]
	,, "PROC: " + ИмяПроцедуры + Символы.ПС + Комментарий, РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);

КонецПроцедуры

//	LNK 09.04.2019 07:30:42
Процедура ЖурналированиеВходящихЗапросов(ИмяКаталога, Префикс, RequestData, Использовать = Ложь)	Экспорт

	Если НЕ ЖурналированиеИспользовать(ИмяКаталога, Префикс, Использовать) Тогда

		Возврат;	//	LNK 05.03.2021 06:33:57

	КонецЕсли; 
	
	Если ТипЗнч(RequestData) = Тип("Строка") Тогда

		Попытка

			КаталогЖурнала = Новый Файл(КаталогВременныхФайлов() + "\" + ИмяКаталога + "\" + СокрЛП(ЗначениеНастроекПовтИсп.ПолучитьЗначениеКонстанты("ИдентификаторУчетнойСистемы")));
			РаботаСФайлами.ПроверитьСуществованиеКаталога(КаталогЖурнала.ПолноеИмя);

			Счётчик = 0;

			Пока Истина Цикл

			//	исключим возможное существование такого имени в каталоге
				ФайлПротокола  = Новый Файл(КаталогЖурнала.ПолноеИмя
					+ "\"
					+ Префикс + "_"
					+ Формат(ТекущаяДата(), "ДФ=ггггММддЧЧммсс") + "_"
					+ Формат(Счётчик, "ЧЦ=2; ЧН=00; ЧВН=")
					+ ".jrn");

				Если НЕ ФайлПротокола.Существует() ИЛИ Счётчик = 9 Тогда

					Прервать;

				КонецЕсли;

				Счётчик = Счётчик + 1;

			КонецЦикла;

			ЗаписьТекста = Новый ЗаписьТекста(ФайлПротокола.ПолноеИмя, КодировкаТекста.UTF8,,, "");
			ЗаписьТекста.Записать(RequestData);
			ЗаписьТекста.Закрыть();

		Исключение

			ТекстОшибки = ОписаниеОшибки();
			ЗаписьЖурналаРегистрации("ЖурналВходящихЗапросов", УровеньЖурналаРегистрации.Ошибка
			,,, "Запись файла «" + ФайлПротокола.ПолноеИмя + "»" + Символы.ПС + ТекстОшибки
			, РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);

		КонецПопытки;

	КонецЕсли;

КонецПроцедуры

//	LNK 02.11.2021 06:39:57
Функция ЖурналированиеИспользовать(Идентификатор, Префикс, Использовать)

	Если Использовать Тогда

		Если НЕ ПривилегированныйРежим() Тогда

			УстановитьПривилегированныйРежим(Истина);

		КонецЕсли;

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ТаблицаПараметры.Идентификатор ЕСТЬ NULL
		|			ТОГДА Ведущая.Использовать
		|		КОГДА &Входящие = ИСТИНА
		|			ТОГДА ТаблицаПараметры.Входящие
		|		ИНАЧЕ ТаблицаПараметры.Исходящие
		|	КОНЕЦ КАК Использовать
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЛОЖЬ КАК Использовать) КАК Ведущая
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЖурналированияВнешнихЗапросов КАК ТаблицаПараметры
		|		ПО (ТаблицаПараметры.Идентификатор = &Идентификатор)
		|			И (НЕ ТаблицаПараметры.Идентификатор = """")"
		);
		Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
		Запрос.УстановитьПараметр("Входящие", ?(НРег(Префикс) = "in", Истина, Ложь));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		Использовать = Выборка.Использовать;

	КонецЕсли;

	Возврат (Использовать = Истина);	//	исключим всякие неожиданности

КонецФункции

//	LNK 01.05.2024 10:24:42
Функция ПредставлениеЗаголовка(Заголовки, ДобавитьРазделитель = Истина)	Экспорт

	#Если _ Тогда
	Заголовки = Новый Соответствие;
	#КонецЕсли
	Представление = "";

	Для каждого КлючЗначение Из Заголовки Цикл

		Представление = Представление + ?(ПустаяСтрока(Представление), "", Символы.ПС)
			+ КлючЗначение.Ключ + ": """ + КлючЗначение.Значение + """";

	КонецЦикла;

	Если ДобавитьРазделитель = Истина Тогда

		Представление = Представление + ?(ПустаяСтрока(Представление), "", Символы.ПС);

	КонецЕсли;

	Возврат Представление;

КонецФункции
	
#КонецОбласти













// Функция возвращает значение экспортных переменных модуля приложений из параметра сеанса
// Необходмо для возможности создания объектов на сервере
Функция ПолучитьЗначениеПеременной_УДАЛИТЬ(ИмяПараметра, Кэш = Неопределено, КэшИзменен = Ложь) Экспорт
	
	Если Кэш = Неопределено Тогда
		// Кэш не был проинициализирован
		Кэш = Новый Структура;
	Иначе
		// Ищем значение в структуре
		НайденноеЗначение = Неопределено;
		Если Кэш.Свойство(ИмяПараметра, НайденноеЗначение) Тогда
			Возврат НайденноеЗначение;
		КонецЕсли;
	КонецЕсли;
	
	Если ВРег(ИмяПараметра) = ВРег("ЗначенияДополнительныхПравПользователя") Тогда
		НайденноеЗначение = Новый Соответствие;		
	КонецЕсли;
	
	Кэш.Вставить(ИмяПараметра, НайденноеЗначение);
	КэшИзменен = Истина;
	
	Возврат НайденноеЗначение;
	
КонецФункции

Процедура УстановитьЗначениеПеременной(ИмяПараметра, Кэш, ЗначениеПараметра, ОбновлятьВоВсехКэшах = Ложь) Экспорт
	
	Если Кэш.Свойство(ИмяПараметра) Тогда
		Кэш.Вставить(ИмяПараметра, ЗначениеПараметра);
	КонецЕсли;
	
	#Если Клиент ИЛИ ВнешнееСоединение Тогда
		Если ОбновлятьВоВсехКэшах Тогда
			КэшНаСервере = ПараметрыСеанса.ОбщиеЗначения.Получить();
			КэшНаСервере.Вставить(ИмяПараметра, ЗначениеПараметра);
			ПараметрыСеанса.ОбщиеЗначения = Новый ХранилищеЗначения(КэшНаСервере);
		КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

// Функция возвращает владельца характеристики
//
// Параметры
//  Номенклатура - <СправочникСсылка.Номенклатура> 
//
// Возвращаемое значение:
//   Владелец характеристики - номенклатура или вид номенклатуры, 
// 							   неопределено если учет по характеристикам не ведется
//
Функция ПолучитьВладельцаХарактеристики(Номенклатура) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Неопределено;
	ИначеЕсли НЕ ТипЗнч(Номенклатура)=Тип("СправочникСсылка.Номенклатура") Тогда
		Возврат Неопределено;
	ИначеЕсли НЕ ЗначениеЗаполнено(Номенклатура.ВидНоменклатуры) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИспользованиеХарактеристик = Номенклатура.ВидНоменклатуры.ИспользованиеХарактеристик;
	
	Если ИспользованиеХарактеристик = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ИндивидуальныеДляНоменклатуры Тогда
		Возврат Номенклатура;
		
	ИначеЕсли ИспользованиеХарактеристик = Перечисления.ВариантыВеденияДополнительныхДанныхПоНоменклатуре.ОбщиеДляВидаНоменклатуры Тогда
		Возврат Номенклатура.ВидНоменклатуры;
		
	Иначе
		Возврат Неопределено;
	КонецЕсли;
		
КонецФункции // ПолучитьВладельцаХарактеристики()

// Установка связи по владельцу для характеристики номенклатуры
//
// Параметры
//  Номенклатура - <СправочникСсылка.Номенклатура> 
//	Элемент 	 - колонка табличной части
//
// Возвращаемое значение:
//   Истина - связь установлена, иначе ложь
//
Функция УстановитьСвязьПоВладельцуХарактеристикиНоменклатуры(Номенклатура, Элемент) Экспорт
	
	Если НЕ Справочники.Номенклатура.ПроверитьИспользованиеХарактеристик(Номенклатура) Тогда
		Возврат Ложь;
	Иначе
        Элемент.ВыборПоВладельцу = ПолучитьВладельцаХарактеристики(Номенклатура);
		Возврат Истина;
	КонецЕсли;

КонецФункции

Процедура НачалоВыбораХарактеристикНоменклатурыТабЧасти(СтрокаТабличнойЧасти, Элемент, СтандартнаяОбработка) Экспорт
	
	Если (СтрокаТабличнойЧасти = Неопределено) ИЛИ НЕ (ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура)) Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = УстановитьСвязьПоВладельцуХарактеристикиНоменклатуры(СтрокаТабличнойЧасти.Номенклатура, Элемент);
	
	Если НЕ СтандартнаяОбработка Тогда
		#Если Клиент Тогда
			ПоказатьПредупреждение(, "Для номенклатуры """+СокрЛП(СтрокаТабличнойЧасти.Номенклатура.Наименование)+""" учет по характеристикам не ведется !",5);
		#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабЧастьНаОсновании(ДокументОбъект, ДокументОснование) Экспорт
	
	ДокументОбъектМетаданные    = ДокументОбъект.Метаданные();
	ДокументОснованиеМетаданные = ДокументОснование.Метаданные();
	
	Для каждого ТекТабЧасть Из ДокументОбъектМетаданные.ТабличныеЧасти Цикл
		
		Если ОбщегоНазначенияРТ.ЕстьТЧОбъекта(ТекТабЧасть.Имя, ДокументОснованиеМетаданные) = Истина Тогда
			
			ДокументОбъект[ТекТабЧасть.Имя].Загрузить(ДокументОснование[ТекТабЧасть.Имя].Выгрузить());
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры





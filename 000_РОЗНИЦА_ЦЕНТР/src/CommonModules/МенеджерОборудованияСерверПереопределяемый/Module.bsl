                                         
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Возвращает список доступных типов оборудования
//
Функция ПолучитьДоступныеТипыОборудования() Экспорт
	
	СписокОборудования = Новый Массив;

	// Сканеры штрихкода
	СписокОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.СканерШтрихкода);
	// Конец Сканеры штрихкода

	// Считыватели магнитных карт
	СписокОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.СчитывательМагнитныхКарт);
	// Конец Считыватели магнитных карт

	// Фискальные регистраторы
	СписокОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ФискальныйРегистратор);
	// Конец Фискальные регистраторы

	// Дисплеи покупателя
	СписокОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ДисплейПокупателя);
	// Конец Дисплеи покупателя

	// Терминалы сбора данных
	СписокОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ТерминалСбораДанных);
	// Конец Терминалы сбора данных

	// Эквайринговые терминалы
	СписокОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ЭквайринговыйТерминал);
    // Конец Эквайринговые терминалы
	
	// Электронные весы
	СписокОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ЭлектронныеВесы);
	// Конец Электронные весы
	
	// 2023-07-10 sa Биометрические сканеры
	СписокОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.БиометрическийСканер);
	// Конец Биометрические сканеры

	
	Если ОбщегоНазначенияРТ.ИспользоватьПодключаемоеОборудованиеOffline() Тогда
		
		// Весы с печатью этикеток
		СписокОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ВесыСПечатьюЭтикеток);
		// Конец Весы с печатью этикеток
		
		// ККМ offline
		СписокОборудования.Добавить(Перечисления.ТипыПодключаемогоОборудования.ККМOffline);
		// Конец ККМ offline
	
	КонецЕсли;
	
	Возврат СписокОборудования;
	
КонецФункции

// Получить структуру шаблона чека
 //
Функция ПолучитьСтруктуруШаблонаЧека(ПараметрыШаблонаЧека, ТаблицаИсходная_Количество, ИдентификаторУстройства) Экспорт
	
	ВыходнойПараметрСтруктураШаблона = Новый Структура();
	ВыходнойПараметрСтруктураШаблона.Вставить("Шапка", Новый Массив());
	ВыходнойПараметрСтруктураШаблона.Вставить("МассивТекстаСтрокиШапки", Новый Массив());
	ВыходнойПараметрСтруктураШаблона.Вставить("МассивТекстаСтрокиПодвал", Новый Массив());
	ВыходнойПараметрСтруктураШаблона.Вставить("Подвал", Новый Массив());
	ВыходнойПараметрСтруктураШаблона.Вставить("ОднаФискальнаяСтрока", Ложь);
	ВыходнойПараметрСтруктураШаблона.Вставить("ФискальнаяСтрокаБезПечати", Ложь);
	
	Для итератор = 0 По ТаблицаИсходная_Количество - 1 Цикл
		ВыходнойПараметрСтруктураШаблона.МассивТекстаСтрокиШапки.Добавить(Новый Массив());
		ВыходнойПараметрСтруктураШаблона.МассивТекстаСтрокиПодвал.Добавить(Новый Массив());
	КонецЦикла;
	
	Если ПараметрыШаблонаЧека.Количество() = 0.00 Тогда
		Возврат ВыходнойПараметрСтруктураШаблона;
	КонецЕсли;
	
	КассаШаблона = ПараметрыШаблонаЧека[0];
	РеквизитШаблона = ПараметрыШаблонаЧека[1];
	Ссылка = ПараметрыШаблонаЧека[2];
	
	СтруктураШаблона = КассаШаблона.ПолучитьОбъект()[РеквизитШаблона].Шаблон.Получить();
	
	
	Если СтруктураШаблона = Неопределено Тогда
		Возврат ВыходнойПараметрСтруктураШаблона;
	Иначе
		СкидкиНаценкиСерверПереопределяемый.ОбработатьСтруктуруШаблонаЧекаПриПечати(СтруктураШаблона, Ссылка);
		ВыходнойПараметрСтруктураШаблона.ФискальнаяСтрокаБезПечати = Истина;

		МассивТекстаСтрокиШапки = Новый Массив();
		МассивТекстаСтрокиПодвал = Новый Массив();
		
		ПараметрыМакета = Новый Структура();
		ПараметрыМакета.Вставить("СхемаКомпоновкиДанных", Неопределено);
		ПараметрыМакета.Вставить("КомпоновщикМакета", Неопределено);
		ПараметрыМакета.Вставить("КэшМакетов", Неопределено);
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
		ШаблонЧека = МенеджерОбъекта.МакетФискальногоЧека(Ссылка, СтруктураШаблона.Шаблон, СтруктураШаблона.ШиринаЧека, ПараметрыМакета);
		СтруктураШаблона.Вставить("Шаблон", ШаблонЧека);
		СтруктураШаблона.Вставить("СоставнойМассив", Новый Массив);
		СтруктураШаблона.Вставить("Идентификатор", ИдентификаторУстройства);
		
		ВыходнойПараметрСтруктураШаблона.Вставить("Шапка", ПечатьФискальныхЧеков.НапечататьСтроки(СтруктураШаблона, "Шапка"));
		Для итератор = 0 По ТаблицаИсходная_Количество - 1 Цикл
			МассивСтрокиШапки = ПечатьФискальныхЧеков.НапечататьСтроки(СтруктураШаблона, "ТелоШапка_"+итератор);
			МассивТекстаСтрокиШапки.Добавить(МассивСтрокиШапки);
			МассивСтрокиПодвал = ПечатьФискальныхЧеков.НапечататьСтроки(СтруктураШаблона, "ТелоПодвал_"+итератор);
			МассивТекстаСтрокиПодвал.Добавить(МассивСтрокиПодвал);
		КонецЦикла;
		ВыходнойПараметрСтруктураШаблона.Вставить("Подвал", ПечатьФискальныхЧеков.НапечататьСтроки(СтруктураШаблона, "Подвал"));
		ВыходнойПараметрСтруктураШаблона.Вставить("МассивТекстаСтрокиШапки", МассивТекстаСтрокиШапки);
		ВыходнойПараметрСтруктураШаблона.Вставить("МассивТекстаСтрокиПодвал", МассивТекстаСтрокиПодвал);
		ВыходнойПараметрСтруктураШаблона.ОднаФискальнаяСтрока = СтруктураШаблона.ОднаФискальнаяСтрока;
	КонецЕсли;

	Возврат ВыходнойПараметрСтруктураШаблона;
	
КонецФункции // ПолучитьСтруктуруШаблонаЧека()
#Область СлужебныеПроцедурыИФункции

Функция СтатусДоставки(ИдентификаторСообщения) Экспорт

	Если ПустаяСтрока(ИдентификаторСообщения) Тогда

		Возврат "НеОтправлялось";

	КонецЕсли;

	Результат = Неопределено;
	НастройкиОтправкиSMS = НастройкиОтправкиSMS();

	Если НастройкиОтправкиSMS.Провайдер = Перечисления.ПровайдерыSMS.GMSU Тогда

		Результат = ОтправкаSMSЧерезGMSU.СтатусДоставки(ИдентификаторСообщения, НастройкиОтправкиSMS);

	Иначе // провайдер не выбран

		Результат = "Ошибка";

	КонецЕсли;

	Возврат Результат;

КонецФункции

Функция НастройкиОтправкиSMS() Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Результат = Новый Структура("Логин, Пароль, Провайдер, ИмяОтправителя, Таймаут");

	Владелец = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Константа.ПровайдерSMS");

	УстановитьПривилегированныйРежим(Истина);
	НастройкиПровайдера = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Владелец, "Пароль,Логин,ИмяОтправителя");
	УстановитьПривилегированныйРежим(Ложь);

	НастройкиПровайдера.Свойство("Логин", Результат.Логин);
	НастройкиПровайдера.Свойство("Пароль", Результат.Пароль);
	НастройкиПровайдера.Свойство("ИмяОтправителя", Результат.ИмяОтправителя);
	НастройкиПровайдера.Свойство("Таймаут", Результат.Таймаут);

	Результат.Таймаут = ?(НЕ ТипЗнч(Результат.Таймаут) = Тип("Число") ИЛИ Результат.Таймаут = 0, 10, Результат.Таймаут);

	Результат.Провайдер = Константы.ПровайдерSMS.Получить();

	Возврат Результат;

КонецФункции

#КонецОбласти

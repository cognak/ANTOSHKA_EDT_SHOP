
#Область ПрограммныйИнтерфейс

Процедура ОтправитьСообщения() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеДляБрокераСообщений.Канал КАК Канал,
		|	ДанныеДляБрокераСообщений.НомерЗаписи КАК НомерЗаписи,
		|	ДанныеДляБрокераСообщений.ДанныеДляОтправки КАК ДанныеДляОтправки,
		|	ДанныеДляБрокераСообщений.УИ,
		|	ДанныеДляБрокераСообщений.Тип,
		|	ДанныеДляБрокераСообщений.ОтметкаВремени,
		|	ДанныеДляБрокераСообщений.Представление,
		|	ДанныеДляБрокераСообщений.ТипСодержимого,
		|	ДанныеДляБрокераСообщений.ПромежуточнаяЗапись,
		|	ДанныеДляБрокераСообщений.СсылкаНаОбъект
		|ИЗ
		|	РегистрСведений.ДанныеДляБрокераСообщений КАК ДанныеДляБрокераСообщений
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерЗаписи";

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ПромежуточнаяЗапись Тогда
			Если Выборка.ТипСодержимого = Перечисления.КафкаТипСодержимого.application_json Тогда
				ДанныеДляОтправки=КафкаСервер.ОбъектВСтрокуJSON(Выборка.СсылкаНаОбъект); 
			Иначе
				ДанныеДляОтправки=КафкаСервер.ОбъектВСтрокуXML(Выборка.СсылкаНаОбъект, Выборка.ДанныеДляОтправки); 
			КонецЕсли;
			
			Набор = РегистрыСведений.КафкаДанныеДляБрокераСообщений.СоздатьНаборЗаписей();
			Набор.Отбор.Канал.Установить(Выборка.Канал);
			Набор.Отбор.НомерЗаписи.Установить(Выборка.НомерЗаписи);
			Набор.Прочитать();
			Набор[0].Канал = Выборка.Канал;
			Набор[0].НомерЗаписи = Выборка.НомерЗаписи;
			Набор[0].УИ = Выборка.УИ;
			Набор[0].Тип = Выборка.Тип;
			Набор[0].ОтметкаВремени = Выборка.ОтметкаВремени;
			Набор[0].Представление = Выборка.Представление;
			Набор[0].ТипСодержимого = Выборка.ТипСодержимого;
			Набор[0].СсылкаНаОбъект = Выборка.СсылкаНаОбъект;
			Набор[0].ПромежуточнаяЗапись = Ложь;
			Набор[0].ДанныеДляОтправки = ДанныеДляОтправки;
			Набор.Записать();
		Иначе
			ГотовоеСообщение = ПодготовкаСообщения(Выборка);
			
			ОтветСервера = БрокерСообщений.ОтправитьПоКаналу(ГотовоеСообщение);
			
			Если ОтветСервера = Неопределено Тогда
				Прервать;
			КонецЕсли;
			
			Если СтрНайти(ОтветСервера,"""error_code"": null,") = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Набор = РегистрыСведений.ДанныеДляБрокераСообщений.СоздатьНаборЗаписей();
			Набор.Отбор.Канал.Установить(Выборка.Канал);
			Набор.Отбор.НомерЗаписи.Установить(Выборка.НомерЗаписи);
			Набор.Записать();
		КонецЕсли;

	КонецЦикла; 

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодготовкаСообщения(ДанныеСообщения)
	
	СтруктураСообщения = Новый Структура;
	
	СтруктураСообщения.Вставить("ВерсияСпецификации", "1.0");
	СтруктураСообщения.Вставить("Тип", ДанныеСообщения.Тип);
	СтруктураСообщения.Вставить("Источник", "e1s://retail.antoshka.ua");
	СтруктураСообщения.Вставить("Идентификатор", ДанныеСообщения.УИ);
	СтруктураСообщения.Вставить("ОтметкаВремени", ДанныеСообщения.ОтметкаВремени);
	СтруктураСообщения.Вставить("ПредметИсточника", ДанныеСообщения.Представление);
	СтруктураСообщения.Вставить("СхемаДанных", "http://localhost:8081/");
	СтруктураСообщения.Вставить("Данные", ДанныеСообщения.ДанныеДляОтправки);
	СтруктураСообщения.Вставить("ИмяКаналаОтправки", ДанныеСообщения.Канал);
	СтруктураСообщения.Вставить("ТипСодержимого", ОбщегоНазначения.ИмяЗначенияПеречисления(ДанныеСообщения.ТипСодержимого));

	Возврат СтруктураСообщения;
КонецФункции

#КонецОбласти



Процедура ВыгрузитьДокументПереоценка(Ссылка) ЭКСПОРТ

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПереоценкаТоваровНаСкладах.Дата КАК DATE,
		|	ПереоценкаТоваровНаСкладах.Номер КАК NUMBER,
		|	""ПЕРЕОЦЕНКА"" КАК TYPE,
		|	ПереоценкаТоваровНаСкладах.ВидНоменклатуры.IDN КАК PROJECT,
		|	"""" КАК NAME,
		|	"""" КАК USERIDN,
		|	"""" КАК DOCBARCODE,
		|	""НОВЫЙ"" КАК STATUS,
		|	ВЫБОР
		|		КОГДА ПереоценкаТоваровНаСкладах.Акционная
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК DSCN,
		|	0 КАК NEW_GOODS
		|ИЗ
		|	Документ.ПереоценкаТоваровНаСкладах КАК ПереоценкаТоваровНаСкладах
		|ГДЕ
		|	ПереоценкаТоваровНаСкладах.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПереоценкаТоваровНаСкладахТовары.Ссылка.Номер КАК NUMBER,
		|	ПереоценкаТоваровНаСкладахТовары.Ссылка.Дата КАК DATE,
		|	ПереоценкаТоваровНаСкладахТовары.НомерСтроки КАК LINENUM,
		|	ВЫБОР
		|		КОГДА ПереоценкаТоваровНаСкладахТовары.Ссылка.Дата > &ТекущаяДата
		|			ТОГДА ПереоценкаТоваровНаСкладахТовары.ЦенаНовая
		|		ИНАЧЕ ДействующиеЦеныНоменклатурыСрезПоследних.Цена
		|	КОНЕЦ КАК PRICE_RETAIL,
		|	ПереоценкаТоваровНаСкладахТовары.Количество КАК COUNT_PLAN,
		|	ПереоценкаТоваровНаСкладахТовары.Номенклатура.IDN КАК IDN,
		|	ПереоценкаТоваровНаСкладахТовары.Ссылка.Магазин КАК Магазин,
		|	ПереоценкаТоваровНаСкладахТовары.Номенклатура КАК Номенклатура,
		|	ПереоценкаТоваровНаСкладахТовары.Упаковка КАК Упаковка,
		|	ВЫБОР
		|		КОГДА ПереоценкаТоваровНаСкладахТовары.ТипПереоценки = ЗНАЧЕНИЕ(Перечисление.ТипыПереоценок.ПромоНачало)
		|			ТОГДА ЕСТЬNULL(ОпорныеЦеныНоменклатуры.Цена, 0)
		|		ИНАЧЕ ПереоценкаТоваровНаСкладахТовары.Цена
		|	КОНЕЦ КАК PRICE_SUPPLIER
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ПереоценкаТоваровНаСкладах.Товары КАК ПереоценкаТоваровНаСкладахТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ТекущаяДатаКонец, ОбъектЦенообразования = &Магазин) КАК ДействующиеЦеныНоменклатурыСрезПоследних
		|		ПО ПереоценкаТоваровНаСкладахТовары.Номенклатура = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И ПереоценкаТоваровНаСкладахТовары.Упаковка = ДействующиеЦеныНоменклатурыСрезПоследних.Упаковка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОпорныеЦеныНоменклатуры.СрезПоследних(, ) КАК ОпорныеЦеныНоменклатуры
		|		ПО (ОпорныеЦеныНоменклатуры.Магазин = &Магазин)
		|			И ПереоценкаТоваровНаСкладахТовары.Номенклатура = ОпорныеЦеныНоменклатуры.Номенклатура
		|			И ПереоценкаТоваровНаСкладахТовары.Упаковка = ОпорныеЦеныНоменклатуры.Упаковка
		|ГДЕ
		|	ПереоценкаТоваровНаСкладахТовары.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(Штрихкоды.Штрихкод) КАК BARCODE,
		|	ПереоценкаТоваровНаСкладахТовары.NUMBER КАК NUMBER,
		|	ПереоценкаТоваровНаСкладахТовары.DATE КАК DATE,
		|	ПереоценкаТоваровНаСкладахТовары.LINENUM КАК LINENUM,
		|	ПереоценкаТоваровНаСкладахТовары.PRICE_RETAIL КАК PRICE_RETAIL,
		|	ВЫБОР
		|		КОГДА ПечатьЦенниковВТСД.Печатать
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК PRINTPRICE,
		|	ВЫБОР
		|		КОГДА ПечатьЦенниковВТСД.НеПечататьЦену
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК PRINTPRICE_RETAIL,
		|	""ПЕРЕОЦЕНКА"" КАК TYPE,
		|	ПереоценкаТоваровНаСкладахТовары.COUNT_PLAN КАК COUNT_PLAN,
		|	ПереоценкаТоваровНаСкладахТовары.Номенклатура.IDN КАК IDN,
		|	ПереоценкаТоваровНаСкладахТовары.Магазин КАК Магазин,
		|	ПереоценкаТоваровНаСкладахТовары.Номенклатура КАК Номенклатура,
		|	ПереоценкаТоваровНаСкладахТовары.Упаковка КАК Упаковка,
		|	ПереоценкаТоваровНаСкладахТовары.PRICE_SUPPLIER КАК PRICE_SUPPLIER,
		|	"""" КАК DOC_OWNER_NUMBER,
		|	"""" КАК DOC_OWNER
		|ИЗ
		|	Товары КАК ПереоценкаТоваровНаСкладахТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
		|			И ПереоценкаТоваровНаСкладахТовары.Номенклатура = Штрихкоды.Владелец
		|			И ПереоценкаТоваровНаСкладахТовары.Упаковка = Штрихкоды.Упаковка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПечатьЦенниковВТСД КАК ПечатьЦенниковВТСД
		|		ПО ПереоценкаТоваровНаСкладахТовары.Номенклатура.ВидНоменклатуры = ПечатьЦенниковВТСД.Проект
		|			И (ПечатьЦенниковВТСД.Магазин = &Магазин)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПереоценкаТоваровНаСкладахТовары.NUMBER,
		|	ПереоценкаТоваровНаСкладахТовары.DATE,
		|	ПереоценкаТоваровНаСкладахТовары.LINENUM,
		|	ПереоценкаТоваровНаСкладахТовары.PRICE_RETAIL,
		|	ВЫБОР
		|		КОГДА ПечатьЦенниковВТСД.Печатать
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ПечатьЦенниковВТСД.НеПечататьЦену
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ПереоценкаТоваровНаСкладахТовары.COUNT_PLAN,
		|	ПереоценкаТоваровНаСкладахТовары.Номенклатура.IDN,
		|	ПереоценкаТоваровНаСкладахТовары.Магазин,
		|	ПереоценкаТоваровНаСкладахТовары.Номенклатура,
		|	ПереоценкаТоваровНаСкладахТовары.Упаковка,
		|	ПереоценкаТоваровНаСкладахТовары.PRICE_SUPPLIER
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.IDN КАК IDN,
		|	Штрихкоды.Штрихкод КАК BARCODE,
		|	ВЫБОР
		|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ""ШТ""
		|		ИНАЧЕ Штрихкоды.Упаковка.Наименование
		|	КОНЕЦ КАК UNIT,
		|	ВЫБОР
		|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА 1
		|		ИНАЧЕ Штрихкоды.Упаковка.Коэффициент
		|	КОНЕЦ КАК RATE,
		|	Товары.Номенклатура.КодИзменения КАК VERSION,
		|	Товары.NUMBER КАК NUMBER,
		|	Товары.DATE КАК DATE,
		|	Товары.LINENUM КАК LINENUM,
		|	Товары.PRICE_RETAIL КАК PRICE_RETAIL,
		|	Товары.PRICE_RETAIL КАК PRICE,
		|	Товары.COUNT_PLAN КАК COUNT_PLAN,
		|	ВЫБОР
		|		КОГДА ПечатьЦенниковВТСД.Печатать
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК PRINTPRICE,
		|	ВЫБОР
		|		КОГДА ПечатьЦенниковВТСД.НеПечататьЦену
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК PRINTPRICE_RETAIL,
		|	""ПЕРЕОЦЕНКА"" КАК TYPE,
		|	Товары.Номенклатура.НаименованиеПолное КАК NAME,
		|	Товары.Номенклатура.Маржинальность КАК MARGA
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
		|			И Товары.Номенклатура = Штрихкоды.Владелец
		|			И Товары.Упаковка = Штрихкоды.Упаковка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПечатьЦенниковВТСД КАК ПечатьЦенниковВТСД
		|		ПО Товары.Номенклатура.ВидНоменклатуры = ПечатьЦенниковВТСД.Проект
		|			И (ПечатьЦенниковВТСД.Магазин = &Магазин)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товары.IDN
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Товары";
		
		
		Запрос.УстановитьПараметр("Ссылка",Ссылка);
		Запрос.УстановитьПараметр("ТекущаяДата",НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("Магазин", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);   	
		Запрос.УстановитьПараметр("ТекущаяДатаКонец", КонецДня(ТекущаяДата()));
		
		Результаты = Запрос.ВыполнитьПакет();

		ВыгрузитьТовары(Результаты[3].Выбрать());
		ВыгрузитьДокументы(Результаты[0].Выбрать());
		ВыгрузитьДокументыСтроки(Результаты[2].Выбрать());
	
	
	
	

	  
КонецПроцедуры


Процедура ВыгрузитьДокументПеремещение(Ссылка,РазрешитьДобавлятьСтрокиВТСД) ЭКСПОРТ
	Если РазрешитьДобавлятьСтрокиВТСД тогда 
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	""НОВЫЙ"" КАК STATUS,
	|	"""" КАК NAME,
	|	0 КАК DSCN,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.МагазинОтправитель.СкладУправляющейСистемы
	|			ТОГДА ""ПРИХОД""
	|		ИНАЧЕ ""РАСХОД""
	|	КОНЕЦ КАК TYPE,
	|	ПеремещениеТоваров.Дата КАК DATE,
	|	ПеремещениеТоваров.Номер КАК NUMBER,
	|	ТабСтатусТСД.Проект.IDN КАК PROJECT,
	|	1 КАК NEW_GOODS
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусТСД КАК ТабСтатусТСД
	|		ПО (ТабСтатусТСД.Объект = ПеремещениеТоваров.Ссылка)
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("ссылка", ссылка);
	Результаты = Запрос.Выполнить();

	ВыгрузитьДокументы(Результаты.Выбрать());
	Иначе
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка.Дата КАК Дата,
	|	ТаблицаТовары.Ссылка.Номер КАК Номер,
	|	ВЫРАЗИТЬ(&Магазин КАК Справочник.Магазины) КАК Магазин,
	|	ТаблицаТовары.Ссылка КАК ДокументСсылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Ссылка.МагазинОтправитель.СкладУправляющейСистемы
	|			ТОГДА ""ПРИХОД""
	|		ИНАЧЕ ""РАСХОД""
	|	КОНЕЦ КАК ТипДокумента,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА СУММА(ТаблицаТовары.Количество) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ТаблицаТовары.Сумма) / СУММА(ТаблицаТовары.Количество)
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Ссылка.РазрешитьДобавлятьСтрокиВТСД КАК РазрешитьДобавлятьСтрокиВТСД
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка.Дата,
	|	ТаблицаТовары.Ссылка.Номер,
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Ссылка.МагазинОтправитель.СкладУправляющейСистемы
	|			ТОГДА ""ПРИХОД""
	|		ИНАЧЕ ""РАСХОД""
	|	КОНЕЦ,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.Ссылка.РазрешитьДобавлятьСтрокиВТСД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(Штрихкоды.ДатаИзменения) КАК ДатаИзменения,
	|	ТаблицаТовары.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ ТабШтрихкоды
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ТаблицаТовары.Номенклатура = Штрихкоды.Владелец
	|			И ТаблицаТовары.Упаковка = Штрихкоды.Упаковка
	|			И ТаблицаТовары.Характеристика = Штрихкоды.Характеристика
	|			И (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Упаковка,
	|	ДатаИзменения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабШтрихкоды.Номенклатура КАК Номенклатура,
	|	ТабШтрихкоды.Упаковка КАК Упаковка,
	|	Штрихкоды.Штрихкод КАК Штрихкод
	|ПОМЕСТИТЬ ТабШтрихкодыСрез
	|ИЗ
	|	ТабШтрихкоды КАК ТабШтрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ТабШтрихкоды.Номенклатура = Штрихкоды.Владелец
	|			И ТабШтрихкоды.Упаковка = Штрихкоды.Упаковка
	|			И (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
	|			И ТабШтрихкоды.ДатаИзменения = Штрихкоды.ДатаИзменения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Штрихкоды.Штрихкод КАК BARCODE,
	|	ВЫБОР
	|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ""ШТ""
	|		ИНАЧЕ Штрихкоды.Упаковка.Наименование
	|	КОНЕЦ КАК UNIT,
	|	ВЫБОР
	|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ Штрихкоды.Упаковка.Коэффициент
	|	КОНЕЦ КАК RATE,
	|	ДействующиеЦеныНоменклатурыСрезПоследних.Цена КАК PRICE,
	|	Товары.Номенклатура.IDN КАК IDN,
	|	Товары.Номенклатура.НаименованиеПолное КАК NAME,
	|	Товары.Номенклатура.Артикул КАК ARTICUL,
	|	Товары.Номенклатура.Производитель.Наименование КАК VENDOR,
	|	Товары.Номенклатура.ВидНоменклатуры.IDN КАК PROJECT,
	|	Товары.Номенклатура.КодИзменения КАК VERSION,
	|	Товары.Номенклатура.Маржинальность КАК MARGA
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
	|			И Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Упаковка = Штрихкоды.Упаковка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ТекущаяДатаКонец, ОбъектЦенообразования = &Магазин) КАК ДействующиеЦеныНоменклатурыСрезПоследних
	|		ПО Товары.Номенклатура = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И Товары.Упаковка = ДействующиеЦеныНоменклатурыСрезПоследних.Упаковка
	|			И Товары.Магазин = ДействующиеЦеныНоменклатурыСрезПоследних.ОбъектЦенообразования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.ТипДокумента КАК TYPE,
	|	Товары.Дата КАК DATE,
	|	Товары.Номер КАК NUMBER,
	|	МАКСИМУМ(Товары.Номенклатура.ВидНоменклатуры.IDN) КАК PROJECT,
	|	""НОВЫЙ"" КАК STATUS,
	|	Товары.Номенклатура.КодИзменения КАК VERSION,
	|	"""" КАК NAME,
	|	Штрихкоды.Штрихкод КАК BARCODE,
	|	0 КАК DSCN,
	|	ВЫБОР
	|		КОГДА Товары.РазрешитьДобавлятьСтрокиВТСД
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК NEW_GOODS
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
	|			И Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Упаковка = Штрихкоды.Упаковка
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.ТипДокумента,
	|	Товары.Дата,
	|	Товары.Номер,
	|	Товары.Номенклатура.КодИзменения,
	|	Штрихкоды.Штрихкод,
	|	ВЫБОР
	|		КОГДА Товары.РазрешитьДобавлятьСтрокиВТСД
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	TYPE,
	|	DATE,
	|	NUMBER
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ТипДокумента КАК TYPE,
	|	МАКСИМУМ(Товары.Дата) КАК DATE,
	|	Товары.Номер КАК NUMBER,
	|	Товары.НомерСтроки КАК LINENUM,
	|	Товары.Номенклатура.IDN КАК IDN,
	|	Товары.Количество КАК COUNT_PLAN,
	|	Товары.Цена КАК PRICE_SUPPLIER,
	|	ЦеныНоменклатуры.Цена КАК PRICE_RETAIL,
	|	ВЫБОР
	|		КОГДА ПечатьЦенниковВТСД.Печатать
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК PRINTPRICE,
	|	Товары.Номенклатура.КодИзменения КАК VERSION,
	|	"""" КАК NAME,
	|	ТабШтрихкодыСрез.Штрихкод КАК BARCODE,
	|	ВЫБОР
	|		КОГДА ПечатьЦенниковВТСД.НеПечататьЦену
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК PRINTPRICE_RETAIL,
	|	"""" КАК DOC_OWNER_NUMBER,
	|	"""" КАК DOC_OWNER
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ТекущаяДатаКонец, ОбъектЦенообразования = &Магазин) КАК ЦеныНоменклатуры
	|		ПО Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И Товары.Упаковка = ЦеныНоменклатуры.Упаковка
	|			И Товары.Магазин = ЦеныНоменклатуры.ОбъектЦенообразования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабШтрихкодыСрез КАК ТабШтрихкодыСрез
	|		ПО Товары.Упаковка = ТабШтрихкодыСрез.Упаковка
	|			И Товары.Номенклатура = ТабШтрихкодыСрез.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПечатьЦенниковВТСД КАК ПечатьЦенниковВТСД
	|		ПО Товары.Номенклатура.ВидНоменклатуры = ПечатьЦенниковВТСД.Проект
	|			И (ПечатьЦенниковВТСД.Магазин = &Магазин)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.ТипДокумента,
	|	Товары.Номер,
	|	Товары.Номенклатура.IDN,
	|	Товары.Количество,
	|	Товары.Цена,
	|	Товары.НомерСтроки,
	|	ЦеныНоменклатуры.Цена,
	|	ВЫБОР
	|		КОГДА ПечатьЦенниковВТСД.Печатать
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	Товары.Номенклатура.КодИзменения,
	|	ТабШтрихкодыСрез.Штрихкод,
	|	ВЫБОР
	|		КОГДА ПечатьЦенниковВТСД.НеПечататьЦену
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	TYPE,
	|	DATE,
	|	NUMBER,
	|	LINENUM
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабШтрихкодыСрез
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабШтрихкоды"
	);
	Запрос.УстановитьПараметр("ссылка", ссылка);
	Запрос.УстановитьПараметр("ТекущаяДатаКонец", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Магазин", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);   	
	Результаты = Запрос.ВыполнитьПакет();

	ВыгрузитьТовары(Результаты[3].Выбрать());
	ВыгрузитьДокументы(Результаты[4].Выбрать());
	ВыгрузитьДокументыСтроки(Результаты[5].Выбрать());

	КонецЕсли;
	

	  
КонецПроцедуры

Функция ПроверитьНомер(Ссылка)
	НомерПакета = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПакетыДокументов.НомерПакета КАК НомерПакета
		|ИЗ
		|	РегистрСведений.ПакетыДокументов КАК ПакетыДокументов
		|ГДЕ
		|	ПакетыДокументов.Объект = &Объект";
	
	Запрос.УстановитьПараметр("Объект", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл            
		НомерПакета = ВыборкаДетальныеЗаписи.НомерПакета;
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	Возврат НомерПакета;

КонецФункции

Процедура ВыгрузитьПакетДокументов(НомерПакета) ЭКСПОРТ
	ДокСсылка = Неопределено;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеТоваровТовары.Ссылка КАК ДокСсылка,
		|	ПеремещениеТоваровТовары.Номенклатура.ВидНоменклатуры.IDN КАК Проект
		|ИЗ
		|	РегистрСведений.ПакетыДокументов КАК ПакетыДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
		|		ПО ПакетыДокументов.Объект = ПеремещениеТоваровТовары.Ссылка
		|ГДЕ
		|	ПакетыДокументов.НомерПакета = &НомерПакета
		|
		|СГРУППИРОВАТЬ ПО
		|	ПеремещениеТоваровТовары.Ссылка,
		|	ПеремещениеТоваровТовары.Номенклатура.ВидНоменклатуры.IDN";
	
	Запрос.УстановитьПараметр("НомерПакета", НомерПакета);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СписокДок = Новый СписокЗначений;	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокДок.Добавить(ВыборкаДетальныеЗаписи.ДокСсылка);
		УстановитьСтатусТСД(Перечисления.СтатусДокТСД.НОВЫЙ,ВыборкаДетальныеЗаписи.ДокСсылка,ВыборкаДетальныеЗаписи.Проект)		
	КонецЦикла;	
	
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка.Дата КАК Дата,
	|	ТаблицаТовары.Ссылка.Номер КАК Номер,
	|	ВЫРАЗИТЬ(&Магазин КАК Справочник.Магазины) КАК Магазин,
	|	ТаблицаТовары.Ссылка КАК ДокументСсылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Ссылка.МагазинОтправитель.СкладУправляющейСистемы
	|			ТОГДА ""ПРИХОД""
	|		ИНАЧЕ ""РАСХОД""
	|	КОНЕЦ КАК ТипДокумента,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА СУММА(ТаблицаТовары.Количество) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ТаблицаТовары.Сумма) / СУММА(ТаблицаТовары.Количество)
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Ссылка.РазрешитьДобавлятьСтрокиВТСД КАК РазрешитьДобавлятьСтрокиВТСД
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&СписокДок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка.Дата,
	|	ТаблицаТовары.Ссылка.Номер,
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Ссылка.МагазинОтправитель.СкладУправляющейСистемы
	|			ТОГДА ""ПРИХОД""
	|		ИНАЧЕ ""РАСХОД""
	|	КОНЕЦ,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.Ссылка.РазрешитьДобавлятьСтрокиВТСД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(Штрихкоды.ДатаИзменения) КАК ДатаИзменения
	|ПОМЕСТИТЬ ТабШтрихкоды
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Упаковка = Штрихкоды.Упаковка
	|			И (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Упаковка,
	|	Номенклатура,
	|	ДатаИзменения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабШтрихкоды.Номенклатура КАК Номенклатура,
	|	ТабШтрихкоды.Упаковка КАК Упаковка,
	|	Штрихкоды.Штрихкод КАК Штрихкод
	|ПОМЕСТИТЬ ТабШтрихкодыСрез
	|ИЗ
	|	ТабШтрихкоды КАК ТабШтрихкоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ТабШтрихкоды.Упаковка = Штрихкоды.Упаковка
	|			И ТабШтрихкоды.Номенклатура = Штрихкоды.Владелец
	|			И ТабШтрихкоды.ДатаИзменения = Штрихкоды.ДатаИзменения
	|			И (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПакетыДокументов.НомерПакета КАК НомерПакета,
	|	МАКСИМУМ(ПакетыДокументов.Объект.Дата) КАК ОбъектДата
	|ПОМЕСТИТЬ ТабДаты
	|ИЗ
	|	РегистрСведений.ПакетыДокументов КАК ПакетыДокументов
	|ГДЕ
	|	ПакетыДокументов.Объект В(&СписокДок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПакетыДокументов.НомерПакета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерПакета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Штрихкоды.Штрихкод КАК BARCODE,
	|	ВЫБОР
	|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ""ШТ""
	|		ИНАЧЕ Штрихкоды.Упаковка.Наименование
	|	КОНЕЦ КАК UNIT,
	|	ВЫБОР
	|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ Штрихкоды.Упаковка.Коэффициент
	|	КОНЕЦ КАК RATE,
	|	ДействующиеЦеныНоменклатурыСрезПоследних.Цена КАК PRICE,
	|	Товары.Номенклатура.IDN КАК IDN,
	|	Товары.Номенклатура.НаименованиеПолное КАК NAME,
	|	Товары.Номенклатура.Артикул КАК ARTICUL,
	|	Товары.Номенклатура.Производитель.Наименование КАК VENDOR,
	|	Товары.Номенклатура.ВидНоменклатуры.IDN КАК PROJECT,
	|	Товары.Номенклатура.КодИзменения КАК VERSION,
	|	Товары.Номенклатура.Маржинальность КАК MARGA
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
	|			И Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Упаковка = Штрихкоды.Упаковка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ТекущаяДатаКонец, ОбъектЦенообразования = &Магазин) КАК ДействующиеЦеныНоменклатурыСрезПоследних
	|		ПО Товары.Номенклатура = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И Товары.Упаковка = ДействующиеЦеныНоменклатурыСрезПоследних.Упаковка
	|			И Товары.Магазин = ДействующиеЦеныНоменклатурыСрезПоследних.ОбъектЦенообразования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МАКСИМУМ(Товары.ТипДокумента) КАК TYPE,
	|	МАКСИМУМ(Товары.Дата) КАК DATE,
	|	&НомерПакета КАК NUMBER,
	|	МАКСИМУМ(Товары.Номенклатура.ВидНоменклатуры.IDN) КАК PROJECT,
	|	""НОВЫЙ"" КАК STATUS,
	|	МАКСИМУМ(Товары.Номенклатура.КодИзменения) КАК VERSION,
	|	"""" КАК NAME,
	|	МАКСИМУМ(Штрихкоды.Штрихкод) КАК BARCODE,
	|	0 КАК DSCN,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Товары.РазрешитьДобавлятьСтрокиВТСД
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК NEW_GOODS
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
	|			И Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Упаковка = Штрихкоды.Упаковка
	|
	|УПОРЯДОЧИТЬ ПО
	|	TYPE,
	|	DATE,
	|	NUMBER
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ТипДокумента КАК TYPE,
	|	ТабДаты.ОбъектДата КАК DATE,
	|	&НомерПакета КАК NUMBER,
	|	Товары.НомерСтроки КАК LINENUM,
	|	Товары.Номенклатура.IDN КАК IDN,
	|	Товары.Количество КАК COUNT_PLAN,
	|	Товары.Цена КАК PRICE_SUPPLIER,
	|	ЦеныНоменклатуры.Цена КАК PRICE_RETAIL,
	|	ВЫБОР
	|		КОГДА ПечатьЦенниковВТСД.Печатать
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК PRINTPRICE,
	|	Товары.Номенклатура.КодИзменения КАК VERSION,
	|	"""" КАК NAME,
	|	ТабШтрихкодыСрез.Штрихкод КАК BARCODE,
	|	ВЫБОР
	|		КОГДА ПечатьЦенниковВТСД.НеПечататьЦену
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК PRINTPRICE_RETAIL,
	|	Товары.Номер КАК DOC_OWNER_NUMBER,
	|	Товары.Номер КАК DOC_OWNER
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ТекущаяДатаКонец, ОбъектЦенообразования = &Магазин) КАК ЦеныНоменклатуры
	|		ПО Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И Товары.Упаковка = ЦеныНоменклатуры.Упаковка
	|			И Товары.Магазин = ЦеныНоменклатуры.ОбъектЦенообразования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабШтрихкодыСрез КАК ТабШтрихкодыСрез
	|		ПО Товары.Упаковка = ТабШтрихкодыСрез.Упаковка
	|			И Товары.Номенклатура = ТабШтрихкодыСрез.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПечатьЦенниковВТСД КАК ПечатьЦенниковВТСД
	|		ПО Товары.Номенклатура.ВидНоменклатуры = ПечатьЦенниковВТСД.Проект
	|			И (ПечатьЦенниковВТСД.Магазин = &Магазин)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабДаты КАК ТабДаты
	|		ПО (&НомерПакета = ТабДаты.НомерПакета)
	|
	|УПОРЯДОЧИТЬ ПО
	|	TYPE,
	|	DATE,
	|	NUMBER,
	|	LINENUM
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабШтрихкоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабШтрихкодыСрез
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТабДаты"
	);

	Запрос.УстановитьПараметр("СписокДок", СписокДок);
	Запрос.УстановитьПараметр("ТекущаяДатаКонец", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Магазин", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);   
	Запрос.УстановитьПараметр("Номерпакета", НомерПакета);   	
	Результаты = Запрос.ВыполнитьПакет();

	ВыгрузитьТовары(Результаты[4].Выбрать());
	ВыгрузитьДокументы(Результаты[5].Выбрать());
	ВыгрузитьДокументыСтрокиПакета(Результаты[6].Выбрать());
КонецПроцедуры

Процедура УстановитьСтатусОтмена(Тип,Номер,Дата) ЭКСПОРТ

		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	dbo_DOC_HEADER.TYPE КАК TYPE,
			|	dbo_DOC_HEADER.DATE КАК DATE,
			|	dbo_DOC_HEADER.NUMBER КАК NUMBER
			|ИЗ
			|	ВнешнийИсточникДанных.ТерминалыСбораДанных.Таблица.dbo_DOC_HEADER КАК dbo_DOC_HEADER
			|ГДЕ
			|	dbo_DOC_HEADER.TYPE = &TYPE
			|	И dbo_DOC_HEADER.NUMBER = &NUMBER
			|	И dbo_DOC_HEADER.DATE МЕЖДУ &DATE И &DATEkon";
		
		Запрос.УстановитьПараметр("NUMBER", Номер);
		Запрос.УстановитьПараметр("TYPE", Тип);
		Запрос.УстановитьПараметр("DATE", НачалоГода(Дата));
		Запрос.УстановитьПараметр("DATEkon", КонецГода(Дата));
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() цикл
		ВнешнийМенеджер = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_DOC_HEADER.СоздатьМенеджерЗаписи();


		ЗаполнитьЗначенияСвойств(ВнешнийМенеджер, Выборка);

		ВнешнийМенеджер.Прочитать();
		Если НЕ ПустаяСтрока(ВнешнийМенеджер.NUMBER) Тогда
			ВнешнийМенеджер.STATUS    = "ОТМЕНЕНО";
			ВнешнийМенеджер.NAME    = "";
			ВнешнийМенеджер.Записать(Истина);
		КонецЕсли;


	   КонецЦикла;
КонецПроцедуры

Функция ПолучитьСписокДок()
СписокДок = Неопределено;

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабСтатусТСД.Объект КАК Док
		|ИЗ
		|	РегистрСведений.СтатусТСД КАК ТабСтатусТСД
		|ГДЕ
		|	ТабСтатусТСД.Магазин = &Магазин
		|	И (ТабСтатусТСД.СтатусТСД = ЗНАЧЕНИЕ(Перечисление.СтатусДокТСД.ВыгрузитьВТСД)
		|			ИЛИ ТабСтатусТСД.СтатусТСД = ЗНАЧЕНИЕ(Перечисление.СтатусДокТСД.НОВЫЙ))
		|	И ТабСтатусТСД.Объект.Проведен = ИСТИНА
		|	И ТабСтатусТСД.Объект.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Магазин", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);   	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() тогда	
		СписокДок = Новый СписокЗначений;
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() цикл
			Стр = СписокДок.Добавить(Выборка.Док);
		КонецЦикла;  
	КонецЕсли;	
	
	Возврат СписокДок
	
КонецФункции


Функция ПолучитьСписокДокПереоценка()
СписокДок = Неопределено;

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабСтатусТСД.Объект КАК Док
		|ИЗ
		|	РегистрСведений.СтатусТСД КАК ТабСтатусТСД
		|ГДЕ
		|	ТабСтатусТСД.Магазин = &Магазин
		|	И (ТабСтатусТСД.СтатусТСД = ЗНАЧЕНИЕ(Перечисление.СтатусДокТСД.ВыгрузитьВТСД)
		|			ИЛИ ТабСтатусТСД.СтатусТСД = ЗНАЧЕНИЕ(Перечисление.СтатусДокТСД.НОВЫЙ))
		|	И ТабСтатусТСД.Объект.Проведен = ИСТИНА
		|	И ТабСтатусТСД.Объект.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Магазин", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);   	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() тогда	
		СписокДок = Новый СписокЗначений;
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() цикл
			Стр = СписокДок.Добавить(Выборка.Док);
		КонецЦикла;  
	КонецЕсли;	
	
	Возврат СписокДок
	
КонецФункции


Процедура ВыгрузитьТовары(ТоварыВыборка)

	Пока ТоварыВыборка.Следующий() Цикл

		
		ТоварВнешний = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_GOODS.НайтиПоПолю("IDN", ТоварыВыборка.IDN);

		Если ТоварВнешний.Пустая() Тогда

			ТоварВнешний = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_GOODS.СоздатьОбъект();

		Иначе

			ТоварВнешний = ТоварВнешний.ПолучитьОбъект();

		КонецЕсли;
		Если ТоварыВыборка.VERSION <> ТоварВнешний.VERSION ИЛИ ТоварыВыборка.PRICE <> ТоварВнешний.PRICE тогда
			ЗаполнитьЗначенияСвойств(ТоварВнешний, ТоварыВыборка);
			ТоварВнешний.Записать();
		КонецЕсли;
		//ШтрихВыборка = ТоварыВыборка.Выбрать();

		//Пока ШтрихВыборка.Следующий() Цикл

			Если НЕ ЗначениеЗаполнено(ТоварыВыборка.BARCODE) Тогда

				Продолжить;

			КонецЕсли;
				ВнешнийШтрих = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_BARCODES.НайтиПоПолю("BARCODE", ТоварыВыборка.BARCODE);

			Если ВнешнийШтрих.Пустая() Тогда

				ВнешнийШтрих = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_BARCODES.СоздатьОбъект();

			Иначе

				
				
				ВнешнийШтрих = ВнешнийШтрих.ПолучитьОбъект();

			КонецЕсли;
			ЗаполнитьЗначенияСвойств(ВнешнийШтрих, ТоварыВыборка);
			Попытка
			ВнешнийШтрих.Записать();
		Исключение
			А = 0;
			КонецПопытки;
		//КонецЦикла;

	КонецЦикла;

КонецПроцедуры



Процедура ВыгрузитьВсеТовары(ТоварыВыборка)

	Пока ТоварыВыборка.Следующий() Цикл

		
		ТоварВнешний = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_GOODS.НайтиПоПолю("IDN", ТоварыВыборка.IDN);

		Если ТоварВнешний.Пустая() Тогда

			ТоварВнешний = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_GOODS.СоздатьОбъект();

		Иначе

			ТоварВнешний = ТоварВнешний.ПолучитьОбъект();

		КонецЕсли;
		Если ТоварыВыборка.VERSION <> ТоварВнешний.VERSION ИЛИ ТоварыВыборка.PRICE <> ТоварВнешний.PRICE тогда
			ЗаполнитьЗначенияСвойств(ТоварВнешний, ТоварыВыборка);
			ТоварВнешний.Записать();
		КонецЕсли;
		ШтрихВыборка = ТоварыВыборка.Выбрать();

		Пока ШтрихВыборка.Следующий() Цикл

			Если НЕ ЗначениеЗаполнено(ШтрихВыборка.BARCODE) Тогда

				Продолжить;

			КонецЕсли;
				ВнешнийШтрих = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_BARCODES.НайтиПоПолю("BARCODE", ШтрихВыборка.BARCODE);

			Если ВнешнийШтрих.Пустая() Тогда

				ВнешнийШтрих = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_BARCODES.СоздатьОбъект();
				ЗаполнитьЗначенияСвойств(ВнешнийШтрих, ШтрихВыборка);
				Попытка
					ВнешнийШтрих.Записать();
				Исключение
					А = 0;
				КонецПопытки;

			Иначе

				
				ВнешнийШтрих = ВнешнийШтрих.ПолучитьОбъект();
				Если  ВнешнийШтрих.IDN <> ШтрихВыборка.IDN ИЛИ ВнешнийШтрих.BARCODE <> ШтрихВыборка.BARCODE ИЛИ ВнешнийШтрих.RATE <> ШтрихВыборка.RATE ИЛИ ВнешнийШтрих.UNIT <> ШтрихВыборка.UNIT тогда
					ЗаполнитьЗначенияСвойств(ВнешнийШтрих, ШтрихВыборка);
					Попытка
						ВнешнийШтрих.Записать();
					Исключение
					А = 0;
					КонецПопытки;
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;

	КонецЦикла;

КонецПроцедуры


Процедура ВыгрузитьДокументыПакета(ДокументСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПакетыДокументов.НомерПакета КАК NUMBER,
		|	ПеремещениеТоваров.Дата КАК DATE,
		|	ПеремещениеТоваров.ВидНоменклатуры.IDN КАК PROJECT,
		|	ВЫБОР
		|		КОГДА ПеремещениеТоваров.МагазинОтправитель.СкладУправляющейСистемы
		|			ТОГДА ""ПРИХОД""
		|		ИНАЧЕ ""РАСХОД""
		|	КОНЕЦ КАК TYPE,
		|	"""" КАК NAME,
		|	""НОВЫЙ"" КАК STATUS
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыДокументов КАК ПакетыДокументов
		|		ПО (ПакетыДокументов.Объект = ПеремещениеТоваров.Ссылка)
		|ГДЕ
		|	ПеремещениеТоваров.Ссылка = &ДокументСсылка";
	Запрос.УстановитьПараметр("ДокументСсылка",ДокументСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	ДокументВыборка = РезультатЗапроса.Выбрать();
	

	
	Пока ДокументВыборка.Следующий() Цикл
		Если ЗначениеЗаполнено(ДокументВыборка.NUMBER) тогда
			
			ВнешнийМенеджер = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_DOC_HEADER.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(ВнешнийМенеджер, ДокументВыборка);
			ВнешнийМенеджер.Прочитать();

			Если ПустаяСтрока(ВнешнийМенеджер.NUMBER) Тогда
				ЗаполнитьЗначенияСвойств(ВнешнийМенеджер, ДокументВыборка);   
			Иначе
				ВнешнийМенеджер.TYPE    	= ДокументВыборка.TYPE;
				ВнешнийМенеджер.DATE    	= ДокументВыборка.DATE;
				ВнешнийМенеджер.NUMBER  	= ДокументВыборка.NUMBER;
				ВнешнийМенеджер.PROJECT 	= ДокументВыборка.PROJECT;
				ВнешнийМенеджер.NAME 		= "";
				ВнешнийМенеджер.STATUS 		= "НОВЫЙ";
				ВнешнийМенеджер.DSCN 		= 0;
				ВнешнийМенеджер.NEW_GOODS  	= 0;
			КонецЕсли;
			
			ВнешнийМенеджер.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
	


Процедура ВыгрузитьДокументы(ДокументВыборка)
	 	Пока ДокументВыборка.Следующий() Цикл

		ВнешнийМенеджер = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_DOC_HEADER.СоздатьМенеджерЗаписи();


		ЗаполнитьЗначенияСвойств(ВнешнийМенеджер, ДокументВыборка);

		ВнешнийМенеджер.Прочитать();

		Если ПустаяСтрока(ВнешнийМенеджер.NUMBER) Тогда
			ЗаполнитьЗначенияСвойств(ВнешнийМенеджер, ДокументВыборка);   
		Иначе

			ВнешнийМенеджер.TYPE    	= ДокументВыборка.TYPE;
			ВнешнийМенеджер.DATE    	= ДокументВыборка.DATE;
			ВнешнийМенеджер.NUMBER  	= ДокументВыборка.NUMBER;
			ВнешнийМенеджер.PROJECT 	= ДокументВыборка.PROJECT;
			ВнешнийМенеджер.NAME 		= "";
			ВнешнийМенеджер.STATUS 		= "НОВЫЙ";
			ВнешнийМенеджер.DSCN 		= ДокументВыборка.DSCN;
			ВнешнийМенеджер.NEW_GOODS  	= ДокументВыборка.NEW_GOODS;
			
		КонецЕсли;

		ВнешнийМенеджер.Записать(Истина);

	  КонецЦикла;
	КонецПроцедуры
	
	

Процедура ВыгрузитьДокументыСтроки(ТоварыВыборка)

	Пока ТоварыВыборка.Следующий() Цикл
		
		ВнешнийМенеджер = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_DOC_LINE.СоздатьМенеджерЗаписи();


		ЗаполнитьЗначенияСвойств(ВнешнийМенеджер, ТоварыВыборка);

		ВнешнийМенеджер.Прочитать();

		Если ПустаяСтрока(ВнешнийМенеджер.NUMBER) Тогда

			ЗаполнитьЗначенияСвойств(ВнешнийМенеджер, ТоварыВыборка);

		Иначе

			ВнешнийМенеджер.TYPE    			= ТоварыВыборка.TYPE;
			ВнешнийМенеджер.DATE    			= ТоварыВыборка.DATE;
			ВнешнийМенеджер.NUMBER  			= ТоварыВыборка.NUMBER;
			ВнешнийМенеджер.LINENUM 			= ТоварыВыборка.LINENUM;
			ВнешнийМенеджер.IDN     			= ТоварыВыборка.IDN;
			ВнешнийМенеджер.COUNT_PLAN 			= ТоварыВыборка.COUNT_PLAN;
			ВнешнийМенеджер.BARCODE 			= ТоварыВыборка.BARCODE;
			ВнешнийМенеджер.PRINTPRICE_RETAIL 	= ТоварыВыборка.PRINTPRICE_RETAIL;
			ВнешнийМенеджер.PRINTPRICE		 	= ТоварыВыборка.PRINTPRICE;			
			ВнешнийМенеджер.PRICE_RETAIL 		= ТоварыВыборка.PRICE_RETAIL;
			ВнешнийМенеджер.PRICE_SUPPLIER 		= ТоварыВыборка.PRICE_SUPPLIER;
			ВнешнийМенеджер.DOC_OWNER 		    = ТоварыВыборка.DOC_OWNER;
			ВнешнийМенеджер.DOC_OWNER_NUMBER 	= ТоварыВыборка.DOC_OWNER_NUMBER;
		КонецЕсли;

		ВнешнийМенеджер.Записать(Истина);

	КонецЦикла;

КонецПроцедуры

Процедура ВыгрузитьДокументыСтрокиПакета(ТоварыВыборка)
	НомерСтроки = 0;
	Пока ТоварыВыборка.Следующий() Цикл
		НомерСтроки = НомерСтроки + 1;
		ВнешнийМенеджер = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_DOC_LINE.СоздатьМенеджерЗаписи();


		ЗаполнитьЗначенияСвойств(ВнешнийМенеджер, ТоварыВыборка);
		ВнешнийМенеджер.LINENUM = НомерСтроки;
		ВнешнийМенеджер.Прочитать();

		Если ПустаяСтрока(ВнешнийМенеджер.NUMBER) Тогда

			ЗаполнитьЗначенияСвойств(ВнешнийМенеджер, ТоварыВыборка);
			ВнешнийМенеджер.LINENUM = НомерСтроки;
		Иначе

			ВнешнийМенеджер.TYPE    			= ТоварыВыборка.TYPE;
			ВнешнийМенеджер.DATE    			= ТоварыВыборка.DATE;
			ВнешнийМенеджер.NUMBER  			= ТоварыВыборка.NUMBER;
			ВнешнийМенеджер.LINENUM 			= НомерСтроки;
			ВнешнийМенеджер.IDN     			= ТоварыВыборка.IDN;
			ВнешнийМенеджер.COUNT_PLAN 			= ТоварыВыборка.COUNT_PLAN;
			ВнешнийМенеджер.BARCODE 			= ТоварыВыборка.BARCODE;
			ВнешнийМенеджер.PRINTPRICE_RETAIL 	= ТоварыВыборка.PRINTPRICE_RETAIL;
			ВнешнийМенеджер.PRINTPRICE		 	= ТоварыВыборка.PRINTPRICE;			
			ВнешнийМенеджер.PRICE_RETAIL 		= ТоварыВыборка.PRICE_RETAIL;
			ВнешнийМенеджер.PRICE_SUPPLIER 		= ТоварыВыборка.PRICE_SUPPLIER;
			ВнешнийМенеджер.DOC_OWNER 		    = ТоварыВыборка.DOC_OWNER;
			ВнешнийМенеджер.DOC_OWNER_NUMBER 	= ТоварыВыборка.DOC_OWNER_NUMBER;
		КонецЕсли;

		ВнешнийМенеджер.Записать(Истина);

	КонецЦикла;

КонецПроцедуры


Процедура ВыгрузитьДокументыСтроки2(ТоварыВыборка)

	Пока ТоварыВыборка.Следующий() Цикл
		
		ВнешнийМенеджер = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_DOC_LINE.СоздатьМенеджерЗаписи();


		ЗаполнитьЗначенияСвойств(ВнешнийМенеджер, ТоварыВыборка);

		ВнешнийМенеджер.Прочитать();

		Если ПустаяСтрока(ВнешнийМенеджер.NUMBER) Тогда

			ЗаполнитьЗначенияСвойств(ВнешнийМенеджер, ТоварыВыборка);

		Иначе

			ВнешнийМенеджер.TYPE    			= ТоварыВыборка.TYPE;
			ВнешнийМенеджер.DATE    			= ТоварыВыборка.DATE;
			ВнешнийМенеджер.NUMBER  			= ТоварыВыборка.NUMBER;
			ВнешнийМенеджер.LINENUM 			= ТоварыВыборка.LINENUM;
			ВнешнийМенеджер.IDN     			= ТоварыВыборка.IDN;
			ВнешнийМенеджер.COUNT_PLAN 			= ТоварыВыборка.COUNT_PLAN;
			ВнешнийМенеджер.BARCODE 			= ТоварыВыборка.BARCODE;
			ВнешнийМенеджер.PRINTPRICE_RETAIL 	= ТоварыВыборка.PRINTPRICE_RETAIL;
			ВнешнийМенеджер.PRINTPRICE		 	= ТоварыВыборка.PRINTPRICE;			
			ВнешнийМенеджер.PRICE_RETAIL 		= ТоварыВыборка.PRICE_RETAIL;
			ВнешнийМенеджер.PRICE_SUPPLIER 		= ТоварыВыборка.PRICE_SUPPLIER;
			ВнешнийМенеджер.DOC_OWNER 		    = ТоварыВыборка.DOC_OWNER;
			ВнешнийМенеджер.DOC_OWNER_NUMBER 	= ТоварыВыборка.DOC_OWNER_NUMBER;
		КонецЕсли;

		ВнешнийМенеджер.Записать(Истина);

	КонецЦикла;

КонецПроцедуры


Процедура ВыгрузитьПользователей()
	УстановитьПривилегированныйРежим(Истина);   

	Счетчик = ПолучитьПоследнийНомер();
	 
	Для каждого ПользовательИБ Из ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл

				
		
		ПользовательВнешний = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_PERSONAL.НайтиПоПолю("IDN", СокрЛП(ПользовательИБ.УникальныйИдентификатор));

		Если ПользовательВнешний.Пустая() Тогда
			
			ПользовательВнешний = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_PERSONAL.СоздатьОбъект();
			ПользовательВнешний.IDN  = СокрЛП(ПользовательИБ.УникальныйИдентификатор);
			ПользовательВнешний.NAME = СокрЛП(ПользовательИБ.ПолноеИмя);
			ПользовательВнешний.CODE = Счетчик;
			ПользовательВнешний.Записать();
			Счетчик = Счетчик + 1;

		Иначе

			//ПользовательВнешний = ПользовательВнешний.ПолучитьОбъект();

		КонецЕсли;

		//Счетчик = ПользовательВнешний.CODE;

	КонецЦикла;
			УстановитьПривилегированныйРежим(ложь);   

КонецПроцедуры


Процедура ПроверитьСтатусТСД() Экспорт
	
	Перемещения();
	ПакетыПеремещений();
	Переоценки();
		
КонецПроцедуры


Функция ПолучитьПоследнийНомер()
	Код = 1;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	dbo_PERSONAL.CODE КАК CODE
		|ИЗ
		|	ВнешнийИсточникДанных.ТерминалыСбораДанных.Таблица.dbo_PERSONAL КАК dbo_PERSONAL
		|
		|УПОРЯДОЧИТЬ ПО
		|	CODE УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Код = ВыборкаДетальныеЗаписи.CODE + 1;
	КонецЦикла;
	
	Возврат Код;

КонецФункции

Процедура Перемещения()
	
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	dbo_DOC_HEADER.TYPE КАК ТИП,
		|	dbo_DOC_HEADER.NUMBER КАК Номер,
		|	dbo_DOC_HEADER.PROJECT КАК Проект,
		|	dbo_DOC_HEADER.STATUS КАК Статус,
		|	dbo_DOC_HEADER.NAME КАК NAME,
		|	dbo_DOC_HEADER.DATE КАК DATE 
		|ИЗ
		|	ВнешнийИсточникДанных.ТерминалыСбораДанных.Таблица.dbo_DOC_HEADER КАК dbo_DOC_HEADER
		|ГДЕ
		|	(dbo_DOC_HEADER.TYPE = ""ПРИХОД""
		|			ИЛИ dbo_DOC_HEADER.TYPE = ""РАСХОД"")";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() цикл
		
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеТоваров.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ТабСтатусТСД.СтатусТСД, ЗНАЧЕНИЕ(Перечисление.СтатусДокТСД.ПустаяСсылка)) КАК Статус
		|ИЗ
		|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусТСД КАК ТабСтатусТСД
		|		ПО ПеремещениеТоваров.Ссылка = ТабСтатусТСД.Объект
		|ГДЕ
		|	ПеремещениеТоваров.Номер = &Номер
		|	И ПеремещениеТоваров.Дата МЕЖДУ &DATE И &DATEkon";
	
	Запрос.УстановитьПараметр("DATE", НачалоГода(Выборка.DATE));
	Запрос.УстановитьПараметр("DATEkon", КонецГода(Выборка.DATE));
	
	Запрос.УстановитьПараметр("Номер", Выборка.Номер);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтатусДок = ПолучитьСтатусДок(ВыборкаДетальныеЗаписи.Ссылка);
		Если НЕ СтатусДок = Неопределено тогда
		Статус1С = 	ОбщегоНазначенияКлиентСервер.ИмяЗначенияПеречисления(СтатусДок);
		Если НЕ Статус1С = Выборка.Статус тогда  			
			Если  Выборка.Статус = "ЗАВЕРШЕН" тогда
				Попытка  
					СоздатьДокументыДвижений(ВыборкаДетальныеЗаписи.Ссылка,ВЫборка.Номер,ВЫборка.Тип,ВЫборка.DATE);
				Исключение
				КонецПопытки;	
			КонецЕсли;
			Проект = Справочники.ВидыНоменклатуры.НайтиПоНаименованию(Выборка.Проект);
			УстановитьСтатусТСД(Перечисления.СтатусДокТСД[Выборка.Статус],ВыборкаДетальныеЗаписи.Ссылка,Проект);
			КонецЕсли;
 
		КонецЕсли;	
	КонецЦикла;
	
	КонецЦикла;	

	
КонецПроцедуры


Процедура ПакетыПеремещений()
	
	
	
	
	
	
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	dbo_DOC_HEADER.TYPE КАК ТИП,
		|	dbo_DOC_HEADER.NUMBER КАК Номер,
		|	dbo_DOC_HEADER.PROJECT КАК Проект,
		|	dbo_DOC_HEADER.STATUS КАК Статус,
		|	dbo_DOC_HEADER.NAME КАК NAME,
		|	dbo_DOC_HEADER.DATE КАК DATE 
		|ИЗ
		|	ВнешнийИсточникДанных.ТерминалыСбораДанных.Таблица.dbo_DOC_HEADER КАК dbo_DOC_HEADER
		|ГДЕ
		|	(dbo_DOC_HEADER.TYPE = ""ПРИХОД""
		|			ИЛИ dbo_DOC_HEADER.TYPE = ""РАСХОД"")";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() цикл
		
		
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПакетыДокументов.Объект КАК ДокСсылка,
		|	ЕСТЬNULL(тАБСтатусТСД.СтатусТСД, ЗНАЧЕНИЕ(Перечисление.СтатусДокТСД.ПустаяСсылка)) КАК Статус,
		|	ПакетыДокументов.Объект.Номер КАК Номер
		|ИЗ
		|	РегистрСведений.ПакетыДокументов КАК ПакетыДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусТСД КАК тАБСтатусТСД
		|		ПО ПакетыДокументов.Объект = тАБСтатусТСД.Объект
		|ГДЕ
		|	ПакетыДокументов.НомерПакета = &НомерПакета";
	
	Запрос.УстановитьПараметр("НомерПакета", Выборка.Номер);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтатусДок = ПолучитьСтатусДок(ВыборкаДетальныеЗаписи.ДокСсылка);
			Если НЕ СтатусДок = Неопределено тогда
			Статус1С = 	ОбщегоНазначенияКлиентСервер.ИмяЗначенияПеречисления(СтатусДок);
			Если НЕ Статус1С = Выборка.Статус тогда  			
				Если  Выборка.Статус = "ЗАВЕРШЕН" тогда
					Попытка  
						СоздатьДокументыДвиженийПакеты(ВыборкаДетальныеЗаписи.ДокСсылка,ВыборкаДетальныеЗаписи.Номер,ВЫборка.Тип,ВЫборка.DATE);
										Проект = ПолучитьПроектИзРегистра(ВыборкаДетальныеЗаписи.ДокСсылка);
				УстановитьСтатусТСД(Перечисления.СтатусДокТСД[Выборка.Статус],ВыборкаДетальныеЗаписи.ДокСсылка,Проект);

					Исключение
					КонецПопытки;	
				КонецЕсли;
				
				КонецЕсли;
	 
			КонецЕсли;	
		КонецЦикла;
	
	КонецЦикла;	

	
КонецПроцедуры

Функция  ПолучитьПроектИзРегистра(ДокСсылка)
	Проект = Справочники.ВидыНоменклатуры.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабСтатусТСД.Проект КАК Проект
		|ИЗ
		|	РегистрСведений.СтатусТСД КАК ТабСтатусТСД
		|ГДЕ
		|	ТабСтатусТСД.Объект = &ДокССылка";
	
	Запрос.УстановитьПараметр("ДокССылка", ДокССылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Проект = ВыборкаДетальныеЗаписи.Проект;
	КонецЦикла;
	
	Возврат  Проект;
КонецФункции


Процедура Переоценки()
	
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	dbo_DOC_HEADER.TYPE КАК ТИП,
		|	dbo_DOC_HEADER.NUMBER КАК Номер,
		|	dbo_DOC_HEADER.PROJECT КАК Проект,
		|	dbo_DOC_HEADER.STATUS КАК Статус,
		|	dbo_DOC_HEADER.NAME КАК NAME,
		|	dbo_DOC_HEADER.DATE КАК DATE		
		|ИЗ
		|	ВнешнийИсточникДанных.ТерминалыСбораДанных.Таблица.dbo_DOC_HEADER КАК dbo_DOC_HEADER
		|ГДЕ
		|			dbo_DOC_HEADER.TYPE = ""ПЕРЕОЦЕНКА""";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() цикл
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПереоценкаТоваровНаСкладах.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ТабСтатусТСД.СтатусТСД, ЗНАЧЕНИЕ(Перечисление.СтатусДокТСД.ПустаяСсылка)) КАК Статус
		|ИЗ
		|	Документ.ПереоценкаТоваровНаСкладах КАК ПереоценкаТоваровНаСкладах
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусТСД КАК ТабСтатусТСД
		|		ПО ПереоценкаТоваровНаСкладах.Ссылка = ТабСтатусТСД.Объект
		|ГДЕ
		|	ПереоценкаТоваровНаСкладах.Номер = &Номер
		|	И ПереоценкаТоваровНаСкладах.Дата МЕЖДУ &DATE И &DATEkon";
	
	Запрос.УстановитьПараметр("DATE", НачалоГода(Выборка.DATE));
	Запрос.УстановитьПараметр("DATEkon", КонецГода(Выборка.DATE));
	Запрос.УстановитьПараметр("Номер", Выборка.Номер);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтатусДок = ПолучитьСтатусДок(ВыборкаДетальныеЗаписи.Ссылка);
		Если НЕ СтатусДок = Неопределено тогда
			Статус1С = 	ОбщегоНазначенияКлиентСервер.ИмяЗначенияПеречисления(СтатусДок);
			Если НЕ Статус1С = Выборка.Статус тогда  			
				Если  Выборка.Статус = "ЗАВЕРШЕН" тогда    				
					ВнестиФактКол(ВыборкаДетальныеЗаписи.Ссылка,ВЫборка.Номер,ВЫборка.Тип,ВЫборка.DATE);
				КонецЕсли;	
				Проект = Справочники.ВидыНоменклатуры.НайтиПоНаименованию(Выборка.Проект);
				УстановитьСтатусТСД(Перечисления.СтатусДокТСД[Выборка.Статус],ВыборкаДетальныеЗаписи.Ссылка,Проект);
			  
			КонецЕсли;	
	    КонецЕсли;
	КонецЦикла;
	
	КонецЦикла;	

	
КонецПроцедуры



Процедура ОбновитьНоменклатуру_УДАЛИТЬ() Экспорт
	
	
		УстановитьПривилегированныйРежим(Истина);
	Код = "0000000";	
	Пока Истина цикл
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 500
		|	Номенклатура.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.ЭтоГруппа = ЛОЖЬ
		|	И Номенклатура.IDN <> """"
		|	И Номенклатура.IDN > &Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура.IDN";
	
	Запрос.УстановитьПараметр("Код", Код);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() тогда
		Прервать;
	КонецЕсли;
	ТабНоменклатура = Результат.Выгрузить();
	
	
		
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК ЕдИзм
		|ПОМЕСТИТЬ ТабТовары
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&ТабНоменклатура)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УпаковкиНоменклатуры.Владелец,
		|	УпаковкиНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
		|ГДЕ
		|	УпаковкиНоменклатуры.Владелец ССЫЛКА Справочник.Номенклатура
		|	И УпаковкиНоменклатуры.Владелец В(&ТабНоменклатура)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	ЕдИзм
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Штрихкоды.Штрихкод КАК BARCODE,
		|	ДействующиеЦеныНоменклатурыСрезПоследних.Цена КАК PRICE,
		|	СпрНоменклатура.IDN КАК IDN,
		|	СпрНоменклатура.Производитель.Наименование КАК VENDOR,
		|	СпрНоменклатура.НаименованиеПолное КАК NAME,
		|	СпрНоменклатура.ВидНоменклатуры.IDN КАК PROJECT,
		|	СпрНоменклатура.Артикул КАК ARTICUL,
		|	СпрНоменклатура.КодИзменения КАК VERSION,
		|	ВЫБОР
		|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА 1
		|		ИНАЧЕ Штрихкоды.Упаковка.Коэффициент
		|	КОНЕЦ КАК RATE,
		|	ВЫБОР
		|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ""ШТ""
		|		ИНАЧЕ Штрихкоды.Упаковка.Наименование
		|	КОНЕЦ КАК UNIT,
		|	СпрНоменклатура.Маржинальность КАК MARGA
		|ИЗ
		|	ТабТовары КАК ТабТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО ТабТовары.Номенклатура = Штрихкоды.Владелец
		|			И ТабТовары.ЕдИзм = Штрихкоды.Упаковка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ТекущаяДатаКонец, ОбъектЦенообразования = &Магазин) КАК ДействующиеЦеныНоменклатурыСрезПоследних
		|		ПО ТабТовары.Номенклатура = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И (ДействующиеЦеныНоменклатурыСрезПоследних.ОбъектЦенообразования = &Магазин)
		|			И ТабТовары.ЕдИзм = ДействующиеЦеныНоменклатурыСрезПоследних.Упаковка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО ТабТовары.Номенклатура = СпрНоменклатура.Ссылка
		|			И ТабТовары.Номенклатура.Ссылка = СпрНоменклатура.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	IDN
		|ИТОГИ
		|	МИНИМУМ(PRICE),
		|	МАКСИМУМ(IDN),
		|	МАКСИМУМ(VENDOR),
		|	МАКСИМУМ(NAME),
		|	МАКСИМУМ(PROJECT),
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ARTICUL),
		|	МАКСИМУМ(VERSION),
		|	МАКСИМУМ(MARGA)
		|ПО
		|	ТабТовары.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТабТовары";
	
	Запрос.УстановитьПараметр("Магазин", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);
	Запрос.УстановитьПараметр("ТабНоменклатура", ТабНоменклатура);
	Запрос.УстановитьПараметр("ТекущаяДатаКонец", КонецДня(ТекущаяДата()));
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() тогда 
		прервать;
	КонецЕсли;
	//ВыгрузитьВсеТовары(РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам));
	

	
	 ТоварыВыборка =  РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ТоварыВыборка.Следующий() Цикл
	//	Если ТоварыВыборка.IDN <> "" тогда
		Код =  ТоварыВыборка.IDN;
		ТоварВнешний = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_GOODS.НайтиПоПолю("IDN", ТоварыВыборка.IDN);

		Если ТоварВнешний.Пустая() Тогда

			ТоварВнешний = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_GOODS.СоздатьОбъект();

		Иначе

			ТоварВнешний = ТоварВнешний.ПолучитьОбъект();

		КонецЕсли;
		Если ТоварыВыборка.VERSION <> ТоварВнешний.VERSION ИЛИ ТоварыВыборка.PRICE <> ТоварВнешний.PRICE тогда
			ЗаполнитьЗначенияСвойств(ТоварВнешний, ТоварыВыборка);
			ТоварВнешний.Записать();
		КонецЕсли;
		ШтрихВыборка = ТоварыВыборка.Выбрать();

			Пока ШтрихВыборка.Следующий() Цикл

				Если НЕ ЗначениеЗаполнено(ШтрихВыборка.BARCODE) Тогда

					Продолжить;

				КонецЕсли;
					ВнешнийШтрих = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_BARCODES.НайтиПоПолю("BARCODE", ШтрихВыборка.BARCODE);

				Если ВнешнийШтрих.Пустая() Тогда

					ВнешнийШтрих = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_BARCODES.СоздатьОбъект();
					ЗаполнитьЗначенияСвойств(ВнешнийШтрих, ШтрихВыборка);
					Попытка
						ВнешнийШтрих.Записать();
					Исключение
						А = 0;
					КонецПопытки;

				Иначе

					
					ВнешнийШтрих = ВнешнийШтрих.ПолучитьОбъект();
					Если  ВнешнийШтрих.IDN <> ШтрихВыборка.IDN ИЛИ ВнешнийШтрих.BARCODE <> ШтрихВыборка.BARCODE ИЛИ ВнешнийШтрих.RATE <> ШтрихВыборка.RATE ИЛИ ВнешнийШтрих.UNIT <> ШтрихВыборка.UNIT тогда
						ЗаполнитьЗначенияСвойств(ВнешнийШтрих, ШтрихВыборка);
						Попытка
							ВнешнийШтрих.Записать();
						Исключение
						А = 0;
						КонецПопытки;
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;
		//КонецЕсли;
	КонецЦикла;

	КонецЦикла;
	ПроверитьСтатусТСД();
	ВыгрузитьПользователей();

//	ВыгрузитьДанныеВТранспортТерминала();
	УстановитьПривилегированныйРежим(Ложь);
	

КонецПроцедуры

#Область ВыгрузкаСправочниковВТерминалСбораДанных

//	LNK 12.09.2018 08:09:25
Процедура ОбновитьСправочникиВТСД(ТолькоИзменения)	Экспорт

	Перем УзелОбъект;

	УстановитьПривилегированныйРежим(Истина);

	ПараметрыЗапроса   = Новый Структура;
	ТекстЗапросаФильтр = ПолучитьТекстЗапросаФильтр(ТолькоИзменения, ПараметрыЗапроса, УзелОбъект);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("IDN"        , "");
	Запрос.УстановитьПараметр("Магазин"    , ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);
	Запрос.УстановитьПараметр("ТекущаяДата", КонецДня(ТекущаяДата()));

	Для каждого КлючЗначение Из ПараметрыЗапроса Цикл

		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);

	КонецЦикла;

	Счётчик = 0;

	Пока Истина Цикл

		Запрос.Текст = ТекстЗапросаФильтр;
		Запрос.Выполнить();

		Запрос.Текст = ПолучитьТекстЗапросаДанных();
		Результат    = Запрос.Выполнить();

		Если Результат.Пустой() Тогда

			Прервать;

		Иначе

			ВыгрузитьПакетНоменклатуры(Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам), Запрос.Параметры, Счётчик);

		КонецЕсли;

		Результат = Неопределено;

		Если ТолькоИзменения = Истина Тогда

		//	Все изменения выбираются одним запросом..
			Прервать;

		Иначе

			ОбщегоНазначенияКлиентСервер.Пауза(1000);	//	пауза 1 сек

		КонецЕсли;

	КонецЦикла;

	Если НЕ УзелОбъект = Неопределено И УзелОбъект.Заблокирован() Тогда

		УзелОбъект.НомерПринятого = УзелОбъект.НомерОтправленного;

		УзелОбъект.ОбменДанными.Загрузка = Истина;
		УзелОбъект.Записать();

		ПланыОбмена.УдалитьРегистрациюИзменений(УзелОбъект.Ссылка, УзелОбъект.НомерПринятого);

		УзелОбъект.Разблокировать();

	КонецЕсли;

	ПроверитьСтатусТСД();
	ВыгрузитьПользователей();

КонецПроцедуры

//	LNK 12.09.2018 10:09:05
Процедура ВыгрузитьПакетНоменклатуры(ТоварыВыборка, ПараметрыЗапроса, Счётчик)

	Пока ТоварыВыборка.Следующий() Цикл

		Если НЕ ЗначениеЗаполнено(ТоварыВыборка.IDN) Тогда

			Продолжить;

		КонецЕсли;

		ПараметрыЗапроса.IDN = ТоварыВыборка.IDN;

		Попытка
			
			ЗаписатьТоварВоВнешнийИсточник(ТоварыВыборка);
		
		Исключение

			ТекстОшибки = ОписаниеОшибки();

		КонецПопытки;

		Счётчик = Счётчик + 1;

	КонецЦикла;

КонецПроцедуры

//	LNK 12.09.2018 10:10:19
Процедура ЗаписатьТоварВоВнешнийИсточник(ТоварыВыборка)

	ТоварВнешний = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_GOODS.НайтиПоПолю("IDN", ТоварыВыборка.IDN);

	Если ТоварВнешний.Пустая() Тогда

			ТоварВнешний = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_GOODS.СоздатьОбъект();

	Иначе	ТоварВнешний = ТоварВнешний.ПолучитьОбъект();

	КонецЕсли;

	Если НЕ ТоварыВыборка.VERSION = ТоварВнешний.VERSION ИЛИ НЕ ТоварыВыборка.PRICE = ТоварВнешний.PRICE тогда

		ЗаполнитьЗначенияСвойств(ТоварВнешний, ТоварыВыборка);
		ТоварВнешний.Записать();

	КонецЕсли;

	ШКВыборка = ТоварыВыборка.Выбрать();

	Пока ШКВыборка.Следующий() Цикл

		Если НЕ ЗначениеЗаполнено(ШКВыборка.BARCODE) Тогда

			Продолжить;

		КонецЕсли;

		ЗаписатьШтрихкодВоВнешнийИсточник(ШКВыборка);

	КонецЦикла;

КонецПроцедуры

//	LNK 12.09.2018 10:13:57
Процедура ЗаписатьШтрихкодВоВнешнийИсточник(ШКВыборка)

	ВнешнийОбъект = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_BARCODES.НайтиПоПолю("BARCODE", ШКВыборка.BARCODE);

	Если ВнешнийОбъект.Пустая() Тогда

		ВнешнийОбъект = ВнешниеИсточникиДанных.ТерминалыСбораДанных.Таблицы.dbo_BARCODES.СоздатьОбъект();
		ЗаполнитьЗначенияСвойств(ВнешнийОбъект, ШКВыборка);

		Попытка

 			ВнешнийОбъект.Записать();

		Исключение

			ТекстОшибки = ОписаниеОшибки();

		КонецПопытки;

	Иначе

		ВнешнийОбъект = ВнешнийОбъект.ПолучитьОбъект();

		Если НЕ ВнешнийОбъект.IDN = ШКВыборка.IDN
		ИЛИ  НЕ ВнешнийОбъект.BARCODE = ШКВыборка.BARCODE
		ИЛИ  НЕ ВнешнийОбъект.RATE = ШКВыборка.RATE
		ИЛИ  НЕ ВнешнийОбъект.UNIT = ШКВыборка.UNIT тогда

			ЗаполнитьЗначенияСвойств(ВнешнийОбъект, ШКВыборка);

			Попытка

				ВнешнийОбъект.Записать();

			Исключение

				ТекстОшибки = ОписаниеОшибки();

			КонецПопытки;

		КонецЕсли;	

	КонецЕсли;

	ВнешнийОбъект = Неопределено;

КонецПроцедуры

//	LNK 14.09.2018 12:47:35
Функция ПолучитьТекстЗапросаФильтр(ТолькоИзменения, ПараметрыЗапроса, УзелОбъект)

	Если ТолькоИзменения = Истина Тогда

		ТекстЗапросаФильтр =
		"ВЫБРАТЬ
		|	ТаблицаИзменения.Ссылка КАК Номенклатура
		|ПОМЕСТИТЬ Фильтр
		|ИЗ
		|	Справочник.Номенклатура.Изменения КАК ТаблицаИзменения
		|ГДЕ
		|	ТаблицаИзменения.Узел = &ТекущийУзел
		|	И (ТаблицаИзменения.НомерСообщения ЕСТЬ NULL
		|			ИЛИ ТаблицаИзменения.НомерСообщения <= &НомерОтправленного)
		|	И НЕ ТаблицаИзменения.Ссылка.ЭтоГруппа
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТаблицаИзменения.Ссылка
		|ИЗ
		|	Справочник.УпаковкиНоменклатуры.Изменения КАК ТаблицаИзменения
		|ГДЕ
		|	ТаблицаИзменения.Узел = &ТекущийУзел
		|	И (ТаблицаИзменения.НомерСообщения ЕСТЬ NULL
		|			ИЛИ ТаблицаИзменения.НомерСообщения <= &НомерОтправленного)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТаблицаРегистра.Номенклатура
		|ИЗ
		|	РегистрСведений.ДействующиеЦеныНоменклатуры.Изменения КАК ТаблицаИзменения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры КАК ТаблицаРегистра
		|		ПО ТаблицаИзменения.Регистратор = ТаблицаРегистра.Регистратор
		|ГДЕ
		|	ТаблицаИзменения.Узел = &ТекущийУзел
		|	И (ТаблицаИзменения.НомерСообщения ЕСТЬ NULL
		|			ИЛИ ТаблицаИзменения.НомерСообщения <= &НомерОтправленного)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТаблицаИзменения.Владелец
		|ИЗ
		|	РегистрСведений.Штрихкоды.Изменения КАК ТаблицаИзменения
		|ГДЕ
		|	ТаблицаИзменения.Узел = &ТекущийУзел
		|	И ТаблицаИзменения.Владелец ССЫЛКА Справочник.Номенклатура
		|	И (ТаблицаИзменения.НомерСообщения ЕСТЬ NULL
		|			ИЛИ ТаблицаИзменения.НомерСообщения <= &НомерОтправленного)
		|	И ТаблицаИзменения.Владелец.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Товар)"
		;

		УзелОбъект = ПланыОбмена.ТранспортТерминалов.ПолучитьУзел_TSD_DEPOT().ПолучитьОбъект();

		УзелОбъект.Заблокировать();	//	обработку исключения не делаем - нельзя так нельзя!
		УзелОбъект.НомерОтправленного = УзелОбъект.НомерОтправленного + 1;	//	фиксируем попытку отправить данные
		УзелОбъект.ОбменДанными.Загрузка = Истина;

	//	делаем фиктивную выборку для присвоения регистрациям номера сообщения.
		ПланыОбмена.ВыбратьИзменения(УзелОбъект.Ссылка, УзелОбъект.НомерОтправленного);

		УзелОбъект.Записать();

		ПараметрыЗапроса.Вставить("ТекущийУзел"       , УзелОбъект.Ссылка);
		ПараметрыЗапроса.Вставить("НомерОтправленного", УзелОбъект.НомерОтправленного);

	Иначе

		ТекстЗапросаФильтр =
		"ВЫБРАТЬ ПЕРВЫЕ 500
		|	ТаблицаНоменклатура.Ссылка КАК Номенклатура,
		|	ТаблицаНоменклатура.IDN КАК КлючПорядка,
		|	0 КАК НомерСообщения
		|ПОМЕСТИТЬ Фильтр
		|ИЗ
		|	Справочник.Номенклатура КАК ТаблицаНоменклатура
		|ГДЕ
		|	ТаблицаНоменклатура.IDN > &IDN
		|	И НЕ ТаблицаНоменклатура.ЭтоГруппа
		|	И НЕ ТаблицаНоменклатура.IDN = """"
		|   И ТаблицаНоменклатура.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Товар)		
		|
		|УПОРЯДОЧИТЬ ПО
		|	КлючПорядка"
		;

	КонецЕсли;

	Возврат ТекстЗапросаФильтр;

КонецФункции // ПолучитьТекстЗапросаФильтр()

//	LNK 12.09.2018 08:32:32
Функция ПолучитьТекстЗапросаДанных()

	ТекстЗапросаДанных =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Фильтр.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК Единица
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Фильтр КАК Фильтр
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Фильтр.Номенклатура КАК Справочник.Номенклатура),
	|	ТаблицаУпаковки.Ссылка
	|ИЗ
	|	Фильтр КАК Фильтр
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК ТаблицаУпаковки
	|		ПО (ТаблицаУпаковки.Владелец ССЫЛКА Справочник.Номенклатура)
	|			И Фильтр.Номенклатура = ТаблицаУпаковки.Владелец
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Единица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Фильтр
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ведущая.Номенклатура КАК Номенклатура,
	|	ТаблицаШтрихкоды.Штрихкод КАК BARCODE,
	|	ТаблицаЦены.Цена КАК PRICE,
	|	Ведущая.Номенклатура.IDN КАК IDN,
	|	Ведущая.Номенклатура.Производитель.Наименование КАК VENDOR,
	|	Ведущая.Номенклатура.НаименованиеПолное КАК NAME,
	|	Ведущая.Номенклатура.ВидНоменклатуры.IDN КАК PROJECT,
	|	Ведущая.Номенклатура.Артикул КАК ARTICUL,
	|	Ведущая.Номенклатура.КодИзменения КАК VERSION,
	|	ВЫБОР
	|		КОГДА ТаблицаШтрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаШтрихкоды.Упаковка.Коэффициент
	|	КОНЕЦ КАК RATE,
	|	ВЫБОР
	|		КОГДА ТаблицаШтрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ""ШТ""
	|		ИНАЧЕ ТаблицаШтрихкоды.Упаковка.Наименование
	|	КОНЕЦ КАК UNIT,
	|	Ведущая.Номенклатура.Маржинальность КАК MARGA,
	|	ВЫБОР
	|		КОГДА Ведущая.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА ""НДС20""
	|		КОГДА Ведущая.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА ""БезНДС""
	|		КОГДА Ведущая.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ""НДС0""
	|		КОГДА Ведущая.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС7)
	|			ТОГДА ""НДС7""
	|		КОГДА Ведущая.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|			ТОГДА ""НеНДС""
	|	КОНЕЦ КАК TNDS
	|ИЗ
	|	Товары КАК Ведущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК ТаблицаШтрихкоды
	|		ПО Ведущая.Номенклатура = ТаблицаШтрихкоды.Владелец
	|			И Ведущая.Единица = ТаблицаШтрихкоды.Упаковка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(
	|				&ТекущаяДата,
	|				ОбъектЦенообразования = &Магазин
	|					И Номенклатура В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Товары.Номенклатура
	|						ИЗ
	|							Товары)) КАК ТаблицаЦены
	|		ПО Ведущая.Номенклатура = ТаблицаЦены.Номенклатура
	|			И (ТаблицаЦены.ОбъектЦенообразования = &Магазин)
	|			И Ведущая.Единица = ТаблицаЦены.Упаковка
	|ГДЕ
	|	НЕ Ведущая.Номенклатура.ЭтоГруппа
	|	И Ведущая.Номенклатура.ТипНоменклатуры = Значение(Перечисление.ТипыНоменклатуры.Товар)
	|
	|УПОРЯДОЧИТЬ ПО
	|	IDN
	|ИТОГИ
	|	МИНИМУМ(PRICE),
	|	МАКСИМУМ(IDN),
	|	МАКСИМУМ(VENDOR),
	|	МАКСИМУМ(NAME),
	|	МАКСИМУМ(PROJECT),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ARTICUL),
	|	МАКСИМУМ(VERSION),
	|	МАКСИМУМ(MARGA),
	|	МАКСИМУМ(TNDS)
	|ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Товары"
	;
	Возврат ТекстЗапросаДанных;

КонецФункции // ПолучитьТекстЗапросаДанных()
	
#КонецОбласти


Процедура  ВнестиФактКол(Ссылка,Номер,ТипДок,Дата)
	

		Док = Ссылка.ПолучитьОбъект();
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	dbo_DOC_LINE.COUNT_FACT КАК КоличествоФакт
			|ИЗ
			|	ВнешнийИсточникДанных.ТерминалыСбораДанных.Таблица.dbo_DOC_LINE КАК dbo_DOC_LINE
			|ГДЕ
			|	dbo_DOC_LINE.TYPE = &TYPE
			|	И dbo_DOC_LINE.DATE МЕЖДУ &DATE И &DATEkon
			|	И dbo_DOC_LINE.NUMBER = &NUMBER
			|
			|УПОРЯДОЧИТЬ ПО
			|	dbo_DOC_LINE.LINENUM";
		
		Запрос.УстановитьПараметр("DATE", НачалоГода(Дата));
		Запрос.УстановитьПараметр("DATEkon", КонецГода(Дата));
		Запрос.УстановитьПараметр("NUMBER", Номер);
		Запрос.УстановитьПараметр("TYPE", ТипДок);
		
		РезультатЗапроса = Запрос.Выполнить();
		
	Если НЕ РезультатЗапроса.Пустой() тогда	
		ТабТСД = РезультатЗапроса.ВЫгрузить();

		
	Для Каждого строка из Док.Товары цикл 	
			строка.КоличествоФакт = ТабТСД[строка.НомерСтроки-1].КоличествоФакт;
	
		
	КонецЦикла;
	//Пока ТабТСД.Следующий() цикл	
	////	Для Каждого строка из ТабТСД цикл
	//	Стр = Док.Товары[ТабТСД.НомерСтроки];
	//	Стр.КоличествоФакт = ТабТСД.КоличествоФакт;
	//КонецЦикла;
	        УстановитьПривилегированныйРежим(Истина);    
			Если НЕ ТехническаяПоддержкаВызовСервера.ИсключительныйРежим() тогда
				ПараметрыСеанса.ИсключительныйРежим = Истина;
				Попытка
					Док.Записать(); 
				Исключение
				КонецПопытки;
				ПараметрыСеанса.ИсключительныйРежим = Ложь;
			Иначе
				Попытка
					Док.Записать(); 
				Исключение
				КонецПопытки;
			КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
КонецЕсли;
КонецПроцедуры



Процедура  СоздатьДокументыДвижений(Ссылка,Номер,ТипДок,Дата)
	Попытка
	УчтеноВНавижн = ложь;	
	Если ТипДок = "ПРИХОД" тогда
		ТаблицаСТСД = ПолучитьТаблицаСТСД(Номер,ТипДок,Дата);
		Если ТаблицаСТСД.Количество() > 0 тогда
		ДокСсылка = Документы.ПриходныйОрдерНаТовары.НайтиПоРеквизиту("ДокументОснование",Ссылка);
			
		Если НЕ ЗначениеЗаполнено(ДокСсылка) тогда
		
		 ДокПО = Документы.ПриходныйОрдерНаТовары.СоздатьДокумент();
	 Иначе
		УчтеноВНавижн = ПровереитьУчтеноВНавижн(ДокСсылка); 	 
		Если НЕ УчтеноВНавижн тогда 
		ДокПО  = ДокСсылка.ПолучитьОбъект();
		Если ДокПО.Проведен тогда 
			ДокПО.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
		Если НЕ УчтеноВНавижн тогда 
			//ДокПО.Дата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Дата") + 1;
			ДокПО.Дата = ТекущаяДата(); 			
			// ДокПО.Дата = Дата;
			 ДокПО.ДокументОснование = Ссылка;
			 ДокПО.Номер = Ссылка.Номер;
			 ДокПО.Товары.Загрузить(ТаблицаСТСД);
			 ДокПО.Магазин =  ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;
			 Склад = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин,"СкладПоступления");
			 ДокПО.Склад = Склад;
			 Если НЕ ЗначениеЗаполнено(ДокПО.Ответственный) тогда 
				ДокПО.Ответственный = ПараметрыСеанса.ТекущийПользователь;
			 КонецЕсли;
			 ДокПО.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		КонецЕсли;
	ИначеЕсли   ТипДок = "РАСХОД"  тогда
		ТаблицаСТСД = ПолучитьТаблицаСТСД(Номер,ТипДок,Дата);
		Если ТаблицаСТСД.Количество() > 0 тогда
			Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(Ссылка,"РазрешитьДобавлятьСтрокиВТСД") тогда 
				УчтеноВНавижн = ПровереитьУчтеноВНавижн(Ссылка); 	 
				Если НЕ УчтеноВНавижн тогда 
					ДокПеремещение = Ссылка.ПолучитьОбъект();
		 			ДокПеремещение.Товары.Загрузить(ТаблицаСТСД); 
			 		ДокПеремещение.Записать(РежимЗаписиДокумента.Проведение);				
				КонецЕсли;
			КонецЕсли;
		
		ДокСсылка = Документы.РасходныйОрдерНаТовары.НайтиПоРеквизиту("ДокументОснование",Ссылка);
		Если НЕ ЗначениеЗаполнено(ДокСсылка) тогда
		
		 ДокРО = Документы.РасходныйОрдерНаТовары.СоздатьДокумент();
	 Иначе
		УчтеноВНавижн = ПровереитьУчтеноВНавижн(ДокСсылка); 	 
		 
		Если НЕ УчтеноВНавижн тогда 
		ДокРО  = ДокСсылка.ПолучитьОбъект();
		Если ДокПО.Проведен тогда 
			ДокРО.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
		КонецЕсли;
		 
	 КонецЕсли; 
//		ДокРО.Дата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Дата") + 1;
		ДокРО.Дата = ТекущаяДата();
		Если НЕ УчтеноВНавижн тогда 
		 //ДокРО.Дата = Дата;
		 ДокРО.ДокументОснование = Ссылка;
		 ДокРО.Номер = Ссылка.Номер; 		 
		 ДокРО.Товары.Загрузить(ТаблицаСТСД); 
		 ДокРО.Магазин =  ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;
		 ДокРО.Склад =  ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин.СкладПродажи;
		 Если НЕ ЗначениеЗаполнено(ДокРО.Ответственный) тогда 
			ДокРО.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		 КонецЕсли;
		 ДокРО.Записать(РежимЗаписиДокумента.Запись);
		 КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
Исключение
	КонецПопытки;
КонецПроцедуры


Процедура  СоздатьДокументыДвиженийПакеты(Ссылка,Номер,ТипДок,Дата)
	Попытка
	УчтеноВНавижн = ложь;	
	Если ТипДок = "ПРИХОД" тогда
		ТаблицаСТСД = ПолучитьТаблицаСТСДПакеты(Номер,ТипДок,Дата);
		Если ТаблицаСТСД.Количество() > 0 тогда
		ДокСсылка = Документы.ПриходныйОрдерНаТовары.НайтиПоРеквизиту("ДокументОснование",Ссылка);
			
		Если НЕ ЗначениеЗаполнено(ДокСсылка) тогда
		
		 ДокПО = Документы.ПриходныйОрдерНаТовары.СоздатьДокумент();
	 Иначе
		УчтеноВНавижн = ПровереитьУчтеноВНавижн(ДокСсылка); 	 
		Если НЕ УчтеноВНавижн тогда 
		ДокПО  = ДокСсылка.ПолучитьОбъект();
		Если ДокПО.Проведен тогда 
			ДокПО.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
		Если НЕ УчтеноВНавижн тогда 
			//ДокПО.Дата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Дата") + 1;
			ДокПО.Дата = ТекущаяДата(); 			
			// ДокПО.Дата = Дата;
			 ДокПО.ДокументОснование = Ссылка;
			 ДокПО.Номер = Ссылка.Номер;
			 ДокПО.Товары.Загрузить(ТаблицаСТСД);
			 ДокПО.Магазин =  ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;
			 Склад = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин,"СкладПоступления");
			 ДокПО.Склад = Склад;
			 Если НЕ ЗначениеЗаполнено(ДокПО.Ответственный) тогда 
				ДокПО.Ответственный = ПараметрыСеанса.ТекущийПользователь;
			 КонецЕсли;
			 ДокПО.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		КонецЕсли;
	ИначеЕсли   ТипДок = "РАСХОД"  тогда
		ТаблицаСТСД = ПолучитьТаблицаСТСДПакеты(Номер,ТипДок,Дата);
		Если ТаблицаСТСД.Количество() > 0 тогда
			Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(Ссылка,"РазрешитьДобавлятьСтрокиВТСД") тогда 
				УчтеноВНавижн = ПровереитьУчтеноВНавижн(Ссылка); 	 
				Если НЕ УчтеноВНавижн тогда 
					ДокПеремещение = Ссылка.ПолучитьОбъект();
		 			ДокПеремещение.Товары.Загрузить(ТаблицаСТСД); 
			 		ДокПеремещение.Записать(РежимЗаписиДокумента.Проведение);				
				КонецЕсли;
			КонецЕсли;
		
		ДокСсылка = Документы.РасходныйОрдерНаТовары.НайтиПоРеквизиту("ДокументОснование",Ссылка);
		Если НЕ ЗначениеЗаполнено(ДокСсылка) тогда
		
		 ДокРО = Документы.РасходныйОрдерНаТовары.СоздатьДокумент();
	 Иначе
		УчтеноВНавижн = ПровереитьУчтеноВНавижн(ДокСсылка); 	 
		 
		Если НЕ УчтеноВНавижн тогда 
		ДокРО  = ДокСсылка.ПолучитьОбъект();
		Если ДокПО.Проведен тогда 
			ДокРО.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
		КонецЕсли;
		 
	 КонецЕсли; 
//		ДокРО.Дата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Дата") + 1;
		ДокРО.Дата = ТекущаяДата();
		Если НЕ УчтеноВНавижн тогда 
		 //ДокРО.Дата = Дата;
		 ДокРО.ДокументОснование = Ссылка;
		 ДокРО.Номер = Ссылка.Номер; 		 
		 ДокРО.Товары.Загрузить(ТаблицаСТСД); 
		 ДокРО.Магазин =  ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин;
		 ДокРО.Склад =  ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин.СкладПродажи;
		 Если НЕ ЗначениеЗаполнено(ДокРО.Ответственный) тогда 
			ДокРО.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		 КонецЕсли;
		 ДокРО.Записать(РежимЗаписиДокумента.Запись);
		 КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
Исключение
	КонецПопытки;
КонецПроцедуры

Функция ПолучитьТаблицаСТСДПакеты(Номер,ТипДок,Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	dbo_DOC_LINE.IDN КАК IDN,
		|	СУММА(dbo_DOC_LINE.COUNT_FACT) КАК COUNT_FACT,
		|	МАКСИМУМ(dbo_DOC_LINE.PRICE_RETAIL) КАК PRICE_RETAIL,
		|	МАКСИМУМ(dbo_DOC_LINE.PRICE_SUPPLIER) КАК PRICE_SUPPLIER,
		|	МАКСИМУМ(dbo_DOC_LINE.BARCODE) КАК BARCODE
		|ИЗ
		|	ВнешнийИсточникДанных.ТерминалыСбораДанных.Таблица.dbo_DOC_LINE КАК dbo_DOC_LINE
		|ГДЕ
		|	dbo_DOC_LINE.TYPE = &TYPE
		|	И dbo_DOC_LINE.DATE МЕЖДУ &DATE И &DATEkon
		|	И dbo_DOC_LINE.DOC_OWNER_NUMBER = &NUMBER
		|
		|СГРУППИРОВАТЬ ПО
		|	dbo_DOC_LINE.IDN";
	
		Запрос.УстановитьПараметр("DATE", НачалоГода(Дата));
		Запрос.УстановитьПараметр("DATEkon", КонецГода(Дата));
	Запрос.УстановитьПараметр("NUMBER", Номер);
	Запрос.УстановитьПараметр("TYPE", ТипДок);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТабТСД = РезультатЗапроса.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =		"ВЫБРАТЬ
	              		|	ТабТСД.COUNT_FACT КАК COUNT_FACT,
	              		|	ТабТСД.IDN КАК IDN
	              		|ПОМЕСТИТЬ ТаблицаТСД
	              		|ИЗ
	              		|	&ТабТСД КАК ТабТСД
	              		|;
	              		|
	              		|////////////////////////////////////////////////////////////////////////////////
	              		|ВЫБРАТЬ
	              		|	СУММА(ТаблицаТСД.COUNT_FACT) КАК КоличествоУпаковок,
	              		|	СпрНоменклатура.Ссылка КАК Номенклатура,
	              		|	СУММА(ТаблицаТСД.COUNT_FACT * ДействующиеЦеныНоменклатурыСрезПоследних.Цена) КАК Сумма,
	              		|	ДействующиеЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	              		|	СУММА(ТаблицаТСД.COUNT_FACT) КАК Количество
	              		|ИЗ
	              		|	ТаблицаТСД КАК ТаблицаТСД
	              		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	              		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ТекущаяДатаКонец, ОбъектЦенообразования = &ТипЦен) КАК ДействующиеЦеныНоменклатурыСрезПоследних
	              		|			ПО СпрНоменклатура.Ссылка = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура
	              		|		ПО ТаблицаТСД.IDN = СпрНоменклатура.IDN
	              		|
	              		|СГРУППИРОВАТЬ ПО
	              		|	ДействующиеЦеныНоменклатурыСрезПоследних.Цена,
	              		|	СпрНоменклатура.Ссылка
	              		|;
	              		|
	              		|////////////////////////////////////////////////////////////////////////////////
	              		|УНИЧТОЖИТЬ ТаблицаТСД";

	
	Запрос.УстановитьПараметр("ТабТСД", ТабТСД);
	Запрос.УстановитьПараметр("ТекущаяДатаКонец", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТипЦен", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);
	РезультатЗапроса = Запрос.Выполнить();
	
	Таб = РезультатЗапроса.ВЫгрузить();
	
	Возврат Таб;	
	
	
	
КонецФункции


Функция ПолучитьТаблицаСТСД(Номер,ТипДок,Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	dbo_DOC_LINE.IDN,
		|	dbo_DOC_LINE.COUNT_FACT,
		|	dbo_DOC_LINE.PRICE_RETAIL,
		|	dbo_DOC_LINE.PRICE_SUPPLIER,
		|	dbo_DOC_LINE.BARCODE
		|ИЗ
		|	ВнешнийИсточникДанных.ТерминалыСбораДанных.Таблица.dbo_DOC_LINE КАК dbo_DOC_LINE
		|ГДЕ
		|	dbo_DOC_LINE.TYPE = &TYPE
		|	И dbo_DOC_LINE.DATE МЕЖДУ &DATE И &DATEkon
		|	И dbo_DOC_LINE.NUMBER = &NUMBER";
	
		Запрос.УстановитьПараметр("DATE", НачалоГода(Дата));
		Запрос.УстановитьПараметр("DATEkon", КонецГода(Дата));
	Запрос.УстановитьПараметр("NUMBER", Номер);
	Запрос.УстановитьПараметр("TYPE", ТипДок);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТабТСД = РезультатЗапроса.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =		"ВЫБРАТЬ
	              		|	ТабТСД.COUNT_FACT КАК COUNT_FACT,
	              		|	ТабТСД.IDN КАК IDN
	              		|ПОМЕСТИТЬ ТаблицаТСД
	              		|ИЗ
	              		|	&ТабТСД КАК ТабТСД
	              		|;
	              		|
	              		|////////////////////////////////////////////////////////////////////////////////
	              		|ВЫБРАТЬ
	              		|	СУММА(ТаблицаТСД.COUNT_FACT) КАК КоличествоУпаковок,
	              		|	СпрНоменклатура.Ссылка КАК Номенклатура,
	              		|	СУММА(ТаблицаТСД.COUNT_FACT * ДействующиеЦеныНоменклатурыСрезПоследних.Цена) КАК Сумма,
	              		|	ДействующиеЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	              		|	СУММА(ТаблицаТСД.COUNT_FACT) КАК Количество
	              		|ИЗ
	              		|	ТаблицаТСД КАК ТаблицаТСД
	              		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	              		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ТекущаяДатаКонец, ОбъектЦенообразования = &ТипЦен) КАК ДействующиеЦеныНоменклатурыСрезПоследних
	              		|			ПО СпрНоменклатура.Ссылка = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура
	              		|		ПО ТаблицаТСД.IDN = СпрНоменклатура.IDN
	              		|
	              		|СГРУППИРОВАТЬ ПО
	              		|	ДействующиеЦеныНоменклатурыСрезПоследних.Цена,
	              		|	СпрНоменклатура.Ссылка
	              		|;
	              		|
	              		|////////////////////////////////////////////////////////////////////////////////
	              		|УНИЧТОЖИТЬ ТаблицаТСД";

	
	Запрос.УстановитьПараметр("ТабТСД", ТабТСД);
	Запрос.УстановитьПараметр("ТекущаяДатаКонец", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТипЦен", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);
	РезультатЗапроса = Запрос.Выполнить();
	
	Таб = РезультатЗапроса.ВЫгрузить();
	
	Возврат Таб;	
	
	
	
КонецФункции

Процедура ВыгрузитьДанныеВТранспортТерминала()	Экспорт
		ПроверитьСтатусТСД();
		ВыгрузитьПользователей();

	  //  ВыгрузитьВсеПеремещения();
	    ВыгрузитьВсеПереоценки();
	

КонецПроцедуры

Процедура ВыгрузитьВсеПеремещения()
	СписокДок = ПолучитьСписокДок();
	Если НЕ СписокДок = Неопределено тогда
	
	
		Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка.Дата КАК Дата,
	|	ТаблицаТовары.Ссылка.Номер КАК Номер,
	|	ВЫРАЗИТЬ(&Магазин КАК Справочник.Магазины) КАК Магазин,
	|	ТаблицаТовары.Ссылка КАК ДокументСсылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Ссылка.МагазинОтправитель.СкладУправляющейСистемы
	|			ТОГДА ""ПРИХОД""
	|		ИНАЧЕ ""РАСХОД""
	|	КОНЕЦ КАК ТипДокумента,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА СУММА(ТаблицаТовары.Количество) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ТаблицаТовары.Сумма) / СУММА(ТаблицаТовары.Количество)
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.Ссылка.РазрешитьДобавлятьСтрокиВТСД КАК РазрешитьДобавлятьСтрокиВТСД
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&СписокДок)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка.Дата,
	|	ТаблицаТовары.Ссылка.Номер,
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Ссылка.МагазинОтправитель.СкладУправляющейСистемы
	|			ТОГДА ""ПРИХОД""
	|		ИНАЧЕ ""РАСХОД""
	|	КОНЕЦ,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.Ссылка.РазрешитьДобавлятьСтрокиВТСД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Штрихкоды.Штрихкод КАК BARCODE,
	|	ВЫБОР
	|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ""ШТ""
	|		ИНАЧЕ Штрихкоды.Упаковка.Наименование
	|	КОНЕЦ КАК UNIT,
	|	ВЫБОР
	|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ Штрихкоды.Упаковка.Коэффициент
	|	КОНЕЦ КАК RATE,
	|	ДействующиеЦеныНоменклатурыСрезПоследних.Цена КАК PRICE,
	|	Товары.Номенклатура.IDN КАК IDN,
	|	Товары.Номенклатура.НаименованиеПолное КАК NAME,
	|	Товары.Номенклатура.Артикул КАК ARTICUL,
	|	Товары.Номенклатура.Производитель.Наименование КАК VENDOR,
	|	Товары.Номенклатура.ВидНоменклатуры.IDN КАК PROJECT,
	|	Товары.Номенклатура.КодИзменения КАК VERSION
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
	|			И Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Упаковка = Штрихкоды.Упаковка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ТекущаяДатаКонец, ОбъектЦенообразования = &Магазин) КАК ДействующиеЦеныНоменклатурыСрезПоследних
	|		ПО Товары.Номенклатура = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И Товары.Упаковка = ДействующиеЦеныНоменклатурыСрезПоследних.Упаковка
	|			И Товары.Магазин = ДействующиеЦеныНоменклатурыСрезПоследних.ОбъектЦенообразования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.ТипДокумента КАК TYPE,
	|	Товары.Дата КАК DATE,
	|	Товары.Номер КАК NUMBER,
	|	МАКСИМУМ(Товары.Номенклатура.ВидНоменклатуры.IDN) КАК PROJECT,
	|	""НОВЫЙ"" КАК STATUS,
	|	Товары.Номенклатура.КодИзменения КАК VERSION,
	|	"""" КАК NAME,
	|	Штрихкоды.Штрихкод КАК BARCODE,
	|	0 КАК DSCN,
	|	ВЫБОР
	|		КОГДА Товары.РазрешитьДобавлятьСтрокиВТСД
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК NEW_GOODS
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
	|			И Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Упаковка = Штрихкоды.Упаковка
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.ТипДокумента,
	|	Товары.Дата,
	|	Товары.Номер,
	|	Товары.Номенклатура.КодИзменения,
	|	Штрихкоды.Штрихкод,
	|	ВЫБОР
	|		КОГДА Товары.РазрешитьДобавлятьСтрокиВТСД
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	TYPE,
	|	DATE,
	|	NUMBER
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ТипДокумента КАК TYPE,
	|	Товары.Дата КАК DATE,
	|	Товары.Номер КАК NUMBER,
	|	Товары.НомерСтроки КАК LINENUM,
	|	Товары.Номенклатура.IDN КАК IDN,
	|	Товары.Количество КАК COUNT_PLAN,
	|	Товары.Цена КАК PRICE_SUPPLIER,
	|	ЦеныНоменклатуры.Цена КАК PRICE_RETAIL,
	|	ВЫБОР
	|		КОГДА ПечатьЦенниковВТСД.Печатать
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК PRINTPRICE,
	|	ВЫБОР
	|		КОГДА ПечатьЦенниковВТСД.НеПечататьЦену
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК PRINTPRICE_RETAIL,
	|	Товары.Номенклатура.КодИзменения КАК VERSION,
	|	"""" КАК NAME,
	|	Штрихкоды.Штрихкод КАК BARCODE
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ТекущаяДатаКонец, ОбъектЦенообразования = &Магазин) КАК ЦеныНоменклатуры
	|		ПО Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И Товары.Упаковка = ЦеныНоменклатуры.Упаковка
	|			И Товары.Магазин = ЦеныНоменклатуры.ОбъектЦенообразования
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
	|			И Товары.Номенклатура = Штрихкоды.Владелец
	|			И Товары.Упаковка = Штрихкоды.Упаковка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПечатьЦенниковВТСД КАК ПечатьЦенниковВТСД
	|		ПО Товары.Номенклатура.ВидНоменклатуры = ПечатьЦенниковВТСД.Проект
	|			И (ПечатьЦенниковВТСД.Магазин = &Магазин)
	|
	|УПОРЯДОЧИТЬ ПО
	|	TYPE,
	|	DATE,
	|	NUMBER,
	|	LINENUM
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Товары"
	);
	Запрос.УстановитьПараметр("Магазин", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);   	
	Запрос.УстановитьПараметр("СписокДок", СписокДок);   	
	Запрос.УстановитьПараметр("ТекущаяДатаКонец", КонецДня(ТекущаяДата()));
	Результаты = Запрос.ВыполнитьПакет();

	ВыгрузитьТовары(Результаты[1].Выбрать());
	ВыгрузитьДокументы(Результаты[2].Выбрать());
	ВыгрузитьДокументыСтроки(Результаты[3].Выбрать());

КонецЕсли;
	
КонецПроцедуры


Процедура ВыгрузитьВсеПереоценки()
	СписокДок = ПолучитьСписокДокПереоценка();
	Если НЕ СписокДок = Неопределено тогда
	
		Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПереоценкаТоваровНаСкладах.Дата КАК DATE,
		|	ПереоценкаТоваровНаСкладах.Номер КАК NUMBER,
		|	""ПЕРЕОЦЕНКА"" КАК TYPE,
		|	ПереоценкаТоваровНаСкладах.ВидНоменклатуры.IDN КАК PROJECT,
		|	"""" КАК NAME,
		|	"""" КАК USERIDN,
		|	"""" КАК DOCBARCODE,
		|	""НОВЫЙ"" КАК STATUS,
		|	ВЫБОР
		|		КОГДА ПереоценкаТоваровНаСкладах.Акционная
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК DSCN,
		|	0 КАК NEW_GOODS
		|ИЗ
		|	Документ.ПереоценкаТоваровНаСкладах КАК ПереоценкаТоваровНаСкладах
		|ГДЕ
		|	ПереоценкаТоваровНаСкладах.Ссылка В(&СписокДок)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПереоценкаТоваровНаСкладахТовары.Ссылка.Номер КАК NUMBER,
		|	ПереоценкаТоваровНаСкладахТовары.Ссылка.Дата КАК DATE,
		|	ПереоценкаТоваровНаСкладахТовары.НомерСтроки КАК LINENUM,
		|	ВЫБОР
		|		КОГДА ПереоценкаТоваровНаСкладахТовары.Ссылка.Дата > &ТекущаяДата
		|			ТОГДА ПереоценкаТоваровНаСкладахТовары.ЦенаНовая
		|		ИНАЧЕ ДействующиеЦеныНоменклатурыСрезПоследних.Цена
		|	КОНЕЦ КАК PRICE_RETAIL,
		|	ПереоценкаТоваровНаСкладахТовары.Количество КАК COUNT_PLAN,
		|	ПереоценкаТоваровНаСкладахТовары.Номенклатура.IDN КАК IDN,
		|	ПереоценкаТоваровНаСкладахТовары.Ссылка.Магазин КАК Магазин,
		|	ПереоценкаТоваровНаСкладахТовары.Номенклатура КАК Номенклатура,
		|	ПереоценкаТоваровНаСкладахТовары.Упаковка КАК Упаковка
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.ПереоценкаТоваровНаСкладах.Товары КАК ПереоценкаТоваровНаСкладахТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних(&ТекущаяДатаКонец, ОбъектЦенообразования = &Магазин) КАК ДействующиеЦеныНоменклатурыСрезПоследних
		|		ПО ПереоценкаТоваровНаСкладахТовары.Номенклатура = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И ПереоценкаТоваровНаСкладахТовары.Упаковка = ДействующиеЦеныНоменклатурыСрезПоследних.Упаковка
		|ГДЕ
		|	ПереоценкаТоваровНаСкладахТовары.Ссылка В(&СписокДок)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Штрихкоды.Штрихкод КАК BARCODE,
		|	ПереоценкаТоваровНаСкладахТовары.NUMBER КАК NUMBER,
		|	ПереоценкаТоваровНаСкладахТовары.DATE КАК DATE,
		|	ПереоценкаТоваровНаСкладахТовары.LINENUM КАК LINENUM,
		|	ПереоценкаТоваровНаСкладахТовары.PRICE_RETAIL КАК PRICE_RETAIL,
		|	ВЫБОР
		|		КОГДА ПечатьЦенниковВТСД.Печатать
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК PRINTPRICE,
		|	""ПЕРЕОЦЕНКА"" КАК TYPE,
		|	ВЫБОР
		|		КОГДА ПечатьЦенниковВТСД.НеПечататьЦену
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК PRINTPRICE_RETAIL,
		|	ПереоценкаТоваровНаСкладахТовары.COUNT_PLAN КАК COUNT_PLAN,
		|	ПереоценкаТоваровНаСкладахТовары.Номенклатура.IDN КАК IDN,
		|	ПереоценкаТоваровНаСкладахТовары.Магазин КАК Магазин,
		|	ПереоценкаТоваровНаСкладахТовары.Номенклатура КАК Номенклатура,
		|	ПереоценкаТоваровНаСкладахТовары.Упаковка КАК Упаковка
		|ИЗ
		|	Товары КАК ПереоценкаТоваровНаСкладахТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
		|			И ПереоценкаТоваровНаСкладахТовары.Номенклатура = Штрихкоды.Владелец
		|			И ПереоценкаТоваровНаСкладахТовары.Упаковка = Штрихкоды.Упаковка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПечатьЦенниковВТСД КАК ПечатьЦенниковВТСД
		|		ПО ПереоценкаТоваровНаСкладахТовары.Номенклатура.ВидНоменклатуры = ПечатьЦенниковВТСД.Проект
		|			И (ПечатьЦенниковВТСД.Магазин = &Магазин)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.IDN КАК IDN,
		|	Штрихкоды.Штрихкод КАК BARCODE,
		|	ВЫБОР
		|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ""ШТ""
		|		ИНАЧЕ Штрихкоды.Упаковка.Наименование
		|	КОНЕЦ КАК UNIT,
		|	ВЫБОР
		|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА 1
		|		ИНАЧЕ Штрихкоды.Упаковка.Коэффициент
		|	КОНЕЦ КАК RATE,
		|	Товары.Номенклатура.КодИзменения КАК VERSION,
		|	Товары.NUMBER КАК NUMBER,
		|	Товары.DATE КАК DATE,
		|	Товары.LINENUM КАК LINENUM,
		|	Товары.PRICE_RETAIL КАК PRICE_RETAIL,
		|	Товары.COUNT_PLAN КАК COUNT_PLAN,
		|	ВЫБОР
		|		КОГДА ПечатьЦенниковВТСД.Печатать
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК PRINTPRICE,
		|	ВЫБОР
		|		КОГДА ПечатьЦенниковВТСД.НеПечататьЦену
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК PRINTPRICE_RETAIL,
		|	""ПЕРЕОЦЕНКА"" КАК TYPE,
		|	Товары.Номенклатура.НаименованиеПолное КАК NAME,
		|	Товары.PRICE_RETAIL КАК PRICE
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
		|			И Товары.Номенклатура = Штрихкоды.Владелец
		|			И Товары.Упаковка = Штрихкоды.Упаковка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПечатьЦенниковВТСД КАК ПечатьЦенниковВТСД
		|		ПО Товары.Номенклатура.ВидНоменклатуры = ПечатьЦенниковВТСД.Проект
		|			И (ПечатьЦенниковВТСД.Магазин = &Магазин)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товары.IDN
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Товары";
		Запрос.УстановитьПараметр("Магазин", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);   	
		Запрос.УстановитьПараметр("ТекущаяДата",НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("ТекущаяДатаКонец", КонецДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("СписокДок",СписокДок);
		Результаты = Запрос.ВыполнитьПакет();

	ВыгрузитьДокументы(Результаты[0].Выбрать());                                                 
	ВыгрузитьДокументыСтроки(Результаты[2].Выбрать());
	ВыгрузитьТовары(Результаты[3].Выбрать());
КонецЕсли;
	
КонецПроцедуры


Процедура УстановитьСоединение() Экспорт

	Если НЕ ПривилегированныйРежим() Тогда	//	LNK 03.09.2019 11:27:28

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

//	Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда
	Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() И ОбменДаннымиПовтИсп.ПроверитьСертификатИнформационнойБазы(Истина) = 1 Тогда	//	LNK 03.09.2019 11:20:19

		Попытка	

			Запрос = Новый Запрос(
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПараметрыСоединения.Account КАК Account,
			|	ПараметрыСоединения.Password КАК Password,
			|	ПараметрыСоединения.ServerAddress КАК ServerAddress,
			|	ПараметрыСоединения.BaseName КАК BaseName
			|ИЗ
			|	РегистрСведений.ПараметрыСоединения КАК ПараметрыСоединения
			|ГДЕ
			|	ПараметрыСоединения.Источник = ЗНАЧЕНИЕ(Перечисление.ВнешниеИсточники.TerminalDataCollection)"
			);
			РезультатЗапроса = Запрос.Выполнить();

			Если НЕ РезультатЗапроса.Пустой() Тогда

				ПроверитьУзелТранспортаТерминалов();

				Выборка = РезультатЗапроса.Выбрать();
				Выборка.Следующий();

				ПараметрыСоединения = ВнешниеИсточникиДанных.ТерминалыСбораДанных.ПолучитьОбщиеПараметрыСоединения();

				ПараметрыСоединения.АутентификацияСтандартная = Истина;
				ПараметрыСоединения.ИмяПользователя = Выборка.Account;
				ПараметрыСоединения.Пароль = Выборка.Password;
				
				ПараметрыСоединения.СтрокаСоединения = "DRIVER={SQL Server};SERVER=" + Выборка.ServerAddress + ";UID=" + Выборка.Account+";PWD=" + Выборка.Password+";DATABASE=" + Выборка.BaseName + ";LANGUAGE=русский";

				ПараметрыСоединения.СУБД = "MSSQLServer";

				ВнешниеИсточникиДанных.ТерминалыСбораДанных.УстановитьОбщиеПараметрыСоединения(ПараметрыСоединения);
				ВнешниеИсточникиДанных.ТерминалыСбораДанных.УстановитьСоединение();

			КонецЕсли;

		Исключение

			ТекстОшибки = ОписаниеОшибки();
			ЗаписьЖурналаРегистрации("ТранспортТерминалов.Подключение", УровеньЖурналаРегистрации.Ошибка
				, Метаданные.РегистрыСведений.ПараметрыСоединения
				,, ТекстОшибки
				, РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);

		КонецПопытки;

	КонецЕсли;

КонецПроцедуры

//	LNK 13.09.2018 10:10:46
Процедура ПроверитьУзелТранспортаТерминалов()

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаУзлы.Код КАК Код,
	|	ТаблицаУзлы.Наименование КАК Наименование,
	|	ТаблицаУзлы.ЭтотУзел КАК ЭтотУзел,
	|	ТаблицаУзлы.Ссылка КАК Узел
	|ИЗ
	|	ПланОбмена.ТранспортТерминалов КАК ТаблицаУзлы"
	);
	Выборка = Запрос.Выполнить().Выбрать();
	ЕстьУзелПериферии = Ложь;

	Пока Выборка.Следующий() Цикл

		Если Выборка.ЭтотУзел И ПустаяСтрока(Выборка.Код) Тогда

			УзелОбъект = Выборка.Узел.ПолучитьОбъект();
			УзелОбъект.Код = "A." + ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Код;
			УзелОбъект.Наименование = "ИБ 1С:Розница";

			УзелОбъект.Записать();

		ИначеЕсли НЕ Выборка.ЭтотУзел Тогда

			ЕстьУзелПериферии = Истина;

		КонецЕсли;

	КонецЦикла;

	Если НЕ ЕстьУзелПериферии Тогда

		УзелОбъект = ПланыОбмена.ТранспортТерминалов.СоздатьУзел();
		УзелОбъект.Код = "D." + ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Код;
		УзелОбъект.Наименование = "ИБ TSD_DEPOT";

		УзелОбъект.Записать();

	КонецЕсли;

КонецПроцедуры

Процедура ВыгрузкаЦенВТСД() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВыгрузкаЦенВТСД.ДокПрименениеЦен КАК Ссылка
		|ИЗ
		|	РегистрСведений.ВыгрузкаЦенВТСД КАК ВыгрузкаЦенВТСД
		|ГДЕ
		|	ВыгрузкаЦенВТСД.ДокПрименениеЦен.Дата МЕЖДУ &ДатаС И &ДатаПо";
	Запрос.УстановитьПараметр("ДатаС",НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаПо",КонецДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() тогда
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ТабДок = Новый СписокЗначений;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТабДок.Добавить(ВыборкаДетальныеЗаписи.ССылка);
	КонецЦикла;
	
	
	
	Запрос = Новый Запрос;    
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаРегистра.Номенклатура КАК Номенклатура,
		|	ТаблицаРегистра.Упаковка КАК Упаковка,
		|	ТаблицаРегистра.Цена КАК Цена
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	РегистрСведений.ДействующиеЦеныНоменклатуры КАК ТаблицаРегистра
		|ГДЕ
		|	ТаблицаРегистра.Регистратор В(&ТабДок)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Упаковка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Номенклатура.Производитель.Наименование КАК VENDOR,
		|	Товары.Номенклатура.Наименование КАК NAME,
		|	Товары.Номенклатура.ВидНоменклатуры.IDN КАК PROJECT,
		|	Товары.Номенклатура.Артикул КАК ARTICUL,
		|	Товары.Номенклатура.КодИзменения КАК VERSION,
		|	Товары.Цена КАК PRICE,
		|	Штрихкоды.Штрихкод КАК BARCODE,
		|	Товары.Номенклатура.IDN КАК IDN,
		|	ВЫБОР
		|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА 1
		|		ИНАЧЕ Товары.Упаковка.Коэффициент
		|	КОНЕЦ КАК RATE,
		|	ВЫБОР
		|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
		|			ТОГДА ""ШТ""
		|		ИНАЧЕ Товары.Упаковка.Наименование
		|	КОНЕЦ КАК UNIT
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
		|		ПО (Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура)
		|			И Товары.Номенклатура = Штрихкоды.Владелец
		|			И Товары.Упаковка = Штрихкоды.Упаковка
		|ИТОГИ
		|	МАКСИМУМ(VENDOR),
		|	МАКСИМУМ(NAME),
		|	МАКСИМУМ(PROJECT),
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ARTICUL),
		|	МАКСИМУМ(VERSION),
		|	МИНИМУМ(PRICE),
		|	МАКСИМУМ(IDN)
		|ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Товары";
		
			

	
	//Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	ПрименениеЦенНоменклатурыТовары.Номенклатура
//		|ПОМЕСТИТЬ ТабОтборпереоценка
//		|ИЗ
//		|	Документ.ПрименениеЦенНоменклатуры.Товары КАК ПрименениеЦенНоменклатурыТовары
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	ПрименениеЦенНоменклатурыТовары.Номенклатура
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	СпрНоменклатура.Ссылка КАК Номенклатура,
//		|	ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК ЕдИзм
//		|ПОМЕСТИТЬ ТабТовары
//		|ИЗ
//		|	ТабОтборпереоценка КАК ТабОтборпереоценка
//		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
//		|		ПО ТабОтборпереоценка.Номенклатура = СпрНоменклатура.Ссылка
//		|ГДЕ
//		|	СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
//		|	И СпрНоменклатура.IDN <> """"
//		|
//		|ОБЪЕДИНИТЬ ВСЕ
//		|
//		|ВЫБРАТЬ
//		|	УпаковкиНоменклатуры.Владелец,
//		|	УпаковкиНоменклатуры.Ссылка
//		|ИЗ
//		|	Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
//		|
//		|ИНДЕКСИРОВАТЬ ПО
//		|	Номенклатура,
//		|	ЕдИзм
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	Штрихкоды.Штрихкод КАК BARCODE,
//		|	ДействующиеЦеныНоменклатурыСрезПоследних.Цена КАК PRICE,
//		|	СпрНоменклатура.IDN КАК IDN,
//		|	СпрНоменклатура.Производитель.Наименование КАК VENDOR,
//		|	СпрНоменклатура.Наименование КАК NAME,
//		|	СпрНоменклатура.ВидНоменклатуры.IDN КАК PROJECT,
//		|	СпрНоменклатура.Артикул КАК ARTICUL,
//		|	СпрНоменклатура.КодИзменения КАК VERSION,
//		|	ВЫБОР
//		|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
//		|			ТОГДА 1
//		|		ИНАЧЕ Штрихкоды.Упаковка.Коэффициент
//		|	КОНЕЦ КАК RATE,
//		|	ВЫБОР
//		|		КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
//		|			ТОГДА ""ШТ""
//		|		ИНАЧЕ Штрихкоды.Упаковка.Наименование
//		|	КОНЕЦ КАК UNIT
//		|ИЗ
//		|	ТабТовары КАК ТабТовары
//		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
//		|		ПО ТабТовары.Номенклатура = Штрихкоды.Владелец
//		|			И ТабТовары.ЕдИзм = Штрихкоды.Упаковка
//		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДействующиеЦеныНоменклатуры.СрезПоследних КАК ДействующиеЦеныНоменклатурыСрезПоследних
//		|		ПО ТабТовары.Номенклатура = ДействующиеЦеныНоменклатурыСрезПоследних.Номенклатура
//		|			И (ДействующиеЦеныНоменклатурыСрезПоследних.ОбъектЦенообразования = &Магазин)
//		|			И ТабТовары.ЕдИзм = ДействующиеЦеныНоменклатурыСрезПоследних.Упаковка
//		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
//		|		ПО ТабТовары.Номенклатура = СпрНоменклатура.Ссылка
//		|			И ТабТовары.Номенклатура.Ссылка = СпрНоменклатура.Ссылка
//		|ИТОГИ
//		|	МИНИМУМ(PRICE),
//		|	МАКСИМУМ(IDN),
//		|	МАКСИМУМ(VENDOR),
//		|	МАКСИМУМ(NAME),
//		|	МАКСИМУМ(PROJECT),
//		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ARTICUL),
//		|	МАКСИМУМ(VERSION)
//		|ПО
//		|	ТабТовары.Номенклатура";
//		
//			
	Запрос.УстановитьПараметр("Магазин", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);
	Запрос.УстановитьПараметр("ТабДок",ТабДок);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыгрузитьВсеТовары(РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам));
	НаборЗаписей = РегистрыСведений.ВыгрузкаЦенВТСД.СоздатьНаборЗаписей(); 
	НаборЗаписей.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	ВыгрузитьДанныеВТранспортТерминала();
КонецЕсли;

КонецПроцедуры

Функция ПровереитьУчтеноВНавижн(СсылкаНаОбъект)

	Запрос = Новый Запрос(СтрЗаменить(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаРегистра.ВидПередачи КАК ВидПередачи
	|ИЗ
	|	РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.Объект ССЫЛКА Документ.ЗаказПоставщику
	|	И ТаблицаРегистра.Объект = &СсылкаНаОбъект"
	, "ССЫЛКА Документ.ЗаказПоставщику", "ССЫЛКА Документ." + СсылкаНаОбъект.Метаданные().Имя)
	);
	Запрос.УстановитьПараметр("СсылкаНаОбъект", СсылкаНаОбъект);

	Результат = Запрос.Выполнить();


	ЗначениеВидПередачи = НЕ Результат.Пустой();
	Возврат ЗначениеВидПередачи;	
КонецФункции


&НаСервере
Функция ПолучитьСтатусДок(ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабСтатусТСД.СтатусТСД  КАК  СтатусДок
		|ИЗ
		|	РегистрСведений.СтатусТСД КАК ТабСтатусТСД
		|ГДЕ
		|	ТабСтатусТСД.Объект = &ссылка";
	
	Запрос.УстановитьПараметр("ссылка", ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() тогда
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтатусДок = ВыборкаДетальныеЗаписи.СтатусДок;
	КонецЦикла;
	Иначе
    	СтатусДок = Неопределено;
	КонецЕсли;
	Возврат СтатусДок;
	
КонецФункции

Процедура УстановитьСтатусТСД(СтатусДОК,Ссылка,Проект)
	
	
		НаборЗаписей = РегистрыСведений.СтатусТСД.СоздатьНаборЗаписей(); 
		Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин; 
		НаборЗаписей.Отбор.Магазин.Установить(Магазин);
		НаборЗаписей.Отбор.Объект.Установить(Ссылка); 

		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Магазин = Магазин;
		НоваяЗапись.Объект = Ссылка;
		НоваяЗапись.СтатусТСД = СтатусДОК; 
		НоваяЗапись.Проект = Проект; 
		НоваяЗапись.ВремяИзменения = ТекущаяДата(); 
		НаборЗаписей.Записать();
	
		
КонецПроцедуры

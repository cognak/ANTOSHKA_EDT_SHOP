//	LNK 05.10.2017 13:03:42
Функция ПолучитьПакетНоменклатураСегмента(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Номенклатура КАК Номенклатура,
	|	ТаблицаИзменений.Сегмент КАК Сегмент,
	|	ТаблицаИзменений.Характеристика КАК Характеристика,
	|	ТаблицаИзменений.НомерСообщения КАК НомерСообщения	//	для контроля
	|ИЗ
	|	РегистрСведений.НоменклатураСегмента.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.НоменклатураСегмента, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 10.11.2018 21:05:00
Функция ПолучитьПакетНоменклатурноеСостояние(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.ПериодДень КАК ПериодДень,
	|	ТаблицаИзменений.Номенклатура КАК Номенклатура,
	|	ТаблицаИзменений.Характеристика КАК Характеристика,
	|	ТаблицаИзменений.Магазин КАК Магазин,
	|	ТаблицаИзменений.НомерСообщения КАК НомерСообщения
	|ИЗ
	|	РегистрСведений.НоменклатурноеСостояние.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.НоменклатурноеСостояние, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 10.10.2017 10:16:13
Функция ПолучитьПакетИнформативныеОстаткиТоваровПоМагазинам(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Магазин КАК Магазин,
	|	ТаблицаИзменений.Номенклатура КАК Номенклатура,
	|	ТаблицаИзменений.Характеристика КАК Характеристика,
	|	ТаблицаИзменений.НомерСообщения КАК НомерСообщения
	|ИЗ
	|	РегистрСведений.ИнформативныеОстаткиТоваровПоМагазинам.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.ИнформативныеОстаткиТоваровПоМагазинам, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 10.10.2017 10:16:13
Функция ПолучитьПакетВерификацияКлиентовНазначение(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Период КАК Период,
	|	ТаблицаИзменений.Контрагент КАК Контрагент,
	|	ТаблицаИзменений.НомерСообщения КАК НомерСообщения
	|ИЗ
	|	РегистрСведений.ВерификацияКлиентовНазначение.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.ВерификацияКлиентовНазначение, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 16.04.2021 06:00:01
Функция ПолучитьПакетКлючевыеАтрибутыКонтрагентов(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Период КАК Период,
	|	ТаблицаИзменений.Объект КАК Объект,
	|	ТаблицаИзменений.УчетнаяСистема КАК УчетнаяСистема,
	|	ТаблицаИзменений.НомерСообщения КАК НомерСообщения
	|ИЗ
	|	РегистрСведений.КлючевыеАтрибутыКонтрагентов.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.КлючевыеАтрибутыКонтрагентов, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 22.01.2018 11:39:10
Функция ПолучитьПакетПродажиПоДисконтнымКартам(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ПродажиПоДисконтнымКартам.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыНакопления.ПродажиПоДисконтнымКартам, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 13.09.2018 08:23:41
Функция ПолучитьПакетСерийныеНомера(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СерийныеНомера.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(Справочники.СерийныеНомера, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "Ссылка");

КонецФункции // ПолучитьПакетСерийныеНомера()

//	LNK 10.11.2018 12:35:20
Функция ПолучитьПакетНоменклатура(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(Справочники.Номенклатура, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "Ссылка");

КонецФункции

//	LNK 21.11.2018 10:00:45
Функция ПолучитьПакетКонтрагенты(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Контрагенты.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(Справочники.Контрагенты, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "Ссылка");

КонецФункции

//	LNK 21.11.2018 10:00:45
Функция ПолучитьПакетИнформационныеКарты(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ИнформационныеКарты.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(Справочники.ИнформационныеКарты, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "Ссылка");

КонецФункции // ПолучитьПакетИнформационныеКарты()

//	LNK 12.07.2022 05:55:20
Функция ПолучитьПакетФизическиеЛица(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ФизическиеЛица.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(Справочники.ФизическиеЛица, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "Ссылка");

КонецФункции

//	LNK 05.03.2019 07:21:27
Функция ПолучитьПакетСебестоимостьНоменклатуры(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.СебестоимостьНоменклатуры.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.СебестоимостьНоменклатуры, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

Функция ПолучитьПакетРегистрацииРозницаMagento(УзелПолучатель, РазмерПакета)	Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 100
	|	ТаблицаИзменений.ТипРегистрации КАК ТипРегистрации,
	|	ТаблицаИзменений.Измерение_1 КАК Измерение_1,
	|	ТаблицаИзменений.Измерение_2 КАК Измерение_2,
	|	ТаблицаИзменений.Измерение_3 КАК Измерение_3
	|ИЗ
	|	РегистрСведений.КомплексОбменаMagento.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Измерение_2,
	|	Измерение_1"
	;

	РазмерПакета = ?(РазмерПакета = 0, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки("ИМ.КомплексОбменаMagento"), РазмерПакета);

	Возврат ОбменДаннымиСерверПакеты.ВыделитьПакетОбъектов(РегистрыСведений.КомплексОбменаMagento, РазмерПакета, ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 23.01.2019 14:46:04
Функция ПолучитьПакетРегистрацияMicrosoftDynamics(ДанныеПолучателя, ИмяТипаРегистрации, Знач РазмерПакета = 0)	Экспорт

	Если ИмяТипаРегистрации = "Контрагенты" Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	ТаблицаИзменений.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты.Изменения КАК ТаблицаИзменений
		|ГДЕ
		|	ТаблицаИзменений.Узел = &УзелПолучатель
		|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL 
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 100
		|	ТаблицаИзменений.Ссылка
		|ИЗ
		|	Справочник.ИнформационныеКарты.Изменения КАК ТаблицаИзменений
		|ГДЕ
		|	ТаблицаИзменений.Узел = &УзелПолучатель
		|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL 
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 100
		|	ТаблицаИзменений.Ссылка
		|ИЗ
		|	Документ.ВыдачаДисконтныхКарт.Изменения КАК ТаблицаИзменений
		|ГДЕ
		|	ТаблицаИзменений.Узел = &УзелПолучатель
		|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL 
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 100
		|	ТаблицаИзменений.Ссылка
		|ИЗ
		|	Документ.ЗаменаДисконтныхКарт.Изменения КАК ТаблицаИзменений
		|ГДЕ
		|	ТаблицаИзменений.Узел = &УзелПолучатель
		|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
		;
	//	При значении ключа класса "Ссылка" неважен тип МенеджерОбъекта.
		МенеджерОбъекта = Справочники.Контрагенты;
		КлючКласса      = "Ссылка";

	ИначеЕсли ИмяТипаРегистрации = "Номенклатура" Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	ТаблицаИзменений.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура.Изменения КАК ТаблицаИзменений
		|ГДЕ
		|	ТаблицаИзменений.Узел = &УзелПолучатель
		|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
		;
		МенеджерОбъекта = Справочники.Номенклатура;
		КлючКласса      = "Ссылка";

	ИначеЕсли ИмяТипаРегистрации = "Магазины" Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	ТаблицаИзменений.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Магазины.Изменения КАК ТаблицаИзменений
		|ГДЕ
		|	ТаблицаИзменений.Узел = &УзелПолучатель
		|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL 
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 100
		|	ТаблицаИзменений.Ссылка
		|ИЗ
		|	Справочник.Склады.Изменения КАК ТаблицаИзменений
		|ГДЕ
		|	ТаблицаИзменений.Узел = &УзелПолучатель
		|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
		;
	//	При значении ключа класса "Ссылка" неважен тип МенеджерОбъекта.
		МенеджерОбъекта = Справочники.Магазины;
		КлючКласса      = "Ссылка";

	ИначеЕсли ИмяТипаРегистрации = "ЗапросДоступности" Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	ТаблицаИзменений.ЗапросДоступностиТоваров КАК ЗапросДоступностиТоваров
		|ИЗ
		|	РегистрСведений.СостояниеЗапросаДоступностиТоваров.Изменения КАК ТаблицаИзменений
		|ГДЕ
		|	ТаблицаИзменений.Узел = &УзелПолучатель
		|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
		;
		МенеджерОбъекта = РегистрыСведений.СостояниеЗапросаДоступностиТоваров;
		КлючКласса      = "НаборЗаписей";

	ИначеЕсли ИмяТипаРегистрации = "Документы" Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	ТаблицаИзменений.Ссылка КАК Ссылка,
		|	ТаблицаИзменений.Период КАК Период
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаИзменений.Ссылка КАК Ссылка,
		|		ТаблицаПоддержки.Дата КАК Период
		|	ИЗ
		|		Документ.ЧекККМ.Изменения КАК ТаблицаИзменений
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЧекККМ КАК ТаблицаПоддержки
		|			ПО ТаблицаИзменений.Ссылка = ТаблицаПоддержки.Ссылка
		|	ГДЕ
		|		ТаблицаИзменений.Узел = &УзелПолучатель
		|		И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL 
		|		И НЕ ТаблицаПоддержки.СтатусЧекаККМ = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.ПустаяСсылка)
		|		И ВЫБОР
		|				КОГДА ТаблицаПоддержки.ОтчетОРозничныхПродажах = ЗНАЧЕНИЕ(Документ.ОтчетОРозничныхПродажах.ПустаяСсылка)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ВЫБОР
		|						КОГДА НЕ ТаблицаПоддержки.ОтчетОРозничныхПродажах.КассоваяСмена.КассовыйДень ЕСТЬ NULL
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ ЛОЖЬ
		|					КОНЕЦ
		|			КОНЕЦ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаИзменений.Ссылка,
		|		ТаблицаПоддержки.Дата
		|	ИЗ
		|		Документ.РеализацияТоваров.Изменения КАК ТаблицаИзменений
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров КАК ТаблицаПоддержки
		|			ПО ТаблицаИзменений.Ссылка = ТаблицаПоддержки.Ссылка
		|	ГДЕ
		|		ТаблицаИзменений.Узел = &УзелПолучатель
		|		И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL 
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаИзменений.Ссылка,
		|		ТаблицаПоддержки.Дата
		|	ИЗ
		|		Документ.ВозвратТоваровОтПокупателя.Изменения КАК ТаблицаИзменений
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ТаблицаПоддержки
		|			ПО ТаблицаИзменений.Ссылка = ТаблицаПоддержки.Ссылка
		|	ГДЕ
		|		ТаблицаИзменений.Узел = &УзелПолучатель
		|		И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL ) КАК ТаблицаИзменений
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаИзменений.Период"
		+ ?(ДанныеПолучателя.ПорядокОбратный, " УБЫВ", "")
		;
		МенеджерОбъекта = Документы.ЧекККМ;
		КлючКласса      = "Ссылка";

	ИначеЕсли ИмяТипаРегистрации = "СправочникиДругие" Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	ТаблицаИзменений.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ИменаЛюдей.Изменения КАК ТаблицаИзменений
		|ГДЕ
		|	ТаблицаИзменений.Узел = &УзелПолучатель
		|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
		;
		МенеджерОбъекта = Неопределено;
		КлючКласса      = "Ссылка";

	Иначе

		ТекстЗапроса = СтрЗаменить(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 100
		|	ТаблицаИзменений.ТипРегистрации КАК ТипРегистрации,
		|	ТаблицаИзменений.Измерение_1 КАК Измерение_1,
		|	ТаблицаИзменений.Измерение_2 КАК Измерение_2,
		|	ТаблицаИзменений.Измерение_3 КАК Измерение_3
		|ИЗ
		|	РегистрСведений.РегистрацияMicrosoftDynamics.Изменения КАК ТаблицаИзменений
		|ГДЕ
		|	ТаблицаИзменений.Узел = &УзелПолучатель
		|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL 
		|	И ТаблицаИзменений.ТипРегистрации = ЗНАЧЕНИЕ(Перечисление.ТипыРегистрацийMicrosoftDynamics.ДействующиеЦены)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Измерение_2,
		|	Измерение_1"
		, ".ТипыРегистрацийMicrosoftDynamics.ДействующиеЦены", ".ТипыРегистрацийMicrosoftDynamics." + ИмяТипаРегистрации)
		;
		МенеджерОбъекта = РегистрыСведений.РегистрацияMicrosoftDynamics;
		КлючКласса      = "НаборЗаписей";

	КонецЕсли;

	РазмерПакета = ?(РазмерПакета = 0, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки("CRM." + ИмяТипаРегистрации), РазмерПакета);

	Возврат ОбменДаннымиСерверПакеты.ВыделитьПакетОбъектов(МенеджерОбъекта, РазмерПакета, ТекстЗапроса, ДанныеПолучателя.Ссылка, КлючКласса);

КонецФункции

//	LNK 11.11.2019 06:45:36
Функция ПолучитьПакетШтрихкоды(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Штрихкод КАК Штрихкод,
	|	ТаблицаИзменений.Владелец КАК Владелец,
	|	ТаблицаИзменений.Характеристика КАК Характеристика,
	|	ТаблицаИзменений.ТипШтрихкода КАК ТипШтрихкода,
	|	ТаблицаИзменений.Упаковка КАК Упаковка
	|ИЗ
	|	РегистрСведений.Штрихкоды.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.Штрихкоды, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 22.07.2020 06:19:10
Функция ПолучитьПакетВерсииОбъектов(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Объект КАК Объект,
	|	ТаблицаИзменений.НомерВерсии КАК НомерВерсии,
	|	ТаблицаИзменений.ЭлементСтруктуры КАК ЭлементСтруктуры
	|ИЗ
	|	РегистрСведений.ВерсииОбъектов.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.ВерсииОбъектов, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 05.12.2020 10:17:18
Функция ПолучитьПакетКлючевыеАтрибутыДокументов(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Период КАК Период,
	|	ТаблицаИзменений.Объект КАК Объект,
	|	ТаблицаИзменений.Магазин КАК Магазин,
	|	ВЫБОР
	|		КОГДА ТаблицаИзменений.Объект ССЫЛКА Документ.ЗаказПоставщику
	|			ТОГДА 0
	|		КОГДА ТаблицаИзменений.Объект ССЫЛКА Документ.ПеремещениеТоваров
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК КлючПорядка
	|ИЗ
	|	РегистрСведений.КлючевыеАтрибутыДокументов.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка"
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.КлючевыеАтрибутыДокументов, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки("СВЕРКА:" + ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 23.10.2021 12:16:07
Функция ПолучитьПакетДействующиеЦеныНоменклатуры(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.ДействующиеЦеныНоменклатуры.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.ДействующиеЦеныНоменклатуры, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 23.10.2021 12:16:57
Функция ПолучитьПакетЦеныНоменклатуры(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.ЦеныНоменклатуры, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 23.10.2021 12:20:28
Функция ПолучитьПакетОпорныеЦеныНоменклатуры(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Период КАК Период,
	|	ТаблицаИзменений.Магазин КАК Магазин,
	|	ТаблицаИзменений.Номенклатура КАК Номенклатура,
	|	ТаблицаИзменений.Характеристика КАК Характеристика
	|ИЗ
	|	РегистрСведений.ОпорныеЦеныНоменклатуры.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.ОпорныеЦеныНоменклатуры, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 02.12.2021 06:11:15
Функция ПолучитьПакетПредыдущиеЦеныНоменклатуры(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.ОбъектЦенообразования КАК ОбъектЦенообразования,
	|	ТаблицаИзменений.Номенклатура КАК Номенклатура,
	|	ТаблицаИзменений.Характеристика КАК Характеристика
	|ИЗ
	|	РегистрСведений.ПредыдущиеЦеныНоменклатуры.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.ПредыдущиеЦеныНоменклатуры, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 24.04.2023 07:18:04
Функция ПолучитьПакетЗаказПокупателя(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаказПокупателя.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(Документы.ЗаказПокупателя, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "Ссылка");

КонецФункции

//	LNK 17.05.2023 09:49:19
Функция ПолучитьПакетЗаказыПокупателей(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ЗаказыПокупателей.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыНакопления.ЗаказыПокупателей, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

//	LNK 18.05.2023 10:08:58
Функция ПолучитьПакетЗакрытиеЗаказовПокупателей(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗакрытиеЗаказовПокупателей.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(Документы.ЗакрытиеЗаказовПокупателей, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "Ссылка");

КонецФункции

//	LNK 18.11.2023 07:24:51
Функция ПолучитьПакетСоответствияОбъектовУчетныхСистем(УзелПолучатель, ИмяКласса)	Экспорт

	ТекстЗапроса   =
	"ВЫБРАТЬ ПЕРВЫЕ 100
	|	ТаблицаИзменений.Ссылка КАК Ссылка,
	|	ТаблицаИзменений.УчетнаяСистема КАК УчетнаяСистема
	|ИЗ
	|	РегистрСведений.СоответствияОбъектовУчетныхСистем.Изменения КАК ТаблицаИзменений
	|ГДЕ
	|	ТаблицаИзменений.Узел = &УзелПолучатель
	|	И ТаблицаИзменений.НомерСообщения ЕСТЬ НЕ NULL "
	;
	Возврат ВыделитьПакетОбъектов(РегистрыСведений.СоответствияОбъектовУчетныхСистем, ОбменДаннымиПовтИсп.ПолучитьРазмерПакетаВыгрузки(ИмяКласса), ТекстЗапроса, УзелПолучатель, "НаборЗаписей");

КонецФункции

#Область ОбщиеМетодыПакетирования

//	LNK 10.10.2017 11:18:22
Функция ВыделитьПакетОбъектов(МенеджерОбъекта, РазмерПакета, ТекстЗапроса, УзелПолучатель, КлючКласса)	Экспорт

//	Использовать запрос "ПЕРВЫЕ ..." и с сортировкой по уже выгруженным нельзя,
//	так как сначала выполняется выборка "ПЕРВЫЕ ...", а потом сортировка - нам так не подходит.

//	Поэтому сначала выберем все уже выгруженные (где НомерСообщения ЕСТЬ НЕ NULL), а потом, если
//	не хватит до нужного количества, "доберем" из еще не выгруженных.
//	При этом уже выгруженные отправляем снова и снова (независимо от их количества),
//	пока не получим подтверждение получения.

	СписокОбъектов = Новый Массив;

	Запрос = Новый Запрос(СтрЗаменить(ТекстЗапроса, "ПЕРВЫЕ 100", ""));
	Запрос.УстановитьПараметр("УзелПолучатель", УзелПолучатель);

	ЗаполнитьСписокОбъектов(МенеджерОбъекта, Запрос.Выполнить().Выбрать(), СписокОбъектов, КлючКласса);

	Если РазмерПакета > СписокОбъектов.Количество() Тогда

		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ПЕРВЫЕ 100", "ПЕРВЫЕ " + Формат(РазмерПакета - СписокОбъектов.Количество(), "ЧГ="));
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " ЕСТЬ НЕ NULL", " ЕСТЬ NULL");

		ЗаполнитьСписокОбъектов(МенеджерОбъекта, Запрос.Выполнить().Выбрать(), СписокОбъектов, КлючКласса);

	КонецЕсли;
	
	Возврат СписокОбъектов;

КонецФункции

//	LNK 05.10.2017 13:03:42
Процедура ЗаполнитьСписокОбъектов(МенеджерОбъекта, Выборка, СписокОбъектов, КлючКласса)

	Пока Выборка.Следующий() Цикл
		
		Если КлючКласса = "НаборЗаписей" Тогда

		//	Для периодического регистра сведений в выборке должен присутствовать период.
			НаборЗаписей = МенеджерОбъекта.СоздатьНаборЗаписей();

			Для каждого Элемент Из НаборЗаписей.Отбор Цикл

				Попытка

					Элемент.Установить(Выборка[Элемент.Имя]);

				Исключение

				//	У некоего измерения регистра может НЕ быть установлено свойство "Основной отбор".
					ТекстОшибки = ОписаниеОшибки();

				КонецПопытки;

			КонецЦикла;

			СписокОбъектов.Добавить(НаборЗаписей);

		Иначе

			СписокОбъектов.Добавить(Выборка.Ссылка);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

#КонецОбласти










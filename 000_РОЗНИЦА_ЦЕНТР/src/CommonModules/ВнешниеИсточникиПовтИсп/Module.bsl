#Область ОписанияСтруктур

Функция СоответствиеПолейВнешнихИсточников()	Экспорт

	СоставПолей = Новый Соответствие;
	СоставПолей.Вставить("IDN"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("ID"                             , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(26))));	//	LNK 21.05.2021 05:30:38 - Поставщики

	СоставПолей.Вставить("IDNG"							  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(512))));
	СоставПолей.Вставить("IDNG0"						  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(512))));
	СоставПолей.Вставить("IDNG1"						  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(512))));
	СоставПолей.Вставить("IDNG2"						  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(512))));
	СоставПолей.Вставить("IDNG3"						  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(512))));
	СоставПолей.Вставить("IDNG4"						  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(512))));

	СоставПолей.Вставить("ПОКУПАТЕЛЬ"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("ПОСТАВЩИК"					  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));

	СоставПолей.Вставить("IDNСКЛАДА"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("КОДПОКУПАТЕЛЯ"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("КОДВОЗВРАТА"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ИНН"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("ИННПЛАТЕЛЬЩИКАНДС"              , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("КОДСВЯЗИ"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));

	СоставПолей.Вставить("НОМЕР"                          , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(11))));
	СоставПолей.Вставить("КОДПОУКТЗЕД"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("НОМЕРФИСКАЛЬНЫЙ"                , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ДАТА"                           , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("ВРЕМЯ"                          , Новый Структура("Да, Тип", Ложь  , Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ШТРИХКОД"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(32))));
	СоставПолей.Вставить("НАЛОГОВАЯГРУППА"                , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("КОЛИЧЕСТВО"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ЦЕНА"                           , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ЦЕНАВРОЗНИЦЕ"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("СУММА"                          , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("СУММАОПЛАТЫ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("СУММАБЕЗНАЛ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ИТОГЧЕКА"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("ЧЕКПРОБИТ"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("КОДКАССИРА"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(120))));
	СоставПолей.Вставить("НОМЕРZОТЧЕТА"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(11))));
	СоставПолей.Вставить("ДАТАZОТЧЕТА"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("НОМЕРКАССЫККМ"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("НОМЕРФР"                        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(64))));
	СоставПолей.Вставить("НОМЕРМАГАЗИНА"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ОПЕРАЦИЯ"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));

	СоставПолей.Вставить("КОДКАРТЫ"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(32))));
	СоставПолей.Вставить("ФАМИЛИЯ"                        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ИМЯ"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ОТЧЕСТВО"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ДАТАРОЖДЕНИЯ"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("КОДПОЛА"                        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ДАТАРЕГИСТРАЦИИ"                , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("ДАТАОТКРЫТИЯ"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("ДАТАЗАКРЫТИЯ"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("ТЕЛЕФОНЛИЧНЫЙ"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ТЕЛЕФОНСЛУЖЕБ"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ТЕЛЕФОН1"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ТЕЛЕФОН2"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ТЕЛЕФОН3"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ТЕЛЕФОН4"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ТЕЛЕФОН5"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ПОЧТАЛИЧНАЯ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)))); 
	СоставПолей.Вставить("ПОЧТАСЛУЖЕБ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)))); 
	СоставПолей.Вставить("ИНДЕКС"                         , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число"))); 
	СоставПолей.Вставить("АДРЕССТРАНА"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)))); 
	СоставПолей.Вставить("АДРЕСГОРОД"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)))); 
	СоставПолей.Вставить("АДРЕСУЛИЦА"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)))); 
	СоставПолей.Вставить("АДРЕСДОМ"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)))); 
	СоставПолей.Вставить("АДРЕСКВАРТИРА"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)))); 
	СоставПолей.Вставить("СУММАНАКОПЛЕНО"                 , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ДИТЕИМЯ"                        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ДИТЕОТЧЕСТВО"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ДИТЕФАМИЛИЯ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ДИТЕРОДИЛСЯ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("ДИТЕКОДПОЛ"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("КОММЕНТАРИЙ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(200))));

	СоставПолей.Вставить("АРТИКУЛ"                        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(25))));
	СоставПолей.Вставить("БЛОКИРОВАН"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("НАИМЕНОВАНИЕ"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("НАИМЕНОВАНИЕУКРАИНА"            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("НАИМЕНОВАНИЕПОЛНОЕ"             , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("КОДИЗМЕНЕНИЯ"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(40))));
	СоставПолей.Вставить("ПРОЕКТКОД"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ПРОЕКТНОМЕР"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ПРОЕКТНАИМЕНОВАНИЕ"             , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ПРОИЗВОДИТЕЛЬКОД"               , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ПРОИЗВОДИТЕЛЬНАИМЕНОВАНИЕ"      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ТОРГОВАЯМАРКАКОД"               , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ТОРГОВАЯМАРКАНАИМЕНОВАНИЕ"      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("МОДЕЛЬКОД"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("МОДЕЛЬНАИМЕНОВАНИЕ"             , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("СТРАНАПРОИСХОЖДЕНИЯКОД"         , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("СТРАНАПРОИСХОЖДЕНИЯНАИМЕНОВАНИЕ", Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("МАТЕРИАЛКОД"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("МАТЕРИАЛНАИМЕНОВАНИЕ"           , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("СЕЗОННОСТЬКОД"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("СЕЗОННОСТЬНАИМЕНОВАНИЕ"         , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("РАЗМЕР"                         , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));

	СоставПолей.Вставить("ГРУППАКОД"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ГРУППАПОДКОД"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ГРУППАПОДПОДКОД"                , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ГРУППАПОДПОДПОДКОД"             , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));

	СоставПолей.Вставить("ГРУППАКОД_OLD"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ГРУППАПОДКОД_OLD"               , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ГРУППАПОДПОДКОД_OLD"            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ГРУППАПОДПОДПОДКОД_OLD"		  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	
	СоставПолей.Вставить("ГРУППАНАИМЕНОВАНИЕ"             , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ГРУППАПОДНАИМЕНОВАНИЕ"          , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ГРУППАПОДПОДНАИМЕНОВАНИЕ"       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ГРУППАПОДПОДПОДНАИМЕНОВАНИЕ"    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ВОЗРАСТКОД"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ВОЗРАСТ"                        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ВОЗРАСТМЕСЯЦНАЧАЛО"             , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ВОЗРАСТМЕСЯЦКОНЕЦ"              , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ПОЛКОД"                         , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ПОЛНАИМЕНОВАНИЕ"                , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ФУРНИТУРАКОД"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ФУРНИТУРАНАИМЕНОВАНИЕ"          , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ШТРИХКОД"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ЦЕНОВОЙСЕГМЕНТ"                 , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("СТАТУСТОВАРА"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ЕДИНИЦАВЕСНЕТТО"                , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ЕДИНИЦАОБЪЕМ"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("СТАВКАНДСЗНАЧЕНИЕ"              , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ЦВЕТ"                           , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("КОЛЛЕКЦИЯ"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));

	СоставПолей.Вставить("УПАКОВКА"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("КОЭФФИЦИЕНТ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ОБЪЕМ"                          , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ВЕС"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));

	СоставПолей.Вставить("ПРЕФИКС"                        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(3))));
	СоставПолей.Вставить("ТИПСКЛАДА"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(30))));
	СоставПолей.Вставить("ФИЛИАЛ"                         , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(10))));
	СоставПолей.Вставить("ОТДЕЛ"                          , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("КОДБЮДЖЕТА"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("АДРЕСФАКТИЧЕСКИЙ"               , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("АДРЕСЮРИДИЧЕСКИЙ"               , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ЭЛЕКТРОННАЯПОЧТА"               , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("БЛОКИРОВАН"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));

	СоставПолей.Вставить("КОДСКЛАДА"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(10))));
	СоставПолей.Вставить("КОДПРОЕКТА"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50))));
	СоставПолей.Вставить("КОДПРАЙСЛИСТА"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(10))));

	СоставПолей.Вставить("ТОВАРНО_"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("КОДЕДИНИЦЫИЗМЕРЕНИЯ"            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("ДАТАНАЧАЛА"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("АКЦИЯ"                          , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("ЦЕНАВКЛЮЧАЕТНДС"                , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("КОДВАЛЮТЫ"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(10))));
	СоставПолей.Вставить("ЦЕНАЕДИНИЦЫ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("НДСБИЗНЕСГРУППАЦЕНЫ"            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));

	СоставПолей.Вставить("ЗАДАНИЕНО"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ТИПЗАДАНИЯ"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(30))));
	СоставПолей.Вставить("КОДФИЛИАЛА"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(2))));
	СоставПолей.Вставить("ВРЕМЯСОЗДАНИЯ"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("ВЫПОЛНЕНО"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("ID1"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата, Строка",, Новый КвалификаторыСтроки(50))));	// ID1
	СоставПолей.Вставить("ID2"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата, Строка",, Новый КвалификаторыСтроки(50))));	// ID2
	СоставПолей.Вставить("ID3"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата, Строка",, Новый КвалификаторыСтроки(512))));	// ID3	может быть IDNG
	СоставПолей.Вставить("ID4"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата, Строка",, Новый КвалификаторыСтроки(50))));	// ID4
	СоставПолей.Вставить("ID5"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата, Строка",, Новый КвалификаторыСтроки(50))));	// ID5
	СоставПолей.Вставить("ID6"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата, Строка",, Новый КвалификаторыСтроки(50)))); 	// ID6
	СоставПолей.Вставить("ID7"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата, Строка",, Новый КвалификаторыСтроки(50))));	// ID7
	СоставПолей.Вставить("ID8"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата, Строка",, Новый КвалификаторыСтроки(50))));	// ID8
	СоставПолей.Вставить("ID9"                            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата, Строка",, Новый КвалификаторыСтроки(50))));	// ID9
	СоставПолей.Вставить("ПРИМЕЧАНИЕ"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ВРЕМЯСЛЕДУЮЩЕГОЗАПУСКА"         , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("КОЛВОПОПЫТОК"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));

	СоставПолей.Вставить("JOB_ID"                         , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));

	СоставПолей.Вставить("УЧТЕН"                          , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ДОКУМЕНТНО"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("ДАТАУЧЕТА"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("КОДСКЛАДА"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("НОВЫЙКОДСКЛАДА"                 , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("ТОВАРНО_"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("КОЛ_ВО"                         , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("КОДЕДИНИЦЫИЗМЕРЕНИЯ"            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("КОЛ_ВОВЕДИНИЦЕИЗМЕРЕНИЯ"        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("КОЛ_ВОБАЗ_"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ЦЕНАЗАШТУКУ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("СТРОКАНО_"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("СТАТУС"                      	  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(10))));
	СоставПолей.Вставить("ПАРАМЕТРЫУЧЕТА"                 , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));	
	СоставПолей.Вставить("СТРОКАНО_"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));

	СоставПолей.Вставить("ПЕРЕДАНОВМАГАЗИН"               , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("ПРОВЕДЕНОВМАГАЗИНЕ"             , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));

	СоставПолей.Вставить("РАЗРЕШИТЬПРЯМУЮЗАКУПКУ"         , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("ПЛАТЕЛЬЩИКНДС"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("МФО"                      	  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(30))));
	СоставПолей.Вставить("РАСЧЕТНЫЙСЧЕТ"               	  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(30))));
	СоставПолей.Вставить("НОМЕРСВИДЕТЕЛЬСТВАПЛАТЕЛЬЩИКАНДС", Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));	
	СоставПолей.Вставить("КОДПОЕДРПОУ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));	

	СоставПолей.Вставить("СТРОКВДОКУМЕНТЕ"                , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));

	СоставПолей.Вставить("НАЗНАЧЕНИЕТОВАРАКОД"            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("НАЗНАЧЕНИЕТОВАРА"               , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(30))));

//	LNK 01.05.2017 11:30:20 - Организация (!!!)
	СоставПолей.Вставить("НАИМЕНОВАНИЕДЛЯНАЛОГОВОЙ"       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("НАИМЕНОВАНИЕУКРАИНАДЛЯНАЛОГОВОЙ", Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("ГЛАВНЫЙБУХГАЛТЕР"               , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("РОЗНИЦА"                        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("ТЕЛЕФОНЫ"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));

//	LNK 29.08.2017 08:26:32
	СоставПолей.Вставить("ТИППЕРЕОЦЕНКИ"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));

//	LNK 05.10.2017 14:12:41
	СоставПолей.Вставить("НОВИНКА"                        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("НОВИНКАДАТА"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("ЭСКЛЮЗИВ"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));

//	LNK 06.12.2017 08:25:55
	СоставПолей.Вставить("WEBЗАКАЗНО_"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
//	LNK 06.12.2018 11:14:51
	СоставПолей.Вставить("НОМЕРЗАКАЗА"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));	

//	LNK 09.08.2018 07:38:57
	СоставПолей.Вставить("МАРЖИНАЛЬНОСТЬ"                 , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
//	LNK 01.11.2018 13:32:48
	СоставПолей.Вставить("КРАТНОСТЬЗАКАЗА"                , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
//	LNK 27.11.2018 14:19:28
	СоставПолей.Вставить("ТИППОСТАВКИ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("КОДПОСТАВЩИКА"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(240))));	

//	LNK 06.12.2018 11:10:22
	СоставПолей.Вставить("ВИДОПЕРАЦИИ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(10))));	
	СоставПолей.Вставить("СУММАСКИДКИ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
//	LNK 04.03.2019 10:02:54
	СоставПолей.Вставить("ПЛАНОВАЯСЕБЕСТОИМОСТЬ"          , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
//	LNK 06.09.2019 10:52:38
	СоставПолей.Вставить("ТОЛЬКООБЫЧНЫЙЦЕННИК"            , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));

//	LNK 03.01.2020 13:46:47
	СоставПолей.Вставить("ТЕХНИЧЕСКИЙКОД"                 , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50))));	
	СоставПолей.Вставить("ДАТАВРЕМЯ"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("КОЛИЧЕСТВОВОШЛО"                , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("КОЛИЧЕСТВОВЫШЛО"                , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));

//	LNK 23.06.2020 11:16:40
	СоставПолей.Вставить("КОДТОВАРА"                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("ОСНОВНАЯ"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("НАЗВАНИЕ"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(128))));
	СоставПолей.Вставить("ЗНАЧЕНИЕ"                       , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(128))));
	СоставПолей.Вставить("ГРУППА"                         , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(512))));

	СоставПолей.Вставить("ИЗОБРАЖЕНИЕ"                    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Неопределено")));

	СоставПолей.Вставить("ДАТАИЗМЕНЕНИЯ"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));

//	LNK 09.04.2021 06:50:04
	СоставПолей.Вставить("КВО_ОЧЗ"                        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("КВО_ДОК"                        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("КВО_СТР"                        , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));

//	LNK 10.05.2021 06:58:30
	СоставПолей.Вставить("WEB_АВТОРЕПРАЙСЦЕН"             , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("WEB_ВЫГРУЖАТЬ"                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));
	СоставПолей.Вставить("WEB_МОНИТОРИНГЦЕН"              , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));

//	LNK 21.05.2021 05:30:38 - Поставщики
	СоставПолей.Вставить("УКР_НАИМЕНОВАНИЕ"				  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("МАРЖИНАЛЬНОСТЬ"				  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));
	СоставПолей.Вставить("ДАТАСОЗДАНИЯ"                   , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Дата")));
	СоставПолей.Вставить("КТОИЗМЕНИЛ"	                  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100))));
	СоставПолей.Вставить("КОД"		                      , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50))));

//	LNK 20.03.2022 06:21:06
	СоставПолей.Вставить("ПЕРЕМЕЩЕНИЕНО_"				  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20))));
	СоставПолей.Вставить("КОЛ_ВОКОМПЛЕКТОВ"				  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Число")));

//	LNK 10.04.2023 10:21:34
	СоставПолей.Вставить("ОТПРАВИТЕЛЬ"					  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(10))));

//	LNK 03.05.2023 13:17:30
	СоставПолей.Вставить("ПЕЧАТЬЦЕННИКОВБЕЗПИКТОГРАММ"    , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Булево")));

//	Сичкаренко 11.09.2023
	СоставПолей.Вставить("КОДКЛИЕНТА"                     , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50))));
	СоставПолей.Вставить("НОМЕРТЕЛЕФОНА"				  , Новый Структура("Да, Тип", Истина, Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(50))));
	Возврат СоставПолей;

КонецФункции

Функция УровниГруппировокТоваровNavision()	Экспорт

	УровниГруппировокСправочника = Новый Массив;
	УровниГруппировокСправочника.Добавить(Новый Структура("Имя, Код, IDNG", "ПроектНаименование", "ПроектКод", "IDNG0"));
	УровниГруппировокСправочника.Добавить(Новый Структура("Имя, Код, IDNG", "ГруппаНаименование", "ГруппаКод", "IDNG1"));
	УровниГруппировокСправочника.Добавить(Новый Структура("Имя, Код, IDNG", "ГруппаПодНаименование", "ГруппаПодКод", "IDNG2"));
	УровниГруппировокСправочника.Добавить(Новый Структура("Имя, Код, IDNG", "ГруппаПодПодНаименование", "ГруппаПодПодКод", "IDNG3"));
	УровниГруппировокСправочника.Добавить(Новый Структура("Имя, Код, IDNG", "ГруппаПодПодПодНаименование", "ГруппаПодПодПодКод", "IDNG4"));

	Возврат УровниГруппировокСправочника;

КонецФункции // УровниГруппировокТоваровNavision()

Функция КодыИсключенияЗагрузкиNavision()	Экспорт

	СписокКодов = Новый Соответствие;
	СписокКодов.Вставить("6419510", Истина);
	СписокКодов.Вставить("6419513", Истина);
	СписокКодов.Вставить("6419516", Истина);
	СписокКодов.Вставить("6419519", Истина);
	СписокКодов.Вставить("6923904", Истина);
	СписокКодов.Вставить("6923905", Истина);
	СписокКодов.Вставить("6923906", Истина);
	СписокКодов.Вставить("6923907", Истина);
	СписокКодов.Вставить("6008462", Истина);	//	3500

	СписокКодов.Вставить("6008462", Истина);	//	Майнове  право 3500
	СписокКодов.Вставить("6118463", Истина);	//	Майнове  право 2000

//	LNK 27.01.2020 09:39:23
	СписокКодов.Вставить("6087961", Истина);
	СписокКодов.Вставить("6087962", Истина);
	СписокКодов.Вставить("6087963", Истина);
	СписокКодов.Вставить("6087964", Истина);
	СписокКодов.Вставить("6087965", Истина);
	СписокКодов.Вставить("6103326", Истина); 	//	LNK 09.11.2022 05:44:31

//	LNK 12.04.2021 04:27:59
	СписокКодов.Вставить("3900550", Истина);
	СписокКодов.Вставить("3900551", Истина);

	Возврат СписокКодов;

КонецФункции // КодыИсключения()

Функция ПолучитьКлассификаторСоставаПланаОбмена(Узел, СверкаДокументов)	Экспорт

	КлассификаторСостава = Новый Структура("Структура, Классы", Новый Структура, Новый Массив);

//	Этот элемент содержит порядок выборки структур - ПОРЯДОК ДОБАВЛЕНИЯ ВАЖЕН!.
//	Следует поддерживать соответствие имён в классах и структуре.
	КлассификаторСостава.Классы.Добавить("ЗаказПоставщику");
	КлассификаторСостава.Классы.Добавить("ПеремещениеТоваров");
	КлассификаторСостава.Классы.Добавить("КассовыйДень");
	КлассификаторСостава.Классы.Добавить("ЗаказПокупателя");

	Если СверкаДокументов = Истина Тогда

		КлассификаторСостава.Классы.Добавить("КлючевыеАтрибутыДокументов");

	КонецЕсли;

//	В класс "Прочее" загоняем все остальные объекты метаданных, не вошедшие в предыдущие классы
	КлассификаторСостава.Классы.Добавить("Прочее");

	Для каждого ИмяКласса Из КлассификаторСостава.Классы Цикл

	//	Массив будет содержать перечень объектов метаданных, принимающих участие
	//	в обходе выборки изменений каждого классификатора.
		КлассификаторСостава.Структура.Вставить(ИмяКласса, Новый Массив);

	КонецЦикла;

	Для каждого ЭлементСостава Из Узел.Метаданные().Состав Цикл

		Если КлассификаторСостава.Структура.Свойство(ЭлементСостава.Метаданные.Имя) Тогда

			КлассификаторСостава.Структура[ЭлементСостава.Метаданные.Имя].Добавить(ЭлементСостава.Метаданные);

		Иначе

			КлассификаторСостава.Структура.Прочее.Добавить(ЭлементСостава.Метаданные);

		КонецЕсли;

	КонецЦикла;

	Возврат КлассификаторСостава;

КонецФункции

Функция ИменаТаблицNavision(СверкаДокументов = Ложь)	Экспорт

	ИменаТаблиц = Новый Структура(
		"HEAD, LINE"
		, "Exch RR HEAD"
		, "Exch RR LINE"
	);

	Если СверкаДокументов = Истина Тогда

		ИменаТаблиц.HEAD = "Check RR HEAD";
		ИменаТаблиц.LINE = "Check RR LINE";

	КонецЕсли;

	Возврат ИменаТаблиц;

КонецФункции

#КонецОбласти

Функция ПолучитьСоединение(Источник)	Экспорт

	Возврат ВнешниеИсточники.ПолучитьСоединение(Источник);

КонецФункции

Функция ПолучитьПараметрыСоединения(Источник)	Экспорт

	Возврат ВнешниеИсточники.ПолучитьПараметрыСоединения(Источник);

КонецФункции

Функция ПолучитьТекстЗапроса(ИмяОбласти, Источник)	Экспорт

	МакетЗапросов = ПолучитьОбщийМакет("ЗапросыКВнешнимИсточникам");

	ОбластьЗапроса = МакетЗапросов.ПолучитьОбласть(ИмяОбласти);
	ОбластьЗапроса.УдалитьСтроку(1);
	ОбластьЗапроса.УдалитьСтроку(ОбластьЗапроса.КоличествоСтрок());

	ТекстЗапроса = ОбластьЗапроса.ПолучитьТекст();

	Если ТипЗнч(Источник) = Тип("ПеречислениеСсылка.ВнешниеИсточники")  Тогда

		ТекстЗапроса = ВнешниеИсточники.УточнитьТекстЗапроса(ТекстЗапроса, Источник);

	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

Функция ТипыТоварныйОрдер()	Экспорт

	СписокТипов = Новый Соответствие;
	СписокТипов.Вставить(Тип("ДокументСсылка.ПриходныйОрдерНаТовары"), Перечисления.ВидыОперацийКорректировкаПеремещения.ТоварыКПоступлению);
	СписокТипов.Вставить(Тип("ДокументОбъект.ПриходныйОрдерНаТовары"), Перечисления.ВидыОперацийКорректировкаПеремещения.ТоварыКПоступлению);
	СписокТипов.Вставить(Тип("ДокументСсылка.РасходныйОрдерНаТовары"), Перечисления.ВидыОперацийКорректировкаПеремещения.ТоварыКОтгрузке);
	СписокТипов.Вставить(Тип("ДокументОбъект.РасходныйОрдерНаТовары"), Перечисления.ВидыОперацийКорректировкаПеремещения.ТоварыКОтгрузке);

	Возврат СписокТипов;

КонецФункции // ТипыТоварныйОрдер()

//	LNK 27.01.2017 11:04:44
Функция ДанныеМагазинаПоIDN(IDN)	Экспорт

	ДанныеМагазина = Новый Структура(
		"IDN, Магазин, НомерМагазина, ВидыЦен, Получатели, ВведенВЭксплуатацию, ИнтернетМагазин"
		, ""
		, 0
		, Справочники.Магазины.ПустаяСсылка()
		, Новый Массив
		, Новый Массив
		, Ложь
		, Ложь);

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСправочник.IDN,
	|	ТаблицаСправочник.Магазин,
	|	ТаблицаСправочник.Магазин.НомерМагазина КАК НомерМагазина,
	|	ТаблицаСправочник.Магазин.ВведенВЭксплуатацию КАК ВведенВЭксплуатацию,
	|	УчетнаяПолитика.ВидЦенИнтернет КАК ВидЦенИнтернет
	|ПОМЕСТИТЬ Магазины
	|ИЗ
	|	Справочник.Склады КАК ТаблицаСправочник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитика.СрезПоследних(&ТекущаяДата, ) КАК УчетнаяПолитика
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаСправочник.IDN = &IDN
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВидов.IDN КАК IDN,
	|	ТаблицаВидов.Магазин КАК Магазин,
	|	ТаблицаВидов.НомерМагазина КАК НомерМагазина,
	|	ТаблицаВидов.ВведенВЭксплуатацию КАК ВведенВЭксплуатацию,
	|	ТаблицаВидов.ИнтернетМагазин КАК ИнтернетМагазин,
	|	ТаблицаВидов.ВидЦен КАК ВидЦен
	|ИЗ
	|	(ВЫБРАТЬ
	|		Магазины.IDN КАК IDN,
	|		Магазины.Магазин КАК Магазин,
	|		Магазины.НомерМагазина КАК НомерМагазина,
	|		Магазины.ВведенВЭксплуатацию КАК ВведенВЭксплуатацию,
	|		ВЫБОР
	|			КОГДА Магазины.Магазин.ПравилоЦенообразования.ВидЦен = Магазины.ВидЦенИнтернет
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ИнтернетМагазин,
	|		ЕСТЬNULL(Магазины.Магазин.ПравилоЦенообразования.ВидЦен, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) КАК ВидЦен
	|	ИЗ
	|		Магазины КАК Магазины
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		Магазины.IDN,
	|		Магазины.Магазин,
	|		Магазины.НомерМагазина,
	|		Магазины.ВведенВЭксплуатацию,
	|		ВЫБОР
	|			КОГДА ПравилаЦенообразования.ВидЦен = Магазины.ВидЦенИнтернет
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ПравилаЦенообразования.ВидЦен
	|	ИЗ
	|		Магазины КАК Магазины
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПравилаЦенообразования.ЦеновыеГруппы КАК ПравилаЦенообразования
	|			ПО Магазины.Магазин.ПравилоЦенообразования = ПравилаЦенообразования.Ссылка) КАК ТаблицаВидов
	|ГДЕ
	|	НЕ ТаблицаВидов.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|ИТОГИ
	|	МАКСИМУМ(IDN),
	|	МАКСИМУМ(НомерМагазина),
	|	МАКСИМУМ(ВведенВЭксплуатацию),
	|	МАКСИМУМ(ИнтернетМагазин)
	|ПО
	|	Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаУзлы.Ссылка КАК Узел
	|ИЗ
	|	Магазины КАК Магазины
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланОбмена.ПоМагазину.Магазины КАК ТаблицаУзлы
	|		ПО Магазины.Магазин = ТаблицаУзлы.Магазин
	|ГДЕ
	|	НЕ ТаблицаУзлы.Ссылка.ЭтотУзел"
	);
	Запрос.УстановитьПараметр("IDN", IDN);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	Результаты = Запрос.ВыполнитьПакет();

	МагазинВыборка = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если МагазинВыборка.Следующий() Тогда

		ЗаполнитьЗначенияСвойств(ДанныеМагазина, МагазинВыборка);

		ДанныеМагазина.ВидыЦен = Новый Массив;

		ВидыЦенВыборка = МагазинВыборка.Выбрать();

		Пока ВидыЦенВыборка.Следующий() Цикл

			ДанныеМагазина.ВидыЦен.Добавить(ВидыЦенВыборка.ВидЦен);

		КонецЦикла;

		УзлыВыборка = Результаты[2].Выбрать();

		Пока УзлыВыборка.Следующий() Цикл

			ДанныеМагазина.Получатели.Добавить(УзлыВыборка.Узел);

		КонецЦикла;

	КонецЕсли;

	Возврат ДанныеМагазина;

КонецФункции // ДанныеМагазинаПоIDN()

//	LNK 21.03.2017 12:14:40
Функция ДлинаКодаСвойстваНоменклатуры()	Экспорт

	Возврат Метаданные.Справочники.СвойстваНоменклатуры.ДлинаКода;

КонецФункции // ДлинаКодаСвойстваНоменклатуры()

//	LNK 28.03.2017 11:53:33
Функция КодыПрайсЛистаWEB(РежимВозврата = "", ПлюсИсключение = Ложь)	Экспорт

//	Позже нужно будет определить хранилище для данной строки
	СтрокаКодов = "WEB_SPEC, WEB_АНТ" + ?(ПлюсИсключение, ", WEB РРЦ, WEB ЭПИЦ, WEB ОПТ", "");

	Если РежимВозврата = "Массив" Тогда
		
		ЗначениеВозврата = ОбщегоНазначенияКлиентСервер.lx_FillValueList(, СтрокаКодов,, ",",,, Новый ОписаниеТипов("Строка"));

	ИначеЕсли РежимВозврата = "Соответствие" Тогда
	
		ЗначениеВозврата = Новый Соответствие;

		Для каждого Лексема Из ОбщегоНазначенияКлиентСервер.lx_FillValueList(, СтрокаКодов,, ",",,, Новый ОписаниеТипов("Строка")) Цикл

			ЗначениеВозврата.Вставить(Лексема, Истина);

		КонецЦикла;

	ИначеЕсли РежимВозврата = "СтрокаВнешнегоУсловия" Тогда
	
		ЗначениеВозврата = "";

		Для каждого Лексема Из ОбщегоНазначенияКлиентСервер.lx_FillValueList(, СтрокаКодов,, ",",,, Новый ОписаниеТипов("Строка")) Цикл

			ЗначениеВозврата = ЗначениеВозврата + ?(ПустаяСтрока(ЗначениеВозврата), "", ",")
			+ "'" + Лексема + "'";

		КонецЦикла;

	Иначе
		
		ЗначениеВозврата = СтрокаКодов;

	КонецЕсли;

	Возврат ЗначениеВозврата;

КонецФункции // КодыПрайсЛистаWEB()

//	LNK 29.03.2017 14:46:45
Функция ПолучитьУпаковкуПоКоду(Номенклатура, КодУпаковки, ВернутьСтруктуру = Ложь)	Экспорт

	Если ВернутьСтруктуру = Истина Тогда

		ДанныеУпаковки = Новый Структура(
			"Упаковка, Коэффициент"
			, Справочники.УпаковкиНоменклатуры.ПустаяСсылка(), 1);

	Иначе

		ДанныеУпаковки = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();

	КонецЕсли;

	Если НЕ ПустаяСтрока(КодУпаковки) Тогда

		УстановитьПривилегированныйРежим(Истина);

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаСправочник.Ссылка КАК Упаковка,
		|	ТаблицаСправочник.Коэффициент КАК Коэффициент
		|ИЗ
		|	Справочник.УпаковкиНоменклатуры КАК ТаблицаСправочник
		|ГДЕ
		|	ТаблицаСправочник.Наименование = &Упаковка
		|	И ТаблицаСправочник.Владелец = &Номенклатура"
		);
		Запрос.УстановитьПараметр("Упаковка"    , КодУпаковки);
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);

		ВыборкаУпаковки = Запрос.Выполнить().Выбрать();

		Если ВыборкаУпаковки.Следующий() Тогда

			Если ВернутьСтруктуру = Истина Тогда

				ЗаполнитьЗначенияСвойств(ДанныеУпаковки, ВыборкаУпаковки);

			Иначе

				ДанныеУпаковки = ВыборкаУпаковки.Упаковка;

			КонецЕсли;

		Иначе

			Коэффициент = СтроковыеФункцииКлиентСервер.ПолучитьЧислоИзСтроки(КодУпаковки);

			Если НЕ Коэффициент = 0 Тогда

				Упаковка = Справочники.УпаковкиНоменклатуры.СоздатьЭлемент();
				Упаковка.Владелец     = Номенклатура;
				Упаковка.Наименование = КодУпаковки;
				//Упаковка.Вес          = Вес;
				//Упаковка.Объем        = Объем;
				Упаковка.ЕдиницаИзмерения = ОбщегоНазначенияПовтИсп.ЕдиницаУпаковка();
				Упаковка.Коэффициент      = Коэффициент;

				Упаковка.ОбменДанными.Загрузка = Истина;
				Упаковка.Записать();

				Если ВернутьСтруктуру = Истина Тогда

					ЗаполнитьЗначенияСвойств(ДанныеУпаковки, Упаковка);

				Иначе

					ДанныеУпаковки = Упаковка.Ссылка;

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	Возврат ДанныеУпаковки;

КонецФункции // ПолучитьЕдиницуИзмерения()

//	LNK 31.03.2017 12:50:05
Функция ПолучитьВидЦенИнтернет(Период = '00010101')	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	УчетнаяПолитика.ВидЦенИнтернет КАК ВидЦенИнтернет
	|ИЗ
	|	РегистрСведений.УчетнаяПолитика.СрезПоследних(&Период, ) КАК УчетнаяПолитика"
	);
	Запрос.УстановитьПараметр("Период", ?(Период = '00010101', ТекущаяДатаСеанса(), Период));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда

			ВидЦенИнтернет = Выборка.ВидЦенИнтернет;

	Иначе	ВидЦенИнтернет = Справочники.ВидыЦен.ПустаяСсылка();

	КонецЕсли;

	Возврат ВидЦенИнтернет;

КонецФункции // ПолучитьВидЦенИнтернет()

//	Определяет по "РегистрыСведений.СоответствиеПрайсовСкладамNavision" влияние прайсов на указанный склад. 
Функция ПрайсыВлияютНаВидЦены(КодПроекта, Склад, КодыПрайсовЗаданий)	Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаРегистра.IDN
	|ИЗ
	|	РегистрСведений.СоответствиеПрайсовСкладамNavision КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.КодПрайсЛиста В(&СписокПрайсов)
	|	И ТаблицаРегистра.КодПроекта В(&КодыПроектов)
	|	И ТаблицаРегистра.Склад = &Склад"
	);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("КодыПроектов" , ОбщегоНазначенияКлиентСервер.AAD(КодПроекта, ""));	//	добавим пустой проект
	Запрос.УстановитьПараметр("СписокПрайсов", ОбщегоНазначенияКлиентСервер.lx_FillValueList(, КодыПрайсовЗаданий,, ","));

	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции

//	LNK 14.06.2017 09:00:07
Функция ТипыСверкиNavision()	Экспорт

	ТипыОбъектов = Новый Соответствие;

	Для каждого ТипЗначения Из Метаданные.РегистрыСведений.СоответствиеДокументовNavision.Измерения.Объект.Тип.Типы() Цикл

		ТипыОбъектов.Вставить(ТипЗначения, Метаданные.НайтиПоТипу(ТипЗначения));

	КонецЦикла;

	Возврат ТипыОбъектов;

КонецФункции

//	LNK 16.06.2017 10:34:24
Функция ВидыДокументовСверкиNavision()	Экспорт

	ВидыДокументов = Новый Соответствие;

	ВидыДокументов.Вставить("Документ.ПеремещениеТоваров", "ПЕРЕМЕЩ");
	ВидыДокументов.Вставить("Документ.КорректировкаПеремещения", "ПЕРЕМЕЩ");
	ВидыДокументов.Вставить("Документ.ЗаказПоставщику", "ПОКУПКА");
	ВидыДокументов.Вставить("Документ.ЗаказПоставщику.Возврат", "ВЗВР.ПОКУП");
	ВидыДокументов.Вставить("Документ.ПриказНаПроведениеИнвентаризацииТоваров", "ИНВЕНТ");
	ВидыДокументов.Вставить("Документ.СписаниеТоваров", "СПИСАНИЕ");
	ВидыДокументов.Вставить("Документ.ОприходованиеТоваров", "ПРИХОД");
	ВидыДокументов.Вставить("Документ.ПересортицаТоваров", "ПЕРЕСОРТ");

	Возврат ВидыДокументов;

КонецФункции

//	LNK 20.06.2017 12:34:06
Функция СписокУзловNavision(СверкаДокументов = Ложь)	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаУзлы.Ссылка КАК Узел
	|ИЗ
	|	ПланОбмена.ОбменNavisionРозница КАК ТаблицаУзлы
	|ГДЕ
	|	НЕ(ТаблицаУзлы.ЭтотУзел
	|				ИЛИ ТаблицаУзлы.ПометкаУдаления)
	|	И ТаблицаУзлы.СверкаДокументов = &СверкаДокументов"
	);
	Запрос.УстановитьПараметр("СверкаДокументов", СверкаДокументов = Истина);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Узел");

КонецФункции

//	LNK 06.11.2017 10:18:13
Функция ПриПроведенииОтправлятьВNavision(Магазин, ДатаСреза = '00010101')	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ПолитикаМагазина.ПриПроведенииОтправлятьВNavision, Ведущая.ПриПроведенииОтправлятьВNavision) КАК ПриПроведенииОтправлятьВNavision,
	|	ВЫБОР
	|		КОГДА ПолитикаМагазина.Магазин = &Магазин
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КлючПорядка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЛОЖЬ КАК ПриПроведенииОтправлятьВNavision) КАК Ведущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаМагазинов.СрезПоследних(
	|				&ДатаСреза,
	|				Магазин = &Магазин
	|					ИЛИ Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)) КАК ПолитикаМагазина
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка УБЫВ"
	);
	Запрос.УстановитьПараметр("Магазин"  , Магазин);
	Запрос.УстановитьПараметр("ДатаСреза", ?(ДатаСреза = '00010101', ТекущаяДатаСеанса(), ДатаСреза));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Возврат Выборка.ПриПроведенииОтправлятьВNavision;

КонецФункции // ПриПроведенииОтправлятьВNavision()

//	LNK 02.04.2018 13:43:23
Функция ИспользоватьWEBПередачуОбъектовВЦБ(Магазин, ДатаСреза = '00010101')	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ПолитикаМагазина.ИспользоватьWEBПередачуОбъектовВЦБ, Ведущая.ИспользоватьWEBПередачуОбъектовВЦБ) КАК ИспользоватьWEBПередачуОбъектовВЦБ,
	|	ВЫБОР
	|		КОГДА ПолитикаМагазина.Магазин = &Магазин
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КлючПорядка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЛОЖЬ КАК ИспользоватьWEBПередачуОбъектовВЦБ) КАК Ведущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаМагазинов.СрезПоследних(
	|				&ДатаСреза,
	|				Магазин = &Магазин
	|					ИЛИ Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)) КАК ПолитикаМагазина
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка УБЫВ"
	);
	Запрос.УстановитьПараметр("Магазин"  , Магазин);
	Запрос.УстановитьПараметр("ДатаСреза", ?(ДатаСреза = '00010101', ТекущаяДатаСеанса(), ДатаСреза));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Возврат Выборка.ИспользоватьWEBПередачуОбъектовВЦБ;

КонецФункции

//	LNK 02.04.2018 13:45:04
Функция ИспользоватьWEBЗагрузкуЗаказовПокупателей(Магазин, ДатаСреза = '00010101')	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ПолитикаМагазина.ИспользоватьWEBЗагрузкуЗаказовПокупателей, Ведущая.ИспользоватьWEBЗагрузкуЗаказовПокупателей) КАК ИспользоватьWEBЗагрузкуЗаказовПокупателей,
	|	ВЫБОР
	|		КОГДА ПолитикаМагазина.Магазин = &Магазин
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КлючПорядка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЛОЖЬ КАК ИспользоватьWEBЗагрузкуЗаказовПокупателей) КАК Ведущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаМагазинов.СрезПоследних(
	|				&ДатаСреза,
	|				Магазин = &Магазин
	|					ИЛИ Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)) КАК ПолитикаМагазина
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка УБЫВ"
	);
	Запрос.УстановитьПараметр("Магазин"  , Магазин);
	Запрос.УстановитьПараметр("ДатаСреза", ?(ДатаСреза = '00010101', ТекущаяДатаСеанса(), ДатаСреза));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Возврат Выборка.ИспользоватьWEBЗагрузкуЗаказовПокупателей;

КонецФункции // ИспользоватьWEBЗагрузкуЗаказовПокупателей()

//	LNK 04.07.2018 12:22:33
Функция ОбъектУчтенNavisionСодержитТип(ПолноеИмя)	Экспорт

	СодержитТипЗначения = Ложь;

	Попытка

		ТипЗначения = Тип(СтрЗаменить(ПолноеИмя, ".", "Ссылка."));

		СодержитТипЗначения = Метаданные.РегистрыСведений.ОбъектУчтенВNavision.Измерения.Объект.Тип.СодержитТип(ТипЗначения);

	Исключение

		ТекстОшибки = "[" + ПолноеИмя + "]" + Символы.ПС + ОписаниеОшибки();
		ЗаписьЖурналаРегистрации("ОбъектУчтенNavision.Тип", УровеньЖурналаРегистрации.Предупреждение
		, Метаданные.РегистрыСведений.ОбъектУчтенВNavision,, ТекстОшибки, РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);

	КонецПопытки;

	Возврат СодержитТипЗначения;

КонецФункции // ОбъектУчтенNavisionСодержитТип()


 //	LNK 02.04.2018 13:45:04
Функция ИспользоватьЦеныCompetera(Магазин, ДатаСреза = '00010101')	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ПолитикаМагазина.ИспользоватьЦеныCompetera, Ведущая.ИспользоватьЦеныCompetera) КАК ИспользоватьЦеныCompetera,
	|	ВЫБОР
	|		КОГДА ПолитикаМагазина.Магазин = &Магазин
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КлючПорядка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЛОЖЬ КАК ИспользоватьЦеныCompetera) КАК Ведущая
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаМагазинов.СрезПоследних(
	|				&ДатаСреза,
	|				Магазин = &Магазин
	|					ИЛИ Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)) КАК ПолитикаМагазина
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючПорядка УБЫВ"
	);
	Запрос.УстановитьПараметр("Магазин"  , Магазин);
	Запрос.УстановитьПараметр("ДатаСреза", ?(ДатаСреза = '00010101', ТекущаяДатаСеанса(), ДатаСреза));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Возврат Выборка.ИспользоватьЦеныCompetera;

КонецФункции







////////////////////////////////////////////////////////////////////////////////
// Подсистема "Пользователи".
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Отключает стандартный способ установки ролей пользователям ИБ.
// Если возвращает Истина, изменение ролей блокируется (в том числе для администратора).
//
// Возвращаемое значение:
//  Булево.
//
Функция ЗапретРедактированияРолей() Экспорт
	
	// СтандартныеПодсистемы.УправлениеДоступом
	
	// Роли устанавливаются автоматически по данным групп доступа
	// через связь: ПользователиГруппыДоступа -> Профиль -> РолиПрофиля
	Возврат Истина;
	
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	Возврат Ложь;
	
КонецФункции

// Переопределяет роль, предоставляющую права администрирования системы.
//
// Параметры:
//  Роль         - ОбъектМетаданных: Роль.
//
Процедура ИзменитьРольАдминистратораСистемы(Роль) Экспорт
	
	Роль = Метаданные.Роли.ПолныеПрава;
	
КонецПроцедуры

// Переопределяет стандартный способ установки ролей пользователям ИБ.
//
// Параметры:
//  Запрет - Булево. Если установить Истина, изменение ролей
//           блокируется (в том числе для администратора).
//
Процедура ИзменитьЗапретРедактированияРолей(Запрет) Экспорт
	
	
	
КонецПроцедуры

// Переопределяет поведение форм пользователя, внешнего пользователя,
// группы внешних пользователей.
//
// Параметры:
//  Ссылка - СправочникСсылка.Пользователи,
//           СправочникСсылка.ВнешниеПользователи,
//           СправочникСсылка.ГруппыВнешнихПользователей
//           ссылка на пользователя, внешнего пользователя или группу внешних пользователей
//           при создании формы.
//
//  ДействияВФорме - Структура (со свойствами типа Строка):
//           Роли                   = "", "Просмотр",     "Редактирование"
//           КонтактнаяИнформация   = "", "Просмотр",     "Редактирование"
//           СвойстваПользователяИБ = "", "ПросмотрВсех", "РедактированиеВсех", РедактированиеСвоих"
//           СвойстваЭлемента       = "", "Просмотр",     "Редактирование"
//           
//           Для групп внешних пользователей КонтактнаяИнформация и СвойстваПользователяИБ не существуют.
//
Процедура ИзменитьДействияВФорме(Знач Ссылка = Неопределено, Знач ДействияВФорме) Экспорт
	
	
	
КонецПроцедуры

// Доопределяет действия при записи пользователя информационной базы.
//  Вызывается из процедуры ЗаписатьПользователяИБ(), если пользователь был действительно изменен.
//
// Параметры:
//  СтарыеСвойства - Структура, см. параметры возвращаемые функцией Пользователи.ПрочитатьПользователяИБ()
//  НовыеСвойства  - Структура, см. параметры возвращаемые функцией Пользователи.ЗаписатьПользователяИБ()
//
Процедура ПриЗаписиПользователяИнформационнойБазы(Знач СтарыеСвойства, Знач НовыеСвойства) Экспорт
	
	
	
КонецПроцедуры

// Доопределяет действия после удаления пользователя информационной базы.
//  Вызывается из процедуры УдалитьПользователяИБ(), если пользователь был удален.
//
// Параметры:
//  СтарыеСвойства - Структура, см. параметры возвращаемые функцией Пользователи.ПрочитатьПользователяИБ()
//
Процедура ПослеУдаленияПользователяИнформационнойБазы(Знач СтарыеСвойства) Экспорт
	
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Обработчики записи первого администратора

// Переопределяет текст вопроса перед записью первого администратора.
//  Вызывается из обработчика ПередЗаписью формы пользователя.
//  Вызов выполняется если установлен ЗапретРедактированияРолей() и
// количество пользователей информационной базы равно нулю.
// 
Процедура ТекстВопросаПередЗаписьюПервогоАдминистратора(ТекстВопроса) Экспорт
	
	// СтандартныеПодсистемы.УправлениеДоступом
	ТекстВопроса = НСтр("ru = 'В список пользователей программы добавляется первый пользователь, 
		|поэтому он будет автоматически включен в группу доступа Администраторы. 
		|Продолжить?'")
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

// Доопределяет действия при записи администратора.
//  Вызывается при записи администратора в процедуре авторизации,
// обычно при записи первого администратора, но также и при связывании
// пользователя ИБ с элементом справочника пользователи.
// 
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи (изменение объекта запрещено).
//
Процедура ПриЗаписиПервогоАдминистратора(Пользователь) Экспорт
	
	// СтандартныеПодсистемы.УправлениеДоступом
	
	// Первый администратор автоматически добавляется в группу доступа Администраторы
	Объект = Справочники.ГруппыДоступа.Администраторы.ПолучитьОбъект();
	Если Объект.Пользователи.Найти(Пользователь, "Пользователь") = Неопределено Тогда
		Объект.Пользователи.Добавить().Пользователь = Пользователь;
		Объект.ОбменДанными.Загрузка = Истина;
		Объект.Записать();
	КонецЕсли;
	
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

// Переопределяет текст комментария при авторизации пользователя ИБ,
// созданного в конфигураторе с административными правами.
//  Вызывается из Пользователи.АвторизоватьТекущегоПользователя().
//  Комментарий записывается в журнал регистрации.
// 
// Параметры:
//  Комментарий  - Строка - начальное значение задано.
//
Процедура ПослеЗаписиАдминистратораПриАвторизации(Комментарий) Экспорт
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Комментарий = НСтр("ru = 'Обнаружено, что пользователь информационной базы
	                         |с ролью ""Полные права"" был создан в Конфигураторе:
	                         |
	                         |- пользователь не найден в справочнике Пользователи,
	                         |- пользователь зарегистрирован в справочнике Пользователи,
	                         |- пользователь добавлен в группу доступа Администраторы.
	                         |
	                         |Пользователей информационной базы следует создавать в режиме 1С:Предприятия.'");
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Работа в модели сервиса

// Устанавливает пользователю права по умолчанию.
// Вызывается при работе в модели сервиса, в случае обновления в менеджере
// сервиса прав пользователя без прав администрирования.
//
// Параметры:
//  Пользователь - СправочникСсылка.Пользователи - пользователь, которому
//   требуется установить права по умолчанию
//
Процедура УстановитьПраваПоУмолчанию(Пользователь) Экспорт
	
	
	
КонецПроцедуры

// Переопределяет настройки интерфейса, устанавливаемые для новых пользователей
//
// Параметры:
//  НастройкиКлиента - НастройкиКлиентскогоПриложения,
//  НастройкиИнтерфейса - НастройкиКомандногоИнтерфейса.
//
Процедура ПриУстановкеНачальныхНастроек(НастройкиКлиента, НастройкиИнтерфейса) Экспорт
	
	
	
КонецПроцедуры


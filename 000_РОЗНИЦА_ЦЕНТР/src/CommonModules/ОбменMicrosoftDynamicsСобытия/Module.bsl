#Область РегистрацияИзмененийОбъектов

//	LNK 24.01.2019 14:14:19
Функция MicrosoftDynamicsОбщиеДействияПередРегистрацией(Источник)

	Если Источник.ДополнительныеСвойства.Свойство("ОтключитьМеханизмРегистрацииMicrosoftDynamics") Тогда

			НужнаРегистрация = НЕ Источник.ДополнительныеСвойства.ОтключитьМеханизмРегистрацииMicrosoftDynamics = Истина;

	Иначе	НужнаРегистрация = Истина;

	КонецЕсли;
	
	Если НужнаРегистрация Тогда

		НужнаРегистрация = ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() И ОбменMicrosoftDynamicsПовтИсп.ОбменАктивен(ОбменMicrosoftDynamicsПовтИсп.ОпределитьТипРегистрации(Источник.Метаданные().ПолноеИмя()));

		Если НужнаРегистрация И НЕ ПривилегированныйРежим() Тогда

			УстановитьПривилегированныйРежим(Истина);

		КонецЕсли;

	КонецЕсли;

	Возврат НужнаРегистрация;

КонецФункции

//	LNK 24.01.2019 14:10:57
Процедура MicrosoftDynamicsЗарегистрироватьИзменение(Источник, Отказ) Экспорт
		
	Если НЕ MicrosoftDynamicsОбщиеДействияПередРегистрацией(Источник) Тогда

		Возврат;

	КонецЕсли;

	Регистрировать = Ложь;
	ТипЗначения    = ТипЗнч(Источник);

	ТипыТолькоЭлементы = Новый Соответствие;
	ТипыТолькоЭлементы.Вставить(Тип("СправочникОбъект.Контрагенты"), 1);
	ТипыТолькоЭлементы.Вставить(Тип("СправочникОбъект.ИнформационныеКарты"), 1);
	ТипыТолькоЭлементы.Вставить(Тип("СправочникОбъект.Магазины"), 2);
	ТипыТолькоЭлементы.Вставить(Тип("СправочникОбъект.Склады"), 2);

	Если НЕ ТипыТолькоЭлементы.Получить(ТипЗначения) = Неопределено Тогда

		Если НЕ Источник.ЭтоГруппа Тогда

			Если ТипЗначения = Тип("СправочникОбъект.Контрагенты") Тогда

				Регистрировать = Источник.Покупатель;

			ИначеЕсли ТипЗначения = Тип("СправочникОбъект.ИнформационныеКарты") Тогда

				Регистрировать = РегистрироватьИнформационнуюКарту(Источник);

			ИначеЕсли ТипыТолькоЭлементы.Получить(ТипЗначения) = 2 Тогда

				ЯвляетсяСкладом = (ТипЗначения = Тип("СправочникОбъект.Склады"));

				Если ЯвляетсяСкладом Тогда

						РеквизитыИсточника = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Магазин, "НомерМагазина, СкладУправляющейСистемы");

				Иначе	РеквизитыИсточника = Новый Структура("НомерМагазина, СкладУправляющейСистемы", 0, Ложь);

				КонецЕсли;

				Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	ТаблицаСсылки.Магазин КАК Магазин,
				|	ВЫБОР
				|		КОГДА ТаблицаСсылки.Магазин ЕСТЬ NULL
				|			ТОГДА ВЫБОР
				|					КОГДА ТаблицаОбъекта.СкладУправляющейСистемы = ЛОЖЬ
				|							И НЕ ТаблицаОбъекта.СкладПродажи.IDN = """"
				|							И НЕ ТаблицаОбъекта.НомерМагазина = 0
				|						ТОГДА ИСТИНА
				|					ИНАЧЕ ЛОЖЬ
				|				КОНЕЦ
				|		КОГДА (ТаблицаСсылки.Магазин.СкладУправляющейСистемы = ЛОЖЬ
				|				ИЛИ ТаблицаОбъекта.СкладУправляющейСистемы = ЛОЖЬ)
				|				И (НЕ ТаблицаСсылки.Магазин.СкладПродажи.IDN = """"
				|					ИЛИ НЕ ТаблицаОбъекта.СкладПродажи.IDN = """")
				|				И (НЕ ТаблицаСсылки.Магазин.НомерМагазина = 0
				|					ИЛИ НЕ ТаблицаОбъекта.НомерМагазина = 0)
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК Регистрировать
				|ИЗ
				|	(ВЫБРАТЬ
				|		ВЫРАЗИТЬ(&СкладПродажи КАК Справочник.Склады) КАК СкладПродажи,
				|		&НомерМагазина КАК НомерМагазина,
				|		&СкладУправляющейСистемы КАК СкладУправляющейСистемы) КАК ТаблицаОбъекта
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			ТаблицаСправочник.Ссылка КАК Магазин
				|		ИЗ
				|			Справочник.Магазины КАК ТаблицаСправочник
				|		ГДЕ
				|			&ЯвляетсяСкладом = ЛОЖЬ
				|			И ТаблицаСправочник.Ссылка = &ТекущаяСсылка
				|		
				|		ОБЪЕДИНИТЬ
				|		
				|		ВЫБРАТЬ
				|			ТаблицаСправочник.Магазин
				|		ИЗ
				|			Справочник.Склады КАК ТаблицаСправочник
				|		ГДЕ
				|			&ЯвляетсяСкладом = ИСТИНА
				|			И ТаблицаСправочник.Ссылка = &ТекущаяСсылка) КАК ТаблицаСсылки
				|		ПО (ИСТИНА)"
				);
				Запрос.УстановитьПараметр("ЯвляетсяСкладом", ЯвляетсяСкладом);
				Запрос.УстановитьПараметр("ТекущаяСсылка"  , ?(ЯвляетсяСкладом, Источник.Магазин, Источник.Ссылка));
				Запрос.УстановитьПараметр("СкладПродажи"   , ?(ЯвляетсяСкладом, Источник.Ссылка, Источник.СкладПродажи));
				Запрос.УстановитьПараметр("НомерМагазина"  , ?(ЯвляетсяСкладом, РеквизитыИсточника.НомерМагазина, Источник.НомерМагазина));
				Запрос.УстановитьПараметр("СкладУправляющейСистемы", ?(ЯвляетсяСкладом, РеквизитыИсточника.СкладУправляющейСистемы, Источник.СкладУправляющейСистемы));

				РезультатЗапроса = Запрос.Выполнить();

				Если НЕ РезультатЗапроса.Пустой() Тогда

					Выборка = РезультатЗапроса.Выбрать();
					Выборка.Следующий();

					Регистрировать = (Выборка.Регистрировать = Истина);

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	ИначеЕсли ТипЗначения = Тип("СправочникОбъект.Номенклатура") Тогда

		Если НЕ ПустаяСтрока(Источник.IDN) Тогда

			Регистрировать = Истина;

		КонецЕсли;

	ИначеЕсли ТипЗначения = Тип("СправочникОбъект.ИменаЛюдей") Тогда

		Регистрировать = Истина;

	КонецЕсли;

	Если Регистрировать Тогда

		Для каждого Узел Из ОбменMicrosoftDynamicsПовтИсп.ПолучитьМассивУзлов(ОбменMicrosoftDynamicsПовтИсп.ОпределитьТипРегистрации(Источник.Метаданные().ПолноеИмя())) Цикл

			Источник.ОбменДанными.Получатели.Добавить(Узел);

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

//	LNK 25.01.2019 07:03:31
Процедура MicrosoftDynamicsЗарегистрироватьИзменениеДокументаПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Возврат;	//	LNK 11.04.2020 06:12:05 - отключаем. Только ПриЗаписи

	Если НЕ MicrosoftDynamicsОбщиеДействияПередРегистрацией(Источник) Тогда

		Возврат;

	КонецЕсли;

	Регистрировать = Ложь;
	ТипЗначения = ТипЗнч(Источник);

	УчетнаяПолитика = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику();

	Если ТипЗначения = Тип("ДокументОбъект.ЧекККМ") Тогда

		Если ИсточникПроводился(Источник, РежимЗаписи)
		И НЕ ПустаяСтрока(Источник.Номер)
		И  (Источник.СтатусЧекаККМ = Перечисления.СтатусыЧековККМ.Пробитый
		ИЛИ Источник.СтатусЧекаККМ = Перечисления.СтатусыЧековККМ.Архивный
		ИЛИ Источник.ДополнительныеСвойства.СтатусЧекаККМ = Перечисления.СтатусыЧековККМ.Пробитый
		ИЛИ Источник.ДополнительныеСвойства.СтатусЧекаККМ = Перечисления.СтатусыЧековККМ.Архивный)	Тогда

		//	CRM говорит, что чеки по web-заказам будут грузиться непосредственно из Magento..??
		//	Регистрировать = НЕ ЗначениеЗаполнено(Источник.ЗаказПокупателя);

			Если УчетнаяПолитика.ПродажиДляCRMпослеЗакрытияСмены = Истина Тогда

				Регистрировать = НЕ Источник.ОтчетОРозничныхПродажах.Пустая();

			Иначе

				Регистрировать = Истина;	//	LNK 06.02.2020 12:28:27

			КонецЕсли;

			Если Регистрировать = Истина И (НЕ Источник.Проведен ИЛИ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения) И НЕ РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда

				ЖурналСобытий.Регистрация(ОбменMicrosoftDynamicsПовтИсп.ИмяСобытияЖурнала() + ".ПРОВЕДЕН"
				, УровеньЖурналаРегистрации.Предупреждение
				, Источник.Метаданные()
				, Источник.Ссылка
				,
				, "НЕПРОВЕДЕННЫЙ ДОКУМЕНТ: ЗАРЕГИСТРИРОВАН"
				, СокрЛП(Источник.Ссылка)
				, Ложь);

			КонецЕсли;

		КонецЕсли;

	ИначеЕсли ТипЗначения = Тип("ДокументОбъект.ВыдачаДисконтныхКарт") ИЛИ ТипЗначения = Тип("ДокументОбъект.ЗаменаДисконтныхКарт") Тогда

		Регистрировать = ИсточникПроводился(Источник, РежимЗаписи);

	ИначеЕсли ТипЗначения = Тип("ДокументОбъект.РеализацияТоваров") ИЛИ ТипЗначения = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда

		Регистрировать = РегистрироватьРеализацияТоваров(Источник, РежимЗаписи);

	КонецЕсли;

	Если Регистрировать Тогда

		Для каждого Узел Из ОбменMicrosoftDynamicsПовтИсп.ПолучитьМассивУзлов(ОбменMicrosoftDynamicsПовтИсп.ОпределитьТипРегистрации(Источник.Метаданные().ПолноеИмя())) Цикл

			Источник.ОбменДанными.Получатели.Добавить(Узел);

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

//	LNK 11.04.2020 06:15:46
Процедура MicrosoftDynamicsЗарегистрироватьИзменениеДокументаПриЗаписи(Источник, Отказ) Экспорт
		
	Если НЕ MicrosoftDynamicsОбщиеДействияПередРегистрацией(Источник) Тогда

		Возврат;

	КонецЕсли;

	Регистрировать = Ложь;
	ТипЗначения = ТипЗнч(Источник);

	УчетнаяПолитика = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику();

	Если ТипЗначения = Тип("ДокументОбъект.ЧекККМ") Тогда

		Регистрировать = Источник.Проведен И НЕ ПустаяСтрока(Источник.Номер);

		Если УчетнаяПолитика.ПродажиДляCRMпослеЗакрытияСмены = Истина Тогда

			Регистрировать = Регистрировать
						И НЕ Источник.ОтчетОРозничныхПродажах.Пустая()
						И Источник.СтатусЧекаККМ = Перечисления.СтатусыЧековККМ.Архивный;

		Иначе

			Регистрировать = Регистрировать
					И  (Источник.СтатусЧекаККМ = Перечисления.СтатусыЧековККМ.Пробитый
					ИЛИ Источник.СтатусЧекаККМ = Перечисления.СтатусыЧековККМ.Архивный);

		КонецЕсли;

	ИначеЕсли ТипЗначения = Тип("ДокументОбъект.ВыдачаДисконтныхКарт") ИЛИ ТипЗначения = Тип("ДокументОбъект.ЗаменаДисконтныхКарт") Тогда

		Регистрировать = Источник.Проведен;

	ИначеЕсли ТипЗначения = Тип("ДокументОбъект.РеализацияТоваров") ИЛИ ТипЗначения = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда

		Регистрировать = РегистрироватьРеализацияТоваров(Источник, РежимЗаписиДокумента.Запись);

	КонецЕсли;

	Если Регистрировать Тогда

		Для каждого Узел Из ОбменMicrosoftDynamicsПовтИсп.ПолучитьМассивУзлов(ОбменMicrosoftDynamicsПовтИсп.ОпределитьТипРегистрации(Источник.Метаданные().ПолноеИмя())) Цикл

			Источник.ОбменДанными.Получатели.Добавить(Узел);

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

//	LNK 03.12.2018 12:53:05
Процедура MicrosoftDynamicsЗарегистрироватьИзменениеНабораЗаписей(Источник, Отказ, Замещение) Экспорт

	Если НЕ MicrosoftDynamicsОбщиеДействияПередРегистрацией(Источник) Тогда

		Возврат;

	КонецЕсли;

	Если ТипЗнч(Источник) = Тип("РегистрСведенийНаборЗаписей.СостояниеЗапросаДоступностиТоваров") Тогда

		Для каждого ЗаписьНабора Из Источник Цикл

			Если НЕ ЗаписьНабора.Отправлен Тогда

				ПланыОбмена.ЗарегистрироватьИзменения(ОбменMicrosoftDynamicsПовтИсп.ПолучитьМассивУзлов(ОбменMicrosoftDynamicsПовтИсп.ОпределитьТипРегистрации(Источник.Метаданные().ПолноеИмя())), Источник);
				Прервать;

			КонецЕсли;

		КонецЦикла;

	ИначеЕсли ТипЗнч(Источник) = Тип("РегистрСведенийНаборЗаписей.ОбъектУчтенВNavision") Тогда

	//	Используем для регистрации в CRM некоторых объектов (например Документ.РеализацияТоваров).

		СписокСсылок = Новый Соответствие;	//	мало ли при каком отборе будет записываться регистр.. выловим все ссылки.
		СписокСсылок.Вставить(Источник.Отбор.Объект.Значение);

		Для каждого ЗаписьНабора Из Источник Цикл

			СписокСсылок.Вставить(ЗаписьНабора.Объект);

		КонецЦикла;
		
		Для каждого КлючЗначение Из СписокСсылок Цикл

			Если ТипЗнч(КлючЗначение.Ключ) = Тип("ДокументСсылка.РеализацияТоваров")
			ИЛИ  ТипЗнч(КлючЗначение.Ключ) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда

				Если РегистрироватьРеализацияТоваров(КлючЗначение.Ключ, РежимЗаписиДокумента.Запись) Тогда

					ПланыОбмена.ЗарегистрироватьИзменения(
						ОбменMicrosoftDynamicsПовтИсп.ПолучитьМассивУзлов(
							ОбменMicrosoftDynamicsПовтИсп.ОпределитьТипРегистрации(КлючЗначение.Ключ.Метаданные().ПолноеИмя())), КлючЗначение.Ключ);

				КонецЕсли;

			КонецЕсли;

		КонецЦикла;

	ИначеЕсли ТипЗнч(Источник) = Тип("РегистрСведенийНаборЗаписей.ЦеныНоменклатуры") Тогда

	//	на текущий момент отключим.. в CRM не понимают функции времени в ценах.. и объяснить это им неможливо.

	Иначе

	//	"РегистрСведений.РегистрацияMicrosoftDynamicsНаборЗаписей" записываем всегда (!!) при любом изменении
	//	"родительского" набора, даже не учитывая участия в обмене данными.

		Запрос = Новый Запрос(ПолучитьТекстЗапросаРегистрация(ТипЗнч(Источник)));

		Если НЕ ПустаяСтрока(Запрос.Текст) Тогда

			Запрос.УстановитьПараметр("ТаблицаНабора", Источник.Выгрузить());
			Запрос.УстановитьПараметр("Регистратор"  , Источник.Отбор.Регистратор.Значение);
			ДанныеРегистрации = Запрос.Выполнить().Выбрать();

			НаборЗаписей  = РегистрыСведений.РегистрацияMicrosoftDynamics.СоздатьНаборЗаписей();
			НаборЗаписей.ОбменДанными.Загрузка = Истина;

			Пока ДанныеРегистрации.Следующий() Цикл

				НаборЗаписей.Очистить();

				НаборЗаписей.Отбор.ТипРегистрации.Установить(ДанныеРегистрации.ТипРегистрации);
				НаборЗаписей.Отбор.Измерение_1.Установить(ДанныеРегистрации.Измерение_1);
				НаборЗаписей.Отбор.Измерение_2.Установить(ДанныеРегистрации.Измерение_2);
				НаборЗаписей.Отбор.Измерение_3.Установить(ДанныеРегистрации.Измерение_3);

				ЗаписьНабора = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(ЗаписьНабора, ДанныеРегистрации);
				ЗаписьНабора.ДатаИзменения = ТекущаяДата();

				НаборЗаписей.Записать();

				ПланыОбмена.ЗарегистрироватьИзменения(ОбменMicrosoftDynamicsПовтИсп.ПолучитьМассивУзлов(ДанныеРегистрации.ТипРегистрации), НаборЗаписей);

			КонецЦикла;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

//	LNK 25.02.2019 11:18:02
Процедура MicrosoftDynamicsЗарегистрироватьУдаление(Источник, Отказ) Экспорт
		
	Если НЕ MicrosoftDynamicsОбщиеДействияПередРегистрацией(Источник) Тогда

		Возврат;

	КонецЕсли;

	Регистрировать = Ложь;
	ТипЗначения    = ТипЗнч(Источник);

	Если ТипЗначения = Тип("СправочникОбъект.Контрагенты") Тогда

		Регистрировать = НЕ Источник.ЭтоГруппа И Источник.Покупатель;

	ИначеЕсли ТипЗначения = Тип("СправочникОбъект.ИнформационныеКарты") Тогда

		Регистрировать = РегистрироватьИнформационнуюКарту(Источник);

	ИначеЕсли ТипЗначения = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") ИЛИ ТипЗначения = Тип("ДокументОбъект.РеализацияТоваров") Тогда

		Регистрировать = РегистрироватьРеализацияТоваров(Источник, РежимЗаписиДокумента.Запись);

	КонецЕсли;

	Если Регистрировать Тогда

		Для каждого Узел Из ОбменMicrosoftDynamicsПовтИсп.ПолучитьМассивУзлов(ОбменMicrosoftDynamicsПовтИсп.ОпределитьТипРегистрации(Источник.Метаданные().ПолноеИмя())) Цикл

			Источник.ОбменДанными.Получатели.Добавить(Узел);

		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область РегламентныеЗадания

//	LNK 08.08.2019 13:27:38
Процедура ПроверкаДоступностиMicrosoftDynamics() Экспорт

	Возврат;	//	LNK 02.12.2020 06:32:40

	ОбменMicrosoftDynamicsСервер.ПроверкаДоступностиMicrosoftDynamics(Истина);

КонецПроцедуры

//	LNK 23.08.2019 11:18:51
Процедура ПроверитьОтложенныеДанные(Параметр) Экспорт

	//Перечисления.НазначениеКонтрагентовОтложенных.Magento
	//Перечисления.НазначениеКонтрагентовОтложенных.ПроверкаВCRM
	//Перечисления.НазначениеКонтрагентовОтложенных.ПроверкаВРознице

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	РегистрыСведений.ДанныеКонтрагентовОтложенные.ПроверитьОтложенныхКонтрагентов(Перечисления.НазначениеКонтрагентовОтложенных[Параметр], Истина);

КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедуры

//	LNK 20.08.2019 08:56:06
Функция ИсточникПроводился(Источник, РежимЗаписи)

	Возврат РежимЗаписи = РежимЗаписиДокумента.Проведение ИЛИ РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения ИЛИ Источник.Проведен
		ИЛИ Источник.ДополнительныеСвойства.Свойство("Проведен") И Источник.ДополнительныеСвойства.Проведен = Истина;

КонецФункции

Функция ПолучитьТекстЗапросаРегистрация(ТипИсточника)	//	LNK 03.12.2018 14:03:57

	ТекстЗапроса = "";

	Если ТипИсточника = Тип("РегистрНакопленияНаборЗаписей.ТоварыНаСкладах") Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТаблицаРегистра.Склад КАК Справочник.Склады) КАК Склад,
		|	ТаблицаРегистра.Номенклатура КАК Номенклатура,
		|	ТаблицаРегистра.Характеристика КАК Характеристика,
		|	ТаблицаРегистра.Период КАК Значение
		|ПОМЕСТИТЬ ТекущийНабор
		|ИЗ
		|	&ТаблицаНабора КАК ТаблицаРегистра
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ТипыРегистрацийMicrosoftDynamics.ТоварыНаСкладах) КАК ТипРегистрации,
		|	ТаблицаРегистра.Склад.Магазин КАК Измерение_1,
		|	ТаблицаРегистра.Номенклатура КАК Измерение_2,
		|	ТаблицаРегистра.Характеристика КАК Измерение_3,
		|	ТаблицаРегистра.Период КАК Значение
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах КАК ТаблицаРегистра
		|ГДЕ
		|	ТаблицаРегистра.Регистратор = &Регистратор
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ТипыРегистрацийMicrosoftDynamics.ТоварыНаСкладах),
		|	ТекущийНабор.Склад.Магазин,
		|	ТекущийНабор.Номенклатура,
		|	ТекущийНабор.Характеристика,
		|	ТекущийНабор.Значение
		|ИЗ
		|	ТекущийНабор КАК ТекущийНабор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТекущийНабор"
		;

	ИначеЕсли ТипИсточника = Тип("РегистрСведенийНаборЗаписей.ДействующиеЦеныНоменклатуры") ИЛИ ТипИсточника = Тип("РегистрСведенийНаборЗаписей.ЦеныНоменклатуры") Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаРегистра.ОбъектЦенообразования КАК Магазин,
		|	ТаблицаРегистра.Номенклатура КАК Номенклатура,
		|	ТаблицаРегистра.Характеристика КАК Характеристика,
		|	ТаблицаРегистра.Период КАК Значение
		|ПОМЕСТИТЬ ТекущийНабор
		|ИЗ
		|	&ТаблицаНабора КАК ТаблицаРегистра
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ТаблицаРегистра.ОбъектЦенообразования = УчетнаяПолитика.ИнтернетМагазин
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыРегистрацийMicrosoftDynamics.ЦеныНоменклатуры)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыРегистрацийMicrosoftDynamics.ДействующиеЦены)
		|	КОНЕЦ КАК ТипРегистрации,
		|	ТаблицаРегистра.ОбъектЦенообразования КАК Измерение_1,
		|	ТаблицаРегистра.Номенклатура КАК Измерение_2,
		|	ТаблицаРегистра.Характеристика КАК Измерение_3,
		|	ТаблицаРегистра.Период КАК Значение
		|ИЗ
		|	РегистрСведений.ДействующиеЦеныНоменклатуры КАК ТаблицаРегистра
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитика.СрезПоследних КАК УчетнаяПолитика
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаРегистра.Регистратор = &Регистратор
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ТекущийНабор.Магазин = УчетнаяПолитика.ИнтернетМагазин
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыРегистрацийMicrosoftDynamics.ЦеныНоменклатуры)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыРегистрацийMicrosoftDynamics.ДействующиеЦены)
		|	КОНЕЦ,
		|	ТекущийНабор.Магазин,
		|	ТекущийНабор.Номенклатура,
		|	ТекущийНабор.Характеристика,
		|	ТекущийНабор.Значение
		|ИЗ
		|	ТекущийНабор КАК ТекущийНабор
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитика.СрезПоследних КАК УчетнаяПолитика
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТекущийНабор"
		;

	ИначеЕсли ЛОЖЬ Тогда	//ТипИсточника = Тип("РегистрСведенийНаборЗаписей.ЦеныНоменклатуры") Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Магазины.Ссылка КАК Магазин,
		|	УчетнаяПолитика.ВидЦенИнтернет КАК ВидЦен
		|ПОМЕСТИТЬ Фильтр
		|ИЗ
		|	Справочник.Магазины КАК Магазины
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитика.СрезПоследних КАК УчетнаяПолитика
		|		ПО Магазины.ПравилоЦенообразования.ВидЦен = УчетнаяПолитика.ВидЦенИнтернет
		|ГДЕ
		|	НЕ(Магазины.ПометкаУдаления
		|				ИЛИ Магазины.Блокирован)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаРегистра.ВидЦены КАК ВидЦены,
		|	ТаблицаРегистра.Номенклатура КАК Номенклатура,
		|	ТаблицаРегистра.Характеристика КАК Характеристика,
		|	ТаблицаРегистра.Период КАК Значение
		|ПОМЕСТИТЬ ТекущийНабор
		|ИЗ
		|	&ТаблицаНабора КАК ТаблицаРегистра
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ТипыРегистрацийMicrosoftDynamics.ЦеныНоменклатуры) КАК ТипРегистрации,
		|	Фильтр.Магазин КАК Измерение_1,
		|	ТаблицаРегистра.Номенклатура КАК Измерение_2,
		|	ТаблицаРегистра.Характеристика КАК Измерение_3,
		|	ТаблицаРегистра.Период КАК Значение,
		|	Фильтр.ВидЦен КАК Уточнение
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры КАК ТаблицаРегистра
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Фильтр КАК Фильтр
		|		ПО ТаблицаРегистра.ВидЦены = Фильтр.ВидЦен
		|ГДЕ
		|	ТаблицаРегистра.Регистратор = &Регистратор
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ТипыРегистрацийMicrosoftDynamics.ЦеныНоменклатуры),
		|	Фильтр.Магазин,
		|	ТекущийНабор.Номенклатура,
		|	ТекущийНабор.Характеристика,
		|	ТекущийНабор.Значение,
		|	Фильтр.ВидЦен
		|ИЗ
		|	ТекущийНабор КАК ТекущийНабор
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Фильтр КАК Фильтр
		|		ПО ТекущийНабор.ВидЦены = Фильтр.ВидЦен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Фильтр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТекущийНабор"
		;

	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

//	LNK 07.08.2019 06:59:36
Функция РегистрироватьИнформационнуюКарту(Источник)

	Регистрировать = Ложь;

	Если НЕ Источник.ЭтоГруппа
	И       Источник.ТипКарты = Перечисления.ТипыИнформационныхКарт.Дисконтная
	И НЕ Источник.ВидДисконтнойКарты = Справочники.ВидыДисконтныхКарт.ПредварительныеКартыЛояльности
	И ЗначениеЗаполнено(Источник.ВладелецКарты)	Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаСправочник.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК ТаблицаСправочник
		|ГДЕ
		|	ТаблицаСправочник.Ссылка = &ВладелецКарты
		|	И ТаблицаСправочник.Покупатель"
		);
		Запрос.УстановитьПараметр("ВладелецКарты", Источник.ВладелецКарты);

		ДанныеВладельца = Запрос.Выполнить().Выбрать();

		Если ДанныеВладельца.Следующий() Тогда

			Регистрировать = Истина;

		КонецЕсли;

	КонецЕсли;

	Возврат Регистрировать;

КонецФункции

//	LNK 22.11.2019 06:46:37
Функция РегистрироватьРеализацияТоваров(Источник, РежимЗаписи)

	Регистрировать = Ложь;
	ТипИсточника   = ТипЗнч(Источник);
//	Вызов этой функции может происходить из разных точек.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Если ТипИсточника = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") ИЛИ ТипИсточника = Тип("ДокументСсылка.РеализацияТоваров") Тогда

		Если ТипИсточника = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда

			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаВозврат.Проведен КАК Проведен,
			|	ТаблицаРеализация.Услуги КАК Услуги
			|ИЗ
			|	Документ.ВозвратТоваровОтПокупателя КАК ТаблицаВозврат
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваров КАК ТаблицаРеализация
			|		ПО ТаблицаВозврат.ДокументОснование = ТаблицаРеализация.Ссылка
			|ГДЕ
			|	ТаблицаВозврат.Ссылка = &Ссылка"
			;

		Иначе

			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТаблицаШапка.Услуги КАК Услуги,
			|	ТаблицаШапка.Проведен КАК Проведен
			|ИЗ
			|	Документ.РеализацияТоваров КАК ТаблицаШапка
			|ГДЕ
			|	ТаблицаШапка.Ссылка = &Ссылка"
			;

		КонецЕсли;

		Запрос.Текст = Запрос.Текст + Символы.ПС + ";" + Символы.ПС +
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ТабличнаяЧасть
		|ИЗ
		|	Документ.РеализацияТоваров.Товары КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура
		|ИЗ
		|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка"
		;
		Запрос.УстановитьПараметр("Ссылка", Источник);
		Результаты = Запрос.ВыполнитьПакет();

		Выборка = Результаты[0].Выбрать();

		Если Выборка.Следующий() Тогда

		//	Услуги НЕ отправляем в CRM вообще!
			Регистрировать = НЕ Выборка.Услуги = Истина И Выборка.Проведен = Истина;

		КонецЕсли;

	Иначе	//	передан объект!

	//	Услуги НЕ отправляем в CRM вообще!
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Запрос.УстановитьПараметр("Товары", Источник.Товары);

		Если ТипИсточника = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда

			Регистрировать = Источник.Проведен ИЛИ РежимЗаписи = РежимЗаписиДокумента.Проведение;

			Если Регистрировать Тогда

				Запрос.Текст =
				"ВЫБРАТЬ
				|	ТаблицаРеализация.Услуги КАК Услуги
				|ИЗ
				|	Документ.РеализацияТоваров КАК ТаблицаРеализация
				|ГДЕ
				|	ТаблицаРеализация.Ссылка = &ДокументОснование"
				;
				Запрос.УстановитьПараметр("ДокументОснование", Источник.ДокументОснование);

				Результат = Запрос.Выполнить();
				Запрос.Параметры.Удалить("ДокументОснование");

				Если НЕ Результат.Пустой() Тогда

					Выборка = Результат.Выбрать();
					Выборка.Следующий();

					Регистрировать = (Выборка.Услуги = Ложь);

				Иначе

					Регистрировать = Ложь;

				КонецЕсли;

			КонецЕсли;

		Иначе

			Регистрировать = НЕ Источник.Услуги = Истина И (Источник.Проведен ИЛИ РежимЗаписи = РежимЗаписиДокумента.Проведение);

		КонецЕсли;

		Если Регистрировать Тогда

			Запрос.Текст =
			"ВЫБРАТЬ
			|	Товары.Номенклатура КАК Номенклатура
			|ПОМЕСТИТЬ ТабличнаяЧасть
			|ИЗ
			|	&Товары КАК Товары"
			;

			Запрос.Выполнить();

		КонецЕсли;

	КонецЕсли;

	Если Регистрировать Тогда

		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТаблицаСправочник.Ссылка КАК Номенклатура
		|ИЗ
		|	ТабличнаяЧасть КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
		|		ПО ТабличнаяЧасть.Номенклатура = ТаблицаСправочник.Ссылка
		|			И (ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК Фильтр
		|		ПО (Фильтр.Объект = &Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТабличнаяЧасть"
		;
		Регистрировать = НЕ Запрос.Выполнить().Пустой();

	КонецЕсли;

	Возврат Регистрировать;

КонецФункции

#КонецОбласти













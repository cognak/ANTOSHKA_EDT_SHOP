#Область СлужебныеПроцедурыИФункции

//	\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\//\\/
//	Выполнение регламентных заданий

//	Обработчик регламентного задания "УстановкаПериодаРассчитанныхИтогов".
Процедура УстановкаПериодаРассчитанныхИтоговОбработчикЗадания() Экспорт

	УстановитьПериодРассчитанныхИтогов();

КонецПроцедуры

//	Для внутреннего использования.
Процедура УстановитьПериодРассчитанныхИтогов() Экспорт
	
	ДатаСеанса = ТекущаяДатаСеанса();
	РегистрНакопленияПериод = КонецМесяца(ДобавитьМесяц(ДатаСеанса, -1)); // Конец прошлого месяца.

//	Расчет итогов для регистров накопления.
	ВидОстатки = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки;

	Для Каждого РегистрМетаданные Из Метаданные.РегистрыНакопления Цикл

		Если НЕ РегистрМетаданные.ВидРегистра = ВидОстатки Тогда

			Продолжить;

		КонецЕсли;

		РегистрНакопленияМенеджер = РегистрыНакопления[РегистрМетаданные.Имя];

		Если РегистрНакопленияМенеджер.ПолучитьМаксимальныйПериодРассчитанныхИтогов() >= РегистрНакопленияПериод Тогда

			Продолжить;

		КонецЕсли;

		РегистрНакопленияМенеджер.УстановитьМаксимальныйПериодРассчитанныхИтогов(РегистрНакопленияПериод);

		Если НЕ РегистрНакопленияМенеджер.ПолучитьИспользованиеТекущихИтогов() Тогда

			Продолжить;

		КонецЕсли;

		РегистрНакопленияМенеджер.ПересчитатьТекущиеИтоги();

	КонецЦикла;

КонецПроцедуры
	
#КонецОбласти

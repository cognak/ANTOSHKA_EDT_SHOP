// Функция формирует запрос по табличной части "Расшифровка платежа".
//
// Параметры:
//	ДокументОбъект - Документ
//
// Возвращаемое значение:
//	Запрос - запрос по табличной части
//
Функция ЗапросПоТабличнойЧастиРасшифровкаПлатежа(ДокументОбъект) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НомерСтроки КАК НомерСтроки,
	|	ДокументРасчетовСКонтрагентом КАК ДокументРасчетовСКонтрагентом
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	&ТаблицаДокумента КАК ТаблицаДокумента
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки                               КАК НомерСтроки,
	|	ТаблицаДокумента.ДокументРасчетовСКонтрагентом.Организация КАК Организация,
	|	ТаблицаДокумента.ДокументРасчетовСКонтрагентом.Магазин     КАК Магазин,
	|	ТаблицаДокумента.ДокументРасчетовСКонтрагентом.Контрагент  КАК Контрагент
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаДокумента.НомерСтроки
	|;
	|");
	
	ТаблицаДокумента = ДокументОбъект.РасшифровкаПлатежа.Выгрузить();
	Запрос.УстановитьПараметр("ТаблицаДокумента", ТаблицаДокумента);
	
	Возврат Запрос;
	
КонецФункции // ЗапросПоТабличнойЧастиРасшифровкаПлатежа()

// Процедура проверяет заполнение табличной части "Расшифровка платежа".
//
// Параметры:
//	ДокументОбъект - Документ
//	СуммаДокумента - Число - Общая сумма документа
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа
//	Отказ - Булево - Признак отказа от продолжения работы
//
Процедура ПроверитьЗаполнениеРасшифровкиПлатежа(
	ДокументОбъект,
	СуммаДокумента,
	ХозяйственнаяОперация,
	Отказ
	) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);

	МассивНепроверяемыхОпераций = Новый Массив;
	МассивНепроверяемыхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу);
	МассивНепроверяемыхОпераций.Добавить(Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк);
	МассивНепроверяемыхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы);
	МассивНепроверяемыхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюОрганизацию);
	МассивНепроверяемыхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ);
	МассивНепроверяемыхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствИзКассыККМ);
	МассивНепроверяемыхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка);
	МассивНепроверяемыхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации);
	МассивНепроверяемыхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыККМ);
	МассивНепроверяемыхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПрочиеДоходы);
	МассивНепроверяемыхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПрочиеРасходы);
	
	Если МассивНепроверяемыхОпераций.Найти(ХозяйственнаяОперация) <> Неопределено Тогда
		Возврат;
	КонецЕсли;

	
	МассивОперацийПроверкиОрганизацииДокументаРасчета = Новый Массив;
	МассивОперацийПроверкиОрганизацииДокументаРасчета.Добавить(Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	МассивОперацийПроверкиОрганизацииДокументаРасчета.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	МассивОперацийПроверкиОрганизацииДокументаРасчета.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента);
	МассивОперацийПроверкиОрганизацииДокументаРасчета.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика);
	
	// Проверим соответствие сумм документа и табличной части.
	Если ДокументОбъект.РасшифровкаПлатежа.Количество() > 0
	   И СуммаДокумента <> ДокументОбъект.РасшифровкаПлатежа.Итог("Сумма")
	Тогда
	    Текст = НСтр("ru = 'Сумма по строкам в табличной части должна равняться сумме документа'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ДокументОбъект,
			"РасшифровкаПлатежа[0].Сумма",
			,
			Отказ
		);
	КонецЕсли;
	
	// Проверим соответствие организации в шапке документа и в табличной части.
	Если МассивОперацийПроверкиОрганизацииДокументаРасчета.Найти(ХозяйственнаяОперация) <> Неопределено Тогда
		
		Запрос = ЗапросПоТабличнойЧастиРасшифровкаПлатежа(ДокументОбъект);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Текст = НСтр("ru = ''");
			Если ЗначениеЗаполнено(Выборка.Организация)
			   И Выборка.Организация <> ДокументОбъект.Организация
			Тогда
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Организация в строке %1 списка ""Расшифровка платежа"" не соответствует организации документа %2'"),
				Выборка.НомерСтроки,
				ДокументОбъект.Организация
				);
			КонецЕсли;
			Если ЗначениеЗаполнено(Выборка.Контрагент)
				И Выборка.Контрагент <> ДокументОбъект.Контрагент
			Тогда
				Текст = Текст + Символы.ПС + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Контрагент в строке %1 списка ""Расшифровка платежа"" не соответствует контрагенту документа %2'"),
				Выборка.НомерСтроки,
				ДокументОбъект.Контрагент
				);
			КонецЕсли;
			Если НЕ ПустаяСтрока(Текст) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДокументОбъект,
				"РасшифровкаПлатежа[" + (Выборка.НомерСтроки - 1) + "].ДокументРасчетовСКонтрагентом",
				,
				Отказ
				);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // ПроверитьЗаполнениеРасшифровкиПлатежа()

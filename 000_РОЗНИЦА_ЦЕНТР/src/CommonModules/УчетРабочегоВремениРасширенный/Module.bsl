Функция БуквенныйКодИмяРеквизита(Месяц) Экспорт 
	
	Возврат  "БуквенныйКод";
	
КонецФункции

Процедура ЗарегистрироватьДанныеИндивидуальногоГрафика(Движения, ДанныеОВремени, ПериодРегистрации = '00010101') Экспорт
	Для Каждого СтрокаДанных Из ДанныеОВремени Цикл
		Запись = Движения.РабочийГрафик.Добавить();
		
		Запись.Период = СтрокаДанных.Дата;
		Запись.Сотрудник = СтрокаДанных.Сотрудник;
		Запись.Организация = СтрокаДанных.Организация;
		Запись.Магазин = СтрокаДанных.Магазин;
		Запись.ПериодРегистрации = ?(ПериодРегистрации = '00010101', НачалоМесяца(Запись.Период), ПериодРегистрации);
		Запись.Часы = СтрокаДанных.Часов;
	КонецЦикла;	
	
	Движения.РабочийГрафик.Записывать = Истина;
КонецПроцедуры

Процедура ЗарегистрироватьДанныеУчетРабочегоВремениПлан(Движения, ДанныеОВремени, ПериодРегистрации = '00010101') Экспорт
	Для Каждого СтрокаДанных Из ДанныеОВремени Цикл
		Запись = Движения.УчетРабочегоВремениПлан.Добавить();
		
		Запись.Период = СтрокаДанных.Период;
		Запись.Сотрудник = СтрокаДанных.Сотрудник;
		Запись.Организация = СтрокаДанных.Организация;
		Запись.Магазин = СтрокаДанных.Магазин;
		Запись.ТипВремени = СтрокаДанных.ТипВремени;
	КонецЦикла;	
	
	Движения.УчетРабочегоВремениПлан.Записывать = Истина;
КонецПроцедуры

Процедура ЗарегистрироватьДанныеТабеля(Движения, ДанныеОВремени) Экспорт
	Для Каждого СтрокаДанных Из ДанныеОВремени Цикл
		Запись = Движения.УчетРабочегоВремени.Добавить();
		
		Запись.Период = СтрокаДанных.Дата;
		Запись.Сотрудник = СтрокаДанных.Сотрудник;
		Запись.Организация = СтрокаДанных.Организация;
		Запись.Магазин = СтрокаДанных.Магазин;
		Запись.ПериодРегистрации = СтрокаДанных.ПериодРегистрации;
		Запись.КоличествоЧасовПлан = СтрокаДанных.КоличествоЧасовПлан;
		Запись.КоличествоЧасовФактАвто = СтрокаДанных.КоличествоЧасовФактАвто;
		Запись.КоличествоЧасовФакт = СтрокаДанных.КоличествоЧасовФакт;
		Запись.Комментарий = СтрокаДанных.Комментарий;
	КонецЦикла;	
	
	Движения.УчетРабочегоВремени.Записывать = Истина;
КонецПроцедуры


Процедура УчетРабочегоВремени() Экспорт
	
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос2 = Новый Запрос;
	Запрос2.Текст = 
		"ВЫБРАТЬ
		|	УчетРабочегоВремениФакт.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрСведений.УчетРабочегоВремениФакт КАК УчетРабочегоВремениФакт
		|ГДЕ
		|	УчетРабочегоВремениФакт.Период МЕЖДУ &ПериодС И &ПериодПо
		|
		|СГРУППИРОВАТЬ ПО
		|	УчетРабочегоВремениФакт.Сотрудник";
	
	Запрос2.УстановитьПараметр("ПериодПо", КонецДня(ТекущаяДата()));
	Запрос2.УстановитьПараметр("ПериодС", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса2 = Запрос2.Выполнить();
	
	ВыборкаДетальныеЗаписи2 = РезультатЗапроса2.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи2.Следующий() Цикл
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	УчетРабочегоВремениФакт.ТипВремени КАК ТипВремени,
			|	УчетРабочегоВремениФакт.Период КАК Период,
			|	УчетРабочегоВремениФакт.Магазин КАК Магазин,
			|	УчетРабочегоВремениФакт.Организация КАК Организация
			|ИЗ
			|	РегистрСведений.УчетРабочегоВремениФакт КАК УчетРабочегоВремениФакт
			|ГДЕ
			|	УчетРабочегоВремениФакт.Сотрудник = &Сотрудник
			|	И УчетРабочегоВремениФакт.Период МЕЖДУ &ПериодС И &ПериодПо
			|
			|УПОРЯДОЧИТЬ ПО
			|	Период УБЫВ";
		
		Запрос.УстановитьПараметр("ПериодПо", КонецДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("ПериодС", НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("Сотрудник", ВыборкаДетальныеЗаписи2.Сотрудник);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если  ВыборкаДетальныеЗаписи.ТипВремени = Перечисления.ТипВремени.Приход тогда
			текДАта =ТекущаяДата();	
			Магазин = ВыборкаДетальныеЗаписи.Магазин;
			Организация = ВыборкаДетальныеЗаписи.Организация;
			Сотрудник =ВыборкаДетальныеЗаписи2.Сотрудник;
			
			НаборЗаписей = РегистрыСведений.УчетРабочегоВремениФакт.СоздатьНаборЗаписей(); 

			НаборЗаписей.Отбор.Организация.Установить(Организация);
			НаборЗаписей.Отбор.Магазин.Установить(Магазин); 
			НаборЗаписей.Отбор.Сотрудник.Установить(Сотрудник); 
			НаборЗаписей.Отбор.период.Установить(текДАта); 

			НовЗапись = НаборЗаписей.Добавить();
			НовЗапись.Организация = Организация;
			НовЗапись.Магазин = Магазин;
			НовЗапись.Сотрудник = Сотрудник;
			НовЗапись.период = текДАта;
			НовЗапись.ТипВремени = Перечисления.ТипВремени.Уход;
			
			НовЗапись.ЗаписаноЗаданием = Истина;
			
			НаборЗаписей.Записать(Истина);
			КонецЕсли;
		КонецЦикла;                      
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры


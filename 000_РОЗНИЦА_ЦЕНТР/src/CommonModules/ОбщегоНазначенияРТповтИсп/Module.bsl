//	LNK 20.01.2017 16:10:26
Функция ПолучитьСреднееВремяЗакрытияКассовогоДня(Магазин)	Экспорт

	ОкончаниеКассовогоДня = 21 * 3600;	//	дефолтом назначим что-то в районе 21:00

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МАКСИМУМ(РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(КассовыйДень.ОкончаниеКассовогоДня, ДЕНЬ), КассовыйДень.ОкончаниеКассовогоДня, СЕКУНДА)) КАК ВремяМаксимум,
	|	МИНИМУМ(РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(КассовыйДень.ОкончаниеКассовогоДня, ДЕНЬ), КассовыйДень.ОкончаниеКассовогоДня, СЕКУНДА)) КАК ВремяМинимум,
	|	(МАКСИМУМ(РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(КассовыйДень.ОкончаниеКассовогоДня, ДЕНЬ), КассовыйДень.ОкончаниеКассовогоДня, СЕКУНДА)) + МИНИМУМ(РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(КассовыйДень.ОкончаниеКассовогоДня, ДЕНЬ), КассовыйДень.ОкончаниеКассовогоДня, СЕКУНДА))) / 2 КАК ВремяСреднее
	|ИЗ
	|	Документ.КассовыйДень КАК КассовыйДень
	|ГДЕ
	|	КассовыйДень.Проведен
	|	И КассовыйДень.СтатусКассовогоДня = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСмены.Закрыта)
	|	И КассовыйДень.Магазин = &Магазин
	|	И КассовыйДень.Дата >= ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, -1)
	|	И НАЧАЛОПЕРИОДА(КассовыйДень.НачалоКассовогоДня, ДЕНЬ) = НАЧАЛОПЕРИОДА(КассовыйДень.ОкончаниеКассовогоДня, ДЕНЬ)"
	);
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() И НЕ Выборка.ВремяСреднее = NULL Тогда

		ОкончаниеКассовогоДня = Окр(Выборка.ВремяСреднее, 0, РежимОкругления.Окр15как20) + 600;

	КонецЕсли;

	Возврат ОкончаниеКассовогоДня;

КонецФункции // ПолучитьСреднееВремяЗакрытияКассовогоДня()

//	LNK 03.04.2017 14:20:28
Функция ПолучитьКодыВидовОплат()	Экспорт

	Организация = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику().ОсновнаяОрганизация;

	Если НЕ ЗначениеЗаполнено(Организация) Тогда

		Организация = Справочники.Организации.ПолучитьОрганизациюПоУмолчанию();

	КонецЕсли;

	Возврат Справочники.Организации.ПолучитьКодыВидовОплат(Организация);

КонецФункции // ПолучитьКодыВидовОплат()

//	LNK 19.04.2017 13:43:06
Функция ОпределитьТекущийМагазин()	Экспорт

	Возврат ОбщегоНазначенияРТСервер.ОпределитьТекущийМагазин();

КонецФункции // ОпределитьТекущийМагазин()

//	LNK 04.05.2017 15:00:50
Функция ЭтоТоварУниверсальный(Номенклатура)	Экспорт

	Возврат ОбщегоНазначенияРТСервер.ЭтоТоварУниверсальный(Номенклатура);

КонецФункции // ЭтоТоварУниверсальный()

//	LNK 02.06.2017 13:12:06
Функция ИспользоватьПрименениеЦен()	Экспорт

	Возврат ПолучитьФункциональнуюОпцию("ИспользоватьПрименениеЦен");

КонецФункции

//	LNK 22.11.2017 16:13:07
Функция ПолучитьУчетнуюПолитику(Период = '00010101')	Экспорт

	Возврат ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику(Период);

КонецФункции

//	LNK 23.09.2022 12:14:14
Функция ПолучитьПравилаПротокола(Период = '00010101')	Экспорт

	Возврат ОбщегоНазначенияРТ.ПолучитьПравилаПротокола(Период);

КонецФункции

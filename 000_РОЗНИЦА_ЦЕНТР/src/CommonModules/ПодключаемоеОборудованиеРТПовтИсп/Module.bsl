//	LNK 13.02.2020 13:53:59
Функция ПолучитьНоменклатуруПоКоду(КодТовара, УдалитьДополнительныеКолонки = Ложь, ОтключитьСкидочныеКупоны = Ложь, РаботаетФронт = Ложь)	Экспорт

	Перем СтруктураДанных;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК Упаковка,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ТаблицаСправочник.НазначениеТовара КАК НазначениеТовара,
	|	ТаблицаСправочник.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаСправочник.Блокирован
	|		ИЛИ ТаблицаСправочник.ПометкаУдаления КАК Блокирован,
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, ТаблицаСправочник.Код) КАК Штрихкод
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаСправочник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				МАКСИМУМ(Штрихкоды.ДатаИзменения) КАК ДатаИзменения,
	|				Штрихкоды.Владелец КАК Владелец,
	|				Штрихкоды.ТипШтрихкода КАК ТипШтрихкода,
	|				Штрихкоды.Упаковка КАК Упаковка
	|			ИЗ
	|				РегистрСведений.Штрихкоды КАК Штрихкоды
	|			ГДЕ
	|				Штрихкоды.ТипШтрихкода = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыШтрихкодов.EAN13)
	|				И ЕСТЬNULL(Штрихкоды.Упаковка.Коэффициент, 1) = 1
	|				И Штрихкоды.Блокирован = ЛОЖЬ
	|				И Штрихкоды.Владелец.Код = &КодТовара
	|				И Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Штрихкоды.Владелец,
	|				Штрихкоды.ТипШтрихкода,
	|				Штрихкоды.Упаковка) КАК АктуальныйШК
	|			ПО Штрихкоды.Владелец = АктуальныйШК.Владелец
	|				И Штрихкоды.ДатаИзменения = АктуальныйШК.ДатаИзменения
	|				И Штрихкоды.ТипШтрихкода = АктуальныйШК.ТипШтрихкода
	|				И Штрихкоды.Упаковка = АктуальныйШК.Упаковка
	|		ПО ТаблицаСправочник.Ссылка = Штрихкоды.Владелец
	|ГДЕ
	|	ТаблицаСправочник.Код = &КодТовара
	|	И НЕ(ТаблицаСправочник.ПометкаУдаления
	|				ИЛИ ТаблицаСправочник.ЭтоГруппа)
	|	И ВЫБОР
	|			КОГДА &ОтключитьСкидочныеКупоны = ИСТИНА
	|				ТОГДА НЕ ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.СкидочныйКупон)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &РаботаетФронт = ИСТИНА
	|				ТОГДА НЕ(ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|							И ТаблицаСправочник.ИспользоватьСерийныеНомера)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА ЕСТЬNULL(Штрихкоды.Владелец, 0) = 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Штрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	|					И Штрихкоды.Владелец.Код = &КодТовара
	|		КОНЕЦ"
	);
	Запрос.УстановитьПараметр("КодТовара", КодТовара);
	Запрос.УстановитьПараметр("ОтключитьСкидочныеКупоны", ОтключитьСкидочныеКупоны);
	Запрос.УстановитьПараметр("РаботаетФронт", РаботаетФронт);

	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда

		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СтруктураДанных = Новый Структура;
			ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВСтруктуру(РезультатЗапроса, Выборка, СтруктураДанных);

			Если УдалитьДополнительныеКолонки Тогда

				СтруктураДанных.Удалить("НазначениеТовара");
				СтруктураДанных.Удалить("ТипНоменклатуры");
				СтруктураДанных.Удалить("Блокирован");

			КонецЕсли;
			
		КонецЦикла;

	КонецЕсли;

	Возврат СтруктураДанных;

КонецФункции

//	LNK 29.09.2017 09:30:17
Функция ПолучитьНоменклатуруПоШтрихКоду(ШтрихКод, УдалитьДополнительныеКолонки = Ложь, ОтключитьСкидочныеКупоны = Ложь, РаботаетФронт = Ложь)	Экспорт

	Перем СтруктураДанных;

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаСправочник.Ссылка КАК Номенклатура,
	|	ТаблицаШтрихкоды.Упаковка КАК Упаковка,
	|	ТаблицаШтрихкоды.Характеристика КАК Характеристика,
	|	ТаблицаСправочник.НазначениеТовара КАК НазначениеТовара,
	|	ТаблицаСправочник.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаСправочник.Блокирован
	|		ИЛИ ТаблицаСправочник.ПометкаУдаления КАК Блокирован
	|ИЗ
	|	РегистрСведений.Штрихкоды КАК ТаблицаШтрихкоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаСправочник
	|		ПО ТаблицаШтрихкоды.Владелец = ТаблицаСправочник.Ссылка
	|ГДЕ
	|	ТаблицаШтрихкоды.Штрихкод = &Штрихкод
	|	И ТаблицаШтрихкоды.Владелец ССЫЛКА Справочник.Номенклатура
	|	И ВЫБОР
	|			КОГДА &ОтключитьСкидочныеКупоны = ИСТИНА
	|				ТОГДА НЕ ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.СкидочныйКупон)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &РаботаетФронт = ИСТИНА
	|				ТОГДА НЕ(ТаблицаСправочник.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|							И ТаблицаСправочник.ИспользоватьСерийныеНомера)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ"
	);
	Запрос.УстановитьПараметр("Штрихкод", Штрихкод);
	Запрос.УстановитьПараметр("ОтключитьСкидочныеКупоны", ОтключитьСкидочныеКупоны);
	Запрос.УстановитьПараметр("РаботаетФронт", РаботаетФронт);

	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда

		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СтруктураДанных = Новый Структура;
			ОбщегоНазначенияРТ.ПеренестиСтрокуВыборкиВСтруктуру(РезультатЗапроса, Выборка, СтруктураДанных);

			Если УдалитьДополнительныеКолонки Тогда

				СтруктураДанных.Удалить("НазначениеТовара");
				СтруктураДанных.Удалить("ТипНоменклатуры");
				СтруктураДанных.Удалить("Блокирован");

			КонецЕсли;
			
		КонецЦикла;

	КонецЕсли;

	Возврат СтруктураДанных;

КонецФункции

//	LNK 04.10.2017 11:43:05
Функция ДанныеЭквайринговогоТерминала(ТерминалЭлемент, ЭтоУзелИнтернетМагазина = Ложь)	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ТаблицаСправочник.ПодключаемоеОборудование КАК ПодключаемоеОборудование,
	|	ВЫБОР
	|		КОГДА ТаблицаСправочник.ПодключаемоеОборудование = ЗНАЧЕНИЕ(Справочник.ПодключаемоеОборудование.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ТаблицаСправочник.ИспользоватьБезПодключенияОборудования
	|	КОНЕЦ КАК ИспользоватьБезПодключенияОборудования,
	|	ЕСТЬNULL(ТаблицаСправочник.ПодключаемоеОборудование.РежимВиртуальный, ЛОЖЬ) КАК РежимВиртуальный,
	|	ТаблицаСправочник.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ЭквайринговыеТерминалы КАК ТаблицаСправочник
	|ГДЕ
	|	ТаблицаСправочник.Ссылка = &Ссылка"
	);
	Запрос.УстановитьПараметр("Ссылка", ТерминалЭлемент);

	Результат = Запрос.Выполнить();

	СтруктураВозврата = Новый Структура(
		"ПодключаемоеОборудование, ИспользоватьБезПодключенияОборудования, РежимВиртуальный"
		, ?(ЭтоУзелИнтернетМагазина = Истина, Справочники.ПодключаемоеОборудование.ПустаяСсылка(), Неопределено)
		, Истина
		, Ложь
	);

	Если НЕ Результат.Пустой() Тогда

		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, Выборка);

	КонецЕсли;
	
	Возврат СтруктураВозврата;

КонецФункции

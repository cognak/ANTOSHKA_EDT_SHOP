Процедура ОтправитьСообщение() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбменСЕСпутником.Ссылка КАК Ссылка,
		|	ОбменСЕСпутником.ОтправительViber КАК ОтправительViber,
		|	ОбменСЕСпутником.ОтправительSMS КАК ОтправительSMS
		|ИЗ
		|	ПланОбмена.ОбменСЕСпутником КАК ОбменСЕСпутником
		|ГДЕ
		|	НЕ ОбменСЕСпутником.ЭтотУзел
		|	И НЕ ОбменСЕСпутником.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(); 
	
	Если Выборка.Следующий() Тогда 
		
		УзелОбмена = Выборка.Ссылка; 
		ОтправительViber = Выборка.ОтправительViber;
		ОтправительSMS = Выборка.ОтправительSMS;
		ОтправлятьНаViber = Не ПустаяСтрока(Выборка.ОтправительViber);
		ОтправлятьНаSMS = Не ПустаяСтрока(Выборка.ОтправительSMS); 
		
	Иначе 
		
		Возврат;
		
	КонецЕсли; 
	
	Если ОтправлятьНаViber Тогда
		ОтправитьViber(УзелОбмена, ОтправительViber)	
	КонецЕсли;
	
	Если ОтправлятьНаSMS Тогда 
		ОтправитьSMS(УзелОбмена, ОтправительSMS)	
	КонецЕсли;
	
	//проверка сообщений Viber
	ПроверкаСообщений(УзелОбмена);

КонецПроцедуры  

Процедура ОтправитьViber(УзелОбмена, ОтправительViber)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СообщениеКлиенту.Дата КАК Дата,
		|	СообщениеКлиенту.ИДСообщения КАК ИДСообщения,
		|	СообщениеКлиенту.ТекстСообщения КАК ТекстСообщения,
		|	СообщениеКлиенту.ТипСообщения КАК ТипСообщения,
		|	СообщениеКлиенту.СостояниеСообщения КАК СостояниеСообщения,
		|	СообщениеКлиенту.Телефон КАК Телефон,
		|	СообщениеКлиенту.ДатаСледующейОтправки КАК ДатаСледующейОтправки
		|ИЗ
		|	РегистрСведений.СообщениеКлиенту КАК СообщениеКлиенту
		|ГДЕ
		|	СообщениеКлиенту.ИДСообщения ПОДОБНО ""Новое%""
		|	И СообщениеКлиенту.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийКлиенту.Viber)
		|	И СообщениеКлиенту.ДатаСледующейОтправки < &ДатаСледующейОтправки";
	
	Запрос.УстановитьПараметр("ДатаСледующейОтправки", ТекущаяДатаСеанса());

	РезультатЗапроса = Запрос.Выполнить();

	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		
		СтруктураВыгрузки = Новый Структура("УзелОбмена, ДанныеДляОтправки, ТекстЗапроса"); 
		СтруктураВыгрузки.УзелОбмена = УзелОбмена;

		СтруктураЗапроса = Новый Структура;
		СтруктураЗапроса.Вставить("text"				, Строка(Выборка.ТекстСообщения));
		СтруктураЗапроса.Вставить("iosExpirityText"		, Строка(Выборка.ТекстСообщения));
		СтруктураЗапроса.Вставить("from"				, Строка(ОтправительViber));
		
		МассивТелефонов = Новый Массив;
		МассивТелефонов.Добавить(Выборка.Телефон);
		
		СтруктураЗапроса.Вставить("phoneNumbers"		, МассивТелефонов);
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку(); 
		ЗаписатьJSON(ЗаписьJSON, СтруктураЗапроса);	
		СтруктураВыгрузки.ТекстЗапроса = ЗаписьJSON.Закрыть(); 
		
		ОтветСервера = ЕСпутникСервер.ОтправитьСообщениеViber(СтруктураВыгрузки); 
		
		Если ОтветСервера.ТелоОтвета.Свойство("results")
				И ОтветСервера.ТелоОтвета.results.Свойство("requestId") Тогда 
				
			ДатаСообщения = ТекущаяДатаСеанса();
			
			СтруктураСообщенияКлиенту = РегистрыСведений.СообщениеКлиенту.СтруктураЗаписиРегистра(); 
			
			СтруктураСообщенияКлиенту.Дата 						= Выборка.Дата;
			СтруктураСообщенияКлиенту.ИДСообщения 				= ОтветСервера.ТелоОтвета.results.requestId;
			СтруктураСообщенияКлиенту.ТекстСообщения 			= Выборка.ТекстСообщения;
			СтруктураСообщенияКлиенту.ТипСообщения 				= Перечисления.ТипыСообщенийКлиенту.Viber;
			СтруктураСообщенияКлиенту.СостояниеСообщения 		= Перечисления.СостояниеСообщенийКлиенту.Отправлено;
			СтруктураСообщенияКлиенту.Телефон 					= Выборка.Телефон;
			СтруктураСообщенияКлиенту.ДатаСледующейОтправки 	= ДатаСообщения + 120; 
			
			РегистрыСведений.СообщениеКлиенту.ЗаписьСообщенияВРегистр(СтруктураСообщенияКлиенту, Выборка.ИДСообщения);  
			
		Иначе
				
			//РегистрыСведений.КомментарийИнтернетЗаказа.ЗаписьКомментария(ЗаказКлиента, ПараметрыСеанса.ТекущийПользователь, "ОШИБКА!!! " + ОтветСервера.ТелоОтветаСтрока);
			
		КонецЕсли;
		
		
	КонецЦикла; 
		
КонецПроцедуры

Процедура ОтправитьSMS(УзелОбмена, ОтправительSMS) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СообщениеКлиенту.Дата КАК Дата,
		|	СообщениеКлиенту.ИДСообщения КАК ИДСообщения,
		|	СообщениеКлиенту.ТекстСообщения КАК ТекстСообщения,
		|	СообщениеКлиенту.ТипСообщения КАК ТипСообщения,
		|	СообщениеКлиенту.СостояниеСообщения КАК СостояниеСообщения,
		|	СообщениеКлиенту.Телефон КАК Телефон,
		|	СообщениеКлиенту.ДатаСледующейОтправки КАК ДатаСледующейОтправки
		|ИЗ
		|	РегистрСведений.СообщениеКлиенту КАК СообщениеКлиенту
		|ГДЕ
		|	СообщениеКлиенту.ИДСообщения ПОДОБНО ""Новое%""
		|	И СообщениеКлиенту.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийКлиенту.SMS)
		|	И СообщениеКлиенту.ДатаСледующейОтправки < &ДатаСледующейОтправки";
	
	Запрос.УстановитьПараметр("ДатаСледующейОтправки", ТекущаяДатаСеанса());

	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		СтруктураВыгрузки = Новый Структура("УзелОбмена, ДанныеДляОтправки, ТекстЗапроса"); 
		СтруктураВыгрузки.УзелОбмена = УзелОбмена;
	
		СтруктураЗапроса = Новый Структура;
		СтруктураЗапроса.Вставить("text"				, Строка(Выборка.ТекстСообщения));
		СтруктураЗапроса.Вставить("from"				, Строка(ОтправительSMS));
		
		МассивТелефонов = Новый Массив;
		МассивТелефонов.Добавить(Выборка.Телефон);
		
		СтруктураЗапроса.Вставить("phoneNumbers"		, МассивТелефонов);
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку(); 
		ЗаписатьJSON(ЗаписьJSON, СтруктураЗапроса);	
		СтруктураВыгрузки.ТекстЗапроса = ЗаписьJSON.Закрыть(); 
		
		ОтветСервера = ЕСпутникСервер.ОтправитьСообщениеSMS(СтруктураВыгрузки); 
		
		Если ОтветСервера.ТелоОтвета.Свойство("results")
				И ОтветСервера.ТелоОтвета.results.Свойство("requestId") Тогда 
				
			ДатаСообщения = ТекущаяДатаСеанса();
			
			СтруктураСообщенияКлиенту = РегистрыСведений.СообщениеКлиенту.СтруктураЗаписиРегистра(); 
			
			СтруктураСообщенияКлиенту.Дата 						= Выборка.Дата;
			СтруктураСообщенияКлиенту.ИДСообщения 				= ОтветСервера.ТелоОтвета.results.requestId;
			СтруктураСообщенияКлиенту.ТекстСообщения 			= Выборка.ТекстСообщения;
			СтруктураСообщенияКлиенту.ТипСообщения 				= Перечисления.ТипыСообщенийКлиенту.SMS;
			СтруктураСообщенияКлиенту.СостояниеСообщения 		= Перечисления.СостояниеСообщенийКлиенту.Отправлено;
			СтруктураСообщенияКлиенту.Телефон 					= Выборка.Телефон;
			СтруктураСообщенияКлиенту.ДатаСледующейОтправки 	= ДатаСообщения + 120; 
			
			РегистрыСведений.СообщениеКлиенту.ЗаписьСообщенияВРегистр(СтруктураСообщенияКлиенту, Выборка.ИДСообщения);  
			
		Иначе
				
			//РегистрыСведений.КомментарийИнтернетЗаказа.ЗаписьКомментария(ЗаказКлиента, ПараметрыСеанса.ТекущийПользователь, "ОШИБКА!!! " + ОтветСервера.ТелоОтветаСтрока);
			
		КонецЕсли;
		
		
	КонецЦикла; 
		
КонецПроцедуры    

Процедура ПроверкаСообщений(УзелОбмена)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СообщениеКлиенту.Дата КАК Дата,
		|	СообщениеКлиенту.ИДСообщения КАК ИДСообщения,
		|	СообщениеКлиенту.ТекстСообщения КАК ТекстСообщения,
		|	СообщениеКлиенту.ТипСообщения КАК ТипСообщения,
		|	СообщениеКлиенту.СостояниеСообщения КАК СостояниеСообщения,
		|	СообщениеКлиенту.Телефон КАК Телефон,
		|	СообщениеКлиенту.ДатаСледующейОтправки КАК ДатаСледующейОтправки
		|ИЗ
		|	РегистрСведений.СообщениеКлиенту КАК СообщениеКлиенту
		|ГДЕ
		|	СообщениеКлиенту.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийКлиенту.Viber)
		|	И СообщениеКлиенту.СостояниеСообщения = ЗНАЧЕНИЕ(Перечисление.СостояниеСообщенийКлиенту.Отправлено)";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураВыгрузки = Новый Структура("УзелОбмена, ДанныеДляОтправки, ТекстЗапроса"); 
		СтруктураВыгрузки.УзелОбмена = УзелОбмена;
		СтруктураВыгрузки.ТекстЗапроса = Выборка.ИДСообщения; 
		
		ОтветСервера = ЕСпутникСервер.ПолучитьСостояниеСообщения(СтруктураВыгрузки); 
		
		Если ОтветСервера.ТелоОтвета.Свойство("results")
			И ОтветСервера.ТелоОтвета.results.Свойство("delivered")  
			И ОтветСервера.ТелоОтвета.results.delivered Тогда 
			
			ДатаСообщения = ТекущаяДатаСеанса();
			
			СтруктураСообщенияКлиенту = РегистрыСведений.СообщениеКлиенту.СтруктураЗаписиРегистра(); 
			
			СтруктураСообщенияКлиенту.Дата 						= Выборка.Дата;
			СтруктураСообщенияКлиенту.ИДСообщения 				= Выборка.ИДСообщения;
			СтруктураСообщенияКлиенту.ТекстСообщения 			= Выборка.ТекстСообщения;
			СтруктураСообщенияКлиенту.ТипСообщения 				= Перечисления.ТипыСообщенийКлиенту.Viber;
			СтруктураСообщенияКлиенту.СостояниеСообщения 		= Перечисления.СостояниеСообщенийКлиенту.Доставлено;
			СтруктураСообщенияКлиенту.Телефон 					= Выборка.Телефон;
			СтруктураСообщенияКлиенту.ДатаСледующейОтправки 	= ДатаСообщения + 60; 
			
			РегистрыСведений.СообщениеКлиенту.ЗаписьСообщенияВРегистр(СтруктураСообщенияКлиенту);  
			
		ИначеЕсли ОтветСервера.ТелоОтвета.Свойство("results")
			И ОтветСервера.ТелоОтвета.results.Свойство("failed")  
			И ОтветСервера.ТелоОтвета.results.failed Тогда
			
			ДатаСообщения = ТекущаяДатаСеанса();
			
			СтруктураСообщенияКлиенту = РегистрыСведений.СообщениеКлиенту.СтруктураЗаписиРегистра(); 
			
			СтруктураСообщенияКлиенту.Дата 						= Выборка.Дата;
			СтруктураСообщенияКлиенту.ИДСообщения 				= Выборка.ИДСообщения;
			СтруктураСообщенияКлиенту.ТекстСообщения 			= Выборка.ТекстСообщения;
			СтруктураСообщенияКлиенту.ТипСообщения 				= Перечисления.ТипыСообщенийКлиенту.Viber;
			СтруктураСообщенияКлиенту.СостояниеСообщения 		= Перечисления.СостояниеСообщенийКлиенту.Перенаправлено;
			СтруктураСообщенияКлиенту.Телефон 					= Выборка.Телефон;
			СтруктураСообщенияКлиенту.ДатаСледующейОтправки 	= ДатаСообщения + 60;
			
			РегистрыСведений.СообщениеКлиенту.ЗаписьСообщенияВРегистр(СтруктураСообщенияКлиенту); 
			
			СтруктураСообщенияКлиенту = РегистрыСведений.СообщениеКлиенту.СтруктураЗаписиРегистра(); 
			
			СтруктураСообщенияКлиенту.Дата 						= Выборка.Дата;
			СтруктураСообщенияКлиенту.ИДСообщения 				= "Новое";
			СтруктураСообщенияКлиенту.ТекстСообщения 			= Выборка.ТекстСообщения;
			СтруктураСообщенияКлиенту.ТипСообщения 				= Перечисления.ТипыСообщенийКлиенту.SMS;
			СтруктураСообщенияКлиенту.СостояниеСообщения 		= Перечисления.СостояниеСообщенийКлиенту.Новое;
			СтруктураСообщенияКлиенту.Телефон 					= Выборка.Телефон;
			СтруктураСообщенияКлиенту.ДатаСледующейОтправки 	= ДатаСообщения + 60; 
			
			РегистрыСведений.СообщениеКлиенту.ЗаписьСообщенияВРегистр(СтруктураСообщенияКлиенту); 
			
		Иначе
			
			//РегистрыСведений.КомментарийИнтернетЗаказа.ЗаписьКомментария(ЗаказКлиента, ПараметрыСеанса.ТекущийПользователь, "ОШИБКА!!! " + ОтветСервера.ТелоОтветаСтрока);
			
		КонецЕсли;  
		
	КонецЦикла;

КонецПроцедуры



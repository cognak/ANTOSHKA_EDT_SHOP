Функция ПолучитьМассивУзлов(ТипРегистрации = Неопределено)	Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаУзлы.Ссылка КАК Узел
	|ИЗ
	|	ПланОбмена.ОбменBigQuery КАК ТаблицаУзлы
	|ГДЕ
	|			 НЕ(ТаблицаУзлы.ПометкаУдаления
	|				ИЛИ ТаблицаУзлы.ЭтотУзел)"
	);
	Запрос.УстановитьПараметр("ТипРегистрации", ТипРегистрации);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Узел");

КонецФункции

Функция ВыполнитьЗапросКСерверуЧеки(ТаблицаЗн)	Экспорт
			transaction_id = Неопределено;
			product_id = Неопределено;
			Quantity = Неопределено ;
			price = Неопределено;
			discount_loyalty = Неопределено;
			price_full = Неопределено;
			order_type_id = Неопределено;
			action = Неопределено;
			timestamp = Неопределено;
			pos_id = Неопределено;
			timestamp = Неопределено;
			promo_id = Неопределено;
			bonus_added = Неопределено;
			bonus_used = Неопределено;
			promo_id = Неопределено;
	
	
	ДанныеСтроки = Новый Структура;
	Текст = "";
	ЗаписьJSON = Новый ЗаписьJSON;
	тНастройкиСериализации = Новый НастройкиСериализацииJSON;
    тНастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO; //"ДатаJSON": "2016-03-15T14:19:48"

	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, Символы.Таб);

	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЧекККМТовары.Ссылка КАК transaction_id,
		|	ЧекККМТовары.Номенклатура.IDN КАК product_id,
		|	СУММА(ЧекККМТовары.Количество) КАК Quantity,
		|	СУММА(ЧекККМТовары.СуммаАвтоматическойСкидки + ЧекККМТовары.СуммаРучнойСкидки - ЧекККМТовары.СуммаОкругления) КАК discount_loyalty,
		|	СУММА(ЧекККМТовары.Сумма) КАК price,
		|	ВЫБОР
		|		КОГДА ЧекККМТовары.Ссылка.АналитикаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ВозвратОтПокупателя)
		|			ТОГДА ""4""
		|		КОГДА ЧекККМТовары.Ссылка.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|			ТОГДА ""1""
		|		ИНАЧЕ ""3""
		|	КОНЕЦ КАК order_type_id,
		|	""Create"" КАК action,
		|	ЧекККМТовары.Ссылка.Дата КАК recorded_on,
		|	0 КАК bonus_added,
		|	0 КАК bonus_used,
		|	СУММА(ЧекККМТовары.СуммаРучнойСкидки) КАК СуммаРучнойСкидки,
		|	ЧекККМТовары.КлючСвязи КАК КлючСвязи
		|ПОМЕСТИТЬ Чеки
		|ИЗ
		|	Документ.ЧекККМ.Товары КАК ЧекККМТовары
		|ГДЕ
		|	ЧекККМТовары.Ссылка.ОтчетОРозничныхПродажах В(&ОтчетОРозничныхПродажах)
		|	И ЧекККМТовары.Ссылка.Проведен = ИСТИНА
		|
		|СГРУППИРОВАТЬ ПО
		|	ЧекККМТовары.Ссылка,
		|	ЧекККМТовары.Номенклатура.IDN,
		|	ВЫБОР
		|		КОГДА ЧекККМТовары.Ссылка.АналитикаХозяйственнойОперации = ЗНАЧЕНИЕ(Справочник.АналитикаХозяйственныхОпераций.ВозвратОтПокупателя)
		|			ТОГДА ""4""
		|		КОГДА ЧекККМТовары.Ссылка.ЗаказПокупателя = ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка)
		|			ТОГДА ""1""
		|		ИНАЧЕ ""3""
		|	КОНЕЦ,
		|	ЧекККМТовары.Ссылка.Дата,
		|	ЧекККМТовары.КлючСвязи
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	transaction_id,
		|	КлючСвязи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Склады.IDN ЕСТЬ NULL
		|			ТОГДА """"
		|		ИНАЧЕ Склады.IDN
		|	КОНЕЦ КАК pos_id,
		|	ЧекККМСкидкиНаценки.СкидкаНаценка КАК promo_id,
		|	Чеки.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
		|	Чеки.transaction_id КАК transaction_id,
		|	Чеки.product_id КАК product_id,
		|	Чеки.Quantity КАК Quantity,
		|	Чеки.discount_loyalty КАК discount_loyalty,
		|	Чеки.price КАК price,
		|	Чеки.order_type_id КАК order_type_id,
		|	Чеки.action КАК action,
		|	Чеки.recorded_on КАК recorded_on,
		|	Чеки.bonus_added КАК bonus_added,
		|	Чеки.bonus_used КАК bonus_used
		|ИЗ
		|	Чеки КАК Чеки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО (Склады.ТипСклада = &ТипСклада)
		|			И (Склады.ПометкаУдаления = ЛОЖЬ)
		|			И Чеки.transaction_id.Магазин = Склады.Магазин
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЧекККМ.СкидкиНаценки КАК ЧекККМСкидкиНаценки
		|		ПО Чеки.transaction_id = ЧекККМСкидкиНаценки.Ссылка
		|			И Чеки.КлючСвязи = ЧекККМСкидкиНаценки.КлючСвязи
		|ИТОГИ
		|	МАКСИМУМ(pos_id),
		|	МАКСИМУМ(promo_id),
		|	МАКСИМУМ(СуммаРучнойСкидки),
		|	МАКСИМУМ(Quantity),
		|	МАКСИМУМ(discount_loyalty),
		|	МАКСИМУМ(price),
		|	МАКСИМУМ(order_type_id),
		|	МАКСИМУМ(action),
		|	МАКСИМУМ(recorded_on),
		|	МАКСИМУМ(bonus_added),
		|	МАКСИМУМ(bonus_used)
		|ПО
		|	transaction_id,
		|	product_id
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Чеки";
	Запрос.УстановитьПараметр("ОтчетОРозничныхПродажах",ТаблицаЗн);
	Запрос.УстановитьПараметр("ТипСклада",Перечисления.ТипыСкладов.ТорговыйЗал);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЧек = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"transaction_id");
	Пока ВыборкаЧек.Следующий() цикл 		
		ВыборкаСоставЧека =  ВыборкаЧек.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"product_id");
		
			Пока ВыборкаСоставЧека.Следующий() цикл 		
			ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
			ЗаписьJSON.ЗаписатьНачалоОбъекта();	
			СтрокаАкции = "";
			А = 0;
			ВыборкаАкции = ВыборкаСоставЧека.Выбрать();			
			Стр = ДанныеСтроки;
			Пока ВыборкаАкции.Следующий() цикл
				Если ЗначениеЗаполнено(ВыборкаАкции.promo_id) тогда
					Если  ТипЗнч(ВыборкаАкции.promo_id) = Тип("Строка") тогда 
						promo = ВыборкаАкции.promo_id;
					Иначе
						promo = ВыборкаАкции.promo_id.УникальныйИдентификатор();
					КонецЕсли;
					Если А = 0 Тогда 
						СтрокаАкции = "[" + promo;
					Иначе 
						СтрокаАкции =СтрокаАкции +  ", " + promo;
					КонецЕсли;
					А = А +1;
				КонецЕсли;

			//ЗаполнитьЗначенияСвойств(Стр,ВыборкаАкции);  				
			КонецЦикла; 
			Если НЕ СтрокаАкции = "" тогда
				Если ВыборкаСоставЧека.СуммаРучнойСкидки = 0 тогда					
					СтрокаАкции =СтрокаАкции+"]";   
				Иначе
					СтрокаАкции = СтрокаАкции+ ", 999";
					СтрокаАкции =СтрокаАкции+"]";   
				КонецЕсли;
			Иначе
				Если НЕ ВыборкаСоставЧека.СуммаРучнойСкидки = 0 тогда					
					СтрокаАкции ="[999]";   
				КонецЕсли;				
			КонецЕсли;
			//Если discount_loyalty = "" тогда 
			//	 discount_loyalty = Формат(0,"ЧРД=.; ЧН=0; ЧГ=0");				 
			//КонецЕсли;	
			transaction_id = Строка(ВыборкаЧек.transaction_id.УникальныйИдентификатор());
			product_id = ВыборкаСоставЧека.product_id;
			Quantity = ВыборкаСоставЧека.Quantity;
			если Quantity = 0 тогда 
				discount_loyalty = ВыборкаСоставЧека.discount_loyalty;					
				price = ВыборкаЧек.price;				
				price_full = (price+discount_loyalty);				
			Иначе
				discount_loyalty = ВыборкаСоставЧека.discount_loyalty/Quantity;					
				price = ВыборкаСоставЧека.price/Quantity;
				price_full = (ВыборкаСоставЧека.price+ВыборкаСоставЧека.discount_loyalty)/Quantity;				
			КонецЕсли; 
			если price < 0.01 тогда price = 1 КонецЕсли;
			если price_full  < 0.01 тогда price_full = 1 КонецЕсли;
			Если discount_loyalty = "" тогда	 discount_loyalty = Формат(0,"ЧРД=.; ЧН=0; ЧГ=0") КонецЕсли;	
			
			order_type_id = ВыборкаЧек.order_type_id;
			action = ВыборкаЧек.action;
			timestamp = Формат(ТекущаяДата(),"ДФ='yyyy-MM-dd hh:mm:ss'");
			pos_id = ВыборкаЧек.pos_id;
			recorded_on = Формат(ВыборкаЧек.recorded_on,"ДФ='yyyy-MM-dd hh:mm:ss'");
			promo_id = СтрокаАкции;
			bonus_added = ВыборкаЧек.bonus_added;
			bonus_used = ВыборкаЧек.bonus_used;

			promo_id = СтрокаАкции;
			ЗаписьJSON.ЗаписатьИмяСвойства("transaction_id");
			ЗаписьJSON.ЗаписатьЗначение(transaction_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("product_id");
			ЗаписьJSON.ЗаписатьЗначение(product_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("Quantity");
			ЗаписьJSON.ЗаписатьЗначение( Формат(Quantity,"ЧРД=.; ЧГ=0"));
			ЗаписьJSON.ЗаписатьИмяСвойства("price");
			ЗаписьJSON.ЗаписатьЗначение(Формат(price,"ЧДЦ=2; ЧРД=.; ЧГ=0"));
			ЗаписьJSON.ЗаписатьИмяСвойства("discount_loyalty");
			ЗаписьJSON.ЗаписатьЗначение( Формат(discount_loyalty,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0"));
			ЗаписьJSON.ЗаписатьИмяСвойства("pos_id");
			ЗаписьJSON.ЗаписатьЗначение(pos_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("recorded_on");
			ЗаписьJSON.ЗаписатьЗначение(recorded_on);
			ЗаписьJSON.ЗаписатьИмяСвойства("price_full");
			ЗаписьJSON.ЗаписатьЗначение(Формат((price_full),"ЧДЦ=2; ЧРД=.; ЧГ=0"));
			ЗаписьJSON.ЗаписатьИмяСвойства("order_type_id");
			ЗаписьJSON.ЗаписатьЗначение(order_type_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("action");
			ЗаписьJSON.ЗаписатьЗначение(action);
			ЗаписьJSON.ЗаписатьИмяСвойства("timestamp");
			ЗаписьJSON.ЗаписатьЗначение(timestamp);
			ЗаписьJSON.ЗаписатьИмяСвойства("promo_id");
			ЗаписьJSON.ЗаписатьЗначение(promo_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("bonus_added");
			ЗаписьJSON.ЗаписатьЗначение(Формат((bonus_added),"ЧДЦ=2; ЧРД=.; ЧГ=0"));
			ЗаписьJSON.ЗаписатьИмяСвойства("bonus_used");
			ЗаписьJSON.ЗаписатьЗначение(Формат((bonus_used),"ЧДЦ=2; ЧРД=.; ЧГ=0"));
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();	
		рез = ЗаписьJSON.Закрыть();

		Текст = Текст + рез + Символы.ПС;
		
		КонецЦикла;
		
		
		
	КонецЦикла;
	Текст = Лев(Текст, СтрДлина(Текст) - 1);

	
	Кодировка = КодировкаТекста.UTF8;
	
	// Извращения для удаления BOM (https://forum.infostart.ru/forum9/topic62033/)
	ЗТ = Новый ЗаписьТекста("C:/BigQuery/TransactionItem.json", КодировкаТекста.ANSI);
	ЗТ.Закрыть();
	
	ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:/BigQuery/TransactionItem.json", Кодировка, символы.ПС, Истина, Символы.ПС);            
	ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст); 
	ТекстовыйФайлЗапись.Закрыть();    
	Если ВыполнитьСкрипт("C:/BigQuery/1c_to_bq_json.py") = Ложь тогда  
		Возврат Ложь;
	Иначе
		Возврат Истина; 		
	КонецЕсли;
	
	
	

КонецФункции

Функция ВыполнитьСкрипт(ПутьСкрипта)
	
	
	
	
	
	
	
	
	КодВозврата = Неопределено;
	ЗапуститьПриложение("python " + ПутьСкрипта, КаталогВременныхФайлов(), Истина, КодВозврата);
	Сообщить(КодВозврата);
	
	Если КодВозврата = 0 Тогда
		Возврат Истина;
	Иначе	
		Возврат Ложь;
	КонецЕсли;
	
	
КонецФункции
	

Функция ВыполнитьЗапросКСерверуСегменты(ТаблицаЗн)	Экспорт
		ДанныеСтроки = Новый Структура;
	Текст = "";
	ЗаписьJSON = Новый ЗаписьJSON;
	тНастройкиСериализации = Новый НастройкиСериализацииJSON;
    тНастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO; //"ДатаJSON": "2016-03-15T14:19:48"

	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, Символы.Таб);

	

	
	Для каждого строка из 	ТаблицаЗн цикл
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка КАК promo_id,
		|	ВЫБОР
		|		КОГДА Склады.IDN ЕСТЬ NULL
		|			ТОГДА """"
		|		ИНАЧЕ Склады.IDN
		|	КОНЕЦ КАК pos_id,
		|	ДействиеСкидокНаценокСрезПоследних.Период КАК date_start,
		|	ДействиеСкидокНаценокСрезПоследних.ДатаОкончания КАК date_end,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ЗначениеСкидкиНаценки КАК СкидкаНаценкаЗначениеСкидкиНаценки,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID КАК id,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Наименование КАК name,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
		|			ТОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ЗначениеСкидкиНаценки / 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК discount_percent,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Сумма)
		|			ТОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ЗначениеСкидкиНаценки
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК discount_sum
		|ИЗ
		|	РегистрСведений.ДействиеСкидокНаценок.СрезПоследних КАК ДействиеСкидокНаценокСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО ДействиеСкидокНаценокСрезПоследних.Магазин = Склады.Магазин
		|			И (Склады.ПометкаУдаления = ЛОЖЬ)
		|			И (Склады.ТипСклада = &ТипСклада)
		|ГДЕ
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СегментНоменклатурыПредоставления = &СегментНоменклатурыПредоставления
		|	И ДействиеСкидокНаценокСрезПоследних.ДатаОкончания > &ДатаОкончания";
	Запрос.УстановитьПараметр("ТипСклада",Перечисления.ТипыСкладов.ТорговыйЗал);
	Запрос.УстановитьПараметр("ДатаОкончания", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("СегментНоменклатурыПредоставления", строка.Сегмент);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
		ЗаписьJSON.ЗаписатьНачалоОбъекта();	
		Если  Выборка.date_end = Дата(1, 1, 1, 0, 0, 0) тогда 
			date_end =Формат('20300101',"ДФ=yyyy-MM-dd");
			promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Выборка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(20300101,"ДФ=ddMMyyyy"));
		Иначе
			date_end = Формат(Выборка.date_end,"ДФ=yyyy-MM-dd");
			promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Выборка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(Выборка.date_end,"ДФ=ddMMyyyy"));
		КонецЕсли;
		date_start = Формат(Выборка.date_start,"ДФ=yyyy-MM-dd");
		//promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(date_start,"ДФ=ddMMyyyy")) + Строка(Формат(date_end,"ДФ=ddMMyyyy"));
		timestamp = Формат(ТекущаяДата(),"ДФ='yyyy-MM-dd hh:mm:ss'");
		action = строка.действие;
		product_id = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Строка.Номенклатура,"IDN");
		pos_id = Выборка.pos_id;
		discount_sum = Формат(Выборка.discount_sum,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
		discount_price = Формат(0,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
		bonus_percent = Формат(0,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
		bonus_sum = Формат(0,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
		bonus_percent = Формат(0,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");         
		discount_percent =  Формат(Выборка.discount_percent,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
		
		ЗаписьJSON.ЗаписатьИмяСвойства("promo_id");
		ЗаписьJSON.ЗаписатьЗначение(promo_id);
		ЗаписьJSON.ЗаписатьИмяСвойства("product_id");
		ЗаписьJSON.ЗаписатьЗначение(product_id);
		ЗаписьJSON.ЗаписатьИмяСвойства("pos_id");
		ЗаписьJSON.ЗаписатьЗначение(pos_id);
		ЗаписьJSON.ЗаписатьИмяСвойства("discount_percent");
		ЗаписьJSON.ЗаписатьЗначение(discount_percent);
		ЗаписьJSON.ЗаписатьИмяСвойства("discount_sum");
		ЗаписьJSON.ЗаписатьЗначение(discount_sum);
		ЗаписьJSON.ЗаписатьИмяСвойства("discount_price");
		ЗаписьJSON.ЗаписатьЗначение(discount_price);
		ЗаписьJSON.ЗаписатьИмяСвойства("bonus_percent");
		ЗаписьJSON.ЗаписатьЗначение(bonus_percent);
		ЗаписьJSON.ЗаписатьИмяСвойства("bonus_sum");
		ЗаписьJSON.ЗаписатьЗначение(bonus_sum);
		ЗаписьJSON.ЗаписатьИмяСвойства("action");
		ЗаписьJSON.ЗаписатьЗначение(action);
		ЗаписьJSON.ЗаписатьИмяСвойства("timestamp");
		ЗаписьJSON.ЗаписатьЗначение(timestamp);
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();	
		рез = ЗаписьJSON.Закрыть();

		Текст = Текст + рез + Символы.ПС;
	КонецЦикла;
	

	КонецЦикла;
	Текст = Лев(Текст, СтрДлина(Текст) - 1);

	
	Кодировка = КодировкаТекста.UTF8;
	
	// Извращения для удаления BOM (https://forum.infostart.ru/forum9/topic62033/)
	ЗТ = Новый ЗаписьТекста("C:/BigQuery/1c_to_bq_json_PromoOnSKUinPOS.json", КодировкаТекста.ANSI);
	ЗТ.Закрыть();
	
	ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:/BigQuery/1c_to_bq_json_PromoOnSKUinPOS.json", Кодировка, символы.ПС, Истина, Символы.ПС);            
	ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст); 
	ТекстовыйФайлЗапись.Закрыть();    
	Если ВыполнитьСкрипт("C:/BigQuery/1c_to_bq_json_PromoOnSKUinPOS.py") = Ложь тогда  
		Возврат Ложь;
	Иначе
		Возврат Истина; 		
	КонецЕсли;
	

КонецФункции

	

Функция ВыполнитьЗапросКСерверуСегментыБезАкций(ТаблицаЗн)	Экспорт
		ДанныеСтроки = Новый Структура;
	Текст = "";
	ЗаписьJSON = Новый ЗаписьJSON;
	тНастройкиСериализации = Новый НастройкиСериализацииJSON;
    тНастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO; //"ДатаJSON": "2016-03-15T14:19:48"

	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, Символы.Таб);

	
			timestamp = Формат(ТекущаяДата(),"ДФ='yyyy-MM-dd hh:mm:ss'");
	
	Для каждого строка из 	ТаблицаЗн цикл
	    Сегмент =  		Строка(строка.Сегмент.УникальныйИдентификатор());
Номенклатура = ОбщегоНазначения.ПолучитьЗначениеРеквизита(строка.Номенклатура,"IDN");
		ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
		ЗаписьJSON.ЗаписатьНачалоОбъекта();	
		ЗаписьJSON.ЗаписатьИмяСвойства("SegmentName");
		ЗаписьJSON.ЗаписатьЗначение(Сегмент);
		ЗаписьJSON.ЗаписатьИмяСвойства("product_id");
		ЗаписьJSON.ЗаписатьЗначение(Номенклатура);
		ЗаписьJSON.ЗаписатьИмяСвойства("action");
		ЗаписьJSON.ЗаписатьЗначение(строка.Действие);
		ЗаписьJSON.ЗаписатьИмяСвойства("timestamp");
		ЗаписьJSON.ЗаписатьЗначение(timestamp);
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();	
		рез = ЗаписьJSON.Закрыть();

		Текст = Текст + рез + Символы.ПС;
	КонецЦикла;
	Текст = Лев(Текст, СтрДлина(Текст) - 1);

	
	Кодировка = КодировкаТекста.UTF8;
	                         
	// Извращения для удаления BOM (https://forum.infostart.ru/forum9/topic62033/)
	//ЗТ = Новый ЗаписьТекста("C:/3MA/1c_to_bq_json_Segment.json", КодировкаТекста.ANSI);
	//
	//ЗТ.Закрыть();
	//
	//ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:/3MA/1c_to_bq_json_Segment.json", Кодировка, символы.ПС, Истина, Символы.ПС);            
	//ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст); 
	//ТекстовыйФайлЗапись.Закрыть();    
	//Если ВыполнитьСкрипт("C:/3MA/1c_to_bq_json_Segment.py") = Ложь тогда  
	//	Возврат Ложь;
	//Иначе
	//	Возврат Истина; 		
	//КонецЕсли;
	
	ЗТ = Новый ЗаписьТекста("C:/BigQuery/1c_to_bq_json_Segment.json", КодировкаТекста.ANSI);
	
	ЗТ.Закрыть();
	
	ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:/BigQuery/1c_to_bq_json_Segment.json", Кодировка, символы.ПС, Истина, Символы.ПС);            
	ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст); 
	ТекстовыйФайлЗапись.Закрыть();    
	Если ВыполнитьСкрипт("C:/BigQuery/1c_to_bq_json_Segment.py") = Ложь тогда  
		Возврат Ложь;
	Иначе
		Возврат Истина; 		
	КонецЕсли;
КонецФункции

Функция ВыполнитьЗапросКСерверуСчетчики(ТаблицаЗн)	Экспорт
			observed_on = Неопределено;
			pos_id = Неопределено;
			visitors_count = Неопределено ;
			action = Неопределено;
			timestamp = Неопределено;
	
	
	ДанныеСтроки = Новый Структура;
	Текст = "";
	ЗаписьJSON = Новый ЗаписьJSON;
	тНастройкиСериализации = Новый НастройкиСериализацииJSON;
    тНастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO; //"ДатаJSON": "2016-03-15T14:19:48"

	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, Символы.Таб);

	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(Посетители.Количество) КАК visitors_count,
		|	НАЧАЛОПЕРИОДА(Посетители.Период, ДЕНЬ) КАК observed_on,
		|	ВЫБОР
		|		КОГДА Склады.IDN ЕСТЬ NULL
		|			ТОГДА """"
		|		ИНАЧЕ Склады.IDN
		|	КОНЕЦ КАК pos_id
		|ИЗ
		|	РегистрНакопления.Посетители КАК Посетители
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО Посетители.Магазин = Склады.Магазин
		|			И (Склады.ПометкаУдаления = ЛОЖЬ)
		|			И (Склады.ТипСклада = &ТипСклада)
		|ГДЕ
		|	Посетители.Регистратор В(&ТабРегистратор)
		|
		|СГРУППИРОВАТЬ ПО
		|	Склады.IDN,
		|	НАЧАЛОПЕРИОДА(Посетители.Период, ДЕНЬ)";
	Запрос.УстановитьПараметр("ТабРегистратор",ТаблицаЗн);
	Запрос.УстановитьПараметр("ТипСклада",Перечисления.ТипыСкладов.ТорговыйЗал);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() цикл 
			ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
			ЗаписьJSON.ЗаписатьНачалоОбъекта();	

			action = "Create";
			timestamp = Формат(ТекущаяДата(),"ДФ='yyyy-MM-dd hh:mm:ss'");
			pos_id = Выборка.pos_id;
			observed_on = Формат(Выборка.observed_on,"ДФ=yyyy-MM-dd");
			visitors_count = Формат((Выборка.visitors_count),"ЧДЦ=; ЧРД=.; ЧН=0; ЧГ=0");

			ЗаписьJSON.ЗаписатьИмяСвойства("pos_id");
			ЗаписьJSON.ЗаписатьЗначение(pos_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("observed_on");
			ЗаписьJSON.ЗаписатьЗначение(observed_on);
			ЗаписьJSON.ЗаписатьИмяСвойства("visitors_count");
			ЗаписьJSON.ЗаписатьЗначение(visitors_count);
			ЗаписьJSON.ЗаписатьИмяСвойства("action");
			ЗаписьJSON.ЗаписатьЗначение(action);
			ЗаписьJSON.ЗаписатьИмяСвойства("timestamp");
			ЗаписьJSON.ЗаписатьЗначение(timestamp);
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();	
		рез = ЗаписьJSON.Закрыть();

		Текст = Текст + рез + Символы.ПС;
		
		
		
		
	КонецЦикла;
	Текст = Лев(Текст, СтрДлина(Текст) - 1);

	
	Кодировка = КодировкаТекста.UTF8;
	
	// Извращения для удаления BOM (https://forum.infostart.ru/forum9/topic62033/)
	ЗТ = Новый ЗаписьТекста("C:/BigQuery/1c_to_bq_json_POSTraffic.json", КодировкаТекста.ANSI);
	ЗТ.Закрыть();
	
	ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:/BigQuery/1c_to_bq_json_POSTraffic.json", Кодировка, символы.ПС, Истина, Символы.ПС);            
	ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст); 
	ТекстовыйФайлЗапись.Закрыть();    
	Если ВыполнитьСкрипт("C:/BigQuery/1c_to_bq_json_POSTraffic.py") = Ложь тогда  
		Возврат Ложь;
	Иначе
		Возврат Истина; 		
	КонецЕсли;
	
	
	

КонецФункции



Функция ВыполнитьЗапросКСерверуАкции(ТаблицаЗн)	Экспорт
	Успешно = PromoCalendar(ТаблицаЗн);
	если Успешно тогда  
		Успешно = PromoOnSKUinPOS(ТаблицаЗн);
	КонецЕсли;	
	Возврат Успешно;
КонецФункции


Функция ВыполнитьЗапросКСерверуАкцииИСегменты(ТаблицаЗн)	Экспорт
	Успешно = PromoCalendar(ТаблицаЗн);
	если Успешно тогда  
		Успешно = Promo(ТаблицаЗн);
	КонецЕсли;	
	Возврат Успешно;
КонецФункции


Функция PromoCalendar(ТаблицаЗн)
			promo_id = Неопределено;
			name = Неопределено;
			description = Неопределено ;
			date_start = Неопределено;
			date_end = Неопределено;
			promo_type_id = Неопределено;
			timestamp = Неопределено;
			action = Неопределено ;

			
	ДанныеСтроки = Новый Структура;
	Текст = "";
	ЗаписьJSON = Новый ЗаписьJSON;
	тНастройкиСериализации = Новый НастройкиСериализацииJSON;
    тНастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO; //"ДатаJSON": "2016-03-15T14:19:48"

	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, Символы.Таб);

			
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Ссылка КАК promo_id,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Наименование КАК name,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Представление КАК description,
		|	ДействиеСкидокНаценокСрезПоследних.Период КАК date_start,
		|	ДействиеСкидокНаценокСрезПоследних.ДатаОкончания КАК date_end,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID КАК promo_type_id
		|ИЗ
		|	РегистрСведений.ДействиеСкидокНаценок.СрезПоследних(, ) КАК ДействиеСкидокНаценокСрезПоследних
		|ГДЕ
		|	ДействиеСкидокНаценокСрезПоследних.Регистратор В(&ТабРегистратор)
		|	И НЕ ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СегментНоменклатурыПредоставления ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ДействиеСкидокНаценокСрезПоследних.ДатаОкончания,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Ссылка,
		|	ДействиеСкидокНаценокСрезПоследних.Период,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Наименование,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Представление,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID
		|
		|УПОРЯДОЧИТЬ ПО
		|	promo_id";
			
	Запрос.УстановитьПараметр("ТабРегистратор",ТаблицаЗн);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() цикл
		ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
		ЗаписьJSON.ЗаписатьНачалоОбъекта();	

		//promo_id = Выборка.promo_id.УникальныйИдентификатор();
		Если НЕ ЗначениеЗаполнено(Выборка.promo_type_id) тогда 
			promo_type_id =  "1";
		Иначе
			promo_type_id =  Выборка.promo_type_id;
		КонецЕсли;
		Если promo_type_id = "" тогда 
			promo_type_id =  "1";
		КонецЕсли;
		
		Если  Выборка.date_end = Дата(1, 1, 1, 0, 0, 0) тогда 
			date_end =Формат('20300101',"ДФ=yyyy-MM-dd");
			promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Выборка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(20300101,"ДФ=ddMMyyyy"));
		Иначе
			date_end = Формат(Выборка.date_end,"ДФ=yyyy-MM-dd");
			promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Выборка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(Выборка.date_end,"ДФ=ddMMyyyy"));
		КонецЕсли;
		date_start =  Формат(Выборка.date_start,"ДФ=yyyy-MM-dd");
		//promo_id =  Строка(promo_id) +"_"+  Строка(Формат(date_start,"ДФ=ddMMyyyy")) + Строка(Формат(date_end,"ДФ=ddMMyyyy"));
		timestamp = Формат(ТекущаяДата(),"ДФ='yyyy-MM-dd hh:mm:ss'");
		action = "create";
		name = Выборка.name;
		description = Выборка.description;
		
			ЗаписьJSON.ЗаписатьИмяСвойства("promo_id");
			ЗаписьJSON.ЗаписатьЗначение(promo_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("promo_type_id");
			ЗаписьJSON.ЗаписатьЗначение(promo_type_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("name");
			ЗаписьJSON.ЗаписатьЗначение(name);
			ЗаписьJSON.ЗаписатьИмяСвойства("description");
			ЗаписьJSON.ЗаписатьЗначение(description);
			ЗаписьJSON.ЗаписатьИмяСвойства("date_start");
			ЗаписьJSON.ЗаписатьЗначение(date_start);
			ЗаписьJSON.ЗаписатьИмяСвойства("date_end");
			ЗаписьJSON.ЗаписатьЗначение(date_end);
			ЗаписьJSON.ЗаписатьИмяСвойства("action");
			ЗаписьJSON.ЗаписатьЗначение(action);
			ЗаписьJSON.ЗаписатьИмяСвойства("timestamp");
			ЗаписьJSON.ЗаписатьЗначение(timestamp);
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();	
		рез = ЗаписьJSON.Закрыть();

		Текст = Текст + рез + Символы.ПС;
		
		
	КонецЦикла;
	
	Текст = Лев(Текст, СтрДлина(Текст) - 1);

	
	Кодировка = КодировкаТекста.UTF8;
	
	// Извращения для удаления BOM (https://forum.infostart.ru/forum9/topic62033/)
	ЗТ = Новый ЗаписьТекста("C:/BigQuery/PromoCalendar.json", КодировкаТекста.ANSI);
	ЗТ.Закрыть();
	
	ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:/BigQuery/PromoCalendar.json", Кодировка, символы.ПС, Истина, Символы.ПС);            
	ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст); 
	ТекстовыйФайлЗапись.Закрыть();    
	Если ВыполнитьСкрипт("C:/BigQuery/1c_to_bq_json_PromoCalendar.py") = Ложь тогда  
		Возврат Ложь;
	Иначе
		Возврат Истина; 		
	КонецЕсли;
	

			
КонецФункции

Функция Promo(ТаблицаЗн)
			promo_id = Неопределено;
			name = Неопределено;
			description = Неопределено ;
			date_start = Неопределено;
			date_end = Неопределено;
			promo_type_id = Неопределено;
			timestamp = Неопределено;
			action = Неопределено ;

			
	ДанныеСтроки = Новый Структура;
	Текст = "";
	ЗаписьJSON = Новый ЗаписьJSON;
	тНастройкиСериализации = Новый НастройкиСериализацииJSON;
    тНастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO; //"ДатаJSON": "2016-03-15T14:19:48"

	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, Символы.Таб);

			
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДействиеСкидокНаценок.СкидкаНаценка.Ссылка КАК promo_id,
		|	ДействиеСкидокНаценок.СкидкаНаценка.Наименование КАК name,
		|	ДействиеСкидокНаценок.СкидкаНаценка.Представление КАК description,
		|	ДействиеСкидокНаценок.Период КАК date_start,
		|	ДействиеСкидокНаценок.ДатаОкончания КАК date_end,
		|	ДействиеСкидокНаценок.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID КАК promo_type_id,
		|	""create"" КАК action,
		|	ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления.Ссылка КАК SegmentName,
		|	Склады.IDN КАК pos_id,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценок.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
		|			ТОГДА ДействиеСкидокНаценок.СкидкаНаценка.ЗначениеСкидкиНаценки / 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК discount_percent,
		|	ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления КАК СкидкаНаценкаСегментНоменклатурыПредоставления,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценок.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Сумма)
		|			ТОГДА ДействиеСкидокНаценок.СкидкаНаценка.ЗначениеСкидкиНаценки
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК discount_sum
		|ИЗ
		|	РегистрСведений.ДействиеСкидокНаценок КАК ДействиеСкидокНаценок
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО ДействиеСкидокНаценок.Магазин = Склады.Магазин
		|			И (Склады.ТипСклада = &ТипСклада)
		|			И (Склады.ПометкаУдаления = ЛОЖЬ)
		|ГДЕ
		|	НЕ ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления = ЗНАЧЕНИЕ(справочник.СегментыНоменклатуры.ПустаяССылка)
		|	И ДействиеСкидокНаценок.Регистратор В(&Регистратор)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДействиеСкидокНаценок.СкидкаНаценка.Ссылка,
		|	ДействиеСкидокНаценок.Период,
		|	ДействиеСкидокНаценок.ДатаОкончания,
		|	Склады.IDN,
		|	ДействиеСкидокНаценок.СкидкаНаценка.Наименование,
		|	ДействиеСкидокНаценок.СкидкаНаценка.Представление,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценок.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Сумма)
		|			ТОГДА ДействиеСкидокНаценок.СкидкаНаценка.ЗначениеСкидкиНаценки
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления.Ссылка,
		|	ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления,
		|	ДействиеСкидокНаценок.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценок.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
		|			ТОГДА ДействиеСкидокНаценок.СкидкаНаценка.ЗначениеСкидкиНаценки / 100
		|		ИНАЧЕ 0
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	promo_id";
			
	Запрос.УстановитьПараметр("Регистратор",ТаблицаЗн);
	Запрос.УстановитьПараметр("ТипСклада",Перечисления.ТипыСкладов.ТорговыйЗал);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() цикл
		ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
		ЗаписьJSON.ЗаписатьНачалоОбъекта();	

		//promo_id = Выборка.promo_id.УникальныйИдентификатор();
		Если НЕ ЗначениеЗаполнено(Выборка.promo_type_id) тогда 
			promo_type_id =  "1";
		Иначе
			promo_type_id =  Строка(Выборка.promo_type_id);
		КонецЕсли;
		Если promo_type_id = "" тогда 
			promo_type_id =  "1";
		КонецЕсли;
		
		Если  Выборка.date_end = Дата(1, 1, 1, 0, 0, 0) тогда 
			date_end =Формат('20300101',"ДФ=yyyy-MM-dd");
			promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Выборка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(20300101,"ДФ=ddMMyyyy"));
		Иначе
			date_end = Формат(Выборка.date_end,"ДФ=yyyy-MM-dd");
			promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Выборка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(Выборка.date_end,"ДФ=ddMMyyyy"));
		КонецЕсли;
		date_start =  Формат(Выборка.date_start,"ДФ=yyyy-MM-dd");
		//promo_id =  Строка(promo_id) +"_"+  Строка(Формат(date_start,"ДФ=ddMMyyyy")) + Строка(Формат(date_end,"ДФ=ddMMyyyy"));
		timestamp = Формат(ТекущаяДата(),"ДФ='yyyy-MM-dd hh:mm:ss'");
		action = "create";
		name = Выборка.name;
		description = Выборка.description;
		Если ЗначениеЗаполнено(Выборка.SegmentName) тогда 
			SegmentName = Строка(Выборка.SegmentName.УникальныйИдентификатор());
		Иначе
			SegmentName = "";
		КонецЕсли;
		    discount_percent = Выборка.discount_percent;
			ЗаписьJSON.ЗаписатьИмяСвойства("promo_id");
			ЗаписьJSON.ЗаписатьЗначение(promo_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("name");
			ЗаписьJSON.ЗаписатьЗначение(Выборка.name);
			ЗаписьJSON.ЗаписатьИмяСвойства("description");
			ЗаписьJSON.ЗаписатьЗначение(Выборка.description);
			ЗаписьJSON.ЗаписатьИмяСвойства("date_start");
			ЗаписьJSON.ЗаписатьЗначение(date_start);
			ЗаписьJSON.ЗаписатьИмяСвойства("date_end");
			ЗаписьJSON.ЗаписатьЗначение(date_end);
			ЗаписьJSON.ЗаписатьИмяСвойства("promo_type_id");
			ЗаписьJSON.ЗаписатьЗначение(promo_type_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("SegmentName");
			ЗаписьJSON.ЗаписатьЗначение(SegmentName);
			ЗаписьJSON.ЗаписатьИмяСвойства("pos_id");
			ЗаписьJSON.ЗаписатьЗначение(Строка(Выборка.pos_id));
			ЗаписьJSON.ЗаписатьИмяСвойства("discount_percent");
			ЗаписьJSON.ЗаписатьЗначение(Формат(discount_percent,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0"));
			ЗаписьJSON.ЗаписатьИмяСвойства("discount_sum");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Выборка.discount_sum,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0"));
			ЗаписьJSON.ЗаписатьИмяСвойства("action");
			ЗаписьJSON.ЗаписатьЗначение(action);
			ЗаписьJSON.ЗаписатьИмяСвойства("timestamp");
			ЗаписьJSON.ЗаписатьЗначение(timestamp);
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();	
		рез = ЗаписьJSON.Закрыть();

		Текст = Текст + рез + Символы.ПС;
		
		
	КонецЦикла;
	
	Текст = Лев(Текст, СтрДлина(Текст) - 1);

	
	Кодировка = КодировкаТекста.UTF8;
	
	 //Извращения для удаления BOM (https://forum.infostart.ru/forum9/topic62033/)
	ЗТ = Новый ЗаписьТекста("C:/BigQuery/Promo1c.json", КодировкаТекста.ANSI);
	ЗТ.Закрыть();
	
	ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:/BigQuery/Promo1c.json", Кодировка, символы.ПС, Истина, Символы.ПС);            
	ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст); 
	ТекстовыйФайлЗапись.Закрыть();    
	Если ВыполнитьСкрипт("C:/BigQuery/1c_to_bq_json_Promo1c.py") = Ложь тогда  
		Возврат Ложь;
	Иначе
		Возврат Истина; 		
	КонецЕсли;
	


			
КонецФункции

Функция Promo1сРегистра(ТаблицаЗн)
			ДанныеСтроки = Новый Структура;
		Текст = "";
		ЗаписьJSON = Новый ЗаписьJSON;
		тНастройкиСериализации = Новый НастройкиСериализацииJSON;
	    тНастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO; //"ДатаJSON": "2016-03-15T14:19:48"

		ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, Символы.Таб);

	Для Каждого строка из ТаблицаЗн цикл		

		
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДействиеСкидокНаценок.СкидкаНаценка.Ссылка КАК promo_id,
		|	ДействиеСкидокНаценок.СкидкаНаценка.Наименование КАК name,
		|	ДействиеСкидокНаценок.СкидкаНаценка.Представление КАК description,
		|	ДействиеСкидокНаценок.Период КАК date_start,
		|	ДействиеСкидокНаценок.ДатаОкончания КАК date_end,
		|	ДействиеСкидокНаценок.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID КАК promo_type_id,
		|	""create"" КАК action,
		|	ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления.Ссылка КАК SegmentName,
		|	Склады.IDN КАК pos_id,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценок.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
		|			ТОГДА ДействиеСкидокНаценок.СкидкаНаценка.ЗначениеСкидкиНаценки / 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК discount_percent,
		|	ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления КАК СкидкаНаценкаСегментНоменклатурыПредоставления,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценок.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Сумма)
		|			ТОГДА ДействиеСкидокНаценок.СкидкаНаценка.ЗначениеСкидкиНаценки
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК discount_sum
		|ИЗ
		|	РегистрСведений.ДействиеСкидокНаценок КАК ДействиеСкидокНаценок
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО ДействиеСкидокНаценок.Магазин = Склады.Магазин
		|			И (Склады.ТипСклада = &ТипСклада)
		|			И (Склады.ПометкаУдаления = ЛОЖЬ)
		|ГДЕ
		|	НЕ ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления = ЗНАЧЕНИЕ(справочник.СегментыНоменклатуры.ПустаяССылка)
		|	И ДействиеСкидокНаценок.Регистратор = &Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ДействиеСкидокНаценок.СкидкаНаценка.Ссылка,
		|	ДействиеСкидокНаценок.Период,
		|	ДействиеСкидокНаценок.ДатаОкончания,
		|	Склады.IDN,
		|	ДействиеСкидокНаценок.СкидкаНаценка.Наименование,
		|	ДействиеСкидокНаценок.СкидкаНаценка.Представление,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценок.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
		|			ТОГДА ДействиеСкидокНаценок.СкидкаНаценка.ЗначениеСкидкиНаценки
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценок.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Сумма)
		|			ТОГДА ДействиеСкидокНаценок.СкидкаНаценка.ЗначениеСкидкиНаценки
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления.Ссылка,
		|	ДействиеСкидокНаценок.СкидкаНаценка.СегментНоменклатурыПредоставления,
		|	ДействиеСкидокНаценок.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценок.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
		|			ТОГДА ДействиеСкидокНаценок.СкидкаНаценка.ЗначениеСкидкиНаценки / 100
		|		ИНАЧЕ 0
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	promo_id";
			
	Запрос.УстановитьПараметр("Регистратор",Строка.Объект);
	Запрос.УстановитьПараметр("ТипСклада",Перечисления.ТипыСкладов.ТорговыйЗал);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() цикл
		ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
		ЗаписьJSON.ЗаписатьНачалоОбъекта();	

		//promo_id = Выборка.promo_id.УникальныйИдентификатор();
		Если НЕ ЗначениеЗаполнено(Выборка.promo_type_id) тогда 
			promo_type_id =  "1";
		Иначе
			promo_type_id =  Выборка.promo_type_id;
		КонецЕсли;
		Если promo_type_id = "" тогда 
			promo_type_id =  "1";
		КонецЕсли;
		Если  Выборка.date_end = Дата(1, 1, 1, 0, 0, 0) тогда 
			date_end =Формат('20300101',"ДФ=yyyy-MM-dd");
			promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Выборка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(20300101,"ДФ=ddMMyyyy"));
		Иначе
			date_end = Формат(Выборка.date_end,"ДФ=yyyy-MM-dd");
			promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Выборка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(Выборка.date_end,"ДФ=ddMMyyyy"));
		КонецЕсли;
			date_start = Формат(Строка.date_start,"ДФ=yyyy-MM-dd");
			
			//promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(date_start,"ДФ=ddMMyyyy")) + Строка(Формат(date_end,"ДФ=ddMMyyyy"));
		timestamp = Формат(ТекущаяДата(),"ДФ='yyyy-MM-dd hh:mm:ss'");
			action = Строка.action;
			discount_percent = Формат(Выборка.discount_percent,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");;

			pos_id = ПоучитьСклад(Строка.Магазин);		
		
		
		
		
		name = Выборка.name;
		description = Выборка.description;
		
			ЗаписьJSON.ЗаписатьИмяСвойства("promo_id");
			ЗаписьJSON.ЗаписатьЗначение(promo_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("name");
			ЗаписьJSON.ЗаписатьЗначение(Выборка.name);
			ЗаписьJSON.ЗаписатьИмяСвойства("description");
			ЗаписьJSON.ЗаписатьЗначение(Выборка.description);
			ЗаписьJSON.ЗаписатьИмяСвойства("date_start");
			ЗаписьJSON.ЗаписатьЗначение(date_start);
			ЗаписьJSON.ЗаписатьИмяСвойства("date_end");
			ЗаписьJSON.ЗаписатьЗначение(date_end);
			ЗаписьJSON.ЗаписатьИмяСвойства("promo_type_id");
			ЗаписьJSON.ЗаписатьЗначение(promo_type_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("SegmentName");
			ЗаписьJSON.ЗаписатьЗначение(Строка(Выборка.SegmentName.УникальныйИдентификатор()));
			ЗаписьJSON.ЗаписатьИмяСвойства("pos_id");
			ЗаписьJSON.ЗаписатьЗначение(Выборка.pos_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("discount_percent");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Выборка.discount_percent,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0"));
			ЗаписьJSON.ЗаписатьИмяСвойства("discount_sum");
			ЗаписьJSON.ЗаписатьЗначение(Формат(Выборка.discount_sum,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0"));
			ЗаписьJSON.ЗаписатьИмяСвойства("action");
			ЗаписьJSON.ЗаписатьЗначение(action);
			ЗаписьJSON.ЗаписатьИмяСвойства("timestamp");
			ЗаписьJSON.ЗаписатьЗначение(timestamp);
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();	
		рез = ЗаписьJSON.Закрыть();

		Текст = Текст + рез + Символы.ПС;
		
		
	КонецЦикла;
	

	КонецЦикла;	
	Текст = Лев(Текст, СтрДлина(Текст) - 1);

	
	Кодировка = КодировкаТекста.UTF8;
	
	// Извращения для удаления BOM (https://forum.infostart.ru/forum9/topic62033/)
	ЗТ = Новый ЗаписьТекста("C:/BigQuery/Promo1c.json", КодировкаТекста.ANSI);
	ЗТ.Закрыть();
	
	ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:/BigQuery/Promo1c.json", Кодировка, символы.ПС, Истина, Символы.ПС);            
	ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст); 
	ТекстовыйФайлЗапись.Закрыть();    
	Если ВыполнитьСкрипт("C:/BigQuery/1c_to_bq_json_Promo1c.py") = Ложь тогда  
		Возврат Ложь;
	Иначе
		Возврат Истина; 		
	КонецЕсли;


КонецФункции


Функция PromoOnSKUinPOS(ТаблицаЗн)
			
	ДанныеСтроки = Новый Структура;
	Текст = "";
	ЗаписьJSON = Новый ЗаписьJSON;
	тНастройкиСериализации = Новый НастройкиСериализацииJSON;
    тНастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO; //"ДатаJSON": "2016-03-15T14:19:48"

	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, Символы.Таб);

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Ссылка КАК promo_id,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Наименование КАК name,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Представление КАК description,
		|	ДействиеСкидокНаценокСрезПоследних.Период КАК date_start,
		|	ДействиеСкидокНаценокСрезПоследних.ДатаОкончания КАК date_end,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID КАК promo_type_id,
		|	""create"" КАК action,
		|	&ТекДата КАК timestamp,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СегментНоменклатурыПредоставления.Ссылка КАК SegmentName,
		|	ВЫБОР
		|		КОГДА Склады.IDN ЕСТЬ NULL
		|			ТОГДА """"
		|		ИНАЧЕ Склады.IDN
		|	КОНЕЦ КАК pos_id,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
		|			ТОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ЗначениеСкидкиНаценки / 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК discount_percent,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СегментНоменклатурыПредоставления КАК СкидкаНаценкаСегментНоменклатурыПредоставления,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Сумма)
		|			ТОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ЗначениеСкидкиНаценки
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК discount_sum,
		|	ВЫБОР
		|		КОГДА НоменклатураСегмента.Номенклатура.IDN ЕСТЬ NULL
		|			ТОГДА """"
		|		ИНАЧЕ НоменклатураСегмента.Номенклатура.IDN
		|	КОНЕЦ КАК product_id
		|ИЗ
		|	РегистрСведений.ДействиеСкидокНаценок.СрезПоследних(, ) КАК ДействиеСкидокНаценокСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО ДействиеСкидокНаценокСрезПоследних.Магазин = Склады.Магазин
		|			И (Склады.ТипСклада = &ТипСклада)
		|			И (Склады.ПометкаУдаления = ЛОЖЬ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
		|		ПО ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СегментНоменклатурыПредоставления = НоменклатураСегмента.Сегмент
		|ГДЕ
		|	ДействиеСкидокНаценокСрезПоследних.Регистратор В(&ТабРегистратор)
		|	И НЕ ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СегментНоменклатурыПредоставления ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Ссылка,
		|	ДействиеСкидокНаценокСрезПоследних.Период,
		|	ДействиеСкидокНаценокСрезПоследних.ДатаОкончания,
		|	Склады.IDN,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Наименование,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.Представление,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
		|			ТОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ЗначениеСкидкиНаценки
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Сумма)
		|			ТОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ЗначениеСкидкиНаценки
		|		ИНАЧЕ 0
		|	КОНЕЦ,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СегментНоменклатурыПредоставления.Ссылка,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СегментНоменклатурыПредоставления,
		|	ВЫБОР
		|		КОГДА НоменклатураСегмента.Номенклатура.IDN ЕСТЬ NULL
		|			ТОГДА """"
		|		ИНАЧЕ НоменклатураСегмента.Номенклатура.IDN
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Склады.IDN ЕСТЬ NULL
		|			ТОГДА """"
		|		ИНАЧЕ Склады.IDN
		|	КОНЕЦ,
		|	ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID,
		|	ВЫБОР
		|		КОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
		|			ТОГДА ДействиеСкидокНаценокСрезПоследних.СкидкаНаценка.ЗначениеСкидкиНаценки / 100
		|		ИНАЧЕ 0
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	promo_id";
	Запрос.УстановитьПараметр("ТабРегистратор",ТаблицаЗн);
	Запрос.УстановитьПараметр("ТипСклада",Перечисления.ТипыСкладов.ТорговыйЗал);
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() цикл
		ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
		ЗаписьJSON.ЗаписатьНачалоОбъекта();	
		Если  Выборка.date_end = Дата(1, 1, 1, 0, 0, 0) тогда 
			date_end =Формат('20300101',"ДФ=yyyy-MM-dd");
			promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Выборка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(20300101,"ДФ=ddMMyyyy"));
		Иначе
			date_end = Формат(Выборка.date_end,"ДФ=yyyy-MM-dd");
			promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Выборка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(Выборка.date_end,"ДФ=ddMMyyyy"));
		КонецЕсли;
		date_start = Формат(Выборка.date_start,"ДФ=yyyy-MM-dd");
		
		//promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(date_start,"ДФ=ddMMyyyy")) + Строка(Формат(date_end,"ДФ=ddMMyyyy"));
		timestamp = Формат(ТекущаяДата(),"ДФ='yyyy-MM-dd hh:mm:ss'");
		action = "create";
		discount_percent =  Формат(Выборка.discount_percent,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
		pos_id = Выборка.pos_id;		
		discount_sum = Формат(Выборка.discount_sum,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
		discount_price = Формат(0,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
		bonus_percent = Формат(0,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
		bonus_sum = Формат(0,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
		bonus_percent = Формат(0,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");         
		product_id = (Выборка.product_id); 
		ЗаписьJSON.ЗаписатьИмяСвойства("promo_id");
		ЗаписьJSON.ЗаписатьЗначение(promo_id);
		ЗаписьJSON.ЗаписатьИмяСвойства("product_id");
		ЗаписьJSON.ЗаписатьЗначение(product_id);
		ЗаписьJSON.ЗаписатьИмяСвойства("pos_id");
		ЗаписьJSON.ЗаписатьЗначение(pos_id);
		ЗаписьJSON.ЗаписатьИмяСвойства("discount_percent");
		ЗаписьJSON.ЗаписатьЗначение(discount_percent);
		ЗаписьJSON.ЗаписатьИмяСвойства("discount_sum");
		ЗаписьJSON.ЗаписатьЗначение(discount_sum);
		ЗаписьJSON.ЗаписатьИмяСвойства("discount_price");
		ЗаписьJSON.ЗаписатьЗначение(discount_price);
		ЗаписьJSON.ЗаписатьИмяСвойства("bonus_percent");
		ЗаписьJSON.ЗаписатьЗначение(bonus_percent);
		ЗаписьJSON.ЗаписатьИмяСвойства("bonus_sum");
		ЗаписьJSON.ЗаписатьЗначение(bonus_sum);
		ЗаписьJSON.ЗаписатьИмяСвойства("action");
		ЗаписьJSON.ЗаписатьЗначение(action);
		ЗаписьJSON.ЗаписатьИмяСвойства("timestamp");
		ЗаписьJSON.ЗаписатьЗначение(timestamp);
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();	
		рез = ЗаписьJSON.Закрыть();

		Текст = Текст + рез + Символы.ПС;

	КонецЦикла;
	
	Текст = Лев(Текст, СтрДлина(Текст) - 1);

	
	Кодировка = КодировкаТекста.UTF8;
	
	// Извращения для удаления BOM (https://forum.infostart.ru/forum9/topic62033/)
	ЗТ = Новый ЗаписьТекста("C:/BigQuery/1c_to_bq_json_PromoOnSKUinPOS.json", КодировкаТекста.ANSI);
	ЗТ.Закрыть();
	
	ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:/BigQuery/1c_to_bq_json_PromoOnSKUinPOS.json", Кодировка, символы.ПС, Истина, Символы.ПС);            
	ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст); 
	ТекстовыйФайлЗапись.Закрыть();    
	Если ВыполнитьСкрипт("C:/BigQuery/1c_to_bq_json_PromoOnSKUinPOS.py") = Ложь тогда  
		Возврат Ложь;
	Иначе
		Возврат Истина; 		
	КонецЕсли;

КонецФункции

Функция ОбработатьРегистр(ТаблицаЗн) Экспорт
	Успешно = PromoCalendarИзРегистра(ТаблицаЗн);
	если Успешно тогда  
	Успешно = Promo1сРегистра(ТаблицаЗн);
	КонецЕсли;	
	Возврат Успешно;
КонецФункции

Функция PromoOnSKUinPOSизРегистра(ТаблицаЗн)
			ДанныеСтроки = Новый Структура;
		Текст = "";
		ЗаписьJSON = Новый ЗаписьJSON;
		тНастройкиСериализации = Новый НастройкиСериализацииJSON;
	    тНастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO; //"ДатаJSON": "2016-03-15T14:19:48"

		ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, Символы.Таб);

	Для Каждого строка из ТаблицаЗн цикл		

		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.Ссылка КАК promo_id,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.Наименование КАК name,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.Представление КАК description,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID КАК promo_type_id,
			|	ВЫБОР
			|		КОГДА МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
			|			ТОГДА МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.ЗначениеСкидкиНаценки / 100
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК discount_percent,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.СегментНоменклатурыПредоставления КАК СкидкаНаценкаСегментНоменклатурыПредоставления,
			|	ВЫБОР
			|		КОГДА МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Сумма)
			|			ТОГДА МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.ЗначениеСкидкиНаценки
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК discount_sum,
			|	ВЫБОР
			|		КОГДА НоменклатураСегмента.Номенклатура.IDN ЕСТЬ NULL
			|			ТОГДА """"
			|		ИНАЧЕ НоменклатураСегмента.Номенклатура.IDN
			|	КОНЕЦ КАК product_id,
			|	Склады.IDN КАК IDN
			|ИЗ
			|	Документ.МаркетинговаяАкция.СкидкиНаценки КАК МаркетинговаяАкцияСкидкиНаценки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
			|		ПО МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка = НоменклатураСегмента.Сегмент
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
			|		ПО МаркетинговаяАкцияСкидкиНаценки.Магазин = Склады.Магазин
			|			И (Склады.ПометкаУдаления = ЛОЖЬ)
			|			И (Склады.ТипСклада = &ТипСклада)
			|ГДЕ
			|	МаркетинговаяАкцияСкидкиНаценки.Ссылка = &Ссылка
			|	И НЕ МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.СегментНоменклатурыПредоставления ЕСТЬ NULL
			|
			|СГРУППИРОВАТЬ ПО
			|	НоменклатураСегмента.Номенклатура.IDN,
			|	ВЫБОР
			|		КОГДА МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
			|			ТОГДА МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.ЗначениеСкидкиНаценки
			|		ИНАЧЕ 0
			|	КОНЕЦ,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.СегментНоменклатурыПредоставления,
			|	ВЫБОР
			|		КОГДА МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Сумма)
			|			ТОГДА МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.ЗначениеСкидкиНаценки
			|		ИНАЧЕ 0
			|	КОНЕЦ,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.Ссылка,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.Наименование,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.Представление,
			|	ВЫБОР
			|		КОГДА НоменклатураСегмента.Номенклатура.IDN ЕСТЬ NULL
			|			ТОГДА """"
			|		ИНАЧЕ НоменклатураСегмента.Номенклатура.IDN
			|	КОНЕЦ,
			|	Склады.IDN,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID,
			|	ВЫБОР
			|		КОГДА МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
			|			ТОГДА МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.ЗначениеСкидкиНаценки / 100
			|		ИНАЧЕ 0
			|	КОНЕЦ
			|
			|УПОРЯДОЧИТЬ ПО
			|	promo_id";
		
		Запрос.УстановитьПараметр("ТипСклада",Перечисления.ТипыСкладов.ТорговыйЗал);
		Запрос.УстановитьПараметр("Ссылка",Строка.Объект);
		Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() тогда 
			Возврат Истина;
		КонецЕсли;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() цикл
			ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
			ЗаписьJSON.ЗаписатьНачалоОбъекта();	

			//Если  Строка.date_end = Дата(1, 1, 1, 0, 0, 0) тогда 
			//	date_end =Формат('20300101',"ДФ=yyyy-MM-dd");
			//Иначе
			//	date_end = Формат(Строка.date_end,"ДФ=yyyy-MM-dd");
			//КонецЕсли;
			Если  Строка.date_end = Дата(1, 1, 1, 0, 0, 0) тогда 
				date_end =Формат('20300101',"ДФ=yyyy-MM-dd");
				promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Строка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(20300101,"ДФ=ddMMyyyy"));
			Иначе
				date_end = Формат(Выборка.date_end,"ДФ=yyyy-MM-dd");
				promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Строка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(Строка.date_end,"ДФ=ddMMyyyy"));
			КонецЕсли;
			
			
			date_start = Формат(Строка.date_start,"ДФ=yyyy-MM-dd");
			
			//promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(date_start,"ДФ=ddMMyyyy")) + Строка(Формат(date_end,"ДФ=ddMMyyyy"));
			timestamp = Формат(ТекущаяДата(),"ДФ='yyyy-MM-dd hh:mm:ss'");
			action = Строка.action;
			discount_percent =  Формат(Выборка.discount_percent,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
			pos_id = ПоучитьСклад(Строка.Магазин);		
			discount_sum = Формат(Выборка.discount_sum,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
			discount_price = Формат(0,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
			bonus_percent = Формат(0,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
			bonus_sum = Формат(0,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");
			bonus_percent = Формат(0,"ЧДЦ=2; ЧРД=.; ЧН=0; ЧГ=0");         
			product_id = (Выборка.product_id); 
			ЗаписьJSON.ЗаписатьИмяСвойства("promo_id");
			ЗаписьJSON.ЗаписатьЗначение(promo_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("product_id");
			ЗаписьJSON.ЗаписатьЗначение(product_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("pos_id");
			ЗаписьJSON.ЗаписатьЗначение(pos_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("discount_percent");
			ЗаписьJSON.ЗаписатьЗначение(discount_percent);
			ЗаписьJSON.ЗаписатьИмяСвойства("discount_sum");
			ЗаписьJSON.ЗаписатьЗначение(discount_sum);
			ЗаписьJSON.ЗаписатьИмяСвойства("discount_price");
			ЗаписьJSON.ЗаписатьЗначение(discount_price);
			ЗаписьJSON.ЗаписатьИмяСвойства("bonus_percent");
			ЗаписьJSON.ЗаписатьЗначение(bonus_percent);
			ЗаписьJSON.ЗаписатьИмяСвойства("bonus_sum");
			ЗаписьJSON.ЗаписатьЗначение(bonus_sum);
			ЗаписьJSON.ЗаписатьИмяСвойства("action");
			ЗаписьJSON.ЗаписатьЗначение(action);
			ЗаписьJSON.ЗаписатьИмяСвойства("timestamp");
			ЗаписьJSON.ЗаписатьЗначение(timestamp);
				
			ЗаписьJSON.ЗаписатьКонецОбъекта();	
			рез = ЗаписьJSON.Закрыть();

			Текст = Текст + рез + Символы.ПС;

		КонецЦикла;
	КонецЦикла;	
	Текст = Лев(Текст, СтрДлина(Текст) - 1);

	
	Кодировка = КодировкаТекста.UTF8;
	
	// Извращения для удаления BOM (https://forum.infostart.ru/forum9/topic62033/)
	ЗТ = Новый ЗаписьТекста("C:/BigQuery/1c_to_bq_json_PromoOnSKUinPOS.json", КодировкаТекста.ANSI);
	ЗТ.Закрыть();
	
	ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:/BigQuery/1c_to_bq_json_PromoOnSKUinPOS.json", Кодировка, символы.ПС, Истина, Символы.ПС);            
	ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст); 
	ТекстовыйФайлЗапись.Закрыть();    
	Если ВыполнитьСкрипт("C:/BigQuery/1c_to_bq_json_PromoOnSKUinPOS.py") = Ложь тогда  
		Возврат Ложь;
	Иначе
		Возврат Истина; 		
	КонецЕсли;


КонецФункции


Функция PromoCalendarИзРегистра(ТаблицаЗн)
	ДанныеСтроки = Новый Структура;
	Текст = "";
	ЗаписьJSON = Новый ЗаписьJSON;
	тНастройкиСериализации = Новый НастройкиСериализацииJSON;
    тНастройкиСериализации.ФорматСериализацииДаты = ФорматДатыJSON.ISO; //"ДатаJSON": "2016-03-15T14:19:48"

	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, Символы.Таб);


	Для каждого строка из ТаблицаЗн цикл 
			
			
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
			"ВЫБРАТЬ
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.Ссылка КАК promo_id,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.Наименование КАК name,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.Представление КАК description,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID КАК promo_type_id
			|ИЗ
			|	Документ.МаркетинговаяАкция.СкидкиНаценки КАК МаркетинговаяАкцияСкидкиНаценки
			|ГДЕ
			|	МаркетинговаяАкцияСкидкиНаценки.Ссылка = &Ссылка
			|	И НЕ МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.СегментНоменклатурыПредоставления ЕСТЬ NULL
			|
			|СГРУППИРОВАТЬ ПО
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.Ссылка,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.Наименование,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.Представление,
			|	МаркетинговаяАкцияСкидкиНаценки.СкидкаНаценка.ВидСкидкиНаценки.BigQueryID
			|
			|УПОРЯДОЧИТЬ ПО
			|	promo_id";

			
	Запрос.УстановитьПараметр("Ссылка",Строка.Объект);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() тогда 
		Возврат Истина;
	КонецЕсли;
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() цикл
		ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
		ЗаписьJSON.ЗаписатьНачалоОбъекта();	
		//promo_id = Выборка.promo_id.УникальныйИдентификатор();
		Если НЕ ЗначениеЗаполнено(Выборка.promo_type_id) тогда 
			promo_type_id =  "1";
		Иначе
			promo_type_id =  Выборка.promo_type_id;
		КонецЕсли;
		Если promo_type_id = "" тогда 
			promo_type_id =  "1";
		КонецЕсли;
	    Если  Строка.date_end = Дата(1, 1, 1, 0, 0, 0) тогда 
			date_end =Формат('20300101',"ДФ=yyyy-MM-dd");
			promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Строка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(20300101,"ДФ=ddMMyyyy"));
		Иначе
			date_end = Формат(Выборка.date_end,"ДФ=yyyy-MM-dd");
			promo_id =  Строка(Выборка.promo_id.УникальныйИдентификатор()) +"_"+  Строка(Формат(Строка.date_start,"ДФ=ddMMyyyy")) + Строка(Формат(Строка.date_end,"ДФ=ddMMyyyy"));
		КонецЕсли;
		date_start = Формат(Строка.date_start,"ДФ=yyyy-MM-dd");
		//promo_id =  Строка(promo_id) +"_"+  Строка(Формат(date_start,"ДФ=ddMMyyyy")) + Строка(Формат(date_end,"ДФ=ddMMyyyy"));
		timestamp = Формат(ТекущаяДата(),"ДФ='yyyy-MM-dd hh:mm:ss'");
		action = строка.action;
		name = Выборка.name;
		description = Выборка.description;
		
			ЗаписьJSON.ЗаписатьИмяСвойства("promo_id");
			ЗаписьJSON.ЗаписатьЗначение(promo_id);
			ЗаписьJSON.ЗаписатьИмяСвойства("promo_type_id");
			ЗаписьJSON.ЗаписатьЗначение(promo_type_id); 			
			ЗаписьJSON.ЗаписатьИмяСвойства("name");
			ЗаписьJSON.ЗаписатьЗначение(name);
			ЗаписьJSON.ЗаписатьИмяСвойства("description");
			ЗаписьJSON.ЗаписатьЗначение(description);
			ЗаписьJSON.ЗаписатьИмяСвойства("date_start");
			ЗаписьJSON.ЗаписатьЗначение(date_start);
			ЗаписьJSON.ЗаписатьИмяСвойства("date_end");
			ЗаписьJSON.ЗаписатьЗначение(date_end);
			ЗаписьJSON.ЗаписатьИмяСвойства("action");
			ЗаписьJSON.ЗаписатьЗначение(action);
			ЗаписьJSON.ЗаписатьИмяСвойства("timestamp");
			ЗаписьJSON.ЗаписатьЗначение(timestamp);
			
		ЗаписьJSON.ЗаписатьКонецОбъекта();	
		рез = ЗаписьJSON.Закрыть();

		Текст = Текст + рез + Символы.ПС;
		
		
	КонецЦикла;
	КонецЦикла;
	Текст = Лев(Текст, СтрДлина(Текст) - 1);

	
	Кодировка = КодировкаТекста.UTF8;
	
	// Извращения для удаления BOM (https://forum.infostart.ru/forum9/topic62033/)
	ЗТ = Новый ЗаписьТекста("C:/BigQuery/PromoCalendar.json", КодировкаТекста.ANSI);
	ЗТ.Закрыть();
	
	ТекстовыйФайлЗапись = Новый ЗаписьТекста("C:/BigQuery/PromoCalendar.json", Кодировка, символы.ПС, Истина, Символы.ПС);            
	ТекстовыйФайлЗапись.ЗаписатьСтроку(Текст); 
	ТекстовыйФайлЗапись.Закрыть();    
	Если ВыполнитьСкрипт("C:/BigQuery/1c_to_bq_json_PromoCalendar.py") = Ложь тогда  
		Возврат Ложь;
	Иначе
		Возврат Истина; 		
	КонецЕсли;
	

			
КонецФункции

Функция ПоучитьСклад(Магазин)
	     	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Склады.IDN КАК IDN
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.Магазин = &Магазин
		|	И Склады.ТипСклада = &ТипСклада
		|	И Склады.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("ТипСклада", Перечисления.ТипыСкладов.ТорговыйЗал);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если РезультатЗапроса.Пустой() тогда 
		Возврат "";
	Иначе
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.IDN;
	КонецЦикла;
	КонецЕсли;	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецФункции
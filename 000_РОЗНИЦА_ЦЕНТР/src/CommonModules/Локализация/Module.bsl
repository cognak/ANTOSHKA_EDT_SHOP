// Возвращает код языка интерфейса в формате ru/uk
Функция КодЯзыкаИнтерфейса() Экспорт
	
	Возврат ТекущийЯзык().КодЯзыка;
	
КонецФункции // КодЯзыкаИнтерфейса()

// Возвращает код языка информационной базы, который указан 
// в региональных настройках (в конфигураторе)
Функция КодЯзыкаИнформационнойБазы() Экспорт
	
	// любой язык кроме украинского будем считать русским
	Возврат ?(Лев(КодЛокализацииИнформационнойБазы(), 2) = "uk", "uk", "ru");
	
КонецФункции //КодЯзыкаИнформационнойБазы()

// Функция возвращает имя языка для формирования нерегламент печатных форм
// документов и некоторых справочников с учетом установленного режима в настройках
// пользователя. По-умолчанию это язык информционной базы.
//
// Параметры
//     	РежимПользователя - Установленное значение в настройках пользователя
//
// Возвращаемое значение:
//		Строка   – код языка
//
Функция ПолучитьЯзыкФормированияПечатныхФорм() Экспорт

	//+HVOYA Mykhailo
	УстановитьПривилегированныйРежим(Истина);
	//-HVOYA Mykhailo
	РежимПользователя = Константы.РежимФормированияПечатныхФорм.Получить();
	//+HVOYA Mykhailo
	УстановитьПривилегированныйРежим(Ложь);
	//-HVOYA Mykhailo
	Если РежимПользователя = Перечисления.РежимыФормированияПечатныхФорм.НаРусскомЯзыке Тогда
		
		КодЯзыкаПечать = "ru";
		
	ИначеЕсли РежимПользователя = Перечисления.РежимыФормированияПечатныхФорм.НаУкраинскомЯзыке Тогда
		
		КодЯзыкаПечать = "uk";
		
	Иначе// РежимПользователя = Перечисления.РежимыФормированияПечатныхФорм.НаЯзыкеИнформационнойБазы 
		 // или по - умолчанию
		 
		КодЯзыкаПечать = КодЯзыкаИнформационнойБазы();
		
	КонецЕсли;

	Возврат КодЯзыкаПечать;
	
КонецФункции // ПолучитьЯзыкФормированияПечатныхФорм()

//Преобразует код языка в формат понятный системной фунции Формат()
// Параметры
//  КодЯзыка  	 – Строка – код языка в формате uk/ru
//
// Возвращаемое значение:
//   Строка   	 – код языка в формате ru_RU/uk_UA
//
Функция ОпределитьКодЯзыкаДляФормат(КодЯзыка) Экспорт
	
//	Возврат ?(КодЯзыка = "uk", "uk_UA", "ru_RU");
	Возврат "uk_UA";	//	LNK 12.12.2022 09:37:51
	
КонецФункции

// По коду языка возвращает строку параметров прописи из справочника Валюты 
//(ПараметрыПрописиНаРусском или ПараметрыПрописиНаУкраинском).
Функция ПараметрыПрописи(Валюта, КодЯзыка) Экспорт
	
	Возврат ?(КодЯзыка = "uk",Валюта.ПараметрыПрописиНаУкраинском,Валюта.ПараметрыПрописиНаРусском);
	
КонецФункции // ПараметрыПрописи()

//Если параметр КодЯзыка совпадает с кодом языка интерфейса (язКодЯзыкаИнтерфейса()),
//	то представление получается через ОбъектМетаданных.Представление()
//Если не совпадает, то возвращаются синонимы в зависимости от имени объекта
// 
// Параметры
//  СсылкаНаОбъект		 - Ссылка на объект, для которого нужно получить перевод
//  КодЯзыка  	 – Строка – код языка в формате uk/ru
//
Функция ПолучитьЛокализованныйСинонимОбъекта(Ссылка, КодЯзыка) Экспорт

	Если ТипЗнч(Ссылка) = Тип("ВыборкаИзРезультатаЗапроса")
			ИЛИ ТипЗнч(Ссылка) = Тип("Структура") Тогда
		СсылкаНаОбъект = Ссылка.Ссылка;
	Иначе 
		СсылкаНаОбъект = Ссылка;
	КонецЕсли;	
	
	МетаданныеДляСсылки = СсылкаНаОбъект.Метаданные();
	ПолноеИмяОбъектаМетаданных = МетаданныеДляСсылки.ПолноеИмя();
	
	Если Метаданные.Документы.Содержит(МетаданныеДляСсылки) Тогда
		Если КодЯзыка = КодЯзыкаИнтерфейса() Тогда
			// "переводить" не нужно
			Возврат МетаданныеДляСсылки.Синоним;
		КонецЕсли;
		// это документ
		ИмяДляПеревода = МетаданныеДляСсылки.Имя;
	ИначеЕсли Метаданные.Перечисления.Содержит(МетаданныеДляСсылки) Тогда
		// это перечисление
		Если КодЯзыка = КодЯзыкаИнтерфейса() Тогда
			// "переводить" не нужно
			Возврат Строка(СсылкаНаОбъект);
		КонецЕсли;
		// имя элемента перечисления получить из метаданных "трудно", 
		// поэтому для перевода будем использовать синоним на языке интерфейса
		ИндексЗначения = Перечисления[МетаданныеДляСсылки.Имя].Индекс(СсылкаНаОбъект);
		ИмяДляПеревода = МетаданныеДляСсылки.ЗначенияПеречисления[ИндексЗначения].Имя;
	КонецЕсли; 
	
	РезультатПеревода = "";
	РезультатПеревода = ОбработатьПереводы(ПолноеИмяОбъектаМетаданных, ИмяДляПеревода, КодЯзыка);
	//Если РезультатПеревода = "" Тогда
	//	ОбработатьДополнительныеПереводы(ПолноеИмяОбъектаМетаданных, ИмяДляПеревода, КодЯзыка);
	//КонецЕсли;
	
	Возврат РезультатПеревода;
КонецФункции // ПредставлениеОбъекта()

// Возвращает представление объекта на указанном языке
// Фактически обрабатываются документы и перечисления
// Параметры
//  Ссылка    – <произвольный>
//  КодЯзыка  – <строка> – код языка
//
// Возвращаемое значение:
//   <Строка>   – представление объекта
//
Функция ПолучитьЛокализованноеПредставление(Ссылка, КодЯзыка) Экспорт

	ТипЗначенияСсылки = ТипЗнч(Ссылка);
	
	Если Ссылка = Неопределено ИЛИ Ссылка = NULL Тогда
		
		Возврат "";
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗначенияСсылки) // это документ
			ИЛИ ТипЗначенияСсылки = Тип("ВыборкаИзРезультатаЗапроса")
			ИЛИ ТипЗначенияСсылки = Тип("Структура") Тогда
	
		Возврат ФормированиеПечатныхФормСервер.СформироватьЗаголовокДокумента(Ссылка, ПолучитьЛокализованныйСинонимОбъекта(Ссылка, КодЯзыка), КодЯзыка);
		
	ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипЗначенияСсылки) Тогда

		Возврат ПолучитьЛокализованныйСинонимОбъекта(Ссылка, КодЯзыка);
			
	Иначе
		
		Возврат Строка(Ссылка);
		
	КонецЕсли;	
	
КонецФункции // ПолучитьЛокализованноеПредставление()

Функция ОбработатьПереводы(ПолноеИмяОбъектаМетаданных, ИмяДляПеревода, КодЯзыка)
	    
		Если ПолноеИмяОбъектаМетаданных = "Документ.ВозвратТоваровОтПокупателя" Тогда 
			Возврат НСтр( "ru='Возврат товаров от покупателя';uk='Повернення товарів від покупця';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ВозвратТоваровПоставщику" Тогда 
			Возврат НСтр( "ru='Возврат товаров поставщику';uk='Повернення товарів постачальнику';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ОтчетОРозничныхПродажах" Тогда 
			Возврат НСтр( "ru='Отчет о розничных продажах';uk='Звіт про роздрібний продаж';" ,КодЯзыка);	
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ОприходованиеТоваров" Тогда 
			Возврат НСтр( "ru='Оприходование товаров';uk='Оприбуткування товарів';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПеремещениеТоваров" Тогда 
			Возврат НСтр( "ru='Перемещение товаров';uk='Переміщення товарів';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПересортицаТоваров" Тогда 
			Возврат НСтр( "ru='Пересортица товаров';uk='Пересортица товарів';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПоступлениеТоваров" Тогда 
			Возврат НСтр( "ru='Поступление товаров';uk='Надходження товарів';" ,КодЯзыка);			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПриказНаПроведениеИнвентаризацииТоваров" Тогда 
			Возврат НСтр( "ru='Приказ на пересчет товаров';uk='Наказ на перерахування товарів';" ,КодЯзыка);			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПриходныйКассовыйОрдер" Тогда 
			Возврат НСтр( "ru='Приходный кассовый ордер';uk='Прибутковий касовий ордер';" ,КодЯзыка); 		
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ПриходныйОрдерНаТовары" Тогда 
			Возврат НСтр( "ru='Приходный ордер на товары';uk='Прибутковий ордер на товари';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.РасходныйКассовыйОрдер" Тогда 
			Возврат НСтр( "ru='Расходный кассовый ордер';uk='Видатковий касовий ордер';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.РасходныйОрдерНаТовары" Тогда 
			Возврат НСтр( "ru='Расходный ордер на товары';uk='Видатковий ордер на товари';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.РеализацияТоваров" Тогда 
			Возврат НСтр( "ru='Реализация товаров';uk='Реалізація товарів';" ,КодЯзыка); 
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.СборкаТоваров" Тогда 
			Возврат НСтр("ru='Сборка товаров';uk='Складання товарів'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.СписаниеТоваров" Тогда 
			Возврат НСтр("ru='Списание товаров';uk='Списання товарів'" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.УстановкаЦенНоменклатуры" Тогда 
			Возврат НСтр( "ru='Установка цен номенклатуры';uk='Встановлення цін номенклатури';" ,КодЯзыка);
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Документ.ЧекККМ" Тогда 
			Возврат НСтр( "ru='Товарний чек';uk='Товарний чек';" ,КодЯзыка);
			
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.СтавкиНДС" Тогда 
				
			Если ИмяДляПеревода = "БезНДС" Тогда 
				Возврат НСтр( "ru='Без НДС';uk='Без ПДВ';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "НДС0" Тогда 
				Возврат НСтр( "ru='0%';uk='0%';" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "НДС7" Тогда 
				Возврат НСтр( "ru='7%';uk='7%';" ,КодЯзыка);
			ИначеЕсли ИмяДляПеревода = "НДС20" Тогда 
				Возврат НСтр( "ru='20%';uk='20%';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "НеНДС" Тогда 
				Возврат НСтр( "ru='Не НДС';uk='Не ПДВ';" ,КодЯзыка);			
			КонецЕсли;
			
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ТипыОплатЧекаККМ" Тогда 
			Если ИмяДляПеревода = "Наличные" Тогда 
				Возврат НСтр( "ru='Наличные';uk='Готівка';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ПлатежнаяКарта" Тогда 
				Возврат НСтр( "ru='Платежная карта';uk='Платіжна карта';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "БанковскийКредит" Тогда 
				Возврат НСтр( "ru='Банковский кредит';uk='Банківський кредит';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "ПодарочныйСертификат" Тогда 
				Возврат НСтр( "ru='Подарочный сертификат';uk='Подарунковий сертифікат';" ,КодЯзыка);			
			КонецЕсли;
			
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ТипыСкладов" Тогда 
			Если ИмяДляПеревода = "ТорговыйЗал" Тогда 
				Возврат НСтр( "ru='Торговый зал';uk='Торговельний зал';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "СкладскоеПомещение" Тогда 
				Возврат НСтр( "ru='Складское помещение';uk='Складське приміщення';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "УдалитьВременноеХранилище" Тогда 
				Возврат НСтр( "ru='Удалить временное хранилище';uk='Вилучити тимчасове сховище';" ,КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "УдалитьСкладЦентральногоОфиса" Тогда 
				Возврат НСтр( "ru='Удалить склад центрального офиса';uk='Вилучити склад центрального офісу';" ,КодЯзыка);			
			КонецЕсли;
			
		
		ИначеЕсли ПолноеИмяОбъектаМетаданных = "Перечисление.ВидыОперацийКомплектацияНоменклатуры" Тогда 
			Если ИмяДляПеревода = "Комплектация" Тогда 
				Возврат НСтр( "ru='Сборка из комплектующих';uk='Збірка з комплектуючих';", КодЯзыка);			
			ИначеЕсли ИмяДляПеревода = "Разукомплектация" Тогда 
				Возврат НСтр( "ru='Разборка на комплектующие';uk='Розбирання на комплектуючі';", КодЯзыка);			
			КонецЕсли;
		
		Иначе		
			Возврат ""; 			
		КонецЕсли;	

КонецФункции //ОбработатьПереводы()

// Проверяет, соответсвует ли язык платформы 
Процедура ПроверитьСоответсвиеЯзыкаПлатформыИПользователя() Экспорт
	
	ЯзыкПлатформы = ТекущийЯзыкСистемы();
	ЯзыкИнтерфейса = КодЯзыкаИнтерфейса();
	Если ЯзыкПлатформы <> ЯзыкИнтерфейса Тогда
		Сообщить(СтрШаблон(НСтр("ru='Язык интерфейса платформы 1С:Предприятие (""¤1¤"") не совпадает с языком интерфейса пользователя (""¤2¤"")!"
"Для корректной работы рекомендуется устанавливать одинаковые языки!"
"Запустить платформу 1С:Предприятие с необходимым языком интерфейса можно при помощи параметра запуска ""/L uk"" (или ""/L ru"").';uk='Мова інтерфейсу платформи 1С:Підприємство (""¤1¤"") не співпадає з мовою інтерфейсу користувача (""¤2¤"")!"
"Для коректної роботи рекомендується встановлювати однакові мови!"
"Запустити платформу 1С:Підприємство з необхідною мовою інтерфейсу можна за допомогою параметру запуску ""/L uk"" (або ""/L ru"").'"),ЯзыкПлатформы,ЯзыкИнтерфейса));
	КонецЕсли;
	
КонецПроцедуры

#Область ПрограммныйИнтерфейс

// Оплатить на сервере.
// 
// Параметры:
//  НомерЗаказа - Строка - Номер заказа
//  СсылкаНаДокумент - ДокументСсылка.ЗаказПокупателя - Ссылка на документ
//  НомерТелефонаКлиента - Строка - Номер телефона клиента
//  НомерОплаты - Число - Номер оплаты
//  СуммаОплаты - Число - Сумма оплаты
//  ПрошлыйИД - Строка - Прошлый ИД
//  НоваяОплата - Булево - Новая оплата
// 
// Возвращаемое значение:
//  Строка - Уникальный идентификатор оплаты
Функция ОплатитьНаСервере(НомерЗаказа, СсылкаНаДокумент, НомерТелефонаКлиента, НомерОплаты, СуммаОплаты, ПрошлыйИД, НоваяОплата = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеLiqPay = ОбменСБанкамиПовтИсп.ДанныеLiqPay();
	
 	АдресСайта = ДанныеLiqPay.АдресСайта;
	Порт = ДанныеLiqPay.Порт;
	Логин = ДанныеLiqPay.Логин;
	Пароль = ДанныеLiqPay.Пароль;
	ИмяКаталога = "/";
	FTPСоединение = Новый FTPСоединение(АдресСайта,Порт,Логин,Пароль);
	FTPСоединение.УстановитьТекущийКаталог(ИмяКаталога);
	FTPСоединение.Удалить(ИмяКаталога, ПрошлыйИД + ".html");  
	
	Order_УН = СтрЗаменить(Новый УникальныйИдентификатор, "-", "");

	Если НоваяОплата Тогда 
	
		Order_id = СокрЛП(НомерЗаказа) + ?(НомерОплаты = 0, "", "-" + Строка(НомерОплаты));
		Summa = Формат(СуммаОплаты, "ЧРД=.; ЧГ=0");
		
		Public_key = ДанныеLiqPay.public_key; 
		
		СтруктураЗапроса = Новый Структура;
		СтруктураЗапроса.Вставить("action", "pay");
		СтруктураЗапроса.Вставить("amount", Summa);
		СтруктураЗапроса.Вставить("currency", "UAH");
		СтруктураЗапроса.Вставить("description", "Заказ № " + Order_id);
		СтруктураЗапроса.Вставить("order_id", Order_id);
		СтруктураЗапроса.Вставить("version", "3");
		СтруктураЗапроса.Вставить("server_url", "https://cbone.antoshka.ua/" + Order_УН);
		СтруктураЗапроса.Вставить("public_key", Public_key); 
		
		ЗаписьJSON = Новый ЗаписьJSON; 
	    ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет)); 
		ЗаписатьJSON(ЗаписьJSON,СтруктураЗапроса);
	    СтрокаJSON = ЗаписьJSON.Закрыть();
	    СтрокаJSON = СтрЗаменить(СтрокаJSON, " ", "");
		
		ДанныеДляОтправки = СформироватьДанныеLiqPay(СтрокаJSON);
		
		ТекстДокумента = "<!DOCTYPE html>";
		ТекстДокумента = ТекстДокумента + "<html><head><title>Головна сторінка сайту</title></head>";
		ТекстДокумента = ТекстДокумента + "<body><h1>Замовлення № " + Order_id + ". Сума оплати: " + Формат(Summa, "ЧРД=.; ЧГ=0;") + " грн.</h1>";
		ТекстДокумента = ТекстДокумента + "<form method='post' action='https://www.liqpay.ua/api/3/checkout/' accept-charset='utf-8'>";
		ТекстДокумента = ТекстДокумента + "<input type='hidden' name='data' value='" + ДанныеДляОтправки.Данные + "'/>";
		ТекстДокумента = ТекстДокумента + "<input type='hidden' name='signature' value='" + ДанныеДляОтправки.Сигнатура + "'/>";
		ТекстДокумента = ТекстДокумента + "<input type='image' src='//static.liqpay.ua/buttons/payUk.png' name='btn_text' />";
		ТекстДокумента = ТекстДокумента + "</form></body></html>";
		
		ТекстовыйДок = Новый ТекстовыйДокумент;
		ТекстовыйДок.ДобавитьСтроку(ТекстДокумента);
		ВременныйФайл = ПолучитьИмяВременногоФайла();
		ТекстовыйДок.Записать(ВременныйФайл);
		FTPСоединение.Записать(ВременныйФайл, Order_УН + ".html");
		
		ДатаСообщения = ТекущаяДатаСеанса();
		
		ТекстСообщенияКлиенту = "Посилання для сплати https://cbone.antoshka.ua/" + Order_УН; 
		
		СтруктураСообщенияКлиенту = РегистрыСведений.СообщениеКлиенту.СтруктураЗаписиРегистра(); 
		
		СтруктураСообщенияКлиенту.Дата 						= ДатаСообщения;
		СтруктураСообщенияКлиенту.ИДСообщения 				= "Новое";
		СтруктураСообщенияКлиенту.ТекстСообщения 			= ТекстСообщенияКлиенту;
		СтруктураСообщенияКлиенту.ТипСообщения 				= Перечисления.ТипыСообщенийКлиенту.Viber;
		СтруктураСообщенияКлиенту.СостояниеСообщения 		= Перечисления.СостояниеСообщенийКлиенту.Новое;
		СтруктураСообщенияКлиенту.Телефон 					= НомерТелефонаКлиента;
		СтруктураСообщенияКлиенту.ДатаСледующейОтправки 	= ДатаСообщения; 
		
		РегистрыСведений.СообщениеКлиенту.ЗаписьСообщенияВРегистр(СтруктураСообщенияКлиенту);  
		
		РегистрыСведений.КомментарийИнтернетЗаказа.ЗаписьКомментария(СсылкаНаДокумент, ПараметрыСеанса.ТекущийПользователь, ТекстСообщенияКлиенту);
		
		УдалитьФайлы(ВременныйФайл);
	КонецЕсли;
	Возврат Order_УН;

КонецФункции

// Сформировать данные liq pay.
// 
// Параметры:
//  СтруктураДанных - Структура -Структура для запроса на сайт
// 
// Возвращаемое значение:
//  Структура - Сформировать данные liq pay:
// 		* Данные - строка
// 		* Сигнатура - строка
Функция СформироватьДанныеLiqPay(СтруктураДанных) Экспорт
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("Данные",		"");
	СтруктураОтвета.Вставить("Сигнатура",	"");
	
	Private_key = ОбменСБанкамиПовтИсп.ДанныеLiqPay().private_key;
	
	ДвоичныеДанныеСтроки = ПолучитьДвоичныеДанныеИзСтроки(СтруктураДанных);
    ДатаBase64 = Base64Строка(ДвоичныеДанныеСтроки);
    ДатаBase64 = СтрЗаменить(ДатаBase64, Символы.ВК, ""); // убираем ВК
    ДатаBase64 = СтрЗаменить(ДатаBase64, Символы.ПС, ""); // убираем ПС
    
    ХешДанных = Новый ХешированиеДанных(ХешФункция.SHA1);
    ХешДанных.Добавить(Private_key);
    ХешДанных.Добавить(ДатаBase64);
    ХешДанных.Добавить(Private_key);

    ТипДвоичныеДанные = ФабрикаXDTO.Тип("http://www.w3.org/2001/XMLSchema", "base64Binary");
    ДвоичныеДанные = ФабрикаXDTO.Создать(ТипДвоичныеДанные,ХешДанных.ХешСумма);
    СигнатураBase64 = ДвоичныеДанные.ЛексическоеЗначение;
	
	СтруктураОтвета.Данные = ДатаBase64; 
	СтруктураОтвета.Сигнатура = СигнатураBase64;
	
	Возврат СтруктураОтвета; 
	
КонецФункции 

// Обработка ответа по заказу liq pay.
// 
// Параметры:
//  СтрокаЗапроса - Строка - строка ответа с сервера JSON
Процедура ОбработкаОтветаПоЗаказуLiqPay(СтрокаЗапроса) Экспорт
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаЗапроса);
	ДанныеОтвета = ПрочитатьJSON(ЧтениеJSON);

	Если ДанныеОтвета.Свойство("status")
			И ДанныеОтвета.Свойство("order_id") Тогда 
			
		НомерВхожденияРазделителя = СтрНайти(ДанныеОтвета.order_id, "-");	
		ДлинаСтрока = СтрДлина(ДанныеОтвета.order_id);
		Если НомерВхожденияРазделителя = 0 Тогда 
			СтрокаПоиска = ДанныеОтвета.order_id;
			НомерОплаты = 0;
		Иначе 
			СтрокаПоиска = Лев(ДанныеОтвета.order_id, НомерВхожденияРазделителя - 1);
			НомерОплаты = Число(Прав(ДанныеОтвета.order_id, ДлинаСтрока - НомерВхожденияРазделителя)); 
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЗаказПокупателя.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
			|ГДЕ
			|	ЗаказПокупателя.Номер = &Номер";
		
		Запрос.УстановитьПараметр("Номер", СтрокаПоиска);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда 

			РегистрыСведений.КомментарийИнтернетЗаказа.ЗаписьКомментария(Выборка.Ссылка, ПараметрыСеанса.ТекущийПользователь, СтрокаЗапроса);
			
			Если ДанныеОтвета.status = "success" Или ДанныеОтвета.status = "reversed" Тогда  

				СтрокаКомментария = "Заказ на оплату №" + ДанныеОтвета.order_id + " оплачен";
				РегистрыСведений.КомментарийИнтернетЗаказа.ЗаписьКомментария(Выборка.Ссылка, ПараметрыСеанса.ТекущийПользователь, СтрокаКомментария);
				
				СтруктураЗаписи = РегистрыСведений.ОплатаЗаказаКлиента.ИнициализацияСтруктурыЗаписи();
	
				СтруктураЗаписи.ВидОплаты	 	= Перечисления.ВидыОплатыЗаказаПокупателя.Оплата;
				СтруктураЗаписи.ЗаказКлиента 	= Выборка.Ссылка;
				СтруктураЗаписи.НомерОплаты 	= НомерОплаты;
				СтруктураЗаписи.ТипОплаты 		= Перечисления.ТипОплатыЗаказПокупателя.ОплатаКартойПриват;
				СтруктураЗаписи.Сумма 			= ДанныеОтвета.amount;
				СтруктураЗаписи.СтатусОплаты 	= Перечисления.СтатусОплаты.Оплачен;
				СтруктураЗаписи.Отменён 		= Ложь;
				СтруктураЗаписи.ДатаОплаты 		= ТекущаяДатаСеанса();
				СтруктураЗаписи.СтруктураОтвета	= СтрокаЗапроса;
				
				РегистрыСведений.ОплатаЗаказаКлиента.ЗаписьСтрокиВРегистр(СтруктураЗаписи);

			КонецЕсли;  
		КонецЕсли;  
	КонецЕсли;

КонецПроцедуры

Функция ПроверитьОплатуНаСервере(СсылкаНаДокумент, НомерДокумента, НомерОплаты) Экспорт
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("ОплатаПроизведена",	Ложь);
	СтруктураОтвета.Вставить("ТекстОшибки",			"");
	СтруктураОтвета.Вставить("Сумма",				0);
	СтруктураОтвета.Вставить("СтруктураОтвета",		"");
	
	Public_key = ОбменСБанкамиПовтИсп.ДанныеLiqPay().public_key;

 	Order_id = СокрЛП(НомерДокумента) + ?(НомерОплаты = 0, "", "-" + Строка(НомерОплаты));;
	
	СтруктураЗапроса = Новый Структура;
	СтруктураЗапроса.Вставить("public_key", Public_key);
	СтруктураЗапроса.Вставить("version", "3");
	СтруктураЗапроса.Вставить("action", "status");
	СтруктураЗапроса.Вставить("order_id", Order_id);
    ЗаписьJSON = Новый ЗаписьJSON; 
    ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет));  
	ЗаписатьJSON(ЗаписьJSON,СтруктураЗапроса);
    СтрокаJSON = ЗаписьJSON.Закрыть();
	
	ДанныеДляОтправки = СформироватьДанныеLiqPay(СтрокаJSON);
	
	Заголовки = Новый Соответствие();
    Заголовки.Вставить("Content-Type", "application/x-www-form-urlencoded");
    Соединение = Новый HTTPСоединение("liqpay.ua", , , , , , Новый ЗащищенноеСоединениеOpenSSL());
    HTTPЗапрос = 
        Новый HTTPЗапрос(
                "/api/request"
            ,    Заголовки
        );
		
	HTTPЗапрос.УстановитьТелоИзСтроки("&data=" + ДанныеДляОтправки.Данные + "&signature=" + ДанныеДляОтправки.Сигнатура);
    HTTPОтвет = Соединение.ОтправитьДляОбработки(HTTPЗапрос);
	СтрокаЗапроса = HTTPОтвет.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаЗапроса);
	Результат = ПрочитатьJSON(ЧтениеJSON);
	
	РегистрыСведений.КомментарийИнтернетЗаказа.ЗаписьКомментария(СсылкаНаДокумент, ПараметрыСеанса.ТекущийПользователь, СтрокаЗапроса);
	
	Если Результат.Свойство("status")
			И Результат.Свойство("order_id")
			И (Результат.status = "success"
				Или Результат.status = "reversed") Тогда 
			
		СтруктураОтвета.ОплатаПроизведена = Истина;
		СтруктураОтвета.Сумма = Результат.amount;
		СтруктураОтвета.СтруктураОтвета = СтрокаЗапроса;
		
		СтрокаКомментария = "Заказ на оплату №" + Order_id + " оплачен";
		
		РегистрыСведений.КомментарийИнтернетЗаказа.ЗаписьКомментария(СсылкаНаДокумент, ПараметрыСеанса.ТекущийПользователь, СтрокаКомментария);
		
	Иначе
			
		Если Результат.Свойство("err_description") Тогда
				
			СтруктураОтвета.ТекстОшибки = "Нет оплаты. Статус: " + Результат.err_description;		
			
		Иначе 
			 СтруктураОтвета.ТекстОшибки = "Ошибка запроса. Повторите позже";
			 
		КонецЕсли;
		
	КонецЕсли; 
	
	Возврат СтруктураОтвета;

КонецФункции

#КонецОбласти
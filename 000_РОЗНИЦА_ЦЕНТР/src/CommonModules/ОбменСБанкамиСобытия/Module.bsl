#Область ПоддержкаРегламентногоОбслуживания

Процедура РегламентКредитныхПрограмм() Экспорт

	Если НЕ ПривилегированныйРежим() Тогда

		УстановитьПривилегированныйРежим(Истина);

	КонецЕсли;

	Если НЕ ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаРегистра.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю,
		|	ТаблицаРегистра.УслугаБанка КАК КредитнаяПрограмма
		|ИЗ
		|	РегистрСведений.ДанныеКредитныхПрограмм КАК ТаблицаРегистра
		|ГДЕ
		|	(НЕ ТаблицаРегистра.Отгружено
		|			ИЛИ ТаблицаРегистра.Отменить
		|				И НЕ ТаблицаРегистра.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявкиНаОформлениеКредита.ОтменаСогласована))
		|	И НЕ ТаблицаРегистра.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявкиНаОформлениеКредита.Отклонено)
		|	И НЕ ТаблицаРегистра.ИдентификаторБанка = """"
		|	И ТаблицаРегистра.СчетНаОплатуПокупателю.Дата >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ), ДЕНЬ, -1)"
		);
		Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());

		Результат = Запрос.Выполнить();

		Если НЕ Результат.Пустой() Тогда

			Выборка = Результат.Выбрать();

			Пока Выборка.Следующий() Цикл
		
				ДанныеПрограммы = ОбменСБанкамиПовтИсп.ПолучитьДанныеПрограммы(Выборка.КредитнаяПрограмма);

				Если ДанныеПрограммы.Найден Тогда

					ТекстСообщения = "";
					ОбменСБанкамиСервер.ПроверитьСостояниеЗаявкиНаОформлениеКредита(Выборка.СчетНаОплатуПокупателю, Выборка.КредитнаяПрограмма, ТекстСообщения);

				Иначе

					ОбменСБанкамиСервер.УстановитьКомментарий(
						"Не обнаружены данные кредитной программы «" + Выборка.КредитнаяПрограмма + "»"
						, Выборка.СчетНаОплатуПокупателю
						, Выборка.КредитнаяПрограмма
					);

				КонецЕсли;

			КонецЦикла;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти











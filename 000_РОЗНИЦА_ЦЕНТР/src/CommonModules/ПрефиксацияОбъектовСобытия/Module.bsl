////////////////////////////////////////////////////////////////////////////////
// Подсистема "Префиксация объектов"
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Устанавливает префикс источника подписки в соответствии с префиксом организации. 
// Источник подписки должен содержать
// обязательный реквизит шапки "Организация", тип: "СправочникСсылка.Организации"
//
// Параметры:
//  Источник - Источник события подписки.
//             Любой объект из множества [Справочник, Документ, План видов характеристик, Бизнес процесс, Задача]
// СтандартнаяОбработка - Булево - флаг стандартной обработки подписки
// Префикс - Строка - префикс объекта, который нужно изменить
//
Процедура УстановитьПрефиксОрганизации(Источник, СтандартнаяОбработка, Префикс) Экспорт
	
	Если НЕ ПрефиксацияОбъектовПовтИсп.ИспользоватьНомерМагазинаКакПрефикс() ИЛИ ПрефиксацияГлавногоУзла() Тогда

		УстановитьПрефикс(Источник, Префикс, Ложь, Истина);

	Иначе
	//	LNK 07.04.2017 16:52:00
		УстановитьПрефиксОбщий(Источник, Префикс);

	КонецЕсли;
	
КонецПроцедуры

// Устанавливает префикс источника подписки в соответствии с префиксом информационной базы.
// Ограничения на реквизиты источника не накладываются
//
// Параметры:
//  Источник - Источник события подписки.
//             Любой объект из множества [Справочник, Документ, План видов характеристик, Бизнес процесс, Задача]
// СтандартнаяОбработка - Булево - флаг стандартной обработки подписки
// Префикс - Строка - префикс объекта, который нужно изменить
//
Процедура УстановитьПрефиксИнформационнойБазы(Источник, СтандартнаяОбработка, Префикс) Экспорт
	
	Если (НЕ ПрефиксацияОбъектовПовтИсп.ИспользоватьНомерМагазинаКакПрефикс() ИЛИ ПрефиксацияГлавногоУзла())
	И НЕ ОбщегоНазначенияКлиентСервер.ЗначениеКлючаСтруктуры(Источник.ДополнительныеСвойства, "ИспользоватьНомерМагазинаКакПрефикс", Ложь)
	Тогда

		УстановитьПрефикс(Источник, Префикс, Истина, Ложь);

	Иначе

	//	LNK 07.04.2017 16:52:00
		УстановитьПрефиксОбщий(Источник, Префикс);

	КонецЕсли;
	
КонецПроцедуры

// Устанавливает префикс источника подписки в соответствии с префиксом информационной базы и префиксом организации.
// Источник подписки должен содержать
// обязательный реквизит шапки "Организация", тип: "СправочникСсылка.Организации"
//
// Параметры:
//  Источник - Источник события подписки.
//             Любой объект из множества [Справочник, Документ, План видов характеристик, Бизнес процесс, Задача]
// СтандартнаяОбработка - Булево - флаг стандартной обработки подписки
// Префикс - Строка - префикс объекта, который нужно изменить
//
Процедура УстановитьПрефиксИнформационнойБазыИОрганизации(Источник, СтандартнаяОбработка, Префикс) Экспорт
	
	Если НЕ ПрефиксацияОбъектовПовтИсп.ИспользоватьНомерМагазинаКакПрефикс() ИЛИ ПрефиксацияГлавногоУзла() Тогда

		УстановитьПрефикс(Источник, Префикс, Истина, Истина);

	Иначе
	//	LNK 07.04.2017 16:52:00
		УстановитьПрефиксОбщий(Источник, Префикс);

	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Для справочников

// Выполняет проверку модифицированности реквизита Организация элемента справочника
// Если реквизит Организация изменен, то Код элемента обнуляется.
// Это необходимо для назначения нового кода элементу
//
// Параметры:
//  Источник - СправочникОбъект - источник события подписки
//  Отказ    - Булево - флаг отказа
// 
Процедура ПроверитьКодСправочникаПоОрганизации(Источник, Отказ) Экспорт
	
	ПроверитьКодОбъектаПоОрганизации(Источник);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Для бизнес-процессов

// Выполняет проверку модифицированности Даты бизнес процесса
// Если дата не входит в предыдущий период, то номер бизнес процесса обнуляется.
// Это необходимо для назначения нового номера бизнес процессу
//
// Параметры:
//  Источник - БизнесПроцессОбъект - источник события подписки
//  Отказ    - Булево - флаг отказа
// 
Процедура ПроверитьНомерБизнесПроцессаПоДате(Источник, Отказ) Экспорт
	
	ПроверитьНомерОбъектаПоДате(Источник);
	
КонецПроцедуры

// Выполняет проверку модифицированности Даты и Организации бизнес процесса
// Если дата не входит в предыдущий период или изменен реквизит Организация, то номер бизнес процесса обнуляется.
// Это необходимо для назначения нового номера бизнес процессу
//
// Параметры:
//  Источник - БизнесПроцессОбъект - источник события подписки
//  Отказ    - Булево - флаг отказа
// 
Процедура ПроверитьНомерБизнесПроцессаПоДатеИОрганизации(Источник, Отказ) Экспорт
	
	ПроверитьНомерОбъектаПоДатеИОрганизации(Источник);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Для документов

// Выполняет проверку модифицированности Даты документа
// Если дата не входит в предыдущий период, то номер документа обнуляется.
// Это необходимо для назначения нового номера документу
//
// Параметры:
//  Источник - ДокументОбъект - источник события подписки
//  Отказ    - Булево - флаг отказа
// 
Процедура ПроверитьНомерДокументаПоДате(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если НЕ ПрефиксацияОбъектовПовтИсп.ИспользоватьНомерМагазинаКакПрефикс() Тогда

		ПроверитьНомерОбъектаПоДате(Источник);

	КонецЕсли;
	
КонецПроцедуры

// Выполняет проверку модифицированности Даты и Организации документа
// Если дата не входит в предыдущий период или изменен реквизит Организация, то номер документа обнуляется.
// Это необходимо для назначения нового номера документу
//
// Параметры:
//  Источник - ДокументОбъект - источник события подписки
//  Отказ    - Булево - флаг отказа
// 
Процедура ПроверитьНомерДокументаПоДатеИОрганизации(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если НЕ ПрефиксацияОбъектовПовтИсп.ИспользоватьНомерМагазинаКакПрефикс() Тогда

		ПроверитьНомерОбъектаПоДатеИОрганизации(Источник);

	КонецЕсли;
	
КонецПроцедуры

// Выполняет проверку модифицированности Даты и Магазину документа
// Если дата не входит в предыдущий период или изменен реквизит Магазин, то номер документа обнуляется.
// Это необходимо для назначения нового номера документу
//
// Параметры:
//  Источник - ДокументОбъект - источник события подписки
//  Отказ    - Булево - флаг отказа
//	LNK 14.04.2017 12:05:57
Процедура ПроверитьНомерДокументаПоДатеИМагазину(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт

	Если ПрефиксацияОбъектовПовтИсп.ИспользоватьНомерМагазинаКакПрефикс() Тогда

		ПроверитьНомерОбъектаПоДатеИМагазину(Источник);

	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура УстановитьПрефикс(Источник, Префикс, УстановитьПрефиксИнформационнойБазы, УстановитьПрефиксОрганизации)
	
	ПрефиксИнформационнойБазы = "";
	ПрефиксОрганизации        = "";
	
	Если УстановитьПрефиксИнформационнойБазы Тогда
		
		Если НЕ Источник.ДополнительныеСвойства.Свойство("Префикс") Тогда	//	LNK 13.02.2017 16:10:10

				ПерепрефиксацияОбъектов.ПриОпределенииПрефиксаИнформационнойБазы(ПрефиксИнформационнойБазы);

		Иначе	ПрефиксИнформационнойБазы = Источник.ДополнительныеСвойства.Префикс;	//	LNK 13.02.2017 16:10:15

		КонецЕсли;
		
		Если НЕ Источник.ДополнительныеСвойства.Свойство("ПрефиксНеДополнять") Тогда

			ДополнитьСтрокуНулямиСлева(ПрефиксИнформационнойБазы, 3);

		КонецЕсли;

	КонецЕсли;
	
	Если УстановитьПрефиксОрганизации Тогда
		
		Если РеквизитОрганизацияДоступен(Источник) Тогда
			
			ПерепрефиксацияОбъектов.ПриОпределенииПрефиксаОрганизации(
				Источник[ИмяРеквизитаОрганизация(Источник.Метаданные())], ПрефиксОрганизации
			);
			// если задана пустая ссылка на организацию
			Если ПрефиксОрганизации = Ложь Тогда
				
				ПрефиксОрганизации = "";
				
			КонецЕсли;
			
		КонецЕсли;
		
	//	ДополнитьСтрокуНулямиСлева(ПрефиксОрганизации, 2);
	//	LNK 27.10.2016 13:45:15
		ДополнитьСтрокуНулямиСлева(ПрефиксОрганизации, 1);

	КонецЕсли;

//	LNK 27.10.2016 13:40:25
	ШаблонПрефикса = "[О][ИБД]-[Префикс]";
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[О]"      , ПрефиксОрганизации);
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[ИБД]"    , ПрефиксИнформационнойБазы);
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[Префикс]", Префикс);

	Префикс = ШаблонПрефикса;
	
КонецПроцедуры

Процедура ДополнитьСтрокуНулямиСлева(Строка, ДлинаСтроки)
	
	Строка = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Строка, ДлинаСтроки, "0", "Слева");
	
КонецПроцедуры

Процедура ПроверитьНомерОбъектаПоДате(Объект)
	
	Если Объект.ОбменДанными.Загрузка Тогда
		Возврат;
	ИначеЕсли Объект.ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеОбъекта = Объект.Метаданные();
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ШапкаОбъекта.Дата КАК Дата
	|ИЗ
	|	" + МетаданныеОбъекта.ПолноеИмя() + " КАК ШапкаОбъекта
	|ГДЕ
	|	ШапкаОбъекта.Ссылка = &Ссылка
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если Не ПрефиксацияОбъектовВызовСервера.ДатыОбъектаОдногоПериода(Выборка.Дата, Объект.Дата, Объект.Ссылка) Тогда
		
		Объект.Номер = "";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьНомерОбъектаПоДатеИОрганизации(Объект)

	Если Объект.ОбменДанными.Загрузка ИЛИ Объект.ЭтоНовый() ИЛИ НомерНазначенВоВнешнейСистеме(Объект) Тогда

		Возврат;

	КонецЕсли;

	Если ПрефиксацияОбъектовВызовСервера.ДатаИлиОрганизацияОбъектаИзменена(
			Объект.Ссылка,
			Объект.Дата,
			Объект[ИмяРеквизитаОрганизация(Объект.Метаданные())],
			Объект.Метаданные().ПолноеИмя())
		Тогда

		Объект.Номер = "";

	КонецЕсли;
	
КонецПроцедуры

//	LNK 14.04.2017 12:16:26
Процедура ПроверитьНомерОбъектаПоДатеИМагазину(Объект)

	Если Объект.ОбменДанными.Загрузка ИЛИ Объект.ЭтоНовый() ИЛИ НомерНазначенВоВнешнейСистеме(Объект) Тогда

		Возврат;

	КонецЕсли;

	МетаданныеОбъекта   = Объект.Метаданные();
	ИмяРеквизитаМагазин = ИмяРеквизитаМагазин(МетаданныеОбъекта);

	Если ОбщегоНазначенияРТ.ЕстьРеквизитОбъекта(ИмяРеквизитаМагазин, МетаданныеОбъекта) Тогда
		
		Если ПрефиксацияОбъектовВызовСервера.ДатаИлиМагазинОбъектаИзменены(
				Объект.Ссылка,
				Объект.Дата,
				Объект[ИмяРеквизитаМагазин],
				МетаданныеОбъекта.ПолноеИмя())
			Тогда
			
			Объект.Номер = "";
			
		КонецЕсли;

	Иначе

		ПроверитьНомерОбъектаПоДате(Объект);

	КонецЕсли;

КонецПроцедуры

//	LNK 17.04.2018 09:56:49
Функция НомерНазначенВоВнешнейСистеме(Объект)	Экспорт

	НомерВнешний = Ложь;

	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда

		НомерВнешний = (Объект.УзелСоздания = Справочники.СтруктураУзлов.КСУ_Navision);

	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЗаказПокупателя") Тогда

		//НомерВнешний = (Объект.УчетнаяСистема = Перечисления.УчетныеСистемыКомпании.Magento);
		НомерВнешний = Истина;

	КонецЕсли;

	Возврат НомерВнешний;

КонецФункции

Процедура ПроверитьКодОбъектаПоОрганизации(Объект)
	
	Если Объект.ОбменДанными.Загрузка Тогда
		Возврат;
	ИначеЕсли Объект.ЭтоНовый() Тогда
		Возврат;
	ИначеЕсли Не РеквизитОрганизацияДоступен(Объект) Тогда
		Возврат;
	КонецЕсли;
	
	Если ПрефиксацияОбъектовВызовСервера.ОрганизацияОбъектаИзменена(
			Объект.Ссылка,
			Объект[ИмяРеквизитаОрганизация(Объект.Метаданные())],
			Объект.Метаданные().ПолноеИмя())
		Тогда
		
		Объект.Код = "";
		
	КонецЕсли;
	
КонецПроцедуры

Функция РеквизитОрганизацияДоступен(Объект)
	
	// возвращаемое значение функции
	Результат = Истина;
	
	МетаданныеОбъекта = Объект.Метаданные();
	
	Если   (ОбщегоНазначения.ЭтоСправочник(МетаданныеОбъекта)
		ИЛИ ОбщегоНазначения.ЭтоПланВидовХарактеристик(МетаданныеОбъекта))
		И МетаданныеОбъекта.Иерархический Тогда
		
		ИмяРеквизитаОрганизация = ИмяРеквизитаОрганизация(МетаданныеОбъекта);
		
		РеквизитОрганизация = МетаданныеОбъекта.Реквизиты.Найти(ИмяРеквизитаОрганизация);
		
		Если РеквизитОрганизация = Неопределено Тогда
			
			Если ОбщегоНазначения.ЭтоСтандартныйРеквизит(МетаданныеОбъекта.СтандартныеРеквизиты, ИмяРеквизитаОрганизация) Тогда
				
				// Стандартный реквизит всегда доступен и для элемента и для группы.
				Возврат Истина;
				
			КонецЕсли;
			
			СтрокаСообщения = НСтр("ru = 'Для объекта метаданных %1 не определен реквизит с именем %2.'");
			СтрокаСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаСообщения, МетаданныеОбъекта.ПолноеИмя(), ИмяРеквизитаОрганизация);
			ВызватьИсключение СтрокаСообщения;
		КонецЕсли;
			
		Если РеквизитОрганизация.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы И Не Объект.ЭтоГруппа Тогда
			
			Результат = Ложь;
			
		ИначеЕсли РеквизитОрганизация.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента И Объект.ЭтоГруппа Тогда
			
			Результат = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Для внутреннего использования
Функция ИмяРеквизитаОрганизация(Объект) Экспорт
	
	Если ТипЗнч(Объект) = Тип("ОбъектМетаданных") Тогда
		ПолноеИмя = Объект.ПолноеИмя();
	Иначе
		ПолноеИмя = Объект;
	КонецЕсли;
	
//	Реквизит = ПрефиксацияОбъектовПовтИсп.ПрефиксообразующиеРеквизиты().Получить(ПолноеИмя);
	Реквизит = Неопределено;	//	LNK 07.04.2017 15:45:07
	
	Если Реквизит <> Неопределено Тогда
		Возврат Реквизит;
	КонецЕсли;
	
	Возврат "Организация";
	
КонецФункции

//	LNK 06.05.2017 07:30:34
Функция ПрефиксацияГлавногоУзла()

	Возврат ОбменДаннымиПовтИсп.ЭтоГлавныйУзел() И ПараметрыСеанса.ИмитацияПериферийногоУзла = Ложь;

КонецФункции // ПрефиксацияГлавногоУзла()

#Область ФормированиеПрефиксаНомераИлиКодаОбъекта

//	LNK 07.04.2017 15:20:20
Процедура УстановитьПрефиксОбщий(Источник, Префикс)
	
	ВедущийПрефикс = "";

	Если РеквизитМагазинДоступен(Источник) Тогда

		ПерепрефиксацияОбъектов.ПриОпределенииПрефиксаМагазина(
			Источник[ИмяРеквизитаМагазин(Источник.Метаданные(), Источник)], ВедущийПрефикс
		);

		ДополнитьСтрокуНулямиСлева(ВедущийПрефикс, 4);

	Иначе

		Если НЕ Источник.ДополнительныеСвойства.Свойство("Префикс") Тогда	//	LNK 13.02.2017 16:10:10

				ПерепрефиксацияОбъектов.ПриОпределенииПрефиксаИнформационнойБазы(ВедущийПрефикс);

		Иначе	ВедущийПрефикс = Источник.ДополнительныеСвойства.Префикс;	//	LNK 13.02.2017 16:10:15

		КонецЕсли;
		
		ДополнитьСтрокуНулямиСлева(ВедущийПрефикс, 3);

	КонецЕсли;

	ШаблонПрефикса = "[ВЕДП]-[Префикс]";
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[ВЕДП]"   , ВедущийПрефикс);
	ШаблонПрефикса = СтрЗаменить(ШаблонПрефикса, "[Префикс]", Префикс);

	Префикс = ШаблонПрефикса;

КонецПроцедуры

//	LNK 07.04.2017 15:28:56
Функция РеквизитМагазинДоступен(Объект)

//	Возвращаемое значение функции
	Результат = Ложь;

	МетаданныеОбъекта = Объект.Метаданные();

	Если   (ОбщегоНазначения.ЭтоСправочник(МетаданныеОбъекта)
		ИЛИ ОбщегоНазначения.ЭтоПланВидовХарактеристик(МетаданныеОбъекта))
		И МетаданныеОбъекта.Иерархический Тогда

		ИмяРеквизитаМагазин = ИмяРеквизитаМагазин(МетаданныеОбъекта);
		РеквизитМагазин     = МетаданныеОбъекта.Реквизиты.Найти(ИмяРеквизитаМагазин);

		Если РеквизитМагазин = Неопределено Тогда

			Если ОбщегоНазначения.ЭтоСтандартныйРеквизит(МетаданныеОбъекта.СтандартныеРеквизиты, ИмяРеквизитаМагазин) Тогда

			//	Стандартный реквизит всегда доступен и для элемента и для группы.
				Возврат Истина;

			Иначе

				Возврат Ложь;

			КонецЕсли;

		КонецЕсли;

		Если РеквизитМагазин.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляГруппы И Не Объект.ЭтоГруппа Тогда

			Результат = Ложь;

		ИначеЕсли РеквизитМагазин.Использование = Метаданные.СвойстваОбъектов.ИспользованиеРеквизита.ДляЭлемента И Объект.ЭтоГруппа Тогда

			Результат = Ложь;

		КонецЕсли;

	ИначеЕсли ОбщегоНазначения.ЭтоДокумент(МетаданныеОбъекта) Тогда

		ИмяРеквизитаМагазин = ИмяРеквизитаМагазин(МетаданныеОбъекта, Объект);
		Результат = НЕ МетаданныеОбъекта.Реквизиты.Найти(ИмяРеквизитаМагазин) = Неопределено;

	КонецЕсли;

	Возврат Результат;

КонецФункции // РеквизитМагазинДоступен()

//	LNK 07.04.2017 15:35:18
Функция ИмяРеквизитаМагазин(МетаданныеОбъекта, Объект = Неопределено)	Экспорт

	Если ТипЗнч(МетаданныеОбъекта) = Тип("ОбъектМетаданных") Тогда

			ПолноеИмя = МетаданныеОбъекта.ПолноеИмя();

	Иначе	ПолноеИмя = МетаданныеОбъекта;

	КонецЕсли;

	Если НЕ Объект = Неопределено И ПрефиксацияОбъектовПовтИсп.ПрефиксообразованиеДляПеремещения(ПолноеИмя) Тогда

		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(&МагазинОтправитель КАК Справочник.Магазины) КАК МагазинОтправитель,
		|	ВЫРАЗИТЬ(&МагазинПолучатель КАК Справочник.Магазины) КАК МагазинПолучатель
		|ПОМЕСТИТЬ Источник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""МагазинОтправитель"" КАК ИмяРеквизита,
		|	1 КАК КлючПорядка
		|ИЗ
		|	Источник КАК Источник
		|ГДЕ
		|	НЕ Источник.МагазинОтправитель.СкладУправляющейСистемы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""МагазинПолучатель"",
		|	2
		|ИЗ
		|	Источник КАК Источник
		|ГДЕ
		|	НЕ Источник.МагазинПолучатель.СкладУправляющейСистемы
		|
		|УПОРЯДОЧИТЬ ПО
		|	КлючПорядка УБЫВ"
		);
		Запрос.УстановитьПараметр("МагазинОтправитель", Объект.МагазинОтправитель);
		Запрос.УстановитьПараметр("МагазинПолучатель" , Объект.МагазинПолучатель);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда

			Возврат Выборка.ИмяРеквизита;

		Иначе

			Возврат ПрефиксацияОбъектовПовтИсп.ПрефиксообразующиеРеквизиты().Получить(ПолноеИмя);

		КонецЕсли;

	Иначе

		Реквизит = ПрефиксацияОбъектовПовтИсп.ПрефиксообразующиеРеквизиты().Получить(ПолноеИмя);

		Если НЕ Реквизит = Неопределено Тогда

			Возврат Реквизит;

		КонецЕсли;

	КонецЕсли;

	Возврат "Магазин";

КонецФункции // ИмяРеквизитаМагазин()

#КонецОбласти




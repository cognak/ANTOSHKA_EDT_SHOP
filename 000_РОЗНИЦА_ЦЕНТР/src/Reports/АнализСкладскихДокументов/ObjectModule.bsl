Процедура СформироватьОтчет(ТабличныйДокумент)	Экспорт

	Перем ЦветТекста, ЦветФона, ШрифтПеречеркнут;

	#Если _ Тогда
	ТабличныйДокумент = Новый ТабличныйДокумент;
	#КонецЕсли

	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент.Очистить();

	Запрос = Новый Запрос(ПолучитьТекстЗапроса());
	Запрос.УстановитьПараметр("ДатаОкончания" , ?(ДатаОкончания = '00010101', ТекущаяДата(), ДатаОкончания));
	Запрос.УстановитьПараметр("ДатаНачала"	  , ?(ДатаНачала = '00010101', НачалоМесяца(Запрос.Параметры.ДатаОкончания), ДатаНачала));
	Запрос.УстановитьПараметр("Магазин"       , Магазин);
	Запрос.УстановитьПараметр("Проект"        , Проект);
	Запрос.УстановитьПараметр("ВидыДокументов", ВидыДокументов.Выгрузить(Новый Структура("Пометка", Истина), "Имя, Представление"));
	Запрос.УстановитьПараметр("ОтражатьПомеченныеНаУдаление", ОтражатьПомеченныеНаУдаление);

	Результаты = Запрос.ВыполнитьПакет();

	Макет = ПолучитьМакет("Макет");
	СтрокаШапка    = Макет.ПолучитьОбласть("Шапка");
	СтрокаМагазин  = Макет.ПолучитьОбласть("СтрокаМагазин|Несущая");
	СтрокаДвижение = Макет.ПолучитьОбласть("СтрокаДвижение|Несущая");
	СтрокаДокумент = Макет.ПолучитьОбласть("СтрокаДокумент|Несущая");
	СтрокаТовар    = Макет.ПолучитьОбласть("СтрокаТовар|Несущая");
	СтрокаПодвал   = Макет.ПолучитьОбласть("Подвал|Несущая");

	СтрокаШапка.Параметры.Заголовок = Метаданные().Синоним;
	СтрокаШапка.Параметры.ПериодПредставление = "Период с "
		+ Формат(Запрос.Параметры.ДатаНачала, "ДФ=dd.MM.yyyy") + " по "
		+ Формат(Запрос.Параметры.ДатаОкончания, "ДФ=dd.MM.yyyy")
	;
	СтрокаШапка.Параметры.ОтборыПредставление = ПолучитьПредставлениеОтборов(Запрос.Параметры);

	ТабличныйДокумент.Вывести(СтрокаШапка);
	ТабличныйДокумент.ФиксацияСверху = ТабличныйДокумент.ВысотаТаблицы;

	ВыборкаМагазины = Результаты[7].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаТоварыРеестра = Результаты[8].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТаблицаТоваров = ПолучитьТаблицуТоваров(Результаты[8]);

	ИтогОбщий = Новый Структура(
		"Магазин, Движение"
		, Новый Структура("Область, КоличествоФакт",, 0)
		, Новый Структура("Область, КоличествоФакт",, 0)
	);

	Пока ВыборкаМагазины.Следующий() Цикл

		СтрокаМагазин.Параметры.Заполнить(ВыборкаМагазины);
		СтрокаМагазин.Параметры.МагазинПредставление = Формат(ВыборкаМагазины.НомерМагазина, "ЧЦ=3; ЧН=000; ЧГ=")
		+ " : " + СокрЛП(ВыборкаМагазины.IDNМагазина)
		+ " : " + СокрЛП(ВыборкаМагазины.Магазин);

		ОбластьОформления    = ТабличныйДокумент.Вывести(СтрокаМагазин);
		ИтогОбщий.Магазин.Область = ТабличныйДокумент.Область(ОбластьОформления.Верх, ОбластьОформления.Лево + 5, ОбластьОформления.Низ, ОбластьОформления.Лево + 5);
		ИтогОбщий.Магазин.КоличествоФакт = 0;

		ТабличныйДокумент.НачатьГруппуСтрок(, НЕ Магазин.Пустая());

		ВыборкаДвижения = ВыборкаМагазины.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаДвижения.Следующий() Цикл

			ВыборкаРеестр = ВыборкаДвижения.Выбрать();

			Если ВыборкаРеестр.Количество() = 0 Тогда

				Продолжить;

			КонецЕсли;

			СтрокаДвижение.Параметры.Заполнить(ВыборкаДвижения);

			ОбластьОформления = ТабличныйДокумент.Вывести(СтрокаДвижение);
			ИтогОбщий.Движение.Область = ТабличныйДокумент.Область(ОбластьОформления.Верх, ОбластьОформления.Лево + 5, ОбластьОформления.Низ, ОбластьОформления.Лево + 5);
			ИтогОбщий.Движение.КоличествоФакт = 0;

			ТабличныйДокумент.НачатьГруппуСтрок(, Истина);

			Пока ВыборкаРеестр.Следующий() Цикл

				ТаблицаТоваров.Очистить();
				ВыборкаТоварыРеестра.Сбросить();

				УчестьОтклонение = ?(ТипЗнч(ВыборкаРеестр.ВедущийДокумент) = Тип("ДокументСсылка.ПеремещениеТоваров")
					, ЗначениеЗаполнено(ВыборкаРеестр.ТоварныйОрдер) ИЛИ СчитатьПроблемойПеремещениеБезОрдера
					, Истина);

				Если ВыборкаТоварыРеестра.НайтиСледующий(Новый Структура("ВедущийДокумент", ВыборкаРеестр.ВедущийДокумент)) Тогда

					ВыборкаТовары = ВыборкаТоварыРеестра.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

					Пока ВыборкаТовары.Следующий() Цикл

						СтрокаТаблицы = ТаблицаТоваров.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыборкаТовары);

						Если УчестьОтклонение Тогда

							СтрокаТаблицы.КоличествоОтклонение = СтрокаТаблицы.КоличествоПлан - СтрокаТаблицы.КоличествоФакт;

						КонецЕсли;

					КонецЦикла;

				КонецЕсли;

				ИтогиТаблицы = ПолучитьИтогиТаблицы(ТаблицаТоваров
					, УчестьОтклонение
					, ?(ВыборкаРеестр.ВидДокумента = Тип("ДокументСсылка.ПересортицаТоваров"), 1,
					  ?(ВыборкаРеестр.ВидДокумента = Тип("ДокументСсылка.ПересчетТоваровСамостоятельный"), 2, 0)));

				СтрокаДокумент.Параметры.Заполнить(ВыборкаРеестр);

				СтрокаДокумент.Параметры.КоличествоПлан = ИтогиТаблицы.КоличествоПлан;
				СтрокаДокумент.Параметры.КоличествоФакт = ИтогиТаблицы.КоличествоФакт;
				СтрокаДокумент.Параметры.ПозицийПлан    = ИтогиТаблицы.ПозицийПлан;
				СтрокаДокумент.Параметры.ПозицийФакт    = ИтогиТаблицы.ПозицийФакт;
				СтрокаДокумент.Параметры.КоличествоОтклонение = ИтогиТаблицы.КоличествоОтклонение;

				ИтогОбщий.Движение.КоличествоФакт = ИтогОбщий.Движение.КоличествоФакт + ИтогиТаблицы.КоличествоФакт;

				Если ВыборкаРеестр.ВидДокумента = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда

					СтрокаДокумент.Параметры.ТекстПроведен = ?(ВыборкаРеестр.Проведен И ВыборкаРеестр.ОрдерПроведен, "2",
															 ?(ВыборкаРеестр.Проведен ИЛИ ВыборкаРеестр.ОрдерПроведен, "1", ""));
					СтрокаДокумент.Параметры.ТекстПомечен  = ?(ВыборкаРеестр.ПометкаУдаления И ВыборкаРеестр.ОрдерПометкаУдаления, "2",
															 ?(ВыборкаРеестр.ПометкаУдаления ИЛИ ВыборкаРеестр.ОрдерПометкаУдаления, "1", ""));
					СтрокаДокумент.Параметры.ТекстВыгруженNavision  = ?(ВыборкаРеестр.ВыгруженNavision И ВыборкаРеестр.ОрдерВыгруженNavision, "2",
																	  ?(ВыборкаРеестр.ВыгруженNavision ИЛИ ВыборкаРеестр.ОрдерВыгруженNavision, "1", ""));
					СтрокаДокумент.Параметры.ТекстУчтенNavision     = ?(ВыборкаРеестр.УчтенNavision И ВыборкаРеестр.ОрдерУчтенNavision, "2",
																	  ?(ВыборкаРеестр.УчтенNavision ИЛИ ВыборкаРеестр.ОрдерУчтенNavision, "1", ""));

				Иначе

					СтрокаДокумент.Параметры.ТекстПроведен = ?(ВыборкаРеестр.Проведен, "2", "");
					СтрокаДокумент.Параметры.ТекстПомечен  = ?(ВыборкаРеестр.ПометкаУдаления, "2", "");
					СтрокаДокумент.Параметры.ТекстВыгруженNavision = ?(ВыборкаРеестр.ВыгруженNavision, "2", "");
					СтрокаДокумент.Параметры.ТекстУчтенNavision    = ?(ВыборкаРеестр.УчтенNavision, "2", "");
				
				КонецЕсли;

				ПроблемныйДокумент = ВыделитьПроблемуДокумента(СтрокаДокумент.Параметры, ВыборкаРеестр, ЦветТекста, ЦветФона, ШрифтПеречеркнут);

				Если ВывестиТолькоПроблемы И НЕ ПроблемныйДокумент Тогда

					Продолжить;

				КонецЕсли;

				ОбластьОформления = ТабличныйДокумент.Вывести(СтрокаДокумент);

				Если НЕ ЦветТекста = Неопределено Тогда

					ТабличныйДокумент.Область(ОбластьОформления.Верх, ОбластьОформления.Лево + 1, ОбластьОформления.Низ, ОбластьОформления.Право).ЦветТекста = ЦветТекста;

				КонецЕсли;

				Если НЕ ЦветФона = Неопределено Тогда

					ТабличныйДокумент.Область(ОбластьОформления.Верх, ОбластьОформления.Лево + 1, ОбластьОформления.Низ, ОбластьОформления.Право).ЦветФона = ЦветФона;

				КонецЕсли;

				Если ШрифтПеречеркнут = Истина Тогда

					ТабличныйДокумент.Область(ОбластьОформления.Верх, ОбластьОформления.Лево + 1, ОбластьОформления.Низ, ОбластьОформления.Право).Шрифт = Новый Шрифт(,,,,, Истина);

				КонецЕсли;

				Если НЕ ТаблицаТоваров.Количество() = 0 Тогда

					ТабличныйДокумент.НачатьГруппуСтрок(, Ложь);

					Для каждого СтрокаТаблицы Из ТаблицаТоваров Цикл

						СтрокаТовар.Параметры.Заполнить(СтрокаТаблицы);
						ТабличныйДокумент.Вывести(СтрокаТовар);

					КонецЦикла;

					ТабличныйДокумент.ЗакончитьГруппуСтрок();

				КонецЕсли;

			КонецЦикла;

			ТабличныйДокумент.ЗакончитьГруппуСтрок();
			ИтогОбщий.Движение.Область.Текст = ИтогОбщий.Движение.КоличествоФакт;
			ИтогОбщий.Магазин.КоличествоФакт = ИтогОбщий.Магазин.КоличествоФакт
			+ ИтогОбщий.Движение.КоличествоФакт
			* ?(ВыборкаДвижения.ВидДвижения = "ПРИХОД", 1, ?(ВыборкаДвижения.ВидДвижения = "РАСХОД", -1, 0));

		КонецЦикла;

		ТабличныйДокумент.ЗакончитьГруппуСтрок();
		ИтогОбщий.Магазин.Область.Текст = ИтогОбщий.Магазин.КоличествоФакт;

	КонецЦикла;

	ТабличныйДокумент.Вывести(СтрокаПодвал);

КонецПроцедуры

Функция ПолучитьТекстЗапроса()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВидыДокументов.Имя КАК Имя
	|ПОМЕСТИТЬ Виды
	|ИЗ
	|	&ВидыДокументов КАК ВидыДокументов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Имя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.IDN КАК IDN,
	|	ТаблицаДокумента.Проведен КАК Проведен,
	|	ТаблицаДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|	ТаблицаДокумента.ВедущийДокумент КАК ВедущийДокумент,
	|	ТаблицаДокумента.ВидДокумента КАК ВидДокумента,
	|	ТаблицаДокумента.Магазин КАК Магазин,
	|	ВЫБОР
	|		КОГДА ТаблицаУчета.Объект ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВыгруженNavision,
	|	ЕСТЬNULL(ТаблицаУчета.УчтеноNavision, ЛОЖЬ) КАК УчтенNavision,
	|	ТаблицаДокумента.ВидДвижения КАК ВидДвижения,
	|	ТаблицаДокумента.Проект КАК Проект
	|ПОМЕСТИТЬ Реестр
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаПодготовки.Дата КАК Дата,
	|		ТаблицаПодготовки.IDN КАК IDN,
	|		ТаблицаПодготовки.Проведен КАК Проведен,
	|		ТаблицаПодготовки.ПометкаУдаления КАК ПометкаУдаления,
	|		ТаблицаПодготовки.Ссылка КАК ВедущийДокумент,
	|		ТИПЗНАЧЕНИЯ(ТаблицаПодготовки.Ссылка) КАК ВидДокумента,
	|		ВЫБОР
	|			КОГДА ТаблицаПодготовки.МагазинОтправитель.СкладУправляющейСистемы
	|				ТОГДА ТаблицаПодготовки.МагазинПолучатель
	|			ИНАЧЕ ТаблицаПодготовки.МагазинОтправитель
	|		КОНЕЦ КАК Магазин,
	|		ВЫБОР
	|			КОГДА ТаблицаПодготовки.МагазинОтправитель.СкладУправляющейСистемы
	|				ТОГДА ""ПРИХОД""
	|			ИНАЧЕ ""РАСХОД""
	|		КОНЕЦ КАК ВидДвижения,
	|		МАКСИМУМ(ТаблицаТовары.Номенклатура.ВидНоменклатуры) КАК Проект
	|	ИЗ
	|		Документ.ПеремещениеТоваров КАК ТаблицаПодготовки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Виды КАК Фильтр
	|			ПО (Фильтр.Имя = ""ПеремещениеТоваров"")
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|			ПО ТаблицаПодготовки.Ссылка = ТаблицаТовары.Ссылка
	|				И (ВЫБОР
	|					КОГДА &Проект = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ТаблицаТовары.Номенклатура.ВидНоменклатуры = &Проект
	|				КОНЕЦ)
	|	ГДЕ
	|		ТаблицаПодготовки.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаОкончания, ДЕНЬ)
	|		И ВЫБОР
	|				КОГДА &Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ТаблицаПодготовки.МагазинОтправитель.СкладУправляющейСистемы
	|							ТОГДА ТаблицаПодготовки.МагазинПолучатель
	|						ИНАЧЕ ТаблицаПодготовки.МагазинОтправитель
	|					КОНЕЦ = &Магазин
	|			КОНЕЦ
	|		И ВЫБОР
	|				КОГДА &ОтражатьПомеченныеНаУдаление = ИСТИНА
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ НЕ ТаблицаПодготовки.ПометкаУдаления
	|			КОНЕЦ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаПодготовки.Дата,
	|		ТаблицаПодготовки.IDN,
	|		ТаблицаПодготовки.Проведен,
	|		ТаблицаПодготовки.ПометкаУдаления,
	|		ТаблицаПодготовки.Ссылка,
	|		ВЫБОР
	|			КОГДА ТаблицаПодготовки.МагазинОтправитель.СкладУправляющейСистемы
	|				ТОГДА ТаблицаПодготовки.МагазинПолучатель
	|			ИНАЧЕ ТаблицаПодготовки.МагазинОтправитель
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ТаблицаПодготовки.МагазинОтправитель.СкладУправляющейСистемы
	|				ТОГДА ""ПРИХОД""
	|			ИНАЧЕ ""РАСХОД""
	|		КОНЕЦ) КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчета
	|		ПО ТаблицаДокумента.ВедущийДокумент = ТаблицаУчета.Объект
	|			И ТаблицаДокумента.Магазин = ТаблицаУчета.Магазин
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ОтражатьПомеченныеНаУдаление = ИСТИНА
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТаблицаДокумента.ПометкаУдаления = ЛОЖЬ
	|							ИЛИ ТаблицаУчета.Объект ЕСТЬ НЕ NULL 
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &Проект = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаДокумента.Проект = &Проект
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.IDN,
	|	ТаблицаДокумента.Проведен,
	|	ТаблицаДокумента.ПометкаУдаления,
	|	ТаблицаДокумента.ВедущийДокумент,
	|	ТаблицаДокумента.ВидДокумента,
	|	ТаблицаДокумента.Магазин,
	|	ТаблицаДокумента.ВыгруженNavision,
	|	ТаблицаДокумента.УчтенNavision,
	|	ТаблицаДокумента.ВидДвижения,
	|	ТаблицаДокумента.Проект
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДокумента.Дата КАК Дата,
	|		ТаблицаДокумента.IDN КАК IDN,
	|		ТаблицаДокумента.Проведен КАК Проведен,
	|		ТаблицаДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|		ТаблицаДокумента.Ссылка КАК ВедущийДокумент,
	|		ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка) КАК ВидДокумента,
	|		ТаблицаДокумента.Магазин КАК Магазин,
	|		ВЫБОР
	|			КОГДА ТаблицаУчета.Объект ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ КАК ВыгруженNavision,
	|		ЕСТЬNULL(ТаблицаУчета.УчтеноNavision, ЛОЖЬ) КАК УчтенNavision,
	|		""ПРИХОД"" КАК ВидДвижения,
	|		МАКСИМУМ(ТаблицаТовары.Номенклатура.ВидНоменклатуры) КАК Проект
	|	ИЗ
	|		Документ.ОприходованиеТоваров КАК ТаблицаДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Виды КАК Фильтр
	|			ПО (Фильтр.Имя = ""ОприходованиеТоваров"")
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчета
	|			ПО ТаблицаДокумента.Ссылка = ТаблицаУчета.Объект
	|				И ТаблицаДокумента.Магазин = ТаблицаУчета.Магазин
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров.Товары КАК ТаблицаТовары
	|			ПО ТаблицаДокумента.Ссылка = ТаблицаТовары.Ссылка
	|				И (ВЫБОР
	|					КОГДА &Проект = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ТаблицаТовары.Номенклатура.ВидНоменклатуры = &Проект
	|				КОНЕЦ)
	|	ГДЕ
	|		ТаблицаДокумента.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаОкончания, ДЕНЬ)
	|		И НЕ ТаблицаДокумента.ДокументОснование ССЫЛКА Документ.ПриказНаПроведениеИнвентаризацииТоваров
	|		И ВЫБОР
	|				КОГДА &Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ТаблицаДокумента.Магазин = &Магазин
	|			КОНЕЦ
	|		И ВЫБОР
	|				КОГДА &ОтражатьПомеченныеНаУдаление = ИСТИНА
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ТаблицаДокумента.ПометкаУдаления = ЛОЖЬ
	|								ИЛИ ТаблицаУчета.Объект ЕСТЬ НЕ NULL 
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОНЕЦ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокумента.Дата,
	|		ТаблицаДокумента.IDN,
	|		ТаблицаДокумента.Проведен,
	|		ТаблицаДокумента.ПометкаУдаления,
	|		ТаблицаДокумента.Ссылка,
	|		ТаблицаДокумента.Магазин,
	|		ВЫБОР
	|			КОГДА ТаблицаУчета.Объект ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ,
	|		ЕСТЬNULL(ТаблицаУчета.УчтеноNavision, ЛОЖЬ)) КАК ТаблицаДокумента
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &Проект = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаДокумента.Проект = &Проект
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.IDN,
	|	ТаблицаДокумента.Проведен,
	|	ТаблицаДокумента.ПометкаУдаления,
	|	ТаблицаДокумента.ВедущийДокумент,
	|	ТаблицаДокумента.ВидДокумента,
	|	ТаблицаДокумента.Магазин,
	|	ТаблицаДокумента.ВыгруженNavision,
	|	ТаблицаДокумента.УчтенNavision,
	|	ТаблицаДокумента.ВидДвижения,
	|	ТаблицаДокумента.Проект
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДокумента.Дата КАК Дата,
	|		ТаблицаДокумента.IDN КАК IDN,
	|		ТаблицаДокумента.Проведен КАК Проведен,
	|		ТаблицаДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|		ТаблицаДокумента.Ссылка КАК ВедущийДокумент,
	|		ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка) КАК ВидДокумента,
	|		ТаблицаДокумента.Магазин КАК Магазин,
	|		ВЫБОР
	|			КОГДА ТаблицаУчета.Объект ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ КАК ВыгруженNavision,
	|		ЕСТЬNULL(ТаблицаУчета.УчтеноNavision, ЛОЖЬ) КАК УчтенNavision,
	|		""РАСХОД"" КАК ВидДвижения,
	|		МАКСИМУМ(ТаблицаТовары.Номенклатура.ВидНоменклатуры) КАК Проект
	|	ИЗ
	|		Документ.СписаниеТоваров КАК ТаблицаДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Виды КАК Фильтр
	|			ПО (Фильтр.Имя = ""СписаниеТоваров"")
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчета
	|			ПО ТаблицаДокумента.Ссылка = ТаблицаУчета.Объект
	|				И ТаблицаДокумента.Магазин = ТаблицаУчета.Магазин
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров.Товары КАК ТаблицаТовары
	|			ПО ТаблицаДокумента.Ссылка = ТаблицаТовары.Ссылка
	|				И (ВЫБОР
	|					КОГДА &Проект = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ТаблицаТовары.Номенклатура.ВидНоменклатуры = &Проект
	|				КОНЕЦ)
	|	ГДЕ
	|		ТаблицаДокумента.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаОкончания, ДЕНЬ)
	|		И НЕ ТаблицаДокумента.ДокументОснование ССЫЛКА Документ.ПриказНаПроведениеИнвентаризацииТоваров
	|		И ВЫБОР
	|				КОГДА &Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ТаблицаДокумента.Магазин = &Магазин
	|			КОНЕЦ
	|		И ВЫБОР
	|				КОГДА &ОтражатьПомеченныеНаУдаление = ИСТИНА
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ТаблицаДокумента.ПометкаУдаления = ЛОЖЬ
	|								ИЛИ ТаблицаУчета.Объект ЕСТЬ НЕ NULL 
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОНЕЦ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокумента.Дата,
	|		ТаблицаДокумента.IDN,
	|		ТаблицаДокумента.Проведен,
	|		ТаблицаДокумента.ПометкаУдаления,
	|		ТаблицаДокумента.Ссылка,
	|		ТаблицаДокумента.Магазин,
	|		ВЫБОР
	|			КОГДА ТаблицаУчета.Объект ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ,
	|		ЕСТЬNULL(ТаблицаУчета.УчтеноNavision, ЛОЖЬ)) КАК ТаблицаДокумента
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &Проект = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаДокумента.Проект = &Проект
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.IDN,
	|	ТаблицаДокумента.Проведен,
	|	ТаблицаДокумента.ПометкаУдаления,
	|	ТаблицаДокумента.ВедущийДокумент,
	|	ТаблицаДокумента.ВидДокумента,
	|	ТаблицаДокумента.Магазин,
	|	ТаблицаДокумента.ВыгруженNavision,
	|	ТаблицаДокумента.УчтенNavision,
	|	ТаблицаДокумента.ВидДвижения,
	|	ТаблицаДокумента.Проект
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДокумента.Дата КАК Дата,
	|		ТаблицаДокумента.IDN КАК IDN,
	|		ТаблицаДокумента.Проведен КАК Проведен,
	|		ТаблицаДокумента.ПометкаУдаления КАК ПометкаУдаления,
	|		ТаблицаДокумента.Ссылка КАК ВедущийДокумент,
	|		ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка) КАК ВидДокумента,
	|		ТаблицаДокумента.Магазин КАК Магазин,
	|		ВЫБОР
	|			КОГДА ТаблицаУчета.Объект ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ КАК ВыгруженNavision,
	|		ЕСТЬNULL(ТаблицаУчета.УчтеноNavision, ЛОЖЬ) КАК УчтенNavision,
	|		""ПЕРЕСОРТИЦА"" КАК ВидДвижения,
	|		МАКСИМУМ(ТаблицаТовары.Номенклатура.ВидНоменклатуры) КАК Проект
	|	ИЗ
	|		Документ.ПересортицаТоваров КАК ТаблицаДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Виды КАК Фильтр
	|			ПО (Фильтр.Имя = ""ПересортицаТоваров"")
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчета
	|			ПО ТаблицаДокумента.Ссылка = ТаблицаУчета.Объект
	|				И ТаблицаДокумента.Магазин = ТаблицаУчета.Магазин
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|			ПО ТаблицаДокумента.Ссылка = ТаблицаТовары.Ссылка
	|				И (ВЫБОР
	|					КОГДА &Проект = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ТаблицаТовары.Номенклатура.ВидНоменклатуры = &Проект
	|				КОНЕЦ)
	|	ГДЕ
	|		ТаблицаДокумента.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаОкончания, ДЕНЬ)
	|		И ВЫБОР
	|				КОГДА &Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ТаблицаДокумента.Магазин = &Магазин
	|			КОНЕЦ
	|		И ВЫБОР
	|				КОГДА &ОтражатьПомеченныеНаУдаление = ИСТИНА
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ТаблицаДокумента.ПометкаУдаления = ЛОЖЬ
	|								ИЛИ ТаблицаУчета.Объект ЕСТЬ НЕ NULL 
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОНЕЦ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокумента.Дата,
	|		ТаблицаДокумента.IDN,
	|		ТаблицаДокумента.Проведен,
	|		ТаблицаДокумента.ПометкаУдаления,
	|		ТаблицаДокумента.Ссылка,
	|		ТаблицаДокумента.Магазин,
	|		ВЫБОР
	|			КОГДА ТаблицаУчета.Объект ЕСТЬ NULL
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ,
	|		ЕСТЬNULL(ТаблицаУчета.УчтеноNavision, ЛОЖЬ)) КАК ТаблицаДокумента
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &Проект = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаДокумента.Проект = &Проект
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.IDN,
	|	ТаблицаДокумента.Проведен,
	|	ТаблицаДокумента.ПометкаУдаления,
	|	ТаблицаДокумента.Ссылка,
	|	ТИПЗНАЧЕНИЯ(ТаблицаДокумента.Ссылка),
	|	ТаблицаДокумента.Магазин,
	|	ВЫБОР
	|		КОГДА ТаблицаУчета.Объект ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ЕСТЬNULL(ТаблицаУчета.УчтеноNavision, ЛОЖЬ),
	|	""ПЕРЕСОРТИЦА"",
	|	ТаблицаДокумента.ВидНоменклатуры
	|ИЗ
	|	Документ.ПересчетТоваровСамостоятельный КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Виды КАК Фильтр
	|		ПО (Фильтр.Имя = ""ПересчетТоваровСамостоятельный"")
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчета
	|		ПО ТаблицаДокумента.Ссылка = ТаблицаУчета.Объект
	|			И ТаблицаДокумента.Магазин = ТаблицаУчета.Магазин
	|ГДЕ
	|	ТаблицаДокумента.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачала, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаОкончания, ДЕНЬ)
	|	И ВЫБОР
	|			КОГДА &Магазин = ЗНАЧЕНИЕ(Справочник.Магазины.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаДокумента.Магазин = &Магазин
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ОтражатьПомеченныеНаУдаление = ИСТИНА
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТаблицаДокумента.ПометкаУдаления = ЛОЖЬ
	|							ИЛИ ТаблицаУчета.Объект ЕСТЬ НЕ NULL 
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &Проект = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаДокумента.ВидНоменклатуры = &Проект
	|		КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВедущийДокумент,
	|	Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Магазины.СкладПродажи.IDN КАК IDN,
	|	Магазины.Ссылка КАК Магазин,
	|	Магазины.НомерМагазина КАК НомерМагазина
	|ПОМЕСТИТЬ КлючиМагазинов
	|ИЗ
	|	Реестр КАК Фильтр
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Магазины КАК Магазины
	|		ПО Фильтр.Магазин = Магазины.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Магазин
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Виды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реестр.Дата КАК Дата,
	|	Реестр.IDN КАК IDN,
	|	Реестр.Проведен КАК Проведен,
	|	Реестр.ПометкаУдаления КАК ПометкаУдаления,
	|	Реестр.ВедущийДокумент КАК ВедущийДокумент,
	|	Реестр.ВидДокумента КАК ВидДокумента,
	|	Реестр.Магазин КАК Магазин,
	|	Реестр.ВыгруженNavision КАК ВыгруженNavision,
	|	Реестр.УчтенNavision КАК УчтенNavision,
	|	ТаблицаОрдеры.ТоварныйОрдер КАК ТоварныйОрдер,
	|	ЕСТЬNULL(ТаблицаОрдеры.Проведен, ЛОЖЬ) КАК ОрдерПроведен,
	|	ЕСТЬNULL(ТаблицаОрдеры.ПометкаУдаления, ЛОЖЬ) КАК ОрдерПометкаУдаления,
	|	ЕСТЬNULL(ТаблицаОрдеры.ВыгруженNavision, ЛОЖЬ) КАК ОрдерВыгруженNavision,
	|	ЕСТЬNULL(ТаблицаОрдеры.УчтенNavision, ЛОЖЬ) КАК ОрдерУчтенNavision,
	|	Реестр.ВидДвижения КАК ВидДвижения,
	|	Реестр.Проект КАК Проект
	|ПОМЕСТИТЬ РеестрПеремещений
	|ИЗ
	|	Реестр КАК Реестр
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Реестр.ВедущийДокумент КАК ПеремещениеТоваров,
	|			ТаблицаОрдеры.Ссылка КАК ТоварныйОрдер,
	|			ТаблицаОрдеры.Проведен КАК Проведен,
	|			ТаблицаОрдеры.ПометкаУдаления КАК ПометкаУдаления,
	|			ВЫБОР
	|				КОГДА ТаблицаУчета.Объект ЕСТЬ NULL
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ КАК ВыгруженNavision,
	|			ЕСТЬNULL(ТаблицаУчета.УчтеноNavision, ЛОЖЬ) КАК УчтенNavision
	|		ИЗ
	|			Реестр КАК Реестр
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары КАК ТаблицаОрдеры
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчета
	|					ПО ТаблицаОрдеры.Ссылка = ТаблицаУчета.Объект
	|						И ТаблицаОрдеры.Магазин = ТаблицаУчета.Магазин
	|				ПО Реестр.ВедущийДокумент = ТаблицаОрдеры.ДокументОснование
	|		ГДЕ
	|			Реестр.ВидДокумента = ТИП(Документ.ПеремещениеТоваров)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Реестр.ВедущийДокумент,
	|			ТаблицаОрдеры.Ссылка,
	|			ТаблицаОрдеры.Проведен,
	|			ТаблицаОрдеры.ПометкаУдаления,
	|			ВЫБОР
	|				КОГДА ТаблицаУчета.Объект ЕСТЬ NULL
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ,
	|			ЕСТЬNULL(ТаблицаУчета.УчтеноNavision, ЛОЖЬ)
	|		ИЗ
	|			Реестр КАК Реестр
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары КАК ТаблицаОрдеры
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбъектУчтенВNavision КАК ТаблицаУчета
	|					ПО ТаблицаОрдеры.Ссылка = ТаблицаУчета.Объект
	|						И ТаблицаОрдеры.Магазин = ТаблицаУчета.Магазин
	|				ПО Реестр.ВедущийДокумент = ТаблицаОрдеры.ДокументОснование
	|		ГДЕ
	|			Реестр.ВидДокумента = ТИП(Документ.ПеремещениеТоваров)) КАК ТаблицаОрдеры
	|		ПО Реестр.ВедущийДокумент = ТаблицаОрдеры.ПеремещениеТоваров
	|ГДЕ
	|	Реестр.ВидДокумента = ТИП(Документ.ПеремещениеТоваров)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.ВедущийДокумент КАК ВедущийДокумент,
	|	ТаблицаДокументы.ТоварныйОрдер КАК ТоварныйОрдер,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура.IDN КАК IDN,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ""шт.""
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаТовары.Упаковка.Коэффициент
	|	КОНЕЦ КАК Коэффициент,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыПеремещений
	|ИЗ
	|	РеестрПеремещений КАК ТаблицаДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаДокументы.ВедущийДокумент = ТаблицаТовары.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ВидДокумента = ТИП(Документ.ПеремещениеТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокументы.ВедущийДокумент,
	|	ТаблицаДокументы.ТоварныйОрдер,
	|	ТаблицаТовары.Номенклатура.IDN,
	|	ТаблицаТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаТовары.Упаковка.Коэффициент
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ""шт.""
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВедущийДокумент,
	|	ТоварныйОрдер,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.ВедущийДокумент КАК ВедущийДокумент,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура.IDN КАК IDN,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ""шт.""
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаТовары.Упаковка.Коэффициент
	|	КОНЕЦ КАК Коэффициент,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыПрочее
	|ИЗ
	|	Реестр КАК ТаблицаДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаДокументы.ВедущийДокумент = ТаблицаТовары.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ВидДокумента = ТИП(Документ.ОприходованиеТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументы.ВедущийДокумент,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура.IDN,
	|	ТаблицаТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ""шт.""
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаТовары.Упаковка.Коэффициент
	|	КОНЕЦ,
	|	ТаблицаТовары.КоличествоУпаковок
	|ИЗ
	|	Реестр КАК ТаблицаДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаДокументы.ВедущийДокумент = ТаблицаТовары.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ВидДокумента = ТИП(Документ.СписаниеТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.ВедущийДокумент,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.IDN,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.Коэффициент,
	|	ТаблицаТовары.КоличествоУпаковок
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДокументы.ВедущийДокумент КАК ВедущийДокумент,
	|		ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|		ТаблицаТовары.Номенклатура.IDN КАК IDN,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		""шт."" КАК Упаковка,
	|		1 КАК Коэффициент,
	|		-ТаблицаТовары.Количество КАК КоличествоУпаковок
	|	ИЗ
	|		Реестр КАК ТаблицаДокументы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|			ПО ТаблицаДокументы.ВедущийДокумент = ТаблицаТовары.Ссылка
	|	ГДЕ
	|		ТаблицаДокументы.ВидДокумента = ТИП(Документ.ПересортицаТоваров)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокументы.ВедущийДокумент,
	|		ТаблицаТовары.НомерСтроки,
	|		ТаблицаТовары.НоменклатураОприходование.IDN,
	|		ТаблицаТовары.НоменклатураОприходование,
	|		""шт."",
	|		1,
	|		ТаблицаТовары.Количество
	|	ИЗ
	|		Реестр КАК ТаблицаДокументы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|			ПО ТаблицаДокументы.ВедущийДокумент = ТаблицаТовары.Ссылка
	|	ГДЕ
	|		ТаблицаДокументы.ВидДокумента = ТИП(Документ.ПересортицаТоваров)) КАК ТаблицаТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументы.ВедущийДокумент,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура.IDN,
	|	ТаблицаТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ""шт.""
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ ТаблицаТовары.Упаковка.Коэффициент
	|	КОНЕЦ,
	|	ТаблицаТовары.КоличествоУпаковокФакт - ТаблицаТовары.КоличествоУпаковок
	|ИЗ
	|	Реестр КАК ТаблицаДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПересчетТоваровСамостоятельный.Товары КАК ТаблицаТовары
	|		ПО ТаблицаДокументы.ВедущийДокумент = ТаблицаТовары.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ВидДокумента = ТИП(Документ.ПересчетТоваровСамостоятельный)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеестрПеремещений.Дата КАК Дата,
	|	РеестрПеремещений.IDN КАК IDN,
	|	РеестрПеремещений.Проведен КАК Проведен,
	|	РеестрПеремещений.ПометкаУдаления КАК ПометкаУдаления,
	|	РеестрПеремещений.Магазин КАК Магазин,
	|	РеестрПеремещений.ВидДвижения КАК ВидДвижения,
	|	РеестрПеремещений.Проект КАК Проект,
	|	ЕСТЬNULL(Реквизиты.НомерМагазина, """") КАК НомерМагазина,
	|	ЕСТЬNULL(Реквизиты.IDN, """") КАК IDNМагазина,
	|	РеестрПеремещений.ВедущийДокумент КАК ВедущийДокумент,
	|	РеестрПеремещений.ВидДокумента КАК ВидДокумента,
	|	РеестрПеремещений.ВыгруженNavision КАК ВыгруженNavision,
	|	РеестрПеремещений.УчтенNavision КАК УчтенNavision,
	|	РеестрПеремещений.ТоварныйОрдер КАК ТоварныйОрдер,
	|	РеестрПеремещений.ОрдерПроведен КАК ОрдерПроведен,
	|	РеестрПеремещений.ОрдерПометкаУдаления КАК ОрдерПометкаУдаления,
	|	РеестрПеремещений.ОрдерВыгруженNavision КАК ОрдерВыгруженNavision,
	|	РеестрПеремещений.ОрдерУчтенNavision КАК ОрдерУчтенNavision,
	|	ВЫБОР
	|		КОГДА РеестрПеремещений.ВидДвижения = ""ПРИХОД""
	|			ТОГДА 0
	|		КОГДА РеестрПеремещений.ВидДвижения = ""РАСХОД""
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК ПорядокДвижения
	|ИЗ
	|	РеестрПеремещений КАК РеестрПеремещений
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиМагазинов КАК Реквизиты
	|		ПО РеестрПеремещений.Магазин = Реквизиты.Магазин
	|ГДЕ
	|	РеестрПеремещений.ВидДокумента = ТИП(Документ.ПеремещениеТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Реестр.Дата,
	|	Реестр.IDN,
	|	Реестр.Проведен,
	|	Реестр.ПометкаУдаления,
	|	Реестр.Магазин,
	|	Реестр.ВидДвижения,
	|	Реестр.Проект,
	|	ЕСТЬNULL(Реквизиты.НомерМагазина, """"),
	|	ЕСТЬNULL(Реквизиты.IDN, """"),
	|	Реестр.ВедущийДокумент,
	|	Реестр.ВидДокумента,
	|	Реестр.ВыгруженNavision,
	|	Реестр.УчтенNavision,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА Реестр.ВидДвижения = ""ПРИХОД""
	|			ТОГДА 0
	|		КОГДА Реестр.ВидДвижения = ""РАСХОД""
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ
	|ИЗ
	|	Реестр КАК Реестр
	|		ЛЕВОЕ СОЕДИНЕНИЕ КлючиМагазинов КАК Реквизиты
	|		ПО Реестр.Магазин = Реквизиты.Магазин
	|ГДЕ
	|	НЕ Реестр.ВидДокумента = ТИП(Документ.ПеремещениеТоваров)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерМагазина,
	|	ПорядокДвижения,
	|	Дата,
	|	ВедущийДокумент
	|ИТОГИ
	|	МАКСИМУМ(НомерМагазина),
	|	МАКСИМУМ(IDNМагазина)
	|ПО
	|	Магазин,
	|	ВидДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ВедущийДокумент КАК ВедущийДокумент,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.IDN КАК IDN,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	СУММА(ТаблицаТовары.КоличествоПлан) КАК КоличествоПлан,
	|	СУММА(ТаблицаТовары.КоличествоФакт) КАК КоличествоФакт,
	|	ТаблицаТовары.План КАК План,
	|	NULL КАК Коэффициент
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.ВедущийДокумент КАК ВедущийДокумент,
	|		ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|		ТаблицаТовары.IDN КАК IDN,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Упаковка КАК Упаковка,
	|		ТаблицаТовары.КоличествоУпаковок КАК КоличествоПлан,
	|		0 КАК КоличествоФакт,
	|		ИСТИНА КАК План
	|	ИЗ
	|		ТоварыПеремещений КАК ТаблицаТовары
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаПеремещений.ВедущийДокумент,
	|		ТаблицаПеремещений.НомерСтроки,
	|		ТаблицаПеремещений.IDN,
	|		ТаблицаПеремещений.Номенклатура,
	|		ТаблицаПеремещений.Упаковка,
	|		0,
	|		ТоварыОрдера.Количество / ТаблицаПеремещений.Коэффициент,
	|		ИСТИНА
	|	ИЗ
	|		ТоварыПеремещений КАК ТаблицаПеремещений
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТаблицаДокументы.ВедущийДокумент КАК ВедущийДокумент,
	|				ТаблицаДокументы.ТоварныйОрдер КАК ТоварныйОрдер,
	|				ТаблицаТовары.Номенклатура КАК Номенклатура,
	|				СУММА(ТаблицаТовары.Количество) КАК Количество
	|			ИЗ
	|				ТоварыПеремещений КАК ТаблицаДокументы
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|					ПО ТаблицаДокументы.ТоварныйОрдер = ТаблицаТовары.Ссылка
	|						И ТаблицаДокументы.Номенклатура = ТаблицаТовары.Номенклатура
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТаблицаДокументы.ВедущийДокумент,
	|				ТаблицаТовары.Номенклатура,
	|				ТаблицаДокументы.ТоварныйОрдер) КАК ТоварыОрдера
	|			ПО ТаблицаПеремещений.ВедущийДокумент = ТоварыОрдера.ВедущийДокумент
	|				И ТаблицаПеремещений.ТоварныйОрдер = ТоварыОрдера.ТоварныйОрдер
	|				И ТаблицаПеремещений.Номенклатура = ТоварыОрдера.Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокументы.ВедущийДокумент,
	|		1000 + ТаблицаТовары.НомерСтроки,
	|		ТаблицаТовары.Номенклатура.IDN,
	|		ТаблицаТовары.Номенклатура,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ""шт.""
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
	|		КОНЕЦ,
	|		0,
	|		СУММА(ТаблицаТовары.КоличествоУпаковок),
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.ПриходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПеремещений КАК ТаблицаДокументы
	|			ПО ТаблицаТовары.Ссылка = ТаблицаДокументы.ТоварныйОрдер
	|				И ТаблицаТовары.Номенклатура = ТаблицаДокументы.Номенклатура
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					ТоварыПеремещений.ТоварныйОрдер
	|				ИЗ
	|					ТоварыПеремещений
	|				ГДЕ
	|					ТоварыПеремещений.ТоварныйОрдер ССЫЛКА Документ.ПриходныйОрдерНаТовары)
	|		И ТаблицаДокументы.Номенклатура ЕСТЬ NULL
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокументы.ВедущийДокумент,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Номенклатура.IDN,
	|		1000 + ТаблицаТовары.НомерСтроки,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ""шт.""
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
	|		КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаПеремещений.ВедущийДокумент,
	|		ТаблицаПеремещений.НомерСтроки,
	|		ТаблицаПеремещений.IDN,
	|		ТаблицаПеремещений.Номенклатура,
	|		ТаблицаПеремещений.Упаковка,
	|		0,
	|		ТоварыОрдера.Количество / ТаблицаПеремещений.Коэффициент,
	|		ИСТИНА
	|	ИЗ
	|		ТоварыПеремещений КАК ТаблицаПеремещений
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТаблицаДокументы.ВедущийДокумент КАК ВедущийДокумент,
	|				ТаблицаДокументы.ТоварныйОрдер КАК ТоварныйОрдер,
	|				ТаблицаТовары.Номенклатура КАК Номенклатура,
	|				СУММА(ТаблицаТовары.Количество) КАК Количество
	|			ИЗ
	|				ТоварыПеремещений КАК ТаблицаДокументы
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|					ПО ТаблицаДокументы.ТоварныйОрдер = ТаблицаТовары.Ссылка
	|						И ТаблицаДокументы.Номенклатура = ТаблицаТовары.Номенклатура
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТаблицаДокументы.ВедущийДокумент,
	|				ТаблицаТовары.Номенклатура,
	|				ТаблицаДокументы.ТоварныйОрдер) КАК ТоварыОрдера
	|			ПО ТаблицаПеремещений.ВедущийДокумент = ТоварыОрдера.ВедущийДокумент
	|				И ТаблицаПеремещений.ТоварныйОрдер = ТоварыОрдера.ТоварныйОрдер
	|				И ТаблицаПеремещений.Номенклатура = ТоварыОрдера.Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокументы.ВедущийДокумент,
	|		1000 + ТаблицаТовары.НомерСтроки,
	|		ТаблицаТовары.Номенклатура.IDN,
	|		ТаблицаТовары.Номенклатура,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ""шт.""
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
	|		КОНЕЦ,
	|		0,
	|		СУММА(ТаблицаТовары.КоличествоУпаковок),
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.РасходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПеремещений КАК ТаблицаДокументы
	|			ПО ТаблицаТовары.Ссылка = ТаблицаДокументы.ТоварныйОрдер
	|				И ТаблицаТовары.Номенклатура = ТаблицаДокументы.Номенклатура
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					ТоварыПеремещений.ТоварныйОрдер
	|				ИЗ
	|					ТоварыПеремещений
	|				ГДЕ
	|					ТоварыПеремещений.ТоварныйОрдер ССЫЛКА Документ.РасходныйОрдерНаТовары)
	|		И ТаблицаДокументы.Номенклатура ЕСТЬ NULL
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаДокументы.ВедущийДокумент,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Номенклатура.IDN,
	|		1000 + ТаблицаТовары.НомерСтроки,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|				ТОГДА ""шт.""
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка)
	|		КОНЕЦ) КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ВедущийДокумент,
	|	ТаблицаТовары.IDN,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.План,
	|	ТаблицаТовары.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.ВедущийДокумент,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.IDN,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок,
	|	ТаблицаТовары.КоличествоУпаковок,
	|	ИСТИНА,
	|	ТаблицаТовары.Коэффициент
	|ИЗ
	|	ТоварыПрочее КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	КоличествоПлан
	|ИТОГИ ПО
	|	ВедущийДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Реестр
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КлючиМагазинов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РеестрПеремещений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварыПеремещений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварыПрочее"
	;

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТаблицуТоваров(РезультатЗапроса)

	ТаблицаТоваров = Новый ТаблицаЗначений;

	Для каждого Колонка Из РезультатЗапроса.Колонки Цикл

		ТаблицаТоваров.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);

	КонецЦикла;

	ТаблицаТоваров.Колонки.Добавить("КоличествоОтклонение", Новый ОписаниеТипов("Число"));

	Возврат ТаблицаТоваров;

КонецФункции

Функция ПолучитьИтогиТаблицы(ТаблицаТоваров, УчестьОтклонение, ТолькоПоложительные)

	ИтогиТаблицы = Новый Структура(
		"КоличествоПлан, КоличествоФакт, КоличествоОтклонение, ПозицийПлан, ПозицийФакт"
		, 0, 0, 0, 0, 0
	);

	Для каждого СтрокаТаблицы Из ТаблицаТоваров Цикл

		Если ТолькоПоложительные = 1 Тогда

			Если СтрокаТаблицы.КоличествоПлан > 0 Тогда

				ИтогиТаблицы.КоличествоПлан = ИтогиТаблицы.КоличествоПлан + СтрокаТаблицы.КоличествоПлан;
				ИтогиТаблицы.ПозицийПлан    = ИтогиТаблицы.ПозицийПлан + 1;

			КонецЕсли;

			Если СтрокаТаблицы.КоличествоФакт > 0 Тогда

				ИтогиТаблицы.КоличествоФакт = ИтогиТаблицы.КоличествоФакт + СтрокаТаблицы.КоличествоФакт;
				ИтогиТаблицы.ПозицийФакт = ИтогиТаблицы.ПозицийФакт + 1;

			КонецЕсли;

		ИначеЕсли ТолькоПоложительные = 2 Тогда

			ИтогиТаблицы.КоличествоПлан = ИтогиТаблицы.КоличествоПлан + СтрокаТаблицы.КоличествоПлан * ?(СтрокаТаблицы.КоличествоПлан < 0, -1, 1);
			ИтогиТаблицы.ПозицийПлан    = ИтогиТаблицы.ПозицийПлан + 1;

			ИтогиТаблицы.КоличествоФакт = ИтогиТаблицы.КоличествоФакт + СтрокаТаблицы.КоличествоФакт * ?(СтрокаТаблицы.КоличествоФакт < 0, -1, 1);
			ИтогиТаблицы.ПозицийФакт = ИтогиТаблицы.ПозицийФакт + 1;

		Иначе

			Если НЕ СтрокаТаблицы.КоличествоПлан = 0 Тогда

				ИтогиТаблицы.КоличествоПлан = ИтогиТаблицы.КоличествоПлан + СтрокаТаблицы.КоличествоПлан;
				ИтогиТаблицы.ПозицийПлан = ИтогиТаблицы.ПозицийПлан + 1;

			КонецЕсли;

			Если НЕ СтрокаТаблицы.КоличествоФакт = 0 Тогда

				ИтогиТаблицы.КоличествоФакт = ИтогиТаблицы.КоличествоФакт + СтрокаТаблицы.КоличествоФакт;
				ИтогиТаблицы.ПозицийФакт = ИтогиТаблицы.ПозицийФакт + 1;

			КонецЕсли;

		КонецЕсли;

		Если УчестьОтклонение Тогда

			ИтогиТаблицы.КоличествоОтклонение = ИтогиТаблицы.КоличествоОтклонение
				+ Макс(СтрокаТаблицы.КоличествоОтклонение, СтрокаТаблицы.КоличествоОтклонение * -1);

		КонецЕсли;

	КонецЦикла;

	Возврат ИтогиТаблицы;

КонецФункции

Функция ПолучитьПредставлениеОтборов(ПараметрыЗапроса)

	ОтборыПредставление = ?(НЕ Магазин.Пустая(), "Магазин: " + СокрЛП(Магазин) + Символы.ПС, "")
	+ "Виды документов: ";

	ПерваяСтрока = Истина;

	Для каждого СтрокаТаблицы Из ПараметрыЗапроса.ВидыДокументов Цикл

		ОтборыПредставление = ОтборыПредставление + ?(ПерваяСтрока, "", "; ") +  "<" + СтрокаТаблицы.Представление + ">";
		ПерваяСтрока = Ложь;

	КонецЦикла;

	Возврат ОтборыПредставление;

КонецФункции

Функция ВыделитьПроблемуДокумента(Параметры, ВыборкаРеестр, ЦветТекста, ЦветФона, ШрифтПеречеркнут)

	ЦветТекста = Неопределено;
	ЦветФона   = Неопределено;
	ШрифтПеречеркнут = Неопределено;

	ПроблемныйДокумент = Ложь;

	Если НЕ ПустаяСтрока(Параметры.ТекстПомечен) Тогда

		ПроблемныйДокумент = Истина;
		ШрифтПеречеркнут   = Истина;
		ЦветТекста = WebЦвета.ТемноКрасный;

		Если НЕ ПустаяСтрока(Параметры.ТекстВыгруженNavision) Тогда

			ЦветФона = WebЦвета.СветлоРозовый;

		КонецЕсли;

	Иначе

		Если   Параметры.ТекстПроведен = "2" И Параметры.ТекстВыгруженNavision = "1"
		ИЛИ НЕ Параметры.ТекстПроведен = "2" И Параметры.ТекстВыгруженNavision = "2" Тогда
		
			ПроблемныйДокумент = Истина;
			ЦветТекста = WebЦвета.ТемноКрасный;

		ИначеЕсли Параметры.ТекстПроведен =  "" И Параметры.ТекстВыгруженNavision = "" Тогда
		
			ПроблемныйДокумент = Истина;
			ЦветФона = WebЦвета.Перламутровый;

		ИначеЕсли СчитатьПроблемойПроведенНеВыгружен
				И Параметры.ТекстПроведен = "2" И Параметры.ТекстВыгруженNavision = "" Тогда
		
			ПроблемныйДокумент = Истина;
			ЦветФона = WebЦвета.Перламутровый;

		КонецЕсли;

		Если ЦветТекста = Неопределено Тогда

			Если ТипЗнч(Параметры.ВедущийДокумент) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда

				Если НЕ Параметры.ПозицийПлан = Параметры.ПозицийФакт
				ИЛИ  НЕ Параметры.КоличествоПлан = Параметры.КоличествоФакт Тогда

					Если ЗначениеЗаполнено(ВыборкаРеестр.ТоварныйОрдер) ИЛИ СчитатьПроблемойПеремещениеБезОрдера Тогда

						ПроблемныйДокумент = Истина;
						ЦветТекста = WebЦвета.ТемноКрасный;

					КонецЕсли;

				КонецЕсли;

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	Возврат ПроблемныйДокумент;

КонецФункции








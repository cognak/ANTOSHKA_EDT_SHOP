
&НаСервере
Функция СоздатьДокументыПриемкиНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РекламныеМатериалыКПриемкеОстатки.РекламныйМатериал КАК РекламныйМатериал,
		|	РекламныеМатериалыКПриемкеОстатки.РекламнаяПлоскость КАК РекламнаяПлоскость,
		|	РекламныеМатериалыКПриемкеОстатки.ДокументРаспоряжение КАК ДокументРаспоряжение,
		|	СУММА(РекламныеМатериалыКПриемкеОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	РегистрНакопления.РекламныеМатериалыКПриемке.Остатки(
		|			&Период,
		|			Организация = &Организация
		|				И Магазин = &Магазин) КАК РекламныеМатериалыКПриемкеОстатки
		|ГДЕ
		|	РекламныеМатериалыКПриемкеОстатки.ДокументРаспоряжение.ДатаПо > &Период" + ?(ЗначениеЗаполнено(Поставщик)," И РекламныеМатериалыКПриемкеОстатки.ДокументРаспоряжение.Поставщик = &Поставщик","")+"
		|
		|СГРУППИРОВАТЬ ПО
		|	РекламныеМатериалыКПриемкеОстатки.ДокументРаспоряжение,
		|	РекламныеМатериалыКПриемкеОстатки.РекламныйМатериал,
		|	РекламныеМатериалыКПриемкеОстатки.РекламнаяПлоскость";
	
	Запрос.УстановитьПараметр("Магазин", ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин);
	Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Огрганизация);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	
	РезультатЗапроса = Запрос.Выполнить();
ДокументСсылка = Неопределено;	
	Если НЕ РезультатЗапроса.Пустой() тогда 
		Док = Документы.ПриемкаРекламныхМатериалов.СоздатьДокумент();
		Док.Дата = ТекущаяДата();
		Док.Организация = ЭтотОбъект.Огрганизация; 
		Док.Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин; 
		Док.РекламныеМатериалы.Загрузить(РезультатЗапроса.Выгрузить());
		Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		Док.Записать();
		ДокументСсылка = Док.Ссылка;
	КонецЕсли;
	Возврат ДокументСсылка;
КонецФункции

&НаСервере
Функция СоздатьВсеДокументыПриемкиНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РекламныеМатериалыКПриемкеОстатки.РекламныйМатериал КАК РекламныйМатериал,
		|	РекламныеМатериалыКПриемкеОстатки.РекламнаяПлоскость КАК РекламнаяПлоскость,
		|	РекламныеМатериалыКПриемкеОстатки.ДокументРаспоряжение КАК ДокументРаспоряжение,
		|	СУММА(РекламныеМатериалыКПриемкеОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	РегистрНакопления.РекламныеМатериалыКПриемке.Остатки(
		|			&Период,
		|			Организация = &Организация
		|				И Магазин = &Магазин) КАК РекламныеМатериалыКПриемкеОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	РекламныеМатериалыКПриемкеОстатки.ДокументРаспоряжение,
		|	РекламныеМатериалыКПриемкеОстатки.РекламныйМатериал,
		|	РекламныеМатериалыКПриемкеОстатки.РекламнаяПлоскость";
	
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("Организация",ЭтотОбъект.Огрганизация);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	
	РезультатЗапроса = Запрос.Выполнить();
ДокументСсылка = Неопределено;	
	Если НЕ РезультатЗапроса.Пустой() тогда 
		Док = Документы.ПриемкаРекламныхМатериалов.СоздатьДокумент();
		Док.Дата = ТекущаяДата();
		Док.Организация = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику().ОсновнаяОрганизация; 
		Док.Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин; 
		Док.РекламныеМатериалы.Загрузить(РезультатЗапроса.Выгрузить());
		Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		Док.Записать();
		ДокументСсылка = Док.Ссылка;
	КонецЕсли;
	Возврат ДокументСсылка;
КонецФункции

&НаСервере
Функция СоздатьПросроченныеДокументыПриемкиНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РекламныеМатериалыКПриемкеОстатки.РекламныйМатериал КАК РекламныйМатериал,
		|	РекламныеМатериалыКПриемкеОстатки.РекламнаяПлоскость КАК РекламнаяПлоскость,
		|	РекламныеМатериалыКПриемкеОстатки.ДокументРаспоряжение КАК ДокументРаспоряжение,
		|	СУММА(РекламныеМатериалыКПриемкеОстатки.КоличествоОстаток) КАК Количество
		|ИЗ
		|	РегистрНакопления.РекламныеМатериалыКПриемке.Остатки(
		|			&Период,
		|			Организация = &Организация
		|				И Магазин = &Магазин) КАК РекламныеМатериалыКПриемкеОстатки
		|ГДЕ
		|	РекламныеМатериалыКПриемкеОстатки.ДокументРаспоряжение.ДатаПо < &Период
		|
		|СГРУППИРОВАТЬ ПО
		|	РекламныеМатериалыКПриемкеОстатки.ДокументРаспоряжение,
		|	РекламныеМатериалыКПриемкеОстатки.РекламныйМатериал,
		|	РекламныеМатериалыКПриемкеОстатки.РекламнаяПлоскость";
	
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Огрганизация);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	
	РезультатЗапроса = Запрос.Выполнить();
ДокументСсылка = Неопределено;	
	Если НЕ РезультатЗапроса.Пустой() тогда 
		Док = Документы.ПриемкаРекламныхМатериалов.СоздатьДокумент();
		Док.Дата = ТекущаяДата();
		Док.Организация = ОбщегоНазначенияРТ.ПолучитьУчетнуюПолитику().ОсновнаяОрганизация; 
		Док.Магазин = ОбменДаннымиПовтИсп.ПолучитьДанныеУзла().Магазин; 
		Док.РекламныеМатериалы.Загрузить(РезультатЗапроса.Выгрузить());
		Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		Док.Записать();
		ДокументСсылка = Док.Ссылка;
	КонецЕсли;
	Возврат ДокументСсылка;
КонецФункции

&НаКлиенте
Процедура СоздатьДокументыПриемки(Команда)
	ДокументСсылка = СоздатьДокументыПриемкиНаСервере();
	Если ЗначениеЗаполнено(ДокументСсылка) тогда 
		ОткрытьЗначение(ДокументСсылка);
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ОбновитьНаСервере(ТабДок)
	   
	ТабДок.Очистить();
    ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
    
	СхемаКомпоновкиДанных = ОтчетОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
    Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
   	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
 
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    Макет = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
    
    ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновки.Инициализировать(Макет,,ДанныеРасшифровки);
    
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ТабДок);
    ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	ДанныеРасшифровкиАдрес = ПоместитьВоВременноеХранилище(ДанныеРасшифровки,ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере(Результат);
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбновитьНаСервере(Результат);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.Результат.ОтображениеСостояния.Видимость = ложь; 
	Элементы.Результат.ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
    
    Ссылка = ПолучитьДанныеРасшифровки(Расшифровка);
   
    Если Ссылка <> Неопределено Тогда
        СтандартнаяОбработка = Ложь;
    ОткрытьЗначение(Ссылка);
    КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеРасшифровки(Расшифровка)
    
    Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровкиАдрес);
    Поле = Данные.Элементы.Получить(Расшифровка).ПолучитьПоля();
    //Поле = Поля.Найти("Поле");

    Если Поле = Неопределено Тогда 
        Возврат Неопределено
    Иначе 
        Возврат Поле[0].Значение;
    КонецЕсли;    
	
	
КонецФункции

&НаКлиенте
Процедура СоздатьВсе(Команда)
	Если ЗначениеЗаполнено(Магазин) тогда	
		ДокументСсылка = СоздатьВсеДокументыПриемкиНаСервере();
		Если ЗначениеЗаполнено(ДокументСсылка) тогда 
			ОткрытьЗначение(ДокументСсылка);
		КонецЕсли;
	Иначе
		Сообщить("Нобходимо выбрать магазин!");	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоздатьПросроченные(Команда)
	Если ЗначениеЗаполнено(Магазин) тогда	
		ДокументСсылка = СоздатьПросроченныеДокументыПриемкиНаСервере();
		Если ЗначениеЗаполнено(ДокументСсылка) тогда 
			ОткрытьЗначение(ДокументСсылка);
		КонецЕсли;
	Иначе
		Сообщить("Нобходимо выбрать магазин!");	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьРекламныеМатериалы(Команда)
	ОткрытьФорму("Обработка.УдалениеРекламныхМатериалов.Форма.Форма");
КонецПроцедуры

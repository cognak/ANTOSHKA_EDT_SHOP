//	LNK 31.05.2019 11:56:16
Процедура СформироватьАктАннуляции(ТабличныйДокумент)	Экспорт

	#Если _ Тогда
	ТабличныйДокумент  = Новый ТабличныйДокумент;
	#КонецЕсли

	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + Метаданные().Имя;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.АвтоМасштаб = Истина;

	Результаты = ПолучитьДанныеАкта();

	Макет = ПолучитьМакет("АктАннуляции");

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка     = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока    = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоги     = Макет.ПолучитьОбласть("Итог");

	ШапкаВыборка = Результаты[0].Выбрать();
	ШапкаВыборка.Следующий();
	ОбластьЗаголовок.Параметры.Заполнить(ШапкаВыборка);
	ОбластьЗаголовок.Параметры.ТекущаяДата = Формат(ТекущаяДата(), "Л=uk_UA; ДЛФ=DD");
	ОбластьЗаголовок.Параметры.ПериодПредставление =
		"Анульовані товарні позиції наведені за період з "
		+ Формат(НачалоПериода, "Л=uk_UA; ДЛФ=DD")
		+ " по "
		+ Формат(ОкончаниеПериода, "Л=uk_UA; ДЛФ=DD");

	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	ТабличныйДокумент.Вывести(ОбластьШапка);

	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(ТабличныйДокумент.ВысотаТаблицы - 1, , ТабличныйДокумент.ВысотаТаблицы);
//	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(1 + ОбластьШапка.ВысотаТаблицы, , 2 + ОбластьШапка.ВысотаТаблицы);

	ОбщаяВыборка = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Если ОбщаяВыборка.Следующий() Тогда

		ТоварыВыборка = ОбщаяВыборка.Выбрать();
		НомерСтроки   = 0;

		Пока ТоварыВыборка.Следующий() Цикл

			НомерСтроки = НомерСтроки + 1;

			ОбластьСтрока.Параметры.Заполнить(ТоварыВыборка);
			ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;

			ТабличныйДокумент.Вывести(ОбластьСтрока);

		КонецЦикла;

		ОбластьИтоги.Параметры.Заполнить(ОбщаяВыборка);
		ТабличныйДокумент.Вывести(ОбластьИтоги);

	КонецЕсли;

КонецПроцедуры

Функция ПолучитьДанныеАкта()

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Источник.Магазин КАК Магазин,
	|	Источник.Магазин.Представление КАК МагазинПредставление,
	|	Источник.КассаККМ КАК Касса,
	|	Источник.КассаККМ.Представление КАК КассаПредставление,
	|	Источник.Продавец КАК Продавец,
	|	ВЫБОР
	|		КОГДА ТаблицаФИО.ФизЛицо ЕСТЬ NULL
	|			ТОГДА Источник.Продавец.Наименование
	|		ИНАЧЕ ТаблицаФИО.Фамилия + "" "" + ТаблицаФИО.Имя + "" "" + ТаблицаФИО.Отчество
	|	КОНЕЦ КАК ПродавецПредставление
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫРАЗИТЬ(&Магазин КАК Справочник.Магазины) КАК Магазин,
	|		ВЫРАЗИТЬ(&КассаККМ КАК Справочник.КассыККМ) КАК КассаККМ,
	|		ВЫРАЗИТЬ(&Продавец КАК Справочник.Пользователи) КАК Продавец) КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ТаблицаФИО
	|		ПО Источник.Продавец.ФизЛицо = ТаблицаФИО.ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРегистра.Период КАК Период,
	|	ЕСТЬNULL(ТаблицаРегистра.ДокументПродажи.Номер, """") КАК НомерДокумента,
	|	ТаблицаРегистра.ДокументПродажи КАК ДокументПродажи,
	|	ТаблицаРегистра.Номенклатура КАК Номенклатура,
	|	ТаблицаРегистра.Номенклатура.Код КАК КодТовара,
	|	ТаблицаРегистра.Количество * ВЫБОР
	|		КОГДА ТаблицаРегистра.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ТаблицаРегистра.Упаковка.Коэффициент, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ ТаблицаРегистра.Упаковка.Коэффициент
	|			КОНЕЦ
	|	КОНЕЦ КАК Количество,
	|	ТаблицаРегистра.Цена / ВЫБОР
	|		КОГДА ТаблицаРегистра.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ТаблицаРегистра.Упаковка.Коэффициент, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ ТаблицаРегистра.Упаковка.Коэффициент
	|			КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	ТаблицаРегистра.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА &Продавец = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|			ТОГДА ТаблицаРегистра.Продавец
	|		ИНАЧЕ &Продавец
	|	КОНЕЦ КАК Продавец,
	|	ВЫБОР
	|		КОГДА &Продавец = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|			ТОГДА ТаблицаРегистра.Продавец.Наименование
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ПродавецПредставление
	|ИЗ
	|	РегистрСведений.АннуляцияПродажи КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ) И КОНЕЦПЕРИОДА(&ОкончаниеПериода, ДЕНЬ)
	|	И ТаблицаРегистра.Магазин = &Магазин
	|	И ВЫБОР
	|			КОГДА &КассаККМ = ЗНАЧЕНИЕ(Справочник.КассыККМ.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаРегистра.КассаККМ = &КассаККМ
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &Продавец = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТаблицаРегистра.Продавец = &Продавец
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПродавецПредставление,
	|	Период
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ"
	);
	Запрос.УстановитьПараметр("НачалоПериода"   , НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("Магазин"         , Магазин);
	Запрос.УстановитьПараметр("КассаККМ"        , КассаККМ);
	Запрос.УстановитьПараметр("Продавец"        , Продавец);
	
	Возврат Запрос.ВыполнитьПакет();

КонецФункции // ПолучитьДанныеАкта()

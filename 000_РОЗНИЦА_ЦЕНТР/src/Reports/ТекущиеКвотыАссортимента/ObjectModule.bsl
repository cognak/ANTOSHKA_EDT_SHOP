
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТабличныйДокументРезультат = СформироватьОтчет();
	
	ОбщегоНазначенияРТСервер.ВывестиДатуФормированияОтчета(ТабличныйДокументРезультат);
	ДокументРезультат.Вывести(ТабличныйДокументРезультат);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция СформироватьОтчет()
	ТабличныйДокументРезультат = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	МАКСИМУМ(Квоты.Период) КАК Период,
	|	Квоты.ОбъектПланирования КАК ОбъектПланирования
	|ПОМЕСТИТЬ МаксимальныеПериодыКвот
	|ИЗ
	|	РегистрСведений.КвотыАссортимента.СрезПоследних(&Период, ) КАК Квоты
	|СГРУППИРОВАТЬ ПО
	|	Квоты.ОбъектПланирования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Квоты.ОбъектПланирования КАК ФорматМагазина,
	|	Квоты.ТоварнаяКатегория.Владелец КАК ВидНоменклатуры,
	|	Квоты.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|	Квоты.Марка КАК Марка,
	|	Квоты.Квота КАК Квота,
	|	Квоты.ПроцентОтклонения КАК ПроцентОтклонения
	|ПОМЕСТИТЬ втТекущиеКвоты
	|ИЗ
	|	РегистрСведений.КвотыАссортимента.СрезПоследних(&Период, //УсловиеКвоты
	|	) КАК Квоты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаксимальныеПериодыКвот КАК МаксимальныеПериодыКвот
	|		ПО МаксимальныеПериодыКвот.ОбъектПланирования = Квоты.ОбъектПланирования
	|		И МаксимальныеПериодыКвот.Период = Квоты.Период
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТекущиеКвоты.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|	ТекущиеКвоты.Марка КАК Марка,
	|	МАКСИМУМ(ТекущиеКвоты.Квота) КАК Квота,
	|	СРЕДНЕЕ(ТекущиеКвоты.ПроцентОтклонения) КАК ПроцентОтклонения
	|ПОМЕСТИТЬ втТекущиеКвотыБезФорматов
	|ИЗ
	|	втТекущиеКвоты КАК ТекущиеКвоты
	|
	|СГРУППИРОВАТЬ ПО
	|	ТекущиеКвоты.ТоварнаяКатегория,
	|	ТекущиеКвоты.Марка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТекущиеКвотыБезФорматов.Квота) КАК КвотаОбщие,
	|	СРЕДНЕЕ(ТекущиеКвотыБезФорматов.ПроцентОтклонения) КАК ПроцентОтклоненияОбщие
	|ПОМЕСТИТЬ втТекущиеКвотыОбщийИтог
	|ИЗ
	|	втТекущиеКвотыБезФорматов КАК ТекущиеКвотыБезФорматов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТекущиеКвоты.ФорматМагазина КАК ФорматМагазина,
	|	втТекущиеКвоты.ВидНоменклатуры КАК ВидНоменклатуры,
	|	втТекущиеКвоты.ТоварнаяКатегория КАК ТоварнаяКатегория,
	|	втТекущиеКвоты.Марка КАК Марка,
	|	втТекущиеКвоты.ФорматМагазина.Наименование КАК НаименованиеФорматМагазина,
	|	втТекущиеКвоты.ВидНоменклатуры.Наименование КАК НаименованиеВидНоменклатуры,
	|	втТекущиеКвоты.ТоварнаяКатегория.Наименование КАК НаименованиеТоварнаяКатегория,
	|	ЕстьNULL(втТекущиеКвоты.Марка.Наименование,""Прочие марки"") КАК НаименованиеМарка,
	|	втТекущиеКвоты.Квота КАК Квота,
	|	ВЫРАЗИТЬ(втТекущиеКвоты.ПроцентОтклонения КАК ЧИСЛО(15, 2)) КАК ПроцентОтклонения,
	|	втТекущиеКвотыОбщийИтог.КвотаОбщие КАК КвотаОбщие,
	|	ВЫРАЗИТЬ(втТекущиеКвотыОбщийИтог.ПроцентОтклоненияОбщие КАК ЧИСЛО(15, 2)) КАК ПроцентОтклоненияОбщие
	|ИЗ
	|	втТекущиеКвоты КАК втТекущиеКвоты
	|		ЛЕВОЕ СОЕДИНЕНИЕ втТекущиеКвотыОбщийИтог КАК втТекущиеКвотыОбщийИтог
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НаименованиеФорматМагазина,
	|	ФорматМагазина,
	|	НаименованиеВидНоменклатуры,
	|	ВидНоменклатуры,
	|	НаименованиеТоварнаяКатегория,
	|	ТоварнаяКатегория,
	|	НаименованиеМарка,
	|	Марка
	|ИТОГИ
	|	СУММА(Квота),
	|	ВЫРАЗИТЬ(СРЕДНЕЕ(ПроцентОтклонения) КАК ЧИСЛО(15, 2)) КАК ПроцентОтклонения,
	|	МАКСИМУМ(КвотаОбщие),
	|	МАКСИМУМ(ПроцентОтклоненияОбщие)
	|ПО
	|	ОБЩИЕ,
	|	ФорматМагазина,
	|	ВидНоменклатуры ИЕРАРХИЯ,
	|	ТоварнаяКатегория ИЕРАРХИЯ";
	//
	ЭлементПараметров = Неопределено;
	ПараметрПериод = "";
	Для Каждого ЭлементНастроек ИЗ КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ЭлементНастроек) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			Если СокрЛП(ЭлементНастроек.Параметр) = "Период" Тогда
				ЭлементПараметров = ЭлементНастроек;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если ЭлементПараметров <> Неопределено Тогда
		Если ЭлементПараметров.Использование Тогда
			Если ТипЗнч(ЭлементПараметров.Значение) = Тип("Дата") Тогда
				ПараметрПериод = ЭлементПараметров.Значение;
			Иначе
				ПараметрПериод = ЭлементПараметров.Значение.Дата;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПараметрПериод) Тогда
		СтрокаСообщенияПериода = НСтр("ru = 'Не задано значение параметра ""Период"".'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщенияПериода);
		Возврат ТабличныйДокументРезультат;
	КонецЕсли;
	Запрос.Параметры.Вставить(СокрЛП(ЭлементПараметров.Параметр),ПараметрПериод);
	//
	ЭлементОтбора = Неопределено;
	Для Каждого ЭлементНастроек ИЗ КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ЭлементНастроек) = Тип("ОтборКомпоновкиДанных") Тогда
			ЭлементОтбора = ЭлементНастроек;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	//
	Если ЭлементОтбора <> Неопределено Тогда
		ДобавитьУсловияИПараметры(Запрос, ТекстЗапроса, ЭлементОтбора);
	КонецЕсли;
	//
	Запрос.Текст=ТекстЗапроса;
	Результат=Запрос.Выполнить();
	//Возврат ТабличныйДокументРезультат;
	СоответствиеПоказателей=Новый Соответствие;
	СоответствиеПоказателей.Вставить("Квота","Квота");
	СоответствиеПоказателей.Вставить("ПроцентОтклонения","ПроцентОтклонения");
	//
	СоответствиеПоказателей0=Новый Соответствие;
	СоответствиеПоказателей0.Вставить("Квота","КвотаОбщие");
	СоответствиеПоказателей0.Вставить("ПроцентОтклонения","ПроцентОтклоненияОбщие");
	//
	Макет=ПолучитьМакет("Макет");
	ОбластьЗаголовок=Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета="Текущие квоты ассортимента";
	ТабличныйДокументРезультат.Вывести(ОбластьЗаголовок);
	//
	ТабличныйДокументРезультат.НачатьАвтогруппировкуСтрок();
	ОбластьПараметрыОтчета=Макет.ПолучитьОбласть("ПараметрыОтчета");
	ТекстПараметров="Дата отчета: " + ПараметрПериод;
	ОбластьПараметрыОтчета.Параметры.ПараметрыОтчета=ТекстПараметров;
	ТабличныйДокументРезультат.Вывести(ОбластьПараметрыОтчета,1);
	//
	ПредставлениеОтбора = СокрЛП(ЭлементОтбора);
	Если НЕ ПустаяСтрока(ПредставлениеОтбора) Тогда
		ОбластьОтборыОтчета=Макет.ПолучитьОбласть("ОтборыОтчета");
		ОбластьОтборыОтчета.Параметры.ОтборыОтчета = ПредставлениеОтбора;
		ТабличныйДокументРезультат.Вывести(ОбластьОтборыОтчета,1);
	КонецЕсли;
	//
	//
	ОбластьШапка=Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ЗаголовокГруппировок="Формат / Вид номенклатуры / Категория / Марка";
	ТабличныйДокументРезультат.Вывести(ОбластьШапка,0);
	//
	ОбластьУровень1=Макет.ПолучитьОбласть("ОбластьУровень1");
	ОбластьУровень2=Макет.ПолучитьОбласть("ОбластьУровень2");
	ОбластьУровень3=Макет.ПолучитьОбласть("ОбластьУровень3");
	ОбластьУровень4=Макет.ПолучитьОбласть("ОбластьУровень4");
	ОбластьИтого=Макет.ПолучитьОбласть("Итого");
	//
	ВыборкаУровень0=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаУровень0.Следующий() Цикл
		//Итог в конце выводится
		ВыборкаУровень1=ВыборкаУровень0.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		//
		Пока ВыборкаУровень1.Следующий() Цикл
			ЗаполнитьПараметрыИВывестиОбласть(ТабличныйДокументРезультат, ОбластьУровень1, ВыборкаУровень1, "ФорматМагазина", СоответствиеПоказателей);
			Если ВыборкаУровень1.ТипЗаписи()=ТипЗаписиЗапроса.ИтогПоИерархии Тогда
				Продолжить;
			КонецЕсли;
			//
			ВыборкаУровень2=ВыборкаУровень1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			//
			Пока ВыборкаУровень2.Следующий() Цикл
				ЗаполнитьПараметрыИВывестиОбласть(ТабличныйДокументРезультат,ОбластьУровень2,ВыборкаУровень2,"ВидНоменклатуры",СоответствиеПоказателей);
				Если ВыборкаУровень2.ТипЗаписи()=ТипЗаписиЗапроса.ИтогПоИерархии Тогда
					Продолжить;
				КонецЕсли;
				//
				ВыборкаУровень3=ВыборкаУровень2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				//
				Пока ВыборкаУровень3.Следующий() Цикл
					ЗаполнитьПараметрыИВывестиОбласть(ТабличныйДокументРезультат,ОбластьУровень3,ВыборкаУровень3,"ТоварнаяКатегория",СоответствиеПоказателей);
					Если ВыборкаУровень3.ТипЗаписи()=ТипЗаписиЗапроса.ИтогПоИерархии Тогда
						Продолжить;
					КонецЕсли;
					//
					ВыборкаУровень4=ВыборкаУровень3.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					//
					Пока ВыборкаУровень4.Следующий() Цикл
						ЗаполнитьПараметрыИВывестиОбласть(ТабличныйДокументРезультат,ОбластьУровень4,ВыборкаУровень4,"Марка",СоответствиеПоказателей);
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		//
		ЗаполнитьПараметрыИВывестиОбласть(ТабличныйДокументРезультат,ОбластьИтого,ВыборкаУровень0,"",СоответствиеПоказателей0);
	КонецЦикла;
	ТабличныйДокументРезультат.ЗакончитьАвтогруппировкуСтрок();

	Возврат ТабличныйДокументРезультат;
КонецФункции

Процедура ЗаполнитьПараметрыИВывестиОбласть(ТабличныйДокументРезультат, Область, Выборка, ИмяГруппировки, СоответствиеПоказателей)
	УровеньГруппировки=Выборка.Уровень();
	ДобавитьПробелов="";
	Для н=2 ПО УровеньГруппировки Цикл
		ДобавитьПробелов=ДобавитьПробелов+" ";
	КонецЦикла;
	Если НЕ ПустаяСтрока(ИмяГруппировки) Тогда
		Область.Параметры.ЗначениеГруппировки=Выборка[ИмяГруппировки];
		Область.Параметры.ПредставлениеГруппировки=ДобавитьПробелов+Выборка["Наименование"+ИмяГруппировки];
	КонецЕсли;
	Для Каждого Показатель Из СоответствиеПоказателей Цикл
		Область.Параметры[Показатель.Ключ]=Выборка[Показатель.Значение];
	КонецЦикла;
	ТабличныйДокументРезультат.Вывести(Область,УровеньГруппировки);
КонецПроцедуры

Процедура ДобавитьУсловияИПараметры(Запрос, ТекстЗапроса, ЭлементОтбора)
	
	ДополнительныеПараметрыУсловия = АссортиментКлиентСервер.ПараметрыДляУсловия();
	
	ДополнительныеПараметрыУсловия.СчетчикУсловий = 0;
	ДополнительныеПараметрыУсловия.СчетчикПараметров = 0;
	///////////////////////////////////////////////////////////////////////////////
	// Условие квоты
	СоответствиеПолейУсловия = Новый Соответствие;
	СоответствиеПолейУсловия.Вставить("ФорматМагазина", "ОбъектПланирования");
	СоответствиеПолейУсловия.Вставить("ТоварнаяКатегория", "ТоварнаяКатегория");
	СоответствиеПолейУсловия.Вставить("Марка", "Марка");
	
	ДополнительныеПараметрыУсловия.ТекстУсловия = "";
	ДополнительныеПараметрыУсловия.ТекстНачальногоУсловия = "";
	ДополнительныеПараметрыУсловия.УсловиеГруппы = "";
	ДополнительныеПараметрыУсловия.СоответствиеПолейУсловия = СоответствиеПолейУсловия;
	
	АссортиментСервер.СформироватьТекстУсловия(Запрос, ЭлементОтбора.Элементы, ДополнительныеПараметрыУсловия);
	ТекстЗапроса=СтрЗаменить(ТекстЗапроса, "//УсловиеКвоты", СокрЛП(ДополнительныеПараметрыУсловия.ТекстУсловия));
	
КонецПроцедуры

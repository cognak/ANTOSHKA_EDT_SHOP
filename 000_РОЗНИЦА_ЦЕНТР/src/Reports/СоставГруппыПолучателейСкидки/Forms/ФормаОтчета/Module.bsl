
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ГруппаПолучателей = Параметры.ГруппаПолучателей;
	РеквизитыГруппы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ГруппаПолучателей, Новый Структура("СпособФормирования, ТипПолучателей", "СпособФормирования", "ТипПолучателей"));
	ВидимостьЭлементов = РеквизитыГруппы.СпособФормирования = Перечисления.СпособыФормированияСегментов.ФормироватьВручную;
	Элементы.ДобавитьВГруппу.Видимость = ВидимостьЭлементов;
	Элементы.УдалитьИзГруппы.Видимость = ВидимостьЭлементов;
	ТипПолучателей = РеквизитыГруппы.ТипПолучателей;
	
	Отчет.КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Вставить("ГруппаПолучателей", ГруппаПолучателей);
	

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)

	Если ТипЗнч(Расшифровка) <> Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
		Возврат;
	КонецЕсли;

	СтандартнаяОбработка = Ложь;
	Элемент = РасшифроватьЭлемент(Расшифровка);
	Если ЗначениеЗаполнено(Элемент) Тогда
		ОткрытьЗначение(Элемент);
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ДобавитьВГруппу(Команда)
	
	
	СписокВыбораТипа = СписокТиповПолучателей();
	ВыбранныйТип = Неопределено;
	Если СписокВыбораТипа.Количество() = 1 Тогда
		ВыбранныйТип = СписокВыбораТипа[0];
	Иначе
		ВыбранныйТип = СписокВыбораТипа.ВыбратьЭлемент("Выберите тип значения");
	КонецЕсли;
	Элемент = Неопределено;
	
	Если ВыбранныйТип = Неопределено Тогда
		Возврат;
	ИначеЕсли ВыбранныйТип.Значение = "Физические лица" Тогда
		Элемент = ОткрытьФормуМодально("Справочник.ФизическиеЛица.ФормаВыбора");
	ИначеЕсли ВыбранныйТип.Значение = "Контрагенты" Тогда
		Элемент = ОткрытьФормуМодально("Справочник.Контрагенты.ФормаВыбора");
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Элемент) Тогда
		ДобавитьЭлемент(Элемент, Истина, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзГруппы(Команда)
	
	мРасшифровки = Новый Массив();
	Области = Результат.ВыделенныеОбласти;
	
	Для Каждого Область Из Области Цикл
		Для Строка = Область.Верх По Область.Низ Цикл
			Для Столбец = 1 По 200 Цикл
				Расшифровка = Результат.Область("R" + Формат(Строка, "ЧГ=0") + "C" + Столбец).Расшифровка;
				Если ТипЗнч(Расшифровка) = Тип("ИдентификаторРасшифровкиКомпоновкиДанных") Тогда
					мРасшифровки.Добавить(Расшифровка);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	УдалитьЭлементы(мРасшифровки);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьГруппу(Команда)

	СегментыСервер.СформироватьГруппуПолучателейСкидки(ГруппаПолучателей);
	СкомпоноватьРезультат();

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//Удаляет выбранные элементы из состава сегмента
&НаСервере
Процедура УдалитьЭлементы(Расшифровки)

	ДанныеРасшифровкиОтчета = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	
	Для Каждого Расшифровка Из Расшифровки Цикл
		ЭлементРасшифровки = ДанныеРасшифровкиОтчета.Элементы[Расшифровка];
		Для Каждого ЗначениеПоляРасшифровки Из ЭлементРасшифровки.ПолучитьПоля() Цикл
			Значение = ЗначениеПоляРасшифровки.Значение;
			Если (ТипЗнч(Значение) = Тип("СправочникСсылка.ФизическиеЛица") ИЛИ ТипЗнч(Значение) = Тип("СправочникСсылка.Контрагенты"))
				И ЗначениеЗаполнено(Значение) Тогда
				НаборЗаписей = РегистрыСведений.СоставГруппПолучателейСкидки.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.ГруппаПолучателейСкидки.Установить(ГруппаПолучателей);
				НаборЗаписей.Отбор.Получатель.Установить(Значение);
				НаборЗаписей.Записать(); 
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;
	
	СкомпоноватьРезультат();

КонецПроцедуры

//Возвращает возможный для просмотра элемент
&НаСервере
Функция РасшифроватьЭлемент(Расшифровка)

	ДанныеРасшифровкиОтчета = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	ЭлементРасшифровки = ДанныеРасшифровкиОтчета.Элементы[Расшифровка];

	Если ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		Для Каждого ЗначениеПоляРасшифровки Из ЭлементРасшифровки.ПолучитьПоля() Цикл
			Значение = ЗначениеПоляРасшифровки.Значение;
			Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Значение))
			 ИЛИ Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Значение)) Тогда
				Возврат Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Возврат Неопределено;

КонецФункции

//Добавляет элемент в состав сегмента
&НаСервере
Процедура ДобавитьЭлемент(Элемент, СкомпоноватьРезультат = Ложь, ВыводитьСообщения = Ложь)
	
	Если ТипЗнч(Элемент) = Тип("Массив") Тогда
		Для каждого ЭлементМассива Из Элемент Цикл
			ДобавитьЭлемент(ЭлементМассива, СкомпоноватьРезультат, ВыводитьСообщения);
		КонецЦикла;
		Возврат;
	ИначеЕсли ТипЗнч(Элемент) = Тип("СправочникСсылка.ФизическиеЛица") 
		ИЛИ ТипЗнч(Элемент) = Тип("СправочникСсылка.Контрагенты") Тогда
		Получатель = Элемент;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Получатель.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запись = РегистрыСведений.СоставГруппПолучателейСкидки.СоздатьМенеджерЗаписи();
	Запись.ГруппаПолучателейСкидки = ГруппаПолучателей;
	Запись.Получатель = Получатель;
	Запись.Прочитать();
	
	Если Запись.Выбран() Тогда
		Если ВыводитьСообщения Тогда
			ТекстСообщения = НСтр("ru='Элемент %1 уже включен в группу получателей.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Получатель);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	Иначе
		Запись.ГруппаПолучателейСкидки = ГруппаПолучателей;
		Запись.Получатель = Получатель;
		Запись.Записать();
		Если СкомпоноватьРезультат Тогда
			СкомпоноватьРезультат();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СписокТиповПолучателей()
	
	СписокРезультат = Новый СписокЗначений;
	
	Если ТипПолучателей = ПредопределенноеЗначение("Перечисление.ТипыПолучателейСкидок.ФизическиеЛица") Тогда
		СписокРезультат.Добавить("Физические лица");
	ИначеЕсли ТипПолучателей = ПредопределенноеЗначение("Перечисление.ТипыПолучателейСкидок.Контрагенты") Тогда
		СписокРезультат.Добавить("Контрагенты");
	Иначе
		СписокРезультат.Добавить("Физические лица");
		СписокРезультат.Добавить("Контрагенты");
	КонецЕсли;
	
	Возврат СписокРезультат;
	
КонецФункции
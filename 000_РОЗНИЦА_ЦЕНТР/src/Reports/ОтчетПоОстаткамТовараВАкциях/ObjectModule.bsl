
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ДополнительныеСвойства = КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства;
	Если Не ДополнительныеСвойства.Количество() Тогда
		Возврат;
	Иначе
		 ЗаполнитьПользовательскиеНастройки();
	КонецЕсли;
		
КонецПроцедуры


Процедура ЗаполнитьПользовательскиеНастройки()
	
	ДополнительныеСвойства = КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства;
	Если Не ДополнительныеСвойства.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы;
	Отборы    = КомпоновщикНастроек.Настройки.Отбор.Элементы;
	
	Для каждого Элемент Из Параметры Цикл
		
		ИмяПараметра = Строка(Элемент.Параметр);
		ЗначениеПараметра = Неопределено;
		
		Если ДополнительныеСвойства.Свойство(ИмяПараметра, ЗначениеПараметра) Тогда
			Настройка = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Элемент.ИдентификаторПользовательскойНастройки);
			Настройка.Значение      = ЗначениеПараметра;
			Настройка.Использование = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого Элемент Из Отборы Цикл
		
		ИмяПараметра = Строка(Элемент.ЛевоеЗначение);
		ЗначениеПараметра = Неопределено;
		
		Если ДополнительныеСвойства.Свойство(ИмяПараметра, ЗначениеПараметра) Тогда
			Настройка = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Элемент.ИдентификаторПользовательскойНастройки);
			Настройка.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			Настройка.ПравоеЗначение = ЗначениеПараметра;
			Настройка.Использование  = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
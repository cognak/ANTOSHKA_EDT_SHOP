
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	АдресХранилищаСКД = ПоместитьВоВременноеХранилище(ОтчетОбъект.ПолучитьМакет("РасшифровкаСоставаЗаказаПоставки"), Новый УникальныйИдентификатор);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Перем ВыполненноеДействие;
	
	СтруктураДействий = ПолучитьЗначениеПоляРасшифровки(Расшифровка);
	
	СтандартнаяОбработка = Ложь;
	
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(
		ДанныеРасшифровки, 
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресХранилищаСКД)
	);
	
	ВыполненноеДействие = Неопределено;
	ПараметрВыполненногоДействия = Неопределено;
	ДополнительноеМеню = Новый СписокЗначений();
	Если СтруктураДействий.Свойство("РасшифровкаНоменклатуры") Тогда
		ДополнительноеМеню.Добавить("РасшифровкаНоменклатуры", "Показать состав заказа и соответствующей поставки");
	КонецЕсли;
	
	ДоступныеДействия = Новый Массив;
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	
	ОбработкаРасшифровки.ВыбратьДействие(
		Расшифровка, 
		ВыполненноеДействие, 
		ПараметрВыполненногоДействия, 
		ДоступныеДействия,
		ДополнительноеМеню
	);
	
	Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
		ОткрытьЗначение(ПараметрВыполненногоДействия);
	ИначеЕсли ВыполненноеДействие = "РасшифровкаНоменклатуры" Тогда
		СформироватьРассшифровкуНаСервере(СтруктураДействий.ЗаказПоставщику);
		ТабличныйДокумент.Показать();
	КонецЕсли;
		
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ПолучитьЗначениеПоляРасшифровки(Расшифровка)
	
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресХранилищаСКД);
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, ИсточникНастроек);
		
	ДанныеРасшифровкиИзХранилища = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	
	// Создадим и инициализируем обработчик расшифровки.
	СтруктураРасшифровки = Новый Структура;
	МассивПолейРасшифровки = Новый Массив();
	ЭлементРасшифровки = ДанныеРасшифровкиИзХранилища.Элементы.Получить(Расшифровка);
	Если ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		Для каждого ЗначениеПоляРасшифровки Из ЭлементРасшифровки.ПолучитьПоля() Цикл
			Если ЗначениеПоляРасшифровки.Поле = "ЗаказПоставщику"
			  И ЗначениеЗаполнено(ЗначениеПоляРасшифровки.Значение) Тогда
				СтруктураВозврата = Новый Структура;
				СтруктураВозврата.Вставить("РасшифровкаНоменклатуры", "Показать состав заказа и соответствующей поставки");
				СтруктураВозврата.Вставить("ЗаказПоставщику", ЗначениеПоляРасшифровки.Значение);
				Возврат СтруктураВозврата;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Новый Структура();
	
КонецФункции

&НаСервере
Процедура СформироватьРассшифровкуНаСервере(ЗаказПоставщику)
	
	ТабличныйДокумент.Очистить();
	
	СКДРасшифровкаКоличествоЗаказано = ПолучитьИзВременногоХранилища(АдресХранилищаСКД);
	
	КомпоновщикНастроекРасшифровка = Новый КомпоновщикНастроекКомпоновкиДанных();
	КомпоновщикНастроекРасшифровка.ЗагрузитьНастройки(СКДРасшифровкаКоличествоЗаказано.НастройкиПоУмолчанию);
	
	ИсточникДоступныхНастроекКомпоновкиДанных = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКДРасшифровкаКоличествоЗаказано);
	КомпоновщикНастроекРасшифровка.Инициализировать(ИсточникДоступныхНастроекКомпоновкиДанных);
	ПараметрДатаЗаказа = КомпоновщикНастроекРасшифровка.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ЗаказПоствщику"));
	ПараметрДатаЗаказа.Значение = ЗаказПоставщику;
	ПараметрДатаЗаказа.Использование = Истина;
	
	КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновкиДанных = КомпоновщикМакетаКомпоновкиДанных.Выполнить(СКДРасшифровкаКоличествоЗаказано, КомпоновщикНастроекРасшифровка.Настройки, , , );
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных, , ,);
	
	ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент.УстановитьДокумент(ТабличныйДокумент);
	ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент.Вывести(ПроцессорКомпоновкиДанных, Истина);
	
КонецПроцедуры

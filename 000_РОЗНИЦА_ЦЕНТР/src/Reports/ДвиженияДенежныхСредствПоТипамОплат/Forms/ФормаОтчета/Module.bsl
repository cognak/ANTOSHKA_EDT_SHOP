
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтруктураРасшифровки = Неопределено;
	
	РезультатОбработкаРасшифровкиСервер(СтандартнаяОбработка, Расшифровка, СтруктураРасшифровки);
	
	Если Не СтандартнаяОбработка Тогда
		
		Путь = "Отчет.%ИмяОтчета%.Форма";
		Путь = СтрЗаменить(Путь, "%ИмяОтчета%", СтруктураРасшифровки.Отчет);
		
		ФиксированныеНастройки = Новый Структура;
		
		НастройкиТекущегоОтчета = СтруктураРасшифровки.Настройки;
		ФиксированныеНастройки = Новый НастройкиКомпоновкиДанных;
		ПользовательскиеНастройки = СтруктураРасшифровки.ПользовательскиеНастройки;
		МассивДоступныхПолей = СтруктураРасшифровки.МассивДоступныхПолей;
		//отбор
		
		Для Каждого ЭлементОтбора Из НастройкиТекущегоОтчета.Отбор.Элементы Цикл
			Если ЭлементОтбора.Использование Тогда
				
				Найден = МассивДоступныхПолей.Найти(ЭлементОтбора.ЛевоеЗначение) <> Неопределено;
				
				Если Найден Тогда
					ДобавляемыйЭлементОтбора = ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
					ЗаполнитьЗначенияСвойств(ДобавляемыйЭлементОтбора, ЭлементОтбора);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Элемент Из СтруктураРасшифровки Цикл
			Если Элемент.Ключ <> "ТипОплаты" И Элемент.Ключ <> "Отчет" И Элемент.Ключ <> "Настройки" И Элемент.Ключ <> "ПользовательскиеНастройки" 
				И Элемент.Ключ <> "МассивДоступныхПолей"  Тогда
				
				ЭлементПолеКомпоновкиДанных = Новый ПолеКомпоновкиДанных(Элемент.Ключ);
				
				Найден = МассивДоступныхПолей.Найти(ЭлементПолеКомпоновкиДанных) <> Неопределено;
				
				Если Найден Тогда
					
					ДобавляемыйЭлементОтбора = ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
					ДобавляемыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(Элемент.Ключ);
					ДобавляемыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
					ДобавляемыйЭлементОтбора.ПравоеЗначение = Элемент.Значение;
					ДобавляемыйЭлементОтбора.Использование = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
		
		//параметры
		Для Каждого Параметр Из НастройкиТекущегоОтчета.ПараметрыДанных.Элементы Цикл
			Для Каждого ПользовательскаяНастройка ИЗ ПользовательскиеНастройки.Элементы Цикл 
				Если ТипЗнч(ПользовательскаяНастройка) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
					И Параметр.Параметр = ПользовательскаяНастройка.Параметр Тогда
					
					ПользовательскаяНастройка.Значение = Параметр.Значение;
					ПользовательскаяНастройка.Использование = Параметр.Использование;
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		ПараметрыФормы = Новый Структура("ФиксированныеНастройки, ПользовательскиеНастройки, СформироватьПриОткрытии", ФиксированныеНастройки, ПользовательскиеНастройки, Истина);
		ОткрытьФорму(Путь, ПараметрыФормы);
		
	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура РезультатОбработкаРасшифровкиСервер(СтандартнаяОбработка, Расшифровка, СтруктураРасшифровки = Неопределено)
	
	КоллекцияДанныхРасшифровки = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	
	Если ТипЗнч(КоллекцияДанныхРасшифровки.Элементы[Расшифровка]) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		
		ЗначенияПолей = КоллекцияДанныхРасшифровки.Элементы[Расшифровка].ПолучитьПоля();
		
		Для каждого ЗначениеПоля Из ЗначенияПолей Цикл
			
			Если ЗначениеПоля.Значение = Перечисления.ТипыОплатЧекаККМ.БанковскийКредит
				ИЛИ ЗначениеПоля.Значение = Перечисления.ТипыОплатЧекаККМ.ПлатежнаяКарта
				ИЛИ ЗначениеПоля.Значение = Перечисления.ТипыОплатЧекаККМ.ПодарочныйСертификат Тогда
				
				СтандартнаяОбработка = Ложь;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураРасшифровки = Новый Структура;
	
	ПолучитьСтруктуруРасшифровки(Расшифровка, СтруктураРасшифровки, КоллекцияДанныхРасшифровки);
	
	МассивДоступныхПолей = Новый Массив;
	
	Если ЗначениеПоля.Значение = Перечисления.ТипыОплатЧекаККМ.БанковскийКредит Тогда
		
		СтруктураРасшифровки.Вставить("Отчет", "ДвиженияДенежныхСредствПоБанковскимКредитам");
		ОтчетКомпоновщикНастроек = Отчеты.ДвиженияДенежныхСредствПоБанковскимКредитам.Создать().КомпоновщикНастроек;
		
	ИначеЕсли ЗначениеПоля.Значение = Перечисления.ТипыОплатЧекаККМ.ПлатежнаяКарта Тогда
		
		СтруктураРасшифровки.Вставить("Отчет", "ДвиженияДенежныхСредствПоПлатежнымКартам");
		ОтчетКомпоновщикНастроек = Отчеты.ДвиженияДенежныхСредствПоПлатежнымКартам.Создать().КомпоновщикНастроек;
		
	ИначеЕсли ЗначениеПоля.Значение = Перечисления.ТипыОплатЧекаККМ.ПодарочныйСертификат Тогда
		
		СтруктураРасшифровки.Вставить("Отчет", "АнализПогашенияСертификатов");
		ОтчетКомпоновщикНастроек = Отчеты.АнализПогашенияСертификатов.Создать().КомпоновщикНастроек;
		
	КонецЕсли;
	
	ПользовательскиеНастройки = ОтчетКомпоновщикНастроек.ПользовательскиеНастройки;
	ДоступныеПоляОтбора = ОтчетКомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.Элементы;
		
	Для каждого ДоступноеПоле Из ДоступныеПоляОтбора Цикл
		МассивДоступныхПолей.Добавить(ДоступноеПоле.Поле);
	КонецЦикла;
	
	СтруктураРасшифровки.Вставить("МассивДоступныхПолей", МассивДоступныхПолей);
	СтруктураРасшифровки.Вставить("ПользовательскиеНастройки", ПользовательскиеНастройки);
	СтруктураРасшифровки.Вставить("Настройки", КоллекцияДанныхРасшифровки.Настройки);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруРасшифровки(Расшифровка, СтруктураРасшифровки, КоллекцияДанныхРасшифровки)
	
	Если ТипЗнч(КоллекцияДанныхРасшифровки.Элементы[Расшифровка]) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		
		ЗначенияПолей = КоллекцияДанныхРасшифровки.Элементы[Расшифровка].ПолучитьПоля();
		
		Для каждого ЗначениеПоля Из ЗначенияПолей Цикл
			СтруктураРасшифровки.Вставить(ЗначениеПоля.Поле, ЗначениеПоля.Значение);
		КонецЦикла;
		
	КонецЕсли;
		
	МассивРодителей = КоллекцияДанныхРасшифровки.Элементы[Расшифровка].ПолучитьРодителей();
	
	Для Каждого Родитель Из МассивРодителей Цикл
		ПолучитьСтруктуруРасшифровки(Родитель.Идентификатор, СтруктураРасшифровки, КоллекцияДанныхРасшифровки);
	КонецЦикла;
	
КонецФункции
